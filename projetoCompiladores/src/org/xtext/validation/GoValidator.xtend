/*
 * generated by Xtext 2.13.0
 */
package org.xtext.validation

import org.xtext.go.expression
import org.xtext.go.unaryExpr
import org.xtext.go.expressionMatched
import org.eclipse.xtext.validation.Check
import org.xtext.go.primaryExpr
import org.xtext.go.ifStmt
import org.xtext.go.simpleStmt

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class GoValidator extends AbstractGoValidator {
	
	@Check
	def checkIf(ifStmt stmt) {
		if(stmt.getSimplStatement() !== null) {
			checkSimple(stmt.getSimplStatement());
		}
		if(stmt.expr !== null) {
			checkExpression(stmt.getExpr());
		}
	}
		
	
	
	def checkExpression(expression expression) {
		if(expression.getUnaryExpr() !== null) {
			checkUnary(expression.getUnaryExpr());
		}
		if(expression.getExpressionMatched() !== null) {
			checkMatched(expression.getExpressionMatched());
		}
	}
		
	def checkMatched(expressionMatched matched) {
		if(matched.getExpression() !== null) {
			checkExpression(matched.getExpression());
		}
	}
	
	def checkUnary(unaryExpr expr) {
		if(expr.getPrimaryExpr() !== null) {
			checkPrimary(expr.getPrimaryExpr());
		}
	}
		
	def checkPrimary(primaryExpr expr) {
		if(expr.getContent() !== null){			
		}
	}
	
	def checkSimple(simpleStmt stmt) {
		//TODO:
	}
}
