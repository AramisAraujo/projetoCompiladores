/**
 * generated by Xtext 2.14.0
 */
package org.xtext.go.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.go.GoPackage;
import org.xtext.go.primaryExprSelector;
import org.xtext.go.primaryExprStuff;
import org.xtext.go.primaryExprTypeAssertion;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>primary Expr Type Assertion</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.go.impl.primaryExprTypeAssertionImpl#getPrimaryExprStuff <em>Primary Expr Stuff</em>}</li>
 *   <li>{@link org.xtext.go.impl.primaryExprTypeAssertionImpl#getPrimaryExprTypeAssertion <em>Primary Expr Type Assertion</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class primaryExprTypeAssertionImpl extends MinimalEObjectImpl.Container implements primaryExprTypeAssertion
{
  /**
   * The cached value of the '{@link #getPrimaryExprStuff() <em>Primary Expr Stuff</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimaryExprStuff()
   * @generated
   * @ordered
   */
  protected primaryExprStuff primaryExprStuff;

  /**
   * The cached value of the '{@link #getPrimaryExprTypeAssertion() <em>Primary Expr Type Assertion</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimaryExprTypeAssertion()
   * @generated
   * @ordered
   */
  protected primaryExprSelector primaryExprTypeAssertion;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected primaryExprTypeAssertionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoPackage.Literals.PRIMARY_EXPR_TYPE_ASSERTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public primaryExprStuff getPrimaryExprStuff()
  {
    return primaryExprStuff;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrimaryExprStuff(primaryExprStuff newPrimaryExprStuff, NotificationChain msgs)
  {
    primaryExprStuff oldPrimaryExprStuff = primaryExprStuff;
    primaryExprStuff = newPrimaryExprStuff;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.PRIMARY_EXPR_TYPE_ASSERTION__PRIMARY_EXPR_STUFF, oldPrimaryExprStuff, newPrimaryExprStuff);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPrimaryExprStuff(primaryExprStuff newPrimaryExprStuff)
  {
    if (newPrimaryExprStuff != primaryExprStuff)
    {
      NotificationChain msgs = null;
      if (primaryExprStuff != null)
        msgs = ((InternalEObject)primaryExprStuff).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.PRIMARY_EXPR_TYPE_ASSERTION__PRIMARY_EXPR_STUFF, null, msgs);
      if (newPrimaryExprStuff != null)
        msgs = ((InternalEObject)newPrimaryExprStuff).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.PRIMARY_EXPR_TYPE_ASSERTION__PRIMARY_EXPR_STUFF, null, msgs);
      msgs = basicSetPrimaryExprStuff(newPrimaryExprStuff, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.PRIMARY_EXPR_TYPE_ASSERTION__PRIMARY_EXPR_STUFF, newPrimaryExprStuff, newPrimaryExprStuff));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public primaryExprSelector getPrimaryExprTypeAssertion()
  {
    return primaryExprTypeAssertion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrimaryExprTypeAssertion(primaryExprSelector newPrimaryExprTypeAssertion, NotificationChain msgs)
  {
    primaryExprSelector oldPrimaryExprTypeAssertion = primaryExprTypeAssertion;
    primaryExprTypeAssertion = newPrimaryExprTypeAssertion;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.PRIMARY_EXPR_TYPE_ASSERTION__PRIMARY_EXPR_TYPE_ASSERTION, oldPrimaryExprTypeAssertion, newPrimaryExprTypeAssertion);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPrimaryExprTypeAssertion(primaryExprSelector newPrimaryExprTypeAssertion)
  {
    if (newPrimaryExprTypeAssertion != primaryExprTypeAssertion)
    {
      NotificationChain msgs = null;
      if (primaryExprTypeAssertion != null)
        msgs = ((InternalEObject)primaryExprTypeAssertion).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.PRIMARY_EXPR_TYPE_ASSERTION__PRIMARY_EXPR_TYPE_ASSERTION, null, msgs);
      if (newPrimaryExprTypeAssertion != null)
        msgs = ((InternalEObject)newPrimaryExprTypeAssertion).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.PRIMARY_EXPR_TYPE_ASSERTION__PRIMARY_EXPR_TYPE_ASSERTION, null, msgs);
      msgs = basicSetPrimaryExprTypeAssertion(newPrimaryExprTypeAssertion, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.PRIMARY_EXPR_TYPE_ASSERTION__PRIMARY_EXPR_TYPE_ASSERTION, newPrimaryExprTypeAssertion, newPrimaryExprTypeAssertion));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoPackage.PRIMARY_EXPR_TYPE_ASSERTION__PRIMARY_EXPR_STUFF:
        return basicSetPrimaryExprStuff(null, msgs);
      case GoPackage.PRIMARY_EXPR_TYPE_ASSERTION__PRIMARY_EXPR_TYPE_ASSERTION:
        return basicSetPrimaryExprTypeAssertion(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoPackage.PRIMARY_EXPR_TYPE_ASSERTION__PRIMARY_EXPR_STUFF:
        return getPrimaryExprStuff();
      case GoPackage.PRIMARY_EXPR_TYPE_ASSERTION__PRIMARY_EXPR_TYPE_ASSERTION:
        return getPrimaryExprTypeAssertion();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoPackage.PRIMARY_EXPR_TYPE_ASSERTION__PRIMARY_EXPR_STUFF:
        setPrimaryExprStuff((primaryExprStuff)newValue);
        return;
      case GoPackage.PRIMARY_EXPR_TYPE_ASSERTION__PRIMARY_EXPR_TYPE_ASSERTION:
        setPrimaryExprTypeAssertion((primaryExprSelector)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.PRIMARY_EXPR_TYPE_ASSERTION__PRIMARY_EXPR_STUFF:
        setPrimaryExprStuff((primaryExprStuff)null);
        return;
      case GoPackage.PRIMARY_EXPR_TYPE_ASSERTION__PRIMARY_EXPR_TYPE_ASSERTION:
        setPrimaryExprTypeAssertion((primaryExprSelector)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.PRIMARY_EXPR_TYPE_ASSERTION__PRIMARY_EXPR_STUFF:
        return primaryExprStuff != null;
      case GoPackage.PRIMARY_EXPR_TYPE_ASSERTION__PRIMARY_EXPR_TYPE_ASSERTION:
        return primaryExprTypeAssertion != null;
    }
    return super.eIsSet(featureID);
  }

} //primaryExprTypeAssertionImpl
