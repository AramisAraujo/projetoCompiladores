/**
 * generated by Xtext 2.13.0
 */
package org.xtext.go.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.go.GoPackage;
import org.xtext.go.typeName;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>type Name</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.go.impl.typeNameImpl#getQualifiedIdent <em>Qualified Ident</em>}</li>
 * </ul>
 *
 * @generated
 */
public class typeNameImpl extends MinimalEObjectImpl.Container implements typeName
{
  /**
   * The default value of the '{@link #getQualifiedIdent() <em>Qualified Ident</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQualifiedIdent()
   * @generated
   * @ordered
   */
  protected static final String QUALIFIED_IDENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getQualifiedIdent() <em>Qualified Ident</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQualifiedIdent()
   * @generated
   * @ordered
   */
  protected String qualifiedIdent = QUALIFIED_IDENT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected typeNameImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoPackage.Literals.TYPE_NAME;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getQualifiedIdent()
  {
    return qualifiedIdent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setQualifiedIdent(String newQualifiedIdent)
  {
    String oldQualifiedIdent = qualifiedIdent;
    qualifiedIdent = newQualifiedIdent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.TYPE_NAME__QUALIFIED_IDENT, oldQualifiedIdent, qualifiedIdent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoPackage.TYPE_NAME__QUALIFIED_IDENT:
        return getQualifiedIdent();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoPackage.TYPE_NAME__QUALIFIED_IDENT:
        setQualifiedIdent((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.TYPE_NAME__QUALIFIED_IDENT:
        setQualifiedIdent(QUALIFIED_IDENT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.TYPE_NAME__QUALIFIED_IDENT:
        return QUALIFIED_IDENT_EDEFAULT == null ? qualifiedIdent != null : !QUALIFIED_IDENT_EDEFAULT.equals(qualifiedIdent);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (qualifiedIdent: ");
    result.append(qualifiedIdent);
    result.append(')');
    return result.toString();
  }

} //typeNameImpl
