/**
 * generated by Xtext 2.14.0
 */
package org.xtext.go.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.go.GoPackage;
import org.xtext.go.importDecl;
import org.xtext.go.sourceFile;
import org.xtext.go.topLevelDecl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>source File</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.go.impl.sourceFileImpl#getPackageClause <em>Package Clause</em>}</li>
 *   <li>{@link org.xtext.go.impl.sourceFileImpl#getImportDecl <em>Import Decl</em>}</li>
 *   <li>{@link org.xtext.go.impl.sourceFileImpl#getTopLevelDecl <em>Top Level Decl</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class sourceFileImpl extends MinimalEObjectImpl.Container implements sourceFile
{
  /**
   * The default value of the '{@link #getPackageClause() <em>Package Clause</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPackageClause()
   * @generated
   * @ordered
   */
  protected static final String PACKAGE_CLAUSE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPackageClause() <em>Package Clause</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPackageClause()
   * @generated
   * @ordered
   */
  protected String packageClause = PACKAGE_CLAUSE_EDEFAULT;

  /**
   * The cached value of the '{@link #getImportDecl() <em>Import Decl</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImportDecl()
   * @generated
   * @ordered
   */
  protected importDecl importDecl;

  /**
   * The cached value of the '{@link #getTopLevelDecl() <em>Top Level Decl</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTopLevelDecl()
   * @generated
   * @ordered
   */
  protected topLevelDecl topLevelDecl;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected sourceFileImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoPackage.Literals.SOURCE_FILE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getPackageClause()
  {
    return packageClause;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPackageClause(String newPackageClause)
  {
    String oldPackageClause = packageClause;
    packageClause = newPackageClause;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.SOURCE_FILE__PACKAGE_CLAUSE, oldPackageClause, packageClause));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public importDecl getImportDecl()
  {
    return importDecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetImportDecl(importDecl newImportDecl, NotificationChain msgs)
  {
    importDecl oldImportDecl = importDecl;
    importDecl = newImportDecl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.SOURCE_FILE__IMPORT_DECL, oldImportDecl, newImportDecl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setImportDecl(importDecl newImportDecl)
  {
    if (newImportDecl != importDecl)
    {
      NotificationChain msgs = null;
      if (importDecl != null)
        msgs = ((InternalEObject)importDecl).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.SOURCE_FILE__IMPORT_DECL, null, msgs);
      if (newImportDecl != null)
        msgs = ((InternalEObject)newImportDecl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.SOURCE_FILE__IMPORT_DECL, null, msgs);
      msgs = basicSetImportDecl(newImportDecl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.SOURCE_FILE__IMPORT_DECL, newImportDecl, newImportDecl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public topLevelDecl getTopLevelDecl()
  {
    return topLevelDecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTopLevelDecl(topLevelDecl newTopLevelDecl, NotificationChain msgs)
  {
    topLevelDecl oldTopLevelDecl = topLevelDecl;
    topLevelDecl = newTopLevelDecl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.SOURCE_FILE__TOP_LEVEL_DECL, oldTopLevelDecl, newTopLevelDecl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTopLevelDecl(topLevelDecl newTopLevelDecl)
  {
    if (newTopLevelDecl != topLevelDecl)
    {
      NotificationChain msgs = null;
      if (topLevelDecl != null)
        msgs = ((InternalEObject)topLevelDecl).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.SOURCE_FILE__TOP_LEVEL_DECL, null, msgs);
      if (newTopLevelDecl != null)
        msgs = ((InternalEObject)newTopLevelDecl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.SOURCE_FILE__TOP_LEVEL_DECL, null, msgs);
      msgs = basicSetTopLevelDecl(newTopLevelDecl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.SOURCE_FILE__TOP_LEVEL_DECL, newTopLevelDecl, newTopLevelDecl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoPackage.SOURCE_FILE__IMPORT_DECL:
        return basicSetImportDecl(null, msgs);
      case GoPackage.SOURCE_FILE__TOP_LEVEL_DECL:
        return basicSetTopLevelDecl(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoPackage.SOURCE_FILE__PACKAGE_CLAUSE:
        return getPackageClause();
      case GoPackage.SOURCE_FILE__IMPORT_DECL:
        return getImportDecl();
      case GoPackage.SOURCE_FILE__TOP_LEVEL_DECL:
        return getTopLevelDecl();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoPackage.SOURCE_FILE__PACKAGE_CLAUSE:
        setPackageClause((String)newValue);
        return;
      case GoPackage.SOURCE_FILE__IMPORT_DECL:
        setImportDecl((importDecl)newValue);
        return;
      case GoPackage.SOURCE_FILE__TOP_LEVEL_DECL:
        setTopLevelDecl((topLevelDecl)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.SOURCE_FILE__PACKAGE_CLAUSE:
        setPackageClause(PACKAGE_CLAUSE_EDEFAULT);
        return;
      case GoPackage.SOURCE_FILE__IMPORT_DECL:
        setImportDecl((importDecl)null);
        return;
      case GoPackage.SOURCE_FILE__TOP_LEVEL_DECL:
        setTopLevelDecl((topLevelDecl)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.SOURCE_FILE__PACKAGE_CLAUSE:
        return PACKAGE_CLAUSE_EDEFAULT == null ? packageClause != null : !PACKAGE_CLAUSE_EDEFAULT.equals(packageClause);
      case GoPackage.SOURCE_FILE__IMPORT_DECL:
        return importDecl != null;
      case GoPackage.SOURCE_FILE__TOP_LEVEL_DECL:
        return topLevelDecl != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (packageClause: ");
    result.append(packageClause);
    result.append(')');
    return result.toString();
  }

} //sourceFileImpl
