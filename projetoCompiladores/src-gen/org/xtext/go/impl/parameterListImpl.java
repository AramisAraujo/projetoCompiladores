/**
 * generated by Xtext 2.14.0
 */
package org.xtext.go.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.go.GoPackage;
import org.xtext.go.parameterDecl;
import org.xtext.go.parameterList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>parameter List</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.go.impl.parameterListImpl#getParameterDecl <em>Parameter Decl</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class parameterListImpl extends MinimalEObjectImpl.Container implements parameterList
{
  /**
   * The cached value of the '{@link #getParameterDecl() <em>Parameter Decl</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParameterDecl()
   * @generated
   * @ordered
   */
  protected parameterDecl parameterDecl;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected parameterListImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoPackage.Literals.PARAMETER_LIST;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public parameterDecl getParameterDecl()
  {
    return parameterDecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParameterDecl(parameterDecl newParameterDecl, NotificationChain msgs)
  {
    parameterDecl oldParameterDecl = parameterDecl;
    parameterDecl = newParameterDecl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GoPackage.PARAMETER_LIST__PARAMETER_DECL, oldParameterDecl, newParameterDecl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setParameterDecl(parameterDecl newParameterDecl)
  {
    if (newParameterDecl != parameterDecl)
    {
      NotificationChain msgs = null;
      if (parameterDecl != null)
        msgs = ((InternalEObject)parameterDecl).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GoPackage.PARAMETER_LIST__PARAMETER_DECL, null, msgs);
      if (newParameterDecl != null)
        msgs = ((InternalEObject)newParameterDecl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GoPackage.PARAMETER_LIST__PARAMETER_DECL, null, msgs);
      msgs = basicSetParameterDecl(newParameterDecl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoPackage.PARAMETER_LIST__PARAMETER_DECL, newParameterDecl, newParameterDecl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoPackage.PARAMETER_LIST__PARAMETER_DECL:
        return basicSetParameterDecl(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoPackage.PARAMETER_LIST__PARAMETER_DECL:
        return getParameterDecl();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoPackage.PARAMETER_LIST__PARAMETER_DECL:
        setParameterDecl((parameterDecl)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.PARAMETER_LIST__PARAMETER_DECL:
        setParameterDecl((parameterDecl)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoPackage.PARAMETER_LIST__PARAMETER_DECL:
        return parameterDecl != null;
    }
    return super.eIsSet(featureID);
  }

} //parameterListImpl
