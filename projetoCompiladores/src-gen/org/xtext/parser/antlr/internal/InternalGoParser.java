package org.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.GoGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalGoParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_IDENTIFIER", "RULE_STRING_LIT", "RULE_WS", "RULE_INT_LIT", "RULE_FLOAT_LIT", "RULE_IMAGINARY_LIT", "RULE_RUNE_LIT", "RULE_BINARY_OP", "RULE_LETTER", "RULE_UNICODE_DIGIT", "RULE_REL_OP", "RULE_ADD_OP", "RULE_MUL_OP", "RULE_UNARY_OP", "RULE_DECIMAL_LIT", "RULE_OCTAL_LIT", "RULE_HEX_LIT", "RULE_DECIMAL_DIGIT", "RULE_OCTAL_DIGIT", "RULE_HEX_DIGIT", "RULE_DECIMALS", "RULE_EXPONENT", "RULE_UNICODE_VALUE", "RULE_BYTE_VALUE", "RULE_UNICODE_CHAR", "RULE_LITTLE_U_VALUE", "RULE_BIG_U_VALUE", "RULE_ESCAPED_CHAR", "RULE_OCTAL_BYTE_VALUE", "RULE_HEX_BYTE_VALUE", "RULE_RAW_STRING_LIT", "RULE_INTERPRETED_STRING_LIT", "RULE_NEWLINE", "RULE_UNICODE_LETTER", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_ANY_OTHER", "';'", "'package'", "'import'", "'('", "')'", "'.'", "'const'", "'='", "','", "'type'", "'func'", "'var'", "'{'", "'}'", "'<-'", "'++'", "'--'", "'+'", "'-'", "'|'", "'^'", "'*'", "'/'", "'%'", "'<<'", "'>>'", "'&'", "'&^'", "':='", "':'", "'return'", "'break'", "'continue'", "'goto'", "'fallthrough'", "'defer'", "'if'", "'else'", "'switch'", "'case'", "'default'", "'select'", "'for'", "'range'", "'go'", "'['", "']'", "'interface'", "'map'", "'chan'", "'...'", "'struct'", "'!'"
    };
    public static final int T__50=50;
    public static final int RULE_DECIMAL_DIGIT=21;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=38;
    public static final int RULE_INT=39;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=41;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int RULE_DECIMALS=24;
    public static final int RULE_NEWLINE=36;
    public static final int RULE_BIG_U_VALUE=30;
    public static final int RULE_ESCAPED_CHAR=31;
    public static final int RULE_BYTE_VALUE=27;
    public static final int RULE_UNICODE_LETTER=37;
    public static final int RULE_UNICODE_CHAR=28;
    public static final int RULE_OCTAL_DIGIT=22;
    public static final int RULE_LETTER=12;
    public static final int RULE_EXPONENT=25;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_RAW_STRING_LIT=34;
    public static final int T__44=44;
    public static final int RULE_UNARY_OP=17;
    public static final int T__45=45;
    public static final int RULE_HEX_DIGIT=23;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int RULE_RUNE_LIT=10;
    public static final int RULE_DECIMAL_LIT=18;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__90=90;
    public static final int RULE_BINARY_OP=11;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int RULE_IMAGINARY_LIT=9;
    public static final int RULE_STRING_LIT=5;
    public static final int RULE_INTERPRETED_STRING_LIT=35;
    public static final int RULE_UNICODE_VALUE=26;
    public static final int RULE_LITTLE_U_VALUE=29;
    public static final int RULE_HEX_BYTE_VALUE=33;
    public static final int RULE_OCTAL_BYTE_VALUE=32;
    public static final int RULE_MUL_OP=16;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_IDENTIFIER=4;
    public static final int RULE_STRING=40;
    public static final int RULE_SL_COMMENT=42;
    public static final int T__77=77;
    public static final int RULE_HEX_LIT=20;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int RULE_ADD_OP=15;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int RULE_UNICODE_DIGIT=13;
    public static final int T__83=83;
    public static final int RULE_WS=6;
    public static final int RULE_ANY_OTHER=43;
    public static final int RULE_OCTAL_LIT=19;
    public static final int RULE_FLOAT_LIT=8;
    public static final int RULE_INT_LIT=7;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int RULE_REL_OP=14;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalGoParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalGoParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalGoParser.tokenNames; }
    public String getGrammarFileName() { return "InternalGo.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private GoGrammarAccess grammarAccess;

        public InternalGoParser(TokenStream input, GoGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected GoGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalGo.g:70:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalGo.g:70:46: (iv_ruleModel= ruleModel EOF )
            // InternalGo.g:71:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalGo.g:77:1: ruleModel returns [EObject current=null] : ( (lv_greetings_0_0= rulesourceFile ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_greetings_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:83:2: ( ( (lv_greetings_0_0= rulesourceFile ) ) )
            // InternalGo.g:84:2: ( (lv_greetings_0_0= rulesourceFile ) )
            {
            // InternalGo.g:84:2: ( (lv_greetings_0_0= rulesourceFile ) )
            // InternalGo.g:85:3: (lv_greetings_0_0= rulesourceFile )
            {
            // InternalGo.g:85:3: (lv_greetings_0_0= rulesourceFile )
            // InternalGo.g:86:4: lv_greetings_0_0= rulesourceFile
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getModelAccess().getGreetingsSourceFileParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_greetings_0_0=rulesourceFile();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getModelRule());
              				}
              				add(
              					current,
              					"greetings",
              					lv_greetings_0_0,
              					"org.xtext.Go.sourceFile");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRulesourceFile"
    // InternalGo.g:106:1: entryRulesourceFile returns [EObject current=null] : iv_rulesourceFile= rulesourceFile EOF ;
    public final EObject entryRulesourceFile() throws RecognitionException {
        EObject current = null;

        EObject iv_rulesourceFile = null;


        try {
            // InternalGo.g:106:51: (iv_rulesourceFile= rulesourceFile EOF )
            // InternalGo.g:107:2: iv_rulesourceFile= rulesourceFile EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSourceFileRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulesourceFile=rulesourceFile();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesourceFile; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulesourceFile"


    // $ANTLR start "rulesourceFile"
    // InternalGo.g:113:1: rulesourceFile returns [EObject current=null] : ( ( (lv_packageClause_0_0= rulepackageClause ) ) ( ( (lv_importDecl_1_0= ruleimportDecl ) ) otherlv_2= ';' )* ( ( (lv_topLevelDecl_3_0= ruletopLevelDecl ) ) otherlv_4= ';' )* ) ;
    public final EObject rulesourceFile() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_packageClause_0_0 = null;

        EObject lv_importDecl_1_0 = null;

        EObject lv_topLevelDecl_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:119:2: ( ( ( (lv_packageClause_0_0= rulepackageClause ) ) ( ( (lv_importDecl_1_0= ruleimportDecl ) ) otherlv_2= ';' )* ( ( (lv_topLevelDecl_3_0= ruletopLevelDecl ) ) otherlv_4= ';' )* ) )
            // InternalGo.g:120:2: ( ( (lv_packageClause_0_0= rulepackageClause ) ) ( ( (lv_importDecl_1_0= ruleimportDecl ) ) otherlv_2= ';' )* ( ( (lv_topLevelDecl_3_0= ruletopLevelDecl ) ) otherlv_4= ';' )* )
            {
            // InternalGo.g:120:2: ( ( (lv_packageClause_0_0= rulepackageClause ) ) ( ( (lv_importDecl_1_0= ruleimportDecl ) ) otherlv_2= ';' )* ( ( (lv_topLevelDecl_3_0= ruletopLevelDecl ) ) otherlv_4= ';' )* )
            // InternalGo.g:121:3: ( (lv_packageClause_0_0= rulepackageClause ) ) ( ( (lv_importDecl_1_0= ruleimportDecl ) ) otherlv_2= ';' )* ( ( (lv_topLevelDecl_3_0= ruletopLevelDecl ) ) otherlv_4= ';' )*
            {
            // InternalGo.g:121:3: ( (lv_packageClause_0_0= rulepackageClause ) )
            // InternalGo.g:122:4: (lv_packageClause_0_0= rulepackageClause )
            {
            // InternalGo.g:122:4: (lv_packageClause_0_0= rulepackageClause )
            // InternalGo.g:123:5: lv_packageClause_0_0= rulepackageClause
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSourceFileAccess().getPackageClausePackageClauseParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_packageClause_0_0=rulepackageClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSourceFileRule());
              					}
              					set(
              						current,
              						"packageClause",
              						lv_packageClause_0_0,
              						"org.xtext.Go.packageClause");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:140:3: ( ( (lv_importDecl_1_0= ruleimportDecl ) ) otherlv_2= ';' )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==46) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalGo.g:141:4: ( (lv_importDecl_1_0= ruleimportDecl ) ) otherlv_2= ';'
            	    {
            	    // InternalGo.g:141:4: ( (lv_importDecl_1_0= ruleimportDecl ) )
            	    // InternalGo.g:142:5: (lv_importDecl_1_0= ruleimportDecl )
            	    {
            	    // InternalGo.g:142:5: (lv_importDecl_1_0= ruleimportDecl )
            	    // InternalGo.g:143:6: lv_importDecl_1_0= ruleimportDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSourceFileAccess().getImportDeclImportDeclParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_importDecl_1_0=ruleimportDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSourceFileRule());
            	      						}
            	      						set(
            	      							current,
            	      							"importDecl",
            	      							lv_importDecl_1_0,
            	      							"org.xtext.Go.importDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_2=(Token)match(input,44,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getSourceFileAccess().getSemicolonKeyword_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalGo.g:165:3: ( ( (lv_topLevelDecl_3_0= ruletopLevelDecl ) ) otherlv_4= ';' )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==50||(LA2_0>=53 && LA2_0<=55)) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalGo.g:166:4: ( (lv_topLevelDecl_3_0= ruletopLevelDecl ) ) otherlv_4= ';'
            	    {
            	    // InternalGo.g:166:4: ( (lv_topLevelDecl_3_0= ruletopLevelDecl ) )
            	    // InternalGo.g:167:5: (lv_topLevelDecl_3_0= ruletopLevelDecl )
            	    {
            	    // InternalGo.g:167:5: (lv_topLevelDecl_3_0= ruletopLevelDecl )
            	    // InternalGo.g:168:6: lv_topLevelDecl_3_0= ruletopLevelDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSourceFileAccess().getTopLevelDeclTopLevelDeclParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_topLevelDecl_3_0=ruletopLevelDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSourceFileRule());
            	      						}
            	      						set(
            	      							current,
            	      							"topLevelDecl",
            	      							lv_topLevelDecl_3_0,
            	      							"org.xtext.Go.topLevelDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,44,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getSourceFileAccess().getSemicolonKeyword_2_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulesourceFile"


    // $ANTLR start "entryRulepackageClause"
    // InternalGo.g:194:1: entryRulepackageClause returns [String current=null] : iv_rulepackageClause= rulepackageClause EOF ;
    public final String entryRulepackageClause() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulepackageClause = null;


        try {
            // InternalGo.g:194:53: (iv_rulepackageClause= rulepackageClause EOF )
            // InternalGo.g:195:2: iv_rulepackageClause= rulepackageClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulepackageClause=rulepackageClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulepackageClause.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulepackageClause"


    // $ANTLR start "rulepackageClause"
    // InternalGo.g:201:1: rulepackageClause returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'package' this_IDENTIFIER_1= RULE_IDENTIFIER ) ;
    public final AntlrDatatypeRuleToken rulepackageClause() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_IDENTIFIER_1=null;


        	enterRule();

        try {
            // InternalGo.g:207:2: ( (kw= 'package' this_IDENTIFIER_1= RULE_IDENTIFIER ) )
            // InternalGo.g:208:2: (kw= 'package' this_IDENTIFIER_1= RULE_IDENTIFIER )
            {
            // InternalGo.g:208:2: (kw= 'package' this_IDENTIFIER_1= RULE_IDENTIFIER )
            // InternalGo.g:209:3: kw= 'package' this_IDENTIFIER_1= RULE_IDENTIFIER
            {
            kw=(Token)match(input,45,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getPackageClauseAccess().getPackageKeyword_0());
              		
            }
            this_IDENTIFIER_1=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_IDENTIFIER_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_IDENTIFIER_1, grammarAccess.getPackageClauseAccess().getIDENTIFIERTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulepackageClause"


    // $ANTLR start "entryRuleimportDecl"
    // InternalGo.g:225:1: entryRuleimportDecl returns [EObject current=null] : iv_ruleimportDecl= ruleimportDecl EOF ;
    public final EObject entryRuleimportDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleimportDecl = null;


        try {
            // InternalGo.g:225:51: (iv_ruleimportDecl= ruleimportDecl EOF )
            // InternalGo.g:226:2: iv_ruleimportDecl= ruleimportDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleimportDecl=ruleimportDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleimportDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleimportDecl"


    // $ANTLR start "ruleimportDecl"
    // InternalGo.g:232:1: ruleimportDecl returns [EObject current=null] : (otherlv_0= 'import' ( ( (lv_importSpec_1_0= ruleimportSpec ) ) | (otherlv_2= '(' ( (lv_importSpec_3_0= ruleimportSpec ) )* otherlv_4= ')' ) ) ) ;
    public final EObject ruleimportDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_importSpec_1_0 = null;

        EObject lv_importSpec_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:238:2: ( (otherlv_0= 'import' ( ( (lv_importSpec_1_0= ruleimportSpec ) ) | (otherlv_2= '(' ( (lv_importSpec_3_0= ruleimportSpec ) )* otherlv_4= ')' ) ) ) )
            // InternalGo.g:239:2: (otherlv_0= 'import' ( ( (lv_importSpec_1_0= ruleimportSpec ) ) | (otherlv_2= '(' ( (lv_importSpec_3_0= ruleimportSpec ) )* otherlv_4= ')' ) ) )
            {
            // InternalGo.g:239:2: (otherlv_0= 'import' ( ( (lv_importSpec_1_0= ruleimportSpec ) ) | (otherlv_2= '(' ( (lv_importSpec_3_0= ruleimportSpec ) )* otherlv_4= ')' ) ) )
            // InternalGo.g:240:3: otherlv_0= 'import' ( ( (lv_importSpec_1_0= ruleimportSpec ) ) | (otherlv_2= '(' ( (lv_importSpec_3_0= ruleimportSpec ) )* otherlv_4= ')' ) )
            {
            otherlv_0=(Token)match(input,46,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getImportDeclAccess().getImportKeyword_0());
              		
            }
            // InternalGo.g:244:3: ( ( (lv_importSpec_1_0= ruleimportSpec ) ) | (otherlv_2= '(' ( (lv_importSpec_3_0= ruleimportSpec ) )* otherlv_4= ')' ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( ((LA4_0>=RULE_IDENTIFIER && LA4_0<=RULE_STRING_LIT)||LA4_0==49) ) {
                alt4=1;
            }
            else if ( (LA4_0==47) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalGo.g:245:4: ( (lv_importSpec_1_0= ruleimportSpec ) )
                    {
                    // InternalGo.g:245:4: ( (lv_importSpec_1_0= ruleimportSpec ) )
                    // InternalGo.g:246:5: (lv_importSpec_1_0= ruleimportSpec )
                    {
                    // InternalGo.g:246:5: (lv_importSpec_1_0= ruleimportSpec )
                    // InternalGo.g:247:6: lv_importSpec_1_0= ruleimportSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_importSpec_1_0=ruleimportSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImportDeclRule());
                      						}
                      						set(
                      							current,
                      							"importSpec",
                      							lv_importSpec_1_0,
                      							"org.xtext.Go.importSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:265:4: (otherlv_2= '(' ( (lv_importSpec_3_0= ruleimportSpec ) )* otherlv_4= ')' )
                    {
                    // InternalGo.g:265:4: (otherlv_2= '(' ( (lv_importSpec_3_0= ruleimportSpec ) )* otherlv_4= ')' )
                    // InternalGo.g:266:5: otherlv_2= '(' ( (lv_importSpec_3_0= ruleimportSpec ) )* otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,47,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_1_1_0());
                      				
                    }
                    // InternalGo.g:270:5: ( (lv_importSpec_3_0= ruleimportSpec ) )*
                    loop3:
                    do {
                        int alt3=2;
                        int LA3_0 = input.LA(1);

                        if ( ((LA3_0>=RULE_IDENTIFIER && LA3_0<=RULE_STRING_LIT)||LA3_0==49) ) {
                            alt3=1;
                        }


                        switch (alt3) {
                    	case 1 :
                    	    // InternalGo.g:271:6: (lv_importSpec_3_0= ruleimportSpec )
                    	    {
                    	    // InternalGo.g:271:6: (lv_importSpec_3_0= ruleimportSpec )
                    	    // InternalGo.g:272:7: lv_importSpec_3_0= ruleimportSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_8);
                    	    lv_importSpec_3_0=ruleimportSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getImportDeclRule());
                    	      							}
                    	      							set(
                    	      								current,
                    	      								"importSpec",
                    	      								lv_importSpec_3_0,
                    	      								"org.xtext.Go.importSpec");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop3;
                        }
                    } while (true);

                    otherlv_4=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_1_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleimportDecl"


    // $ANTLR start "entryRuleimportSpec"
    // InternalGo.g:299:1: entryRuleimportSpec returns [EObject current=null] : iv_ruleimportSpec= ruleimportSpec EOF ;
    public final EObject entryRuleimportSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleimportSpec = null;


        try {
            // InternalGo.g:299:51: (iv_ruleimportSpec= ruleimportSpec EOF )
            // InternalGo.g:300:2: iv_ruleimportSpec= ruleimportSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleimportSpec=ruleimportSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleimportSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleimportSpec"


    // $ANTLR start "ruleimportSpec"
    // InternalGo.g:306:1: ruleimportSpec returns [EObject current=null] : ( (otherlv_0= '.' | this_IDENTIFIER_1= RULE_IDENTIFIER )? ( (lv_importPath_2_0= ruleimportPath ) ) ) ;
    public final EObject ruleimportSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_IDENTIFIER_1=null;
        AntlrDatatypeRuleToken lv_importPath_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:312:2: ( ( (otherlv_0= '.' | this_IDENTIFIER_1= RULE_IDENTIFIER )? ( (lv_importPath_2_0= ruleimportPath ) ) ) )
            // InternalGo.g:313:2: ( (otherlv_0= '.' | this_IDENTIFIER_1= RULE_IDENTIFIER )? ( (lv_importPath_2_0= ruleimportPath ) ) )
            {
            // InternalGo.g:313:2: ( (otherlv_0= '.' | this_IDENTIFIER_1= RULE_IDENTIFIER )? ( (lv_importPath_2_0= ruleimportPath ) ) )
            // InternalGo.g:314:3: (otherlv_0= '.' | this_IDENTIFIER_1= RULE_IDENTIFIER )? ( (lv_importPath_2_0= ruleimportPath ) )
            {
            // InternalGo.g:314:3: (otherlv_0= '.' | this_IDENTIFIER_1= RULE_IDENTIFIER )?
            int alt5=3;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==49) ) {
                alt5=1;
            }
            else if ( (LA5_0==RULE_IDENTIFIER) ) {
                alt5=2;
            }
            switch (alt5) {
                case 1 :
                    // InternalGo.g:315:4: otherlv_0= '.'
                    {
                    otherlv_0=(Token)match(input,49,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:320:4: this_IDENTIFIER_1= RULE_IDENTIFIER
                    {
                    this_IDENTIFIER_1=(Token)match(input,RULE_IDENTIFIER,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_IDENTIFIER_1, grammarAccess.getImportSpecAccess().getIDENTIFIERTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:325:3: ( (lv_importPath_2_0= ruleimportPath ) )
            // InternalGo.g:326:4: (lv_importPath_2_0= ruleimportPath )
            {
            // InternalGo.g:326:4: (lv_importPath_2_0= ruleimportPath )
            // InternalGo.g:327:5: lv_importPath_2_0= ruleimportPath
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImportSpecAccess().getImportPathImportPathParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_importPath_2_0=ruleimportPath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImportSpecRule());
              					}
              					set(
              						current,
              						"importPath",
              						lv_importPath_2_0,
              						"org.xtext.Go.importPath");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleimportSpec"


    // $ANTLR start "entryRuleimportPath"
    // InternalGo.g:348:1: entryRuleimportPath returns [String current=null] : iv_ruleimportPath= ruleimportPath EOF ;
    public final String entryRuleimportPath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleimportPath = null;


        try {
            // InternalGo.g:348:50: (iv_ruleimportPath= ruleimportPath EOF )
            // InternalGo.g:349:2: iv_ruleimportPath= ruleimportPath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportPathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleimportPath=ruleimportPath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleimportPath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleimportPath"


    // $ANTLR start "ruleimportPath"
    // InternalGo.g:355:1: ruleimportPath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_LIT_0= RULE_STRING_LIT ;
    public final AntlrDatatypeRuleToken ruleimportPath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_LIT_0=null;


        	enterRule();

        try {
            // InternalGo.g:361:2: (this_STRING_LIT_0= RULE_STRING_LIT )
            // InternalGo.g:362:2: this_STRING_LIT_0= RULE_STRING_LIT
            {
            this_STRING_LIT_0=(Token)match(input,RULE_STRING_LIT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_STRING_LIT_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_STRING_LIT_0, grammarAccess.getImportPathAccess().getSTRING_LITTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleimportPath"


    // $ANTLR start "entryRuletopLevelDecl"
    // InternalGo.g:372:1: entryRuletopLevelDecl returns [EObject current=null] : iv_ruletopLevelDecl= ruletopLevelDecl EOF ;
    public final EObject entryRuletopLevelDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletopLevelDecl = null;


        try {
            // InternalGo.g:372:53: (iv_ruletopLevelDecl= ruletopLevelDecl EOF )
            // InternalGo.g:373:2: iv_ruletopLevelDecl= ruletopLevelDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTopLevelDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletopLevelDecl=ruletopLevelDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletopLevelDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletopLevelDecl"


    // $ANTLR start "ruletopLevelDecl"
    // InternalGo.g:379:1: ruletopLevelDecl returns [EObject current=null] : ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_functionDecl_1_0= rulefunctionDecl ) ) | ( (lv_methodDecl_2_0= rulemethodDecl ) ) ) ;
    public final EObject ruletopLevelDecl() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_0_0 = null;

        EObject lv_functionDecl_1_0 = null;

        EObject lv_methodDecl_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:385:2: ( ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_functionDecl_1_0= rulefunctionDecl ) ) | ( (lv_methodDecl_2_0= rulemethodDecl ) ) ) )
            // InternalGo.g:386:2: ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_functionDecl_1_0= rulefunctionDecl ) ) | ( (lv_methodDecl_2_0= rulemethodDecl ) ) )
            {
            // InternalGo.g:386:2: ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_functionDecl_1_0= rulefunctionDecl ) ) | ( (lv_methodDecl_2_0= rulemethodDecl ) ) )
            int alt6=3;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==50||LA6_0==53||LA6_0==55) ) {
                alt6=1;
            }
            else if ( (LA6_0==54) ) {
                int LA6_2 = input.LA(2);

                if ( (LA6_2==47) ) {
                    alt6=3;
                }
                else if ( (LA6_2==RULE_IDENTIFIER) ) {
                    alt6=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 6, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalGo.g:387:3: ( (lv_declaration_0_0= ruledeclaration ) )
                    {
                    // InternalGo.g:387:3: ( (lv_declaration_0_0= ruledeclaration ) )
                    // InternalGo.g:388:4: (lv_declaration_0_0= ruledeclaration )
                    {
                    // InternalGo.g:388:4: (lv_declaration_0_0= ruledeclaration )
                    // InternalGo.g:389:5: lv_declaration_0_0= ruledeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTopLevelDeclAccess().getDeclarationDeclarationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_0_0=ruledeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTopLevelDeclRule());
                      					}
                      					set(
                      						current,
                      						"declaration",
                      						lv_declaration_0_0,
                      						"org.xtext.Go.declaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:407:3: ( (lv_functionDecl_1_0= rulefunctionDecl ) )
                    {
                    // InternalGo.g:407:3: ( (lv_functionDecl_1_0= rulefunctionDecl ) )
                    // InternalGo.g:408:4: (lv_functionDecl_1_0= rulefunctionDecl )
                    {
                    // InternalGo.g:408:4: (lv_functionDecl_1_0= rulefunctionDecl )
                    // InternalGo.g:409:5: lv_functionDecl_1_0= rulefunctionDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTopLevelDeclAccess().getFunctionDeclFunctionDeclParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_functionDecl_1_0=rulefunctionDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTopLevelDeclRule());
                      					}
                      					set(
                      						current,
                      						"functionDecl",
                      						lv_functionDecl_1_0,
                      						"org.xtext.Go.functionDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:427:3: ( (lv_methodDecl_2_0= rulemethodDecl ) )
                    {
                    // InternalGo.g:427:3: ( (lv_methodDecl_2_0= rulemethodDecl ) )
                    // InternalGo.g:428:4: (lv_methodDecl_2_0= rulemethodDecl )
                    {
                    // InternalGo.g:428:4: (lv_methodDecl_2_0= rulemethodDecl )
                    // InternalGo.g:429:5: lv_methodDecl_2_0= rulemethodDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTopLevelDeclAccess().getMethodDeclMethodDeclParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_methodDecl_2_0=rulemethodDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTopLevelDeclRule());
                      					}
                      					set(
                      						current,
                      						"methodDecl",
                      						lv_methodDecl_2_0,
                      						"org.xtext.Go.methodDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletopLevelDecl"


    // $ANTLR start "entryRuledeclaration"
    // InternalGo.g:450:1: entryRuledeclaration returns [EObject current=null] : iv_ruledeclaration= ruledeclaration EOF ;
    public final EObject entryRuledeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledeclaration = null;


        try {
            // InternalGo.g:450:52: (iv_ruledeclaration= ruledeclaration EOF )
            // InternalGo.g:451:2: iv_ruledeclaration= ruledeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledeclaration=ruledeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledeclaration"


    // $ANTLR start "ruledeclaration"
    // InternalGo.g:457:1: ruledeclaration returns [EObject current=null] : ( ( (lv_constDecl_0_0= ruleconstDecl ) ) | ( (lv_typeDecl_1_0= ruletypeDecl ) ) | ( (lv_varDecl_2_0= rulevarDecl ) ) ) ;
    public final EObject ruledeclaration() throws RecognitionException {
        EObject current = null;

        EObject lv_constDecl_0_0 = null;

        EObject lv_typeDecl_1_0 = null;

        EObject lv_varDecl_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:463:2: ( ( ( (lv_constDecl_0_0= ruleconstDecl ) ) | ( (lv_typeDecl_1_0= ruletypeDecl ) ) | ( (lv_varDecl_2_0= rulevarDecl ) ) ) )
            // InternalGo.g:464:2: ( ( (lv_constDecl_0_0= ruleconstDecl ) ) | ( (lv_typeDecl_1_0= ruletypeDecl ) ) | ( (lv_varDecl_2_0= rulevarDecl ) ) )
            {
            // InternalGo.g:464:2: ( ( (lv_constDecl_0_0= ruleconstDecl ) ) | ( (lv_typeDecl_1_0= ruletypeDecl ) ) | ( (lv_varDecl_2_0= rulevarDecl ) ) )
            int alt7=3;
            switch ( input.LA(1) ) {
            case 50:
                {
                alt7=1;
                }
                break;
            case 53:
                {
                alt7=2;
                }
                break;
            case 55:
                {
                alt7=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // InternalGo.g:465:3: ( (lv_constDecl_0_0= ruleconstDecl ) )
                    {
                    // InternalGo.g:465:3: ( (lv_constDecl_0_0= ruleconstDecl ) )
                    // InternalGo.g:466:4: (lv_constDecl_0_0= ruleconstDecl )
                    {
                    // InternalGo.g:466:4: (lv_constDecl_0_0= ruleconstDecl )
                    // InternalGo.g:467:5: lv_constDecl_0_0= ruleconstDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclarationAccess().getConstDeclConstDeclParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_constDecl_0_0=ruleconstDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"constDecl",
                      						lv_constDecl_0_0,
                      						"org.xtext.Go.constDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:485:3: ( (lv_typeDecl_1_0= ruletypeDecl ) )
                    {
                    // InternalGo.g:485:3: ( (lv_typeDecl_1_0= ruletypeDecl ) )
                    // InternalGo.g:486:4: (lv_typeDecl_1_0= ruletypeDecl )
                    {
                    // InternalGo.g:486:4: (lv_typeDecl_1_0= ruletypeDecl )
                    // InternalGo.g:487:5: lv_typeDecl_1_0= ruletypeDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclarationAccess().getTypeDeclTypeDeclParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeDecl_1_0=ruletypeDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"typeDecl",
                      						lv_typeDecl_1_0,
                      						"org.xtext.Go.typeDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:505:3: ( (lv_varDecl_2_0= rulevarDecl ) )
                    {
                    // InternalGo.g:505:3: ( (lv_varDecl_2_0= rulevarDecl ) )
                    // InternalGo.g:506:4: (lv_varDecl_2_0= rulevarDecl )
                    {
                    // InternalGo.g:506:4: (lv_varDecl_2_0= rulevarDecl )
                    // InternalGo.g:507:5: lv_varDecl_2_0= rulevarDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclarationAccess().getVarDeclVarDeclParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_varDecl_2_0=rulevarDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"varDecl",
                      						lv_varDecl_2_0,
                      						"org.xtext.Go.varDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledeclaration"


    // $ANTLR start "entryRuleconstDecl"
    // InternalGo.g:528:1: entryRuleconstDecl returns [EObject current=null] : iv_ruleconstDecl= ruleconstDecl EOF ;
    public final EObject entryRuleconstDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleconstDecl = null;


        try {
            // InternalGo.g:528:50: (iv_ruleconstDecl= ruleconstDecl EOF )
            // InternalGo.g:529:2: iv_ruleconstDecl= ruleconstDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleconstDecl=ruleconstDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleconstDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleconstDecl"


    // $ANTLR start "ruleconstDecl"
    // InternalGo.g:535:1: ruleconstDecl returns [EObject current=null] : (otherlv_0= 'const' ( ( (lv_constSpec_1_0= ruleconstSpec ) ) | (otherlv_2= '(' ( ( (lv_constSpec_3_0= ruleconstSpec ) ) otherlv_4= ';' )* otherlv_5= ')' ) ) ) ;
    public final EObject ruleconstDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_constSpec_1_0 = null;

        EObject lv_constSpec_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:541:2: ( (otherlv_0= 'const' ( ( (lv_constSpec_1_0= ruleconstSpec ) ) | (otherlv_2= '(' ( ( (lv_constSpec_3_0= ruleconstSpec ) ) otherlv_4= ';' )* otherlv_5= ')' ) ) ) )
            // InternalGo.g:542:2: (otherlv_0= 'const' ( ( (lv_constSpec_1_0= ruleconstSpec ) ) | (otherlv_2= '(' ( ( (lv_constSpec_3_0= ruleconstSpec ) ) otherlv_4= ';' )* otherlv_5= ')' ) ) )
            {
            // InternalGo.g:542:2: (otherlv_0= 'const' ( ( (lv_constSpec_1_0= ruleconstSpec ) ) | (otherlv_2= '(' ( ( (lv_constSpec_3_0= ruleconstSpec ) ) otherlv_4= ';' )* otherlv_5= ')' ) ) )
            // InternalGo.g:543:3: otherlv_0= 'const' ( ( (lv_constSpec_1_0= ruleconstSpec ) ) | (otherlv_2= '(' ( ( (lv_constSpec_3_0= ruleconstSpec ) ) otherlv_4= ';' )* otherlv_5= ')' ) )
            {
            otherlv_0=(Token)match(input,50,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getConstDeclAccess().getConstKeyword_0());
              		
            }
            // InternalGo.g:547:3: ( ( (lv_constSpec_1_0= ruleconstSpec ) ) | (otherlv_2= '(' ( ( (lv_constSpec_3_0= ruleconstSpec ) ) otherlv_4= ';' )* otherlv_5= ')' ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_IDENTIFIER) ) {
                alt9=1;
            }
            else if ( (LA9_0==47) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalGo.g:548:4: ( (lv_constSpec_1_0= ruleconstSpec ) )
                    {
                    // InternalGo.g:548:4: ( (lv_constSpec_1_0= ruleconstSpec ) )
                    // InternalGo.g:549:5: (lv_constSpec_1_0= ruleconstSpec )
                    {
                    // InternalGo.g:549:5: (lv_constSpec_1_0= ruleconstSpec )
                    // InternalGo.g:550:6: lv_constSpec_1_0= ruleconstSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constSpec_1_0=ruleconstSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstDeclRule());
                      						}
                      						set(
                      							current,
                      							"constSpec",
                      							lv_constSpec_1_0,
                      							"org.xtext.Go.constSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:568:4: (otherlv_2= '(' ( ( (lv_constSpec_3_0= ruleconstSpec ) ) otherlv_4= ';' )* otherlv_5= ')' )
                    {
                    // InternalGo.g:568:4: (otherlv_2= '(' ( ( (lv_constSpec_3_0= ruleconstSpec ) ) otherlv_4= ';' )* otherlv_5= ')' )
                    // InternalGo.g:569:5: otherlv_2= '(' ( ( (lv_constSpec_3_0= ruleconstSpec ) ) otherlv_4= ';' )* otherlv_5= ')'
                    {
                    otherlv_2=(Token)match(input,47,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0());
                      				
                    }
                    // InternalGo.g:573:5: ( ( (lv_constSpec_3_0= ruleconstSpec ) ) otherlv_4= ';' )*
                    loop8:
                    do {
                        int alt8=2;
                        int LA8_0 = input.LA(1);

                        if ( (LA8_0==RULE_IDENTIFIER) ) {
                            alt8=1;
                        }


                        switch (alt8) {
                    	case 1 :
                    	    // InternalGo.g:574:6: ( (lv_constSpec_3_0= ruleconstSpec ) ) otherlv_4= ';'
                    	    {
                    	    // InternalGo.g:574:6: ( (lv_constSpec_3_0= ruleconstSpec ) )
                    	    // InternalGo.g:575:7: (lv_constSpec_3_0= ruleconstSpec )
                    	    {
                    	    // InternalGo.g:575:7: (lv_constSpec_3_0= ruleconstSpec )
                    	    // InternalGo.g:576:8: lv_constSpec_3_0= ruleconstSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_1_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_4);
                    	    lv_constSpec_3_0=ruleconstSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getConstDeclRule());
                    	      								}
                    	      								set(
                    	      									current,
                    	      									"constSpec",
                    	      									lv_constSpec_3_0,
                    	      									"org.xtext.Go.constSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_4=(Token)match(input,44,FOLLOW_11); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getConstDeclAccess().getSemicolonKeyword_1_1_1_1());
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop8;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_1_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleconstDecl"


    // $ANTLR start "entryRuleconstSpec"
    // InternalGo.g:608:1: entryRuleconstSpec returns [EObject current=null] : iv_ruleconstSpec= ruleconstSpec EOF ;
    public final EObject entryRuleconstSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleconstSpec = null;


        try {
            // InternalGo.g:608:50: (iv_ruleconstSpec= ruleconstSpec EOF )
            // InternalGo.g:609:2: iv_ruleconstSpec= ruleconstSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleconstSpec=ruleconstSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleconstSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleconstSpec"


    // $ANTLR start "ruleconstSpec"
    // InternalGo.g:615:1: ruleconstSpec returns [EObject current=null] : ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expressionList_3_0= ruleexpressionList ) ) )? ) ;
    public final EObject ruleconstSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_identifierList_0_0 = null;

        EObject lv_type_1_0 = null;

        EObject lv_expressionList_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:621:2: ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expressionList_3_0= ruleexpressionList ) ) )? ) )
            // InternalGo.g:622:2: ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expressionList_3_0= ruleexpressionList ) ) )? )
            {
            // InternalGo.g:622:2: ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expressionList_3_0= ruleexpressionList ) ) )? )
            // InternalGo.g:623:3: ( (lv_identifierList_0_0= ruleidentifierList ) ) ( ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expressionList_3_0= ruleexpressionList ) ) )?
            {
            // InternalGo.g:623:3: ( (lv_identifierList_0_0= ruleidentifierList ) )
            // InternalGo.g:624:4: (lv_identifierList_0_0= ruleidentifierList )
            {
            // InternalGo.g:624:4: (lv_identifierList_0_0= ruleidentifierList )
            // InternalGo.g:625:5: lv_identifierList_0_0= ruleidentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_12);
            lv_identifierList_0_0=ruleidentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstSpecRule());
              					}
              					set(
              						current,
              						"identifierList",
              						lv_identifierList_0_0,
              						"org.xtext.Go.identifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:642:3: ( ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expressionList_3_0= ruleexpressionList ) ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_IDENTIFIER||LA11_0==47||LA11_0==51||LA11_0==54||LA11_0==58||LA11_0==65||LA11_0==89||(LA11_0>=91 && LA11_0<=93)||LA11_0==95) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalGo.g:643:4: ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expressionList_3_0= ruleexpressionList ) )
                    {
                    // InternalGo.g:643:4: ( (lv_type_1_0= ruletype ) )?
                    int alt10=2;
                    int LA10_0 = input.LA(1);

                    if ( (LA10_0==RULE_IDENTIFIER||LA10_0==47||LA10_0==54||LA10_0==58||LA10_0==65||LA10_0==89||(LA10_0>=91 && LA10_0<=93)||LA10_0==95) ) {
                        alt10=1;
                    }
                    switch (alt10) {
                        case 1 :
                            // InternalGo.g:644:5: (lv_type_1_0= ruletype )
                            {
                            // InternalGo.g:644:5: (lv_type_1_0= ruletype )
                            // InternalGo.g:645:6: lv_type_1_0= ruletype
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getConstSpecAccess().getTypeTypeParserRuleCall_1_0_0());
                              					
                            }
                            pushFollow(FOLLOW_13);
                            lv_type_1_0=ruletype();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getConstSpecRule());
                              						}
                              						set(
                              							current,
                              							"type",
                              							lv_type_1_0,
                              							"org.xtext.Go.type");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,51,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1());
                      			
                    }
                    // InternalGo.g:666:4: ( (lv_expressionList_3_0= ruleexpressionList ) )
                    // InternalGo.g:667:5: (lv_expressionList_3_0= ruleexpressionList )
                    {
                    // InternalGo.g:667:5: (lv_expressionList_3_0= ruleexpressionList )
                    // InternalGo.g:668:6: lv_expressionList_3_0= ruleexpressionList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstSpecAccess().getExpressionListExpressionListParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressionList_3_0=ruleexpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstSpecRule());
                      						}
                      						set(
                      							current,
                      							"expressionList",
                      							lv_expressionList_3_0,
                      							"org.xtext.Go.expressionList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleconstSpec"


    // $ANTLR start "entryRuleidentifierList"
    // InternalGo.g:690:1: entryRuleidentifierList returns [String current=null] : iv_ruleidentifierList= ruleidentifierList EOF ;
    public final String entryRuleidentifierList() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleidentifierList = null;


        try {
            // InternalGo.g:690:54: (iv_ruleidentifierList= ruleidentifierList EOF )
            // InternalGo.g:691:2: iv_ruleidentifierList= ruleidentifierList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleidentifierList=ruleidentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleidentifierList.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleidentifierList"


    // $ANTLR start "ruleidentifierList"
    // InternalGo.g:697:1: ruleidentifierList returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IDENTIFIER_0= RULE_IDENTIFIER (kw= ',' this_IDENTIFIER_2= RULE_IDENTIFIER )* ) ;
    public final AntlrDatatypeRuleToken ruleidentifierList() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        Token kw=null;
        Token this_IDENTIFIER_2=null;


        	enterRule();

        try {
            // InternalGo.g:703:2: ( (this_IDENTIFIER_0= RULE_IDENTIFIER (kw= ',' this_IDENTIFIER_2= RULE_IDENTIFIER )* ) )
            // InternalGo.g:704:2: (this_IDENTIFIER_0= RULE_IDENTIFIER (kw= ',' this_IDENTIFIER_2= RULE_IDENTIFIER )* )
            {
            // InternalGo.g:704:2: (this_IDENTIFIER_0= RULE_IDENTIFIER (kw= ',' this_IDENTIFIER_2= RULE_IDENTIFIER )* )
            // InternalGo.g:705:3: this_IDENTIFIER_0= RULE_IDENTIFIER (kw= ',' this_IDENTIFIER_2= RULE_IDENTIFIER )*
            {
            this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_IDENTIFIER_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_IDENTIFIER_0, grammarAccess.getIdentifierListAccess().getIDENTIFIERTerminalRuleCall_0());
              		
            }
            // InternalGo.g:712:3: (kw= ',' this_IDENTIFIER_2= RULE_IDENTIFIER )*
            loop12:
            do {
                int alt12=2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0==52) ) {
                    alt12=1;
                }


                switch (alt12) {
            	case 1 :
            	    // InternalGo.g:713:4: kw= ',' this_IDENTIFIER_2= RULE_IDENTIFIER
            	    {
            	    kw=(Token)match(input,52,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    this_IDENTIFIER_2=(Token)match(input,RULE_IDENTIFIER,FOLLOW_15); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_IDENTIFIER_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_IDENTIFIER_2, grammarAccess.getIdentifierListAccess().getIDENTIFIERTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop12;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleidentifierList"


    // $ANTLR start "entryRuleexpressionList"
    // InternalGo.g:730:1: entryRuleexpressionList returns [EObject current=null] : iv_ruleexpressionList= ruleexpressionList EOF ;
    public final EObject entryRuleexpressionList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexpressionList = null;


        try {
            // InternalGo.g:730:55: (iv_ruleexpressionList= ruleexpressionList EOF )
            // InternalGo.g:731:2: iv_ruleexpressionList= ruleexpressionList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexpressionList=ruleexpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpressionList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexpressionList"


    // $ANTLR start "ruleexpressionList"
    // InternalGo.g:737:1: ruleexpressionList returns [EObject current=null] : ( ( (lv_expression_0_0= ruleexpression ) ) (otherlv_1= ',' ( (lv_expression_2_0= ruleexpression ) ) )* ) ;
    public final EObject ruleexpressionList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:743:2: ( ( ( (lv_expression_0_0= ruleexpression ) ) (otherlv_1= ',' ( (lv_expression_2_0= ruleexpression ) ) )* ) )
            // InternalGo.g:744:2: ( ( (lv_expression_0_0= ruleexpression ) ) (otherlv_1= ',' ( (lv_expression_2_0= ruleexpression ) ) )* )
            {
            // InternalGo.g:744:2: ( ( (lv_expression_0_0= ruleexpression ) ) (otherlv_1= ',' ( (lv_expression_2_0= ruleexpression ) ) )* )
            // InternalGo.g:745:3: ( (lv_expression_0_0= ruleexpression ) ) (otherlv_1= ',' ( (lv_expression_2_0= ruleexpression ) ) )*
            {
            // InternalGo.g:745:3: ( (lv_expression_0_0= ruleexpression ) )
            // InternalGo.g:746:4: (lv_expression_0_0= ruleexpression )
            {
            // InternalGo.g:746:4: (lv_expression_0_0= ruleexpression )
            // InternalGo.g:747:5: lv_expression_0_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_expression_0_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionListRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_0_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:764:3: (otherlv_1= ',' ( (lv_expression_2_0= ruleexpression ) ) )*
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==52) ) {
                    int LA13_2 = input.LA(2);

                    if ( (synpred16_InternalGo()) ) {
                        alt13=1;
                    }


                }


                switch (alt13) {
            	case 1 :
            	    // InternalGo.g:765:4: otherlv_1= ',' ( (lv_expression_2_0= ruleexpression ) )
            	    {
            	    otherlv_1=(Token)match(input,52,FOLLOW_14); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getExpressionListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:769:4: ( (lv_expression_2_0= ruleexpression ) )
            	    // InternalGo.g:770:5: (lv_expression_2_0= ruleexpression )
            	    {
            	    // InternalGo.g:770:5: (lv_expression_2_0= ruleexpression )
            	    // InternalGo.g:771:6: lv_expression_2_0= ruleexpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_expression_2_0=ruleexpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExpressionListRule());
            	      						}
            	      						set(
            	      							current,
            	      							"expression",
            	      							lv_expression_2_0,
            	      							"org.xtext.Go.expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexpressionList"


    // $ANTLR start "entryRuletypeDecl"
    // InternalGo.g:793:1: entryRuletypeDecl returns [EObject current=null] : iv_ruletypeDecl= ruletypeDecl EOF ;
    public final EObject entryRuletypeDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeDecl = null;


        try {
            // InternalGo.g:793:49: (iv_ruletypeDecl= ruletypeDecl EOF )
            // InternalGo.g:794:2: iv_ruletypeDecl= ruletypeDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeDecl=ruletypeDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeDecl"


    // $ANTLR start "ruletypeDecl"
    // InternalGo.g:800:1: ruletypeDecl returns [EObject current=null] : (otherlv_0= 'type' ( ( (lv_typeSpec_1_0= ruletypeSpec ) ) | (otherlv_2= '(' ( ( (lv_typeSpec_3_0= ruletypeSpec ) ) otherlv_4= ';' )* otherlv_5= ')' ) ) ) ;
    public final EObject ruletypeDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_typeSpec_1_0 = null;

        EObject lv_typeSpec_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:806:2: ( (otherlv_0= 'type' ( ( (lv_typeSpec_1_0= ruletypeSpec ) ) | (otherlv_2= '(' ( ( (lv_typeSpec_3_0= ruletypeSpec ) ) otherlv_4= ';' )* otherlv_5= ')' ) ) ) )
            // InternalGo.g:807:2: (otherlv_0= 'type' ( ( (lv_typeSpec_1_0= ruletypeSpec ) ) | (otherlv_2= '(' ( ( (lv_typeSpec_3_0= ruletypeSpec ) ) otherlv_4= ';' )* otherlv_5= ')' ) ) )
            {
            // InternalGo.g:807:2: (otherlv_0= 'type' ( ( (lv_typeSpec_1_0= ruletypeSpec ) ) | (otherlv_2= '(' ( ( (lv_typeSpec_3_0= ruletypeSpec ) ) otherlv_4= ';' )* otherlv_5= ')' ) ) )
            // InternalGo.g:808:3: otherlv_0= 'type' ( ( (lv_typeSpec_1_0= ruletypeSpec ) ) | (otherlv_2= '(' ( ( (lv_typeSpec_3_0= ruletypeSpec ) ) otherlv_4= ';' )* otherlv_5= ')' ) )
            {
            otherlv_0=(Token)match(input,53,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeDeclAccess().getTypeKeyword_0());
              		
            }
            // InternalGo.g:812:3: ( ( (lv_typeSpec_1_0= ruletypeSpec ) ) | (otherlv_2= '(' ( ( (lv_typeSpec_3_0= ruletypeSpec ) ) otherlv_4= ';' )* otherlv_5= ')' ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==RULE_IDENTIFIER) ) {
                alt15=1;
            }
            else if ( (LA15_0==47) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalGo.g:813:4: ( (lv_typeSpec_1_0= ruletypeSpec ) )
                    {
                    // InternalGo.g:813:4: ( (lv_typeSpec_1_0= ruletypeSpec ) )
                    // InternalGo.g:814:5: (lv_typeSpec_1_0= ruletypeSpec )
                    {
                    // InternalGo.g:814:5: (lv_typeSpec_1_0= ruletypeSpec )
                    // InternalGo.g:815:6: lv_typeSpec_1_0= ruletypeSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeSpec_1_0=ruletypeSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeDeclRule());
                      						}
                      						set(
                      							current,
                      							"typeSpec",
                      							lv_typeSpec_1_0,
                      							"org.xtext.Go.typeSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:833:4: (otherlv_2= '(' ( ( (lv_typeSpec_3_0= ruletypeSpec ) ) otherlv_4= ';' )* otherlv_5= ')' )
                    {
                    // InternalGo.g:833:4: (otherlv_2= '(' ( ( (lv_typeSpec_3_0= ruletypeSpec ) ) otherlv_4= ';' )* otherlv_5= ')' )
                    // InternalGo.g:834:5: otherlv_2= '(' ( ( (lv_typeSpec_3_0= ruletypeSpec ) ) otherlv_4= ';' )* otherlv_5= ')'
                    {
                    otherlv_2=(Token)match(input,47,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0());
                      				
                    }
                    // InternalGo.g:838:5: ( ( (lv_typeSpec_3_0= ruletypeSpec ) ) otherlv_4= ';' )*
                    loop14:
                    do {
                        int alt14=2;
                        int LA14_0 = input.LA(1);

                        if ( (LA14_0==RULE_IDENTIFIER) ) {
                            alt14=1;
                        }


                        switch (alt14) {
                    	case 1 :
                    	    // InternalGo.g:839:6: ( (lv_typeSpec_3_0= ruletypeSpec ) ) otherlv_4= ';'
                    	    {
                    	    // InternalGo.g:839:6: ( (lv_typeSpec_3_0= ruletypeSpec ) )
                    	    // InternalGo.g:840:7: (lv_typeSpec_3_0= ruletypeSpec )
                    	    {
                    	    // InternalGo.g:840:7: (lv_typeSpec_3_0= ruletypeSpec )
                    	    // InternalGo.g:841:8: lv_typeSpec_3_0= ruletypeSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_1_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_4);
                    	    lv_typeSpec_3_0=ruletypeSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getTypeDeclRule());
                    	      								}
                    	      								set(
                    	      									current,
                    	      									"typeSpec",
                    	      									lv_typeSpec_3_0,
                    	      									"org.xtext.Go.typeSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_4=(Token)match(input,44,FOLLOW_11); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getTypeDeclAccess().getSemicolonKeyword_1_1_1_1());
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop14;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_1_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeDecl"


    // $ANTLR start "entryRuletypeSpec"
    // InternalGo.g:873:1: entryRuletypeSpec returns [EObject current=null] : iv_ruletypeSpec= ruletypeSpec EOF ;
    public final EObject entryRuletypeSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeSpec = null;


        try {
            // InternalGo.g:873:49: (iv_ruletypeSpec= ruletypeSpec EOF )
            // InternalGo.g:874:2: iv_ruletypeSpec= ruletypeSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeSpec=ruletypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeSpec"


    // $ANTLR start "ruletypeSpec"
    // InternalGo.g:880:1: ruletypeSpec returns [EObject current=null] : (this_IDENTIFIER_0= RULE_IDENTIFIER ( (lv_type_1_0= ruletype ) ) ) ;
    public final EObject ruletypeSpec() throws RecognitionException {
        EObject current = null;

        Token this_IDENTIFIER_0=null;
        EObject lv_type_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:886:2: ( (this_IDENTIFIER_0= RULE_IDENTIFIER ( (lv_type_1_0= ruletype ) ) ) )
            // InternalGo.g:887:2: (this_IDENTIFIER_0= RULE_IDENTIFIER ( (lv_type_1_0= ruletype ) ) )
            {
            // InternalGo.g:887:2: (this_IDENTIFIER_0= RULE_IDENTIFIER ( (lv_type_1_0= ruletype ) ) )
            // InternalGo.g:888:3: this_IDENTIFIER_0= RULE_IDENTIFIER ( (lv_type_1_0= ruletype ) )
            {
            this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_IDENTIFIER_0, grammarAccess.getTypeSpecAccess().getIDENTIFIERTerminalRuleCall_0());
              		
            }
            // InternalGo.g:892:3: ( (lv_type_1_0= ruletype ) )
            // InternalGo.g:893:4: (lv_type_1_0= ruletype )
            {
            // InternalGo.g:893:4: (lv_type_1_0= ruletype )
            // InternalGo.g:894:5: lv_type_1_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeSpecAccess().getTypeTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_type_1_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeSpecRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_1_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeSpec"


    // $ANTLR start "entryRulefunctionDecl"
    // InternalGo.g:915:1: entryRulefunctionDecl returns [EObject current=null] : iv_rulefunctionDecl= rulefunctionDecl EOF ;
    public final EObject entryRulefunctionDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefunctionDecl = null;


        try {
            // InternalGo.g:915:53: (iv_rulefunctionDecl= rulefunctionDecl EOF )
            // InternalGo.g:916:2: iv_rulefunctionDecl= rulefunctionDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefunctionDecl=rulefunctionDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefunctionDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefunctionDecl"


    // $ANTLR start "rulefunctionDecl"
    // InternalGo.g:922:1: rulefunctionDecl returns [EObject current=null] : (otherlv_0= 'func' this_IDENTIFIER_1= RULE_IDENTIFIER ( ( (lv_function_2_0= rulefunction ) ) | ( (lv_signature_3_0= rulesignature ) ) ) ) ;
    public final EObject rulefunctionDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_IDENTIFIER_1=null;
        EObject lv_function_2_0 = null;

        EObject lv_signature_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:928:2: ( (otherlv_0= 'func' this_IDENTIFIER_1= RULE_IDENTIFIER ( ( (lv_function_2_0= rulefunction ) ) | ( (lv_signature_3_0= rulesignature ) ) ) ) )
            // InternalGo.g:929:2: (otherlv_0= 'func' this_IDENTIFIER_1= RULE_IDENTIFIER ( ( (lv_function_2_0= rulefunction ) ) | ( (lv_signature_3_0= rulesignature ) ) ) )
            {
            // InternalGo.g:929:2: (otherlv_0= 'func' this_IDENTIFIER_1= RULE_IDENTIFIER ( ( (lv_function_2_0= rulefunction ) ) | ( (lv_signature_3_0= rulesignature ) ) ) )
            // InternalGo.g:930:3: otherlv_0= 'func' this_IDENTIFIER_1= RULE_IDENTIFIER ( ( (lv_function_2_0= rulefunction ) ) | ( (lv_signature_3_0= rulesignature ) ) )
            {
            otherlv_0=(Token)match(input,54,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionDeclAccess().getFuncKeyword_0());
              		
            }
            this_IDENTIFIER_1=(Token)match(input,RULE_IDENTIFIER,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_IDENTIFIER_1, grammarAccess.getFunctionDeclAccess().getIDENTIFIERTerminalRuleCall_1());
              		
            }
            // InternalGo.g:938:3: ( ( (lv_function_2_0= rulefunction ) ) | ( (lv_signature_3_0= rulesignature ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==47) ) {
                int LA16_1 = input.LA(2);

                if ( (synpred19_InternalGo()) ) {
                    alt16=1;
                }
                else if ( (true) ) {
                    alt16=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalGo.g:939:4: ( (lv_function_2_0= rulefunction ) )
                    {
                    // InternalGo.g:939:4: ( (lv_function_2_0= rulefunction ) )
                    // InternalGo.g:940:5: (lv_function_2_0= rulefunction )
                    {
                    // InternalGo.g:940:5: (lv_function_2_0= rulefunction )
                    // InternalGo.g:941:6: lv_function_2_0= rulefunction
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionDeclAccess().getFunctionFunctionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_2_0=rulefunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
                      						}
                      						set(
                      							current,
                      							"function",
                      							lv_function_2_0,
                      							"org.xtext.Go.function");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:959:4: ( (lv_signature_3_0= rulesignature ) )
                    {
                    // InternalGo.g:959:4: ( (lv_signature_3_0= rulesignature ) )
                    // InternalGo.g:960:5: (lv_signature_3_0= rulesignature )
                    {
                    // InternalGo.g:960:5: (lv_signature_3_0= rulesignature )
                    // InternalGo.g:961:6: lv_signature_3_0= rulesignature
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionDeclAccess().getSignatureSignatureParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_signature_3_0=rulesignature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
                      						}
                      						set(
                      							current,
                      							"signature",
                      							lv_signature_3_0,
                      							"org.xtext.Go.signature");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefunctionDecl"


    // $ANTLR start "entryRulefunction"
    // InternalGo.g:983:1: entryRulefunction returns [EObject current=null] : iv_rulefunction= rulefunction EOF ;
    public final EObject entryRulefunction() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefunction = null;


        try {
            // InternalGo.g:983:49: (iv_rulefunction= rulefunction EOF )
            // InternalGo.g:984:2: iv_rulefunction= rulefunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefunction=rulefunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefunction"


    // $ANTLR start "rulefunction"
    // InternalGo.g:990:1: rulefunction returns [EObject current=null] : ( ( (lv_signature_0_0= rulesignature ) ) ( (lv_block_1_0= ruleblock ) ) ) ;
    public final EObject rulefunction() throws RecognitionException {
        EObject current = null;

        EObject lv_signature_0_0 = null;

        EObject lv_block_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:996:2: ( ( ( (lv_signature_0_0= rulesignature ) ) ( (lv_block_1_0= ruleblock ) ) ) )
            // InternalGo.g:997:2: ( ( (lv_signature_0_0= rulesignature ) ) ( (lv_block_1_0= ruleblock ) ) )
            {
            // InternalGo.g:997:2: ( ( (lv_signature_0_0= rulesignature ) ) ( (lv_block_1_0= ruleblock ) ) )
            // InternalGo.g:998:3: ( (lv_signature_0_0= rulesignature ) ) ( (lv_block_1_0= ruleblock ) )
            {
            // InternalGo.g:998:3: ( (lv_signature_0_0= rulesignature ) )
            // InternalGo.g:999:4: (lv_signature_0_0= rulesignature )
            {
            // InternalGo.g:999:4: (lv_signature_0_0= rulesignature )
            // InternalGo.g:1000:5: lv_signature_0_0= rulesignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionAccess().getSignatureSignatureParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_18);
            lv_signature_0_0=rulesignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionRule());
              					}
              					set(
              						current,
              						"signature",
              						lv_signature_0_0,
              						"org.xtext.Go.signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:1017:3: ( (lv_block_1_0= ruleblock ) )
            // InternalGo.g:1018:4: (lv_block_1_0= ruleblock )
            {
            // InternalGo.g:1018:4: (lv_block_1_0= ruleblock )
            // InternalGo.g:1019:5: lv_block_1_0= ruleblock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionAccess().getBlockBlockParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_block_1_0=ruleblock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_1_0,
              						"org.xtext.Go.block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefunction"


    // $ANTLR start "entryRulemethodDecl"
    // InternalGo.g:1040:1: entryRulemethodDecl returns [EObject current=null] : iv_rulemethodDecl= rulemethodDecl EOF ;
    public final EObject entryRulemethodDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_rulemethodDecl = null;


        try {
            // InternalGo.g:1040:51: (iv_rulemethodDecl= rulemethodDecl EOF )
            // InternalGo.g:1041:2: iv_rulemethodDecl= rulemethodDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulemethodDecl=rulemethodDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulemethodDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulemethodDecl"


    // $ANTLR start "rulemethodDecl"
    // InternalGo.g:1047:1: rulemethodDecl returns [EObject current=null] : (otherlv_0= 'func' ( (lv_receiver_1_0= rulereceiver ) ) this_IDENTIFIER_2= RULE_IDENTIFIER ( ( (lv_function_3_0= rulefunction ) ) | ( (lv_signature_4_0= rulesignature ) ) ) ) ;
    public final EObject rulemethodDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_IDENTIFIER_2=null;
        EObject lv_receiver_1_0 = null;

        EObject lv_function_3_0 = null;

        EObject lv_signature_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1053:2: ( (otherlv_0= 'func' ( (lv_receiver_1_0= rulereceiver ) ) this_IDENTIFIER_2= RULE_IDENTIFIER ( ( (lv_function_3_0= rulefunction ) ) | ( (lv_signature_4_0= rulesignature ) ) ) ) )
            // InternalGo.g:1054:2: (otherlv_0= 'func' ( (lv_receiver_1_0= rulereceiver ) ) this_IDENTIFIER_2= RULE_IDENTIFIER ( ( (lv_function_3_0= rulefunction ) ) | ( (lv_signature_4_0= rulesignature ) ) ) )
            {
            // InternalGo.g:1054:2: (otherlv_0= 'func' ( (lv_receiver_1_0= rulereceiver ) ) this_IDENTIFIER_2= RULE_IDENTIFIER ( ( (lv_function_3_0= rulefunction ) ) | ( (lv_signature_4_0= rulesignature ) ) ) )
            // InternalGo.g:1055:3: otherlv_0= 'func' ( (lv_receiver_1_0= rulereceiver ) ) this_IDENTIFIER_2= RULE_IDENTIFIER ( ( (lv_function_3_0= rulefunction ) ) | ( (lv_signature_4_0= rulesignature ) ) )
            {
            otherlv_0=(Token)match(input,54,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMethodDeclAccess().getFuncKeyword_0());
              		
            }
            // InternalGo.g:1059:3: ( (lv_receiver_1_0= rulereceiver ) )
            // InternalGo.g:1060:4: (lv_receiver_1_0= rulereceiver )
            {
            // InternalGo.g:1060:4: (lv_receiver_1_0= rulereceiver )
            // InternalGo.g:1061:5: lv_receiver_1_0= rulereceiver
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclAccess().getReceiverReceiverParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_receiver_1_0=rulereceiver();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclRule());
              					}
              					set(
              						current,
              						"receiver",
              						lv_receiver_1_0,
              						"org.xtext.Go.receiver");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            this_IDENTIFIER_2=(Token)match(input,RULE_IDENTIFIER,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_IDENTIFIER_2, grammarAccess.getMethodDeclAccess().getIDENTIFIERTerminalRuleCall_2());
              		
            }
            // InternalGo.g:1082:3: ( ( (lv_function_3_0= rulefunction ) ) | ( (lv_signature_4_0= rulesignature ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==47) ) {
                int LA17_1 = input.LA(2);

                if ( (synpred20_InternalGo()) ) {
                    alt17=1;
                }
                else if ( (true) ) {
                    alt17=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 17, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalGo.g:1083:4: ( (lv_function_3_0= rulefunction ) )
                    {
                    // InternalGo.g:1083:4: ( (lv_function_3_0= rulefunction ) )
                    // InternalGo.g:1084:5: (lv_function_3_0= rulefunction )
                    {
                    // InternalGo.g:1084:5: (lv_function_3_0= rulefunction )
                    // InternalGo.g:1085:6: lv_function_3_0= rulefunction
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodDeclAccess().getFunctionFunctionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_3_0=rulefunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodDeclRule());
                      						}
                      						set(
                      							current,
                      							"function",
                      							lv_function_3_0,
                      							"org.xtext.Go.function");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1103:4: ( (lv_signature_4_0= rulesignature ) )
                    {
                    // InternalGo.g:1103:4: ( (lv_signature_4_0= rulesignature ) )
                    // InternalGo.g:1104:5: (lv_signature_4_0= rulesignature )
                    {
                    // InternalGo.g:1104:5: (lv_signature_4_0= rulesignature )
                    // InternalGo.g:1105:6: lv_signature_4_0= rulesignature
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodDeclAccess().getSignatureSignatureParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_signature_4_0=rulesignature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodDeclRule());
                      						}
                      						set(
                      							current,
                      							"signature",
                      							lv_signature_4_0,
                      							"org.xtext.Go.signature");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulemethodDecl"


    // $ANTLR start "entryRulereceiver"
    // InternalGo.g:1127:1: entryRulereceiver returns [EObject current=null] : iv_rulereceiver= rulereceiver EOF ;
    public final EObject entryRulereceiver() throws RecognitionException {
        EObject current = null;

        EObject iv_rulereceiver = null;


        try {
            // InternalGo.g:1127:49: (iv_rulereceiver= rulereceiver EOF )
            // InternalGo.g:1128:2: iv_rulereceiver= rulereceiver EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReceiverRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulereceiver=rulereceiver();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulereceiver; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulereceiver"


    // $ANTLR start "rulereceiver"
    // InternalGo.g:1134:1: rulereceiver returns [EObject current=null] : ( (lv_parameters_0_0= ruleparameters ) ) ;
    public final EObject rulereceiver() throws RecognitionException {
        EObject current = null;

        EObject lv_parameters_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1140:2: ( ( (lv_parameters_0_0= ruleparameters ) ) )
            // InternalGo.g:1141:2: ( (lv_parameters_0_0= ruleparameters ) )
            {
            // InternalGo.g:1141:2: ( (lv_parameters_0_0= ruleparameters ) )
            // InternalGo.g:1142:3: (lv_parameters_0_0= ruleparameters )
            {
            // InternalGo.g:1142:3: (lv_parameters_0_0= ruleparameters )
            // InternalGo.g:1143:4: lv_parameters_0_0= ruleparameters
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getReceiverAccess().getParametersParametersParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_parameters_0_0=ruleparameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getReceiverRule());
              				}
              				set(
              					current,
              					"parameters",
              					lv_parameters_0_0,
              					"org.xtext.Go.parameters");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulereceiver"


    // $ANTLR start "entryRulevarDecl"
    // InternalGo.g:1163:1: entryRulevarDecl returns [EObject current=null] : iv_rulevarDecl= rulevarDecl EOF ;
    public final EObject entryRulevarDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_rulevarDecl = null;


        try {
            // InternalGo.g:1163:48: (iv_rulevarDecl= rulevarDecl EOF )
            // InternalGo.g:1164:2: iv_rulevarDecl= rulevarDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulevarDecl=rulevarDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulevarDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulevarDecl"


    // $ANTLR start "rulevarDecl"
    // InternalGo.g:1170:1: rulevarDecl returns [EObject current=null] : (otherlv_0= 'var' ( ( (lv_varSpec_1_0= rulevarSpec ) ) | (otherlv_2= '(' ( ( (lv_varSpec_3_0= rulevarSpec ) ) otherlv_4= ';' )* otherlv_5= ')' ) ) ) ;
    public final EObject rulevarDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_varSpec_1_0 = null;

        EObject lv_varSpec_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1176:2: ( (otherlv_0= 'var' ( ( (lv_varSpec_1_0= rulevarSpec ) ) | (otherlv_2= '(' ( ( (lv_varSpec_3_0= rulevarSpec ) ) otherlv_4= ';' )* otherlv_5= ')' ) ) ) )
            // InternalGo.g:1177:2: (otherlv_0= 'var' ( ( (lv_varSpec_1_0= rulevarSpec ) ) | (otherlv_2= '(' ( ( (lv_varSpec_3_0= rulevarSpec ) ) otherlv_4= ';' )* otherlv_5= ')' ) ) )
            {
            // InternalGo.g:1177:2: (otherlv_0= 'var' ( ( (lv_varSpec_1_0= rulevarSpec ) ) | (otherlv_2= '(' ( ( (lv_varSpec_3_0= rulevarSpec ) ) otherlv_4= ';' )* otherlv_5= ')' ) ) )
            // InternalGo.g:1178:3: otherlv_0= 'var' ( ( (lv_varSpec_1_0= rulevarSpec ) ) | (otherlv_2= '(' ( ( (lv_varSpec_3_0= rulevarSpec ) ) otherlv_4= ';' )* otherlv_5= ')' ) )
            {
            otherlv_0=(Token)match(input,55,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getVarDeclAccess().getVarKeyword_0());
              		
            }
            // InternalGo.g:1182:3: ( ( (lv_varSpec_1_0= rulevarSpec ) ) | (otherlv_2= '(' ( ( (lv_varSpec_3_0= rulevarSpec ) ) otherlv_4= ';' )* otherlv_5= ')' ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_IDENTIFIER) ) {
                alt19=1;
            }
            else if ( (LA19_0==47) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalGo.g:1183:4: ( (lv_varSpec_1_0= rulevarSpec ) )
                    {
                    // InternalGo.g:1183:4: ( (lv_varSpec_1_0= rulevarSpec ) )
                    // InternalGo.g:1184:5: (lv_varSpec_1_0= rulevarSpec )
                    {
                    // InternalGo.g:1184:5: (lv_varSpec_1_0= rulevarSpec )
                    // InternalGo.g:1185:6: lv_varSpec_1_0= rulevarSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_varSpec_1_0=rulevarSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getVarDeclRule());
                      						}
                      						set(
                      							current,
                      							"varSpec",
                      							lv_varSpec_1_0,
                      							"org.xtext.Go.varSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1203:4: (otherlv_2= '(' ( ( (lv_varSpec_3_0= rulevarSpec ) ) otherlv_4= ';' )* otherlv_5= ')' )
                    {
                    // InternalGo.g:1203:4: (otherlv_2= '(' ( ( (lv_varSpec_3_0= rulevarSpec ) ) otherlv_4= ';' )* otherlv_5= ')' )
                    // InternalGo.g:1204:5: otherlv_2= '(' ( ( (lv_varSpec_3_0= rulevarSpec ) ) otherlv_4= ';' )* otherlv_5= ')'
                    {
                    otherlv_2=(Token)match(input,47,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0());
                      				
                    }
                    // InternalGo.g:1208:5: ( ( (lv_varSpec_3_0= rulevarSpec ) ) otherlv_4= ';' )*
                    loop18:
                    do {
                        int alt18=2;
                        int LA18_0 = input.LA(1);

                        if ( (LA18_0==RULE_IDENTIFIER) ) {
                            alt18=1;
                        }


                        switch (alt18) {
                    	case 1 :
                    	    // InternalGo.g:1209:6: ( (lv_varSpec_3_0= rulevarSpec ) ) otherlv_4= ';'
                    	    {
                    	    // InternalGo.g:1209:6: ( (lv_varSpec_3_0= rulevarSpec ) )
                    	    // InternalGo.g:1210:7: (lv_varSpec_3_0= rulevarSpec )
                    	    {
                    	    // InternalGo.g:1210:7: (lv_varSpec_3_0= rulevarSpec )
                    	    // InternalGo.g:1211:8: lv_varSpec_3_0= rulevarSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_1_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_4);
                    	    lv_varSpec_3_0=rulevarSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getVarDeclRule());
                    	      								}
                    	      								set(
                    	      									current,
                    	      									"varSpec",
                    	      									lv_varSpec_3_0,
                    	      									"org.xtext.Go.varSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_4=(Token)match(input,44,FOLLOW_11); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getVarDeclAccess().getSemicolonKeyword_1_1_1_1());
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop18;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_1_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulevarDecl"


    // $ANTLR start "entryRulevarSpec"
    // InternalGo.g:1243:1: entryRulevarSpec returns [EObject current=null] : iv_rulevarSpec= rulevarSpec EOF ;
    public final EObject entryRulevarSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_rulevarSpec = null;


        try {
            // InternalGo.g:1243:48: (iv_rulevarSpec= rulevarSpec EOF )
            // InternalGo.g:1244:2: iv_rulevarSpec= rulevarSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulevarSpec=rulevarSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulevarSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulevarSpec"


    // $ANTLR start "rulevarSpec"
    // InternalGo.g:1250:1: rulevarSpec returns [EObject current=null] : ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_expressionList_3_0= ruleexpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_expressionList_5_0= ruleexpressionList ) ) ) ) ) ;
    public final EObject rulevarSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_identifierList_0_0 = null;

        EObject lv_type_1_0 = null;

        EObject lv_expressionList_3_0 = null;

        EObject lv_expressionList_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1256:2: ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_expressionList_3_0= ruleexpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_expressionList_5_0= ruleexpressionList ) ) ) ) ) )
            // InternalGo.g:1257:2: ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_expressionList_3_0= ruleexpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_expressionList_5_0= ruleexpressionList ) ) ) ) )
            {
            // InternalGo.g:1257:2: ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_expressionList_3_0= ruleexpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_expressionList_5_0= ruleexpressionList ) ) ) ) )
            // InternalGo.g:1258:3: ( (lv_identifierList_0_0= ruleidentifierList ) ) ( ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_expressionList_3_0= ruleexpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_expressionList_5_0= ruleexpressionList ) ) ) )
            {
            // InternalGo.g:1258:3: ( (lv_identifierList_0_0= ruleidentifierList ) )
            // InternalGo.g:1259:4: (lv_identifierList_0_0= ruleidentifierList )
            {
            // InternalGo.g:1259:4: (lv_identifierList_0_0= ruleidentifierList )
            // InternalGo.g:1260:5: lv_identifierList_0_0= ruleidentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVarSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_identifierList_0_0=ruleidentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVarSpecRule());
              					}
              					set(
              						current,
              						"identifierList",
              						lv_identifierList_0_0,
              						"org.xtext.Go.identifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:1277:3: ( ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_expressionList_3_0= ruleexpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_expressionList_5_0= ruleexpressionList ) ) ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_IDENTIFIER||LA21_0==47||LA21_0==54||LA21_0==58||LA21_0==65||LA21_0==89||(LA21_0>=91 && LA21_0<=93)||LA21_0==95) ) {
                alt21=1;
            }
            else if ( (LA21_0==51) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalGo.g:1278:4: ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_expressionList_3_0= ruleexpressionList ) ) )? )
                    {
                    // InternalGo.g:1278:4: ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_expressionList_3_0= ruleexpressionList ) ) )? )
                    // InternalGo.g:1279:5: ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_expressionList_3_0= ruleexpressionList ) ) )?
                    {
                    // InternalGo.g:1279:5: ( (lv_type_1_0= ruletype ) )
                    // InternalGo.g:1280:6: (lv_type_1_0= ruletype )
                    {
                    // InternalGo.g:1280:6: (lv_type_1_0= ruletype )
                    // InternalGo.g:1281:7: lv_type_1_0= ruletype
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVarSpecAccess().getTypeTypeParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_20);
                    lv_type_1_0=ruletype();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVarSpecRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_1_0,
                      								"org.xtext.Go.type");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:1298:5: (otherlv_2= '=' ( (lv_expressionList_3_0= ruleexpressionList ) ) )?
                    int alt20=2;
                    int LA20_0 = input.LA(1);

                    if ( (LA20_0==51) ) {
                        alt20=1;
                    }
                    switch (alt20) {
                        case 1 :
                            // InternalGo.g:1299:6: otherlv_2= '=' ( (lv_expressionList_3_0= ruleexpressionList ) )
                            {
                            otherlv_2=(Token)match(input,51,FOLLOW_14); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0());
                              					
                            }
                            // InternalGo.g:1303:6: ( (lv_expressionList_3_0= ruleexpressionList ) )
                            // InternalGo.g:1304:7: (lv_expressionList_3_0= ruleexpressionList )
                            {
                            // InternalGo.g:1304:7: (lv_expressionList_3_0= ruleexpressionList )
                            // InternalGo.g:1305:8: lv_expressionList_3_0= ruleexpressionList
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_expressionList_3_0=ruleexpressionList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getVarSpecRule());
                              								}
                              								set(
                              									current,
                              									"expressionList",
                              									lv_expressionList_3_0,
                              									"org.xtext.Go.expressionList");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1325:4: (otherlv_4= '=' ( (lv_expressionList_5_0= ruleexpressionList ) ) )
                    {
                    // InternalGo.g:1325:4: (otherlv_4= '=' ( (lv_expressionList_5_0= ruleexpressionList ) ) )
                    // InternalGo.g:1326:5: otherlv_4= '=' ( (lv_expressionList_5_0= ruleexpressionList ) )
                    {
                    otherlv_4=(Token)match(input,51,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0());
                      				
                    }
                    // InternalGo.g:1330:5: ( (lv_expressionList_5_0= ruleexpressionList ) )
                    // InternalGo.g:1331:6: (lv_expressionList_5_0= ruleexpressionList )
                    {
                    // InternalGo.g:1331:6: (lv_expressionList_5_0= ruleexpressionList )
                    // InternalGo.g:1332:7: lv_expressionList_5_0= ruleexpressionList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressionList_5_0=ruleexpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVarSpecRule());
                      							}
                      							set(
                      								current,
                      								"expressionList",
                      								lv_expressionList_5_0,
                      								"org.xtext.Go.expressionList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulevarSpec"


    // $ANTLR start "entryRuleblock"
    // InternalGo.g:1355:1: entryRuleblock returns [EObject current=null] : iv_ruleblock= ruleblock EOF ;
    public final EObject entryRuleblock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleblock = null;


        try {
            // InternalGo.g:1355:46: (iv_ruleblock= ruleblock EOF )
            // InternalGo.g:1356:2: iv_ruleblock= ruleblock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleblock=ruleblock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleblock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleblock"


    // $ANTLR start "ruleblock"
    // InternalGo.g:1362:1: ruleblock returns [EObject current=null] : (otherlv_0= '{' ( (lv_statementList_1_0= rulestatementList ) ) otherlv_2= '}' ) ;
    public final EObject ruleblock() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_statementList_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1368:2: ( (otherlv_0= '{' ( (lv_statementList_1_0= rulestatementList ) ) otherlv_2= '}' ) )
            // InternalGo.g:1369:2: (otherlv_0= '{' ( (lv_statementList_1_0= rulestatementList ) ) otherlv_2= '}' )
            {
            // InternalGo.g:1369:2: (otherlv_0= '{' ( (lv_statementList_1_0= rulestatementList ) ) otherlv_2= '}' )
            // InternalGo.g:1370:3: otherlv_0= '{' ( (lv_statementList_1_0= rulestatementList ) ) otherlv_2= '}'
            {
            otherlv_0=(Token)match(input,56,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalGo.g:1374:3: ( (lv_statementList_1_0= rulestatementList ) )
            // InternalGo.g:1375:4: (lv_statementList_1_0= rulestatementList )
            {
            // InternalGo.g:1375:4: (lv_statementList_1_0= rulestatementList )
            // InternalGo.g:1376:5: lv_statementList_1_0= rulestatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBlockAccess().getStatementListStatementListParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_22);
            lv_statementList_1_0=rulestatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBlockRule());
              					}
              					set(
              						current,
              						"statementList",
              						lv_statementList_1_0,
              						"org.xtext.Go.statementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleblock"


    // $ANTLR start "entryRulestatementList"
    // InternalGo.g:1401:1: entryRulestatementList returns [EObject current=null] : iv_rulestatementList= rulestatementList EOF ;
    public final EObject entryRulestatementList() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestatementList = null;


        try {
            // InternalGo.g:1401:54: (iv_rulestatementList= rulestatementList EOF )
            // InternalGo.g:1402:2: iv_rulestatementList= rulestatementList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestatementList=rulestatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestatementList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestatementList"


    // $ANTLR start "rulestatementList"
    // InternalGo.g:1408:1: rulestatementList returns [EObject current=null] : ( ( (lv_statement_0_0= rulestatement ) ) otherlv_1= ';' )* ;
    public final EObject rulestatementList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_statement_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1414:2: ( ( ( (lv_statement_0_0= rulestatement ) ) otherlv_1= ';' )* )
            // InternalGo.g:1415:2: ( ( (lv_statement_0_0= rulestatement ) ) otherlv_1= ';' )*
            {
            // InternalGo.g:1415:2: ( ( (lv_statement_0_0= rulestatement ) ) otherlv_1= ';' )*
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( ((LA22_0>=RULE_IDENTIFIER && LA22_0<=RULE_BINARY_OP)||LA22_0==44||LA22_0==47||(LA22_0>=49 && LA22_0<=56)||(LA22_0>=58 && LA22_0<=71)||(LA22_0>=74 && LA22_0<=80)||LA22_0==82||(LA22_0>=85 && LA22_0<=86)||(LA22_0>=88 && LA22_0<=89)||(LA22_0>=91 && LA22_0<=93)||(LA22_0>=95 && LA22_0<=96)) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // InternalGo.g:1416:3: ( (lv_statement_0_0= rulestatement ) ) otherlv_1= ';'
            	    {
            	    // InternalGo.g:1416:3: ( (lv_statement_0_0= rulestatement ) )
            	    // InternalGo.g:1417:4: (lv_statement_0_0= rulestatement )
            	    {
            	    // InternalGo.g:1417:4: (lv_statement_0_0= rulestatement )
            	    // InternalGo.g:1418:5: lv_statement_0_0= rulestatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStatementListAccess().getStatementStatementParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_statement_0_0=rulestatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStatementListRule());
            	      					}
            	      					set(
            	      						current,
            	      						"statement",
            	      						lv_statement_0_0,
            	      						"org.xtext.Go.statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }

            	    otherlv_1=(Token)match(input,44,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(otherlv_1, grammarAccess.getStatementListAccess().getSemicolonKeyword_1());
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestatementList"


    // $ANTLR start "entryRulestatement"
    // InternalGo.g:1443:1: entryRulestatement returns [EObject current=null] : iv_rulestatement= rulestatement EOF ;
    public final EObject entryRulestatement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestatement = null;


        try {
            // InternalGo.g:1443:50: (iv_rulestatement= rulestatement EOF )
            // InternalGo.g:1444:2: iv_rulestatement= rulestatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestatement=rulestatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestatement"


    // $ANTLR start "rulestatement"
    // InternalGo.g:1450:1: rulestatement returns [EObject current=null] : ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_labeledStmt_1_0= rulelabeledStmt ) ) | ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) | ( (lv_goStmt_3_0= rulegoStmt ) ) | ( (lv_returnStmt_4_0= rulereturnStmt ) ) | ( (lv_breakStmt_5_0= rulebreakStmt ) ) | ( (lv_continueStmt_6_0= rulecontinueStmt ) ) | ( (lv_gotoStmt_7_0= rulegotoStmt ) ) | ( (lv_fallthroughStmt_8_0= rulefallthroughStmt ) ) | ( (lv_block_9_0= ruleblock ) ) | ( (lv_ifStmt_10_0= ruleifStmt ) ) | ( (lv_switchStmt_11_0= ruleswitchStmt ) ) | ( (lv_selectStmt_12_0= ruleselectStmt ) ) | ( (lv_forStmt_13_0= ruleforStmt ) ) | ( (lv_deferStmt_14_0= ruledeferStmt ) ) ) ;
    public final EObject rulestatement() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_0_0 = null;

        EObject lv_labeledStmt_1_0 = null;

        EObject lv_simpleStmt_2_0 = null;

        EObject lv_goStmt_3_0 = null;

        EObject lv_returnStmt_4_0 = null;

        AntlrDatatypeRuleToken lv_breakStmt_5_0 = null;

        AntlrDatatypeRuleToken lv_continueStmt_6_0 = null;

        AntlrDatatypeRuleToken lv_gotoStmt_7_0 = null;

        AntlrDatatypeRuleToken lv_fallthroughStmt_8_0 = null;

        EObject lv_block_9_0 = null;

        EObject lv_ifStmt_10_0 = null;

        EObject lv_switchStmt_11_0 = null;

        EObject lv_selectStmt_12_0 = null;

        EObject lv_forStmt_13_0 = null;

        EObject lv_deferStmt_14_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1456:2: ( ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_labeledStmt_1_0= rulelabeledStmt ) ) | ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) | ( (lv_goStmt_3_0= rulegoStmt ) ) | ( (lv_returnStmt_4_0= rulereturnStmt ) ) | ( (lv_breakStmt_5_0= rulebreakStmt ) ) | ( (lv_continueStmt_6_0= rulecontinueStmt ) ) | ( (lv_gotoStmt_7_0= rulegotoStmt ) ) | ( (lv_fallthroughStmt_8_0= rulefallthroughStmt ) ) | ( (lv_block_9_0= ruleblock ) ) | ( (lv_ifStmt_10_0= ruleifStmt ) ) | ( (lv_switchStmt_11_0= ruleswitchStmt ) ) | ( (lv_selectStmt_12_0= ruleselectStmt ) ) | ( (lv_forStmt_13_0= ruleforStmt ) ) | ( (lv_deferStmt_14_0= ruledeferStmt ) ) ) )
            // InternalGo.g:1457:2: ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_labeledStmt_1_0= rulelabeledStmt ) ) | ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) | ( (lv_goStmt_3_0= rulegoStmt ) ) | ( (lv_returnStmt_4_0= rulereturnStmt ) ) | ( (lv_breakStmt_5_0= rulebreakStmt ) ) | ( (lv_continueStmt_6_0= rulecontinueStmt ) ) | ( (lv_gotoStmt_7_0= rulegotoStmt ) ) | ( (lv_fallthroughStmt_8_0= rulefallthroughStmt ) ) | ( (lv_block_9_0= ruleblock ) ) | ( (lv_ifStmt_10_0= ruleifStmt ) ) | ( (lv_switchStmt_11_0= ruleswitchStmt ) ) | ( (lv_selectStmt_12_0= ruleselectStmt ) ) | ( (lv_forStmt_13_0= ruleforStmt ) ) | ( (lv_deferStmt_14_0= ruledeferStmt ) ) )
            {
            // InternalGo.g:1457:2: ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_labeledStmt_1_0= rulelabeledStmt ) ) | ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) | ( (lv_goStmt_3_0= rulegoStmt ) ) | ( (lv_returnStmt_4_0= rulereturnStmt ) ) | ( (lv_breakStmt_5_0= rulebreakStmt ) ) | ( (lv_continueStmt_6_0= rulecontinueStmt ) ) | ( (lv_gotoStmt_7_0= rulegotoStmt ) ) | ( (lv_fallthroughStmt_8_0= rulefallthroughStmt ) ) | ( (lv_block_9_0= ruleblock ) ) | ( (lv_ifStmt_10_0= ruleifStmt ) ) | ( (lv_switchStmt_11_0= ruleswitchStmt ) ) | ( (lv_selectStmt_12_0= ruleselectStmt ) ) | ( (lv_forStmt_13_0= ruleforStmt ) ) | ( (lv_deferStmt_14_0= ruledeferStmt ) ) )
            int alt23=15;
            alt23 = dfa23.predict(input);
            switch (alt23) {
                case 1 :
                    // InternalGo.g:1458:3: ( (lv_declaration_0_0= ruledeclaration ) )
                    {
                    // InternalGo.g:1458:3: ( (lv_declaration_0_0= ruledeclaration ) )
                    // InternalGo.g:1459:4: (lv_declaration_0_0= ruledeclaration )
                    {
                    // InternalGo.g:1459:4: (lv_declaration_0_0= ruledeclaration )
                    // InternalGo.g:1460:5: lv_declaration_0_0= ruledeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_0_0=ruledeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"declaration",
                      						lv_declaration_0_0,
                      						"org.xtext.Go.declaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1478:3: ( (lv_labeledStmt_1_0= rulelabeledStmt ) )
                    {
                    // InternalGo.g:1478:3: ( (lv_labeledStmt_1_0= rulelabeledStmt ) )
                    // InternalGo.g:1479:4: (lv_labeledStmt_1_0= rulelabeledStmt )
                    {
                    // InternalGo.g:1479:4: (lv_labeledStmt_1_0= rulelabeledStmt )
                    // InternalGo.g:1480:5: lv_labeledStmt_1_0= rulelabeledStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getLabeledStmtLabeledStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_labeledStmt_1_0=rulelabeledStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"labeledStmt",
                      						lv_labeledStmt_1_0,
                      						"org.xtext.Go.labeledStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:1498:3: ( (lv_simpleStmt_2_0= rulesimpleStmt ) )
                    {
                    // InternalGo.g:1498:3: ( (lv_simpleStmt_2_0= rulesimpleStmt ) )
                    // InternalGo.g:1499:4: (lv_simpleStmt_2_0= rulesimpleStmt )
                    {
                    // InternalGo.g:1499:4: (lv_simpleStmt_2_0= rulesimpleStmt )
                    // InternalGo.g:1500:5: lv_simpleStmt_2_0= rulesimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSimpleStmtSimpleStmtParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_simpleStmt_2_0=rulesimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"simpleStmt",
                      						lv_simpleStmt_2_0,
                      						"org.xtext.Go.simpleStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:1518:3: ( (lv_goStmt_3_0= rulegoStmt ) )
                    {
                    // InternalGo.g:1518:3: ( (lv_goStmt_3_0= rulegoStmt ) )
                    // InternalGo.g:1519:4: (lv_goStmt_3_0= rulegoStmt )
                    {
                    // InternalGo.g:1519:4: (lv_goStmt_3_0= rulegoStmt )
                    // InternalGo.g:1520:5: lv_goStmt_3_0= rulegoStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getGoStmtGoStmtParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_goStmt_3_0=rulegoStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"goStmt",
                      						lv_goStmt_3_0,
                      						"org.xtext.Go.goStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:1538:3: ( (lv_returnStmt_4_0= rulereturnStmt ) )
                    {
                    // InternalGo.g:1538:3: ( (lv_returnStmt_4_0= rulereturnStmt ) )
                    // InternalGo.g:1539:4: (lv_returnStmt_4_0= rulereturnStmt )
                    {
                    // InternalGo.g:1539:4: (lv_returnStmt_4_0= rulereturnStmt )
                    // InternalGo.g:1540:5: lv_returnStmt_4_0= rulereturnStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getReturnStmtReturnStmtParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnStmt_4_0=rulereturnStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"returnStmt",
                      						lv_returnStmt_4_0,
                      						"org.xtext.Go.returnStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:1558:3: ( (lv_breakStmt_5_0= rulebreakStmt ) )
                    {
                    // InternalGo.g:1558:3: ( (lv_breakStmt_5_0= rulebreakStmt ) )
                    // InternalGo.g:1559:4: (lv_breakStmt_5_0= rulebreakStmt )
                    {
                    // InternalGo.g:1559:4: (lv_breakStmt_5_0= rulebreakStmt )
                    // InternalGo.g:1560:5: lv_breakStmt_5_0= rulebreakStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getBreakStmtBreakStmtParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_breakStmt_5_0=rulebreakStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"breakStmt",
                      						lv_breakStmt_5_0,
                      						"org.xtext.Go.breakStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalGo.g:1578:3: ( (lv_continueStmt_6_0= rulecontinueStmt ) )
                    {
                    // InternalGo.g:1578:3: ( (lv_continueStmt_6_0= rulecontinueStmt ) )
                    // InternalGo.g:1579:4: (lv_continueStmt_6_0= rulecontinueStmt )
                    {
                    // InternalGo.g:1579:4: (lv_continueStmt_6_0= rulecontinueStmt )
                    // InternalGo.g:1580:5: lv_continueStmt_6_0= rulecontinueStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContinueStmtContinueStmtParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_continueStmt_6_0=rulecontinueStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"continueStmt",
                      						lv_continueStmt_6_0,
                      						"org.xtext.Go.continueStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalGo.g:1598:3: ( (lv_gotoStmt_7_0= rulegotoStmt ) )
                    {
                    // InternalGo.g:1598:3: ( (lv_gotoStmt_7_0= rulegotoStmt ) )
                    // InternalGo.g:1599:4: (lv_gotoStmt_7_0= rulegotoStmt )
                    {
                    // InternalGo.g:1599:4: (lv_gotoStmt_7_0= rulegotoStmt )
                    // InternalGo.g:1600:5: lv_gotoStmt_7_0= rulegotoStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getGotoStmtGotoStmtParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_gotoStmt_7_0=rulegotoStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"gotoStmt",
                      						lv_gotoStmt_7_0,
                      						"org.xtext.Go.gotoStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalGo.g:1618:3: ( (lv_fallthroughStmt_8_0= rulefallthroughStmt ) )
                    {
                    // InternalGo.g:1618:3: ( (lv_fallthroughStmt_8_0= rulefallthroughStmt ) )
                    // InternalGo.g:1619:4: (lv_fallthroughStmt_8_0= rulefallthroughStmt )
                    {
                    // InternalGo.g:1619:4: (lv_fallthroughStmt_8_0= rulefallthroughStmt )
                    // InternalGo.g:1620:5: lv_fallthroughStmt_8_0= rulefallthroughStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getFallthroughStmtFallthroughStmtParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_fallthroughStmt_8_0=rulefallthroughStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"fallthroughStmt",
                      						lv_fallthroughStmt_8_0,
                      						"org.xtext.Go.fallthroughStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalGo.g:1638:3: ( (lv_block_9_0= ruleblock ) )
                    {
                    // InternalGo.g:1638:3: ( (lv_block_9_0= ruleblock ) )
                    // InternalGo.g:1639:4: (lv_block_9_0= ruleblock )
                    {
                    // InternalGo.g:1639:4: (lv_block_9_0= ruleblock )
                    // InternalGo.g:1640:5: lv_block_9_0= ruleblock
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getBlockBlockParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_block_9_0=ruleblock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"block",
                      						lv_block_9_0,
                      						"org.xtext.Go.block");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalGo.g:1658:3: ( (lv_ifStmt_10_0= ruleifStmt ) )
                    {
                    // InternalGo.g:1658:3: ( (lv_ifStmt_10_0= ruleifStmt ) )
                    // InternalGo.g:1659:4: (lv_ifStmt_10_0= ruleifStmt )
                    {
                    // InternalGo.g:1659:4: (lv_ifStmt_10_0= ruleifStmt )
                    // InternalGo.g:1660:5: lv_ifStmt_10_0= ruleifStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getIfStmtIfStmtParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ifStmt_10_0=ruleifStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"ifStmt",
                      						lv_ifStmt_10_0,
                      						"org.xtext.Go.ifStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalGo.g:1678:3: ( (lv_switchStmt_11_0= ruleswitchStmt ) )
                    {
                    // InternalGo.g:1678:3: ( (lv_switchStmt_11_0= ruleswitchStmt ) )
                    // InternalGo.g:1679:4: (lv_switchStmt_11_0= ruleswitchStmt )
                    {
                    // InternalGo.g:1679:4: (lv_switchStmt_11_0= ruleswitchStmt )
                    // InternalGo.g:1680:5: lv_switchStmt_11_0= ruleswitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSwitchStmtSwitchStmtParserRuleCall_11_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_switchStmt_11_0=ruleswitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"switchStmt",
                      						lv_switchStmt_11_0,
                      						"org.xtext.Go.switchStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalGo.g:1698:3: ( (lv_selectStmt_12_0= ruleselectStmt ) )
                    {
                    // InternalGo.g:1698:3: ( (lv_selectStmt_12_0= ruleselectStmt ) )
                    // InternalGo.g:1699:4: (lv_selectStmt_12_0= ruleselectStmt )
                    {
                    // InternalGo.g:1699:4: (lv_selectStmt_12_0= ruleselectStmt )
                    // InternalGo.g:1700:5: lv_selectStmt_12_0= ruleselectStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSelectStmtSelectStmtParserRuleCall_12_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_selectStmt_12_0=ruleselectStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"selectStmt",
                      						lv_selectStmt_12_0,
                      						"org.xtext.Go.selectStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalGo.g:1718:3: ( (lv_forStmt_13_0= ruleforStmt ) )
                    {
                    // InternalGo.g:1718:3: ( (lv_forStmt_13_0= ruleforStmt ) )
                    // InternalGo.g:1719:4: (lv_forStmt_13_0= ruleforStmt )
                    {
                    // InternalGo.g:1719:4: (lv_forStmt_13_0= ruleforStmt )
                    // InternalGo.g:1720:5: lv_forStmt_13_0= ruleforStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getForStmtForStmtParserRuleCall_13_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_forStmt_13_0=ruleforStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"forStmt",
                      						lv_forStmt_13_0,
                      						"org.xtext.Go.forStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalGo.g:1738:3: ( (lv_deferStmt_14_0= ruledeferStmt ) )
                    {
                    // InternalGo.g:1738:3: ( (lv_deferStmt_14_0= ruledeferStmt ) )
                    // InternalGo.g:1739:4: (lv_deferStmt_14_0= ruledeferStmt )
                    {
                    // InternalGo.g:1739:4: (lv_deferStmt_14_0= ruledeferStmt )
                    // InternalGo.g:1740:5: lv_deferStmt_14_0= ruledeferStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getDeferStmtDeferStmtParserRuleCall_14_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_deferStmt_14_0=ruledeferStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"deferStmt",
                      						lv_deferStmt_14_0,
                      						"org.xtext.Go.deferStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestatement"


    // $ANTLR start "entryRulesimpleStmt"
    // InternalGo.g:1761:1: entryRulesimpleStmt returns [EObject current=null] : iv_rulesimpleStmt= rulesimpleStmt EOF ;
    public final EObject entryRulesimpleStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulesimpleStmt = null;


        try {
            // InternalGo.g:1761:51: (iv_rulesimpleStmt= rulesimpleStmt EOF )
            // InternalGo.g:1762:2: iv_rulesimpleStmt= rulesimpleStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulesimpleStmt=rulesimpleStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesimpleStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulesimpleStmt"


    // $ANTLR start "rulesimpleStmt"
    // InternalGo.g:1768:1: rulesimpleStmt returns [EObject current=null] : ( ( (lv_sendStmt_0_0= rulesendStmt ) ) | ( (lv_expressionStmt_1_0= ruleexpressionStmt ) ) | ( (lv_incDecStmt_2_0= ruleincDecStmt ) ) | ( (lv_assignment_3_0= ruleassignment ) ) | ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) ) | ( (lv_emptyStmt_5_0= ruleemptyStmt ) ) ) ;
    public final EObject rulesimpleStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_sendStmt_0_0 = null;

        EObject lv_expressionStmt_1_0 = null;

        EObject lv_incDecStmt_2_0 = null;

        EObject lv_assignment_3_0 = null;

        EObject lv_shortVarDecl_4_0 = null;

        AntlrDatatypeRuleToken lv_emptyStmt_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1774:2: ( ( ( (lv_sendStmt_0_0= rulesendStmt ) ) | ( (lv_expressionStmt_1_0= ruleexpressionStmt ) ) | ( (lv_incDecStmt_2_0= ruleincDecStmt ) ) | ( (lv_assignment_3_0= ruleassignment ) ) | ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) ) | ( (lv_emptyStmt_5_0= ruleemptyStmt ) ) ) )
            // InternalGo.g:1775:2: ( ( (lv_sendStmt_0_0= rulesendStmt ) ) | ( (lv_expressionStmt_1_0= ruleexpressionStmt ) ) | ( (lv_incDecStmt_2_0= ruleincDecStmt ) ) | ( (lv_assignment_3_0= ruleassignment ) ) | ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) ) | ( (lv_emptyStmt_5_0= ruleemptyStmt ) ) )
            {
            // InternalGo.g:1775:2: ( ( (lv_sendStmt_0_0= rulesendStmt ) ) | ( (lv_expressionStmt_1_0= ruleexpressionStmt ) ) | ( (lv_incDecStmt_2_0= ruleincDecStmt ) ) | ( (lv_assignment_3_0= ruleassignment ) ) | ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) ) | ( (lv_emptyStmt_5_0= ruleemptyStmt ) ) )
            int alt24=6;
            alt24 = dfa24.predict(input);
            switch (alt24) {
                case 1 :
                    // InternalGo.g:1776:3: ( (lv_sendStmt_0_0= rulesendStmt ) )
                    {
                    // InternalGo.g:1776:3: ( (lv_sendStmt_0_0= rulesendStmt ) )
                    // InternalGo.g:1777:4: (lv_sendStmt_0_0= rulesendStmt )
                    {
                    // InternalGo.g:1777:4: (lv_sendStmt_0_0= rulesendStmt )
                    // InternalGo.g:1778:5: lv_sendStmt_0_0= rulesendStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSendStmtSendStmtParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_sendStmt_0_0=rulesendStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"sendStmt",
                      						lv_sendStmt_0_0,
                      						"org.xtext.Go.sendStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1796:3: ( (lv_expressionStmt_1_0= ruleexpressionStmt ) )
                    {
                    // InternalGo.g:1796:3: ( (lv_expressionStmt_1_0= ruleexpressionStmt ) )
                    // InternalGo.g:1797:4: (lv_expressionStmt_1_0= ruleexpressionStmt )
                    {
                    // InternalGo.g:1797:4: (lv_expressionStmt_1_0= ruleexpressionStmt )
                    // InternalGo.g:1798:5: lv_expressionStmt_1_0= ruleexpressionStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getExpressionStmtExpressionStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressionStmt_1_0=ruleexpressionStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"expressionStmt",
                      						lv_expressionStmt_1_0,
                      						"org.xtext.Go.expressionStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:1816:3: ( (lv_incDecStmt_2_0= ruleincDecStmt ) )
                    {
                    // InternalGo.g:1816:3: ( (lv_incDecStmt_2_0= ruleincDecStmt ) )
                    // InternalGo.g:1817:4: (lv_incDecStmt_2_0= ruleincDecStmt )
                    {
                    // InternalGo.g:1817:4: (lv_incDecStmt_2_0= ruleincDecStmt )
                    // InternalGo.g:1818:5: lv_incDecStmt_2_0= ruleincDecStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getIncDecStmtIncDecStmtParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_incDecStmt_2_0=ruleincDecStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"incDecStmt",
                      						lv_incDecStmt_2_0,
                      						"org.xtext.Go.incDecStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:1836:3: ( (lv_assignment_3_0= ruleassignment ) )
                    {
                    // InternalGo.g:1836:3: ( (lv_assignment_3_0= ruleassignment ) )
                    // InternalGo.g:1837:4: (lv_assignment_3_0= ruleassignment )
                    {
                    // InternalGo.g:1837:4: (lv_assignment_3_0= ruleassignment )
                    // InternalGo.g:1838:5: lv_assignment_3_0= ruleassignment
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getAssignmentAssignmentParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_assignment_3_0=ruleassignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"assignment",
                      						lv_assignment_3_0,
                      						"org.xtext.Go.assignment");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:1856:3: ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) )
                    {
                    // InternalGo.g:1856:3: ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) )
                    // InternalGo.g:1857:4: (lv_shortVarDecl_4_0= ruleshortVarDecl )
                    {
                    // InternalGo.g:1857:4: (lv_shortVarDecl_4_0= ruleshortVarDecl )
                    // InternalGo.g:1858:5: lv_shortVarDecl_4_0= ruleshortVarDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_shortVarDecl_4_0=ruleshortVarDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"shortVarDecl",
                      						lv_shortVarDecl_4_0,
                      						"org.xtext.Go.shortVarDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:1876:3: ( (lv_emptyStmt_5_0= ruleemptyStmt ) )
                    {
                    // InternalGo.g:1876:3: ( (lv_emptyStmt_5_0= ruleemptyStmt ) )
                    // InternalGo.g:1877:4: (lv_emptyStmt_5_0= ruleemptyStmt )
                    {
                    // InternalGo.g:1877:4: (lv_emptyStmt_5_0= ruleemptyStmt )
                    // InternalGo.g:1878:5: lv_emptyStmt_5_0= ruleemptyStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getEmptyStmtEmptyStmtParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_emptyStmt_5_0=ruleemptyStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"emptyStmt",
                      						lv_emptyStmt_5_0,
                      						"org.xtext.Go.emptyStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulesimpleStmt"


    // $ANTLR start "entryRuleexpressionStmt"
    // InternalGo.g:1899:1: entryRuleexpressionStmt returns [EObject current=null] : iv_ruleexpressionStmt= ruleexpressionStmt EOF ;
    public final EObject entryRuleexpressionStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexpressionStmt = null;


        try {
            // InternalGo.g:1899:55: (iv_ruleexpressionStmt= ruleexpressionStmt EOF )
            // InternalGo.g:1900:2: iv_ruleexpressionStmt= ruleexpressionStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexpressionStmt=ruleexpressionStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpressionStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexpressionStmt"


    // $ANTLR start "ruleexpressionStmt"
    // InternalGo.g:1906:1: ruleexpressionStmt returns [EObject current=null] : ( (lv_expression_0_0= ruleexpression ) ) ;
    public final EObject ruleexpressionStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1912:2: ( ( (lv_expression_0_0= ruleexpression ) ) )
            // InternalGo.g:1913:2: ( (lv_expression_0_0= ruleexpression ) )
            {
            // InternalGo.g:1913:2: ( (lv_expression_0_0= ruleexpression ) )
            // InternalGo.g:1914:3: (lv_expression_0_0= ruleexpression )
            {
            // InternalGo.g:1914:3: (lv_expression_0_0= ruleexpression )
            // InternalGo.g:1915:4: lv_expression_0_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getExpressionStmtAccess().getExpressionExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_expression_0_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getExpressionStmtRule());
              				}
              				set(
              					current,
              					"expression",
              					lv_expression_0_0,
              					"org.xtext.Go.expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexpressionStmt"


    // $ANTLR start "entryRulesendStmt"
    // InternalGo.g:1935:1: entryRulesendStmt returns [EObject current=null] : iv_rulesendStmt= rulesendStmt EOF ;
    public final EObject entryRulesendStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulesendStmt = null;


        try {
            // InternalGo.g:1935:49: (iv_rulesendStmt= rulesendStmt EOF )
            // InternalGo.g:1936:2: iv_rulesendStmt= rulesendStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSendStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulesendStmt=rulesendStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesendStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulesendStmt"


    // $ANTLR start "rulesendStmt"
    // InternalGo.g:1942:1: rulesendStmt returns [EObject current=null] : ( ( (lv_expression_0_0= ruleexpression ) ) otherlv_1= '<-' ( (lv_expression_2_0= ruleexpression ) ) ) ;
    public final EObject rulesendStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1948:2: ( ( ( (lv_expression_0_0= ruleexpression ) ) otherlv_1= '<-' ( (lv_expression_2_0= ruleexpression ) ) ) )
            // InternalGo.g:1949:2: ( ( (lv_expression_0_0= ruleexpression ) ) otherlv_1= '<-' ( (lv_expression_2_0= ruleexpression ) ) )
            {
            // InternalGo.g:1949:2: ( ( (lv_expression_0_0= ruleexpression ) ) otherlv_1= '<-' ( (lv_expression_2_0= ruleexpression ) ) )
            // InternalGo.g:1950:3: ( (lv_expression_0_0= ruleexpression ) ) otherlv_1= '<-' ( (lv_expression_2_0= ruleexpression ) )
            {
            // InternalGo.g:1950:3: ( (lv_expression_0_0= ruleexpression ) )
            // InternalGo.g:1951:4: (lv_expression_0_0= ruleexpression )
            {
            // InternalGo.g:1951:4: (lv_expression_0_0= ruleexpression )
            // InternalGo.g:1952:5: lv_expression_0_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_24);
            lv_expression_0_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSendStmtRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_0_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,58,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSendStmtAccess().getLessThanSignHyphenMinusKeyword_1());
              		
            }
            // InternalGo.g:1973:3: ( (lv_expression_2_0= ruleexpression ) )
            // InternalGo.g:1974:4: (lv_expression_2_0= ruleexpression )
            {
            // InternalGo.g:1974:4: (lv_expression_2_0= ruleexpression )
            // InternalGo.g:1975:5: lv_expression_2_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSendStmtRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulesendStmt"


    // $ANTLR start "entryRuleincDecStmt"
    // InternalGo.g:1996:1: entryRuleincDecStmt returns [EObject current=null] : iv_ruleincDecStmt= ruleincDecStmt EOF ;
    public final EObject entryRuleincDecStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleincDecStmt = null;


        try {
            // InternalGo.g:1996:51: (iv_ruleincDecStmt= ruleincDecStmt EOF )
            // InternalGo.g:1997:2: iv_ruleincDecStmt= ruleincDecStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIncDecStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleincDecStmt=ruleincDecStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleincDecStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleincDecStmt"


    // $ANTLR start "ruleincDecStmt"
    // InternalGo.g:2003:1: ruleincDecStmt returns [EObject current=null] : ( ( (lv_expression_0_0= ruleexpression ) ) (otherlv_1= '++' | otherlv_2= '--' ) ) ;
    public final EObject ruleincDecStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_expression_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2009:2: ( ( ( (lv_expression_0_0= ruleexpression ) ) (otherlv_1= '++' | otherlv_2= '--' ) ) )
            // InternalGo.g:2010:2: ( ( (lv_expression_0_0= ruleexpression ) ) (otherlv_1= '++' | otherlv_2= '--' ) )
            {
            // InternalGo.g:2010:2: ( ( (lv_expression_0_0= ruleexpression ) ) (otherlv_1= '++' | otherlv_2= '--' ) )
            // InternalGo.g:2011:3: ( (lv_expression_0_0= ruleexpression ) ) (otherlv_1= '++' | otherlv_2= '--' )
            {
            // InternalGo.g:2011:3: ( (lv_expression_0_0= ruleexpression ) )
            // InternalGo.g:2012:4: (lv_expression_0_0= ruleexpression )
            {
            // InternalGo.g:2012:4: (lv_expression_0_0= ruleexpression )
            // InternalGo.g:2013:5: lv_expression_0_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIncDecStmtAccess().getExpressionExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_expression_0_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIncDecStmtRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_0_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2030:3: (otherlv_1= '++' | otherlv_2= '--' )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==59) ) {
                alt25=1;
            }
            else if ( (LA25_0==60) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalGo.g:2031:4: otherlv_1= '++'
                    {
                    otherlv_1=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getIncDecStmtAccess().getPlusSignPlusSignKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:2036:4: otherlv_2= '--'
                    {
                    otherlv_2=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getIncDecStmtAccess().getHyphenMinusHyphenMinusKeyword_1_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleincDecStmt"


    // $ANTLR start "entryRuleassignment"
    // InternalGo.g:2045:1: entryRuleassignment returns [EObject current=null] : iv_ruleassignment= ruleassignment EOF ;
    public final EObject entryRuleassignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleassignment = null;


        try {
            // InternalGo.g:2045:51: (iv_ruleassignment= ruleassignment EOF )
            // InternalGo.g:2046:2: iv_ruleassignment= ruleassignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleassignment=ruleassignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleassignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleassignment"


    // $ANTLR start "ruleassignment"
    // InternalGo.g:2052:1: ruleassignment returns [EObject current=null] : ( ( (lv_expressionList_0_0= ruleexpressionList ) ) ( (lv_assign_op_1_0= ruleassign_op ) ) ( (lv_expressionList_2_0= ruleexpressionList ) ) ) ;
    public final EObject ruleassignment() throws RecognitionException {
        EObject current = null;

        EObject lv_expressionList_0_0 = null;

        AntlrDatatypeRuleToken lv_assign_op_1_0 = null;

        EObject lv_expressionList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2058:2: ( ( ( (lv_expressionList_0_0= ruleexpressionList ) ) ( (lv_assign_op_1_0= ruleassign_op ) ) ( (lv_expressionList_2_0= ruleexpressionList ) ) ) )
            // InternalGo.g:2059:2: ( ( (lv_expressionList_0_0= ruleexpressionList ) ) ( (lv_assign_op_1_0= ruleassign_op ) ) ( (lv_expressionList_2_0= ruleexpressionList ) ) )
            {
            // InternalGo.g:2059:2: ( ( (lv_expressionList_0_0= ruleexpressionList ) ) ( (lv_assign_op_1_0= ruleassign_op ) ) ( (lv_expressionList_2_0= ruleexpressionList ) ) )
            // InternalGo.g:2060:3: ( (lv_expressionList_0_0= ruleexpressionList ) ) ( (lv_assign_op_1_0= ruleassign_op ) ) ( (lv_expressionList_2_0= ruleexpressionList ) )
            {
            // InternalGo.g:2060:3: ( (lv_expressionList_0_0= ruleexpressionList ) )
            // InternalGo.g:2061:4: (lv_expressionList_0_0= ruleexpressionList )
            {
            // InternalGo.g:2061:4: (lv_expressionList_0_0= ruleexpressionList )
            // InternalGo.g:2062:5: lv_expressionList_0_0= ruleexpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionListExpressionListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_expressionList_0_0=ruleexpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"expressionList",
              						lv_expressionList_0_0,
              						"org.xtext.Go.expressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2079:3: ( (lv_assign_op_1_0= ruleassign_op ) )
            // InternalGo.g:2080:4: (lv_assign_op_1_0= ruleassign_op )
            {
            // InternalGo.g:2080:4: (lv_assign_op_1_0= ruleassign_op )
            // InternalGo.g:2081:5: lv_assign_op_1_0= ruleassign_op
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getAssign_opAssign_opParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_14);
            lv_assign_op_1_0=ruleassign_op();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"assign_op",
              						lv_assign_op_1_0,
              						"org.xtext.Go.assign_op");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2098:3: ( (lv_expressionList_2_0= ruleexpressionList ) )
            // InternalGo.g:2099:4: (lv_expressionList_2_0= ruleexpressionList )
            {
            // InternalGo.g:2099:4: (lv_expressionList_2_0= ruleexpressionList )
            // InternalGo.g:2100:5: lv_expressionList_2_0= ruleexpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionListExpressionListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expressionList_2_0=ruleexpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"expressionList",
              						lv_expressionList_2_0,
              						"org.xtext.Go.expressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleassignment"


    // $ANTLR start "entryRuleassign_op"
    // InternalGo.g:2121:1: entryRuleassign_op returns [String current=null] : iv_ruleassign_op= ruleassign_op EOF ;
    public final String entryRuleassign_op() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleassign_op = null;


        try {
            // InternalGo.g:2121:49: (iv_ruleassign_op= ruleassign_op EOF )
            // InternalGo.g:2122:2: iv_ruleassign_op= ruleassign_op EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssign_opRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleassign_op=ruleassign_op();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleassign_op.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleassign_op"


    // $ANTLR start "ruleassign_op"
    // InternalGo.g:2128:1: ruleassign_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '+' | kw= '-' | kw= '|' | kw= '^' | kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )? kw= '=' ) ;
    public final AntlrDatatypeRuleToken ruleassign_op() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:2134:2: ( ( (kw= '+' | kw= '-' | kw= '|' | kw= '^' | kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )? kw= '=' ) )
            // InternalGo.g:2135:2: ( (kw= '+' | kw= '-' | kw= '|' | kw= '^' | kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )? kw= '=' )
            {
            // InternalGo.g:2135:2: ( (kw= '+' | kw= '-' | kw= '|' | kw= '^' | kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )? kw= '=' )
            // InternalGo.g:2136:3: (kw= '+' | kw= '-' | kw= '|' | kw= '^' | kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )? kw= '='
            {
            // InternalGo.g:2136:3: (kw= '+' | kw= '-' | kw= '|' | kw= '^' | kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )?
            int alt26=12;
            switch ( input.LA(1) ) {
                case 61:
                    {
                    alt26=1;
                    }
                    break;
                case 62:
                    {
                    alt26=2;
                    }
                    break;
                case 63:
                    {
                    alt26=3;
                    }
                    break;
                case 64:
                    {
                    alt26=4;
                    }
                    break;
                case 65:
                    {
                    alt26=5;
                    }
                    break;
                case 66:
                    {
                    alt26=6;
                    }
                    break;
                case 67:
                    {
                    alt26=7;
                    }
                    break;
                case 68:
                    {
                    alt26=8;
                    }
                    break;
                case 69:
                    {
                    alt26=9;
                    }
                    break;
                case 70:
                    {
                    alt26=10;
                    }
                    break;
                case 71:
                    {
                    alt26=11;
                    }
                    break;
            }

            switch (alt26) {
                case 1 :
                    // InternalGo.g:2137:4: kw= '+'
                    {
                    kw=(Token)match(input,61,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getPlusSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:2143:4: kw= '-'
                    {
                    kw=(Token)match(input,62,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getHyphenMinusKeyword_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:2149:4: kw= '|'
                    {
                    kw=(Token)match(input,63,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getVerticalLineKeyword_0_2());
                      			
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:2155:4: kw= '^'
                    {
                    kw=(Token)match(input,64,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getCircumflexAccentKeyword_0_3());
                      			
                    }

                    }
                    break;
                case 5 :
                    // InternalGo.g:2161:4: kw= '*'
                    {
                    kw=(Token)match(input,65,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getAsteriskKeyword_0_4());
                      			
                    }

                    }
                    break;
                case 6 :
                    // InternalGo.g:2167:4: kw= '/'
                    {
                    kw=(Token)match(input,66,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getSolidusKeyword_0_5());
                      			
                    }

                    }
                    break;
                case 7 :
                    // InternalGo.g:2173:4: kw= '%'
                    {
                    kw=(Token)match(input,67,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getPercentSignKeyword_0_6());
                      			
                    }

                    }
                    break;
                case 8 :
                    // InternalGo.g:2179:4: kw= '<<'
                    {
                    kw=(Token)match(input,68,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getLessThanSignLessThanSignKeyword_0_7());
                      			
                    }

                    }
                    break;
                case 9 :
                    // InternalGo.g:2185:4: kw= '>>'
                    {
                    kw=(Token)match(input,69,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getGreaterThanSignGreaterThanSignKeyword_0_8());
                      			
                    }

                    }
                    break;
                case 10 :
                    // InternalGo.g:2191:4: kw= '&'
                    {
                    kw=(Token)match(input,70,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getAmpersandKeyword_0_9());
                      			
                    }

                    }
                    break;
                case 11 :
                    // InternalGo.g:2197:4: kw= '&^'
                    {
                    kw=(Token)match(input,71,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getAmpersandCircumflexAccentKeyword_0_10());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getAssign_opAccess().getEqualsSignKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleassign_op"


    // $ANTLR start "entryRuleshortVarDecl"
    // InternalGo.g:2212:1: entryRuleshortVarDecl returns [EObject current=null] : iv_ruleshortVarDecl= ruleshortVarDecl EOF ;
    public final EObject entryRuleshortVarDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleshortVarDecl = null;


        try {
            // InternalGo.g:2212:53: (iv_ruleshortVarDecl= ruleshortVarDecl EOF )
            // InternalGo.g:2213:2: iv_ruleshortVarDecl= ruleshortVarDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShortVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleshortVarDecl=ruleshortVarDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleshortVarDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleshortVarDecl"


    // $ANTLR start "ruleshortVarDecl"
    // InternalGo.g:2219:1: ruleshortVarDecl returns [EObject current=null] : ( ( (lv_identifierList_0_0= ruleidentifierList ) ) otherlv_1= ':=' ( (lv_expressionList_2_0= ruleexpressionList ) ) ) ;
    public final EObject ruleshortVarDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_identifierList_0_0 = null;

        EObject lv_expressionList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2225:2: ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) otherlv_1= ':=' ( (lv_expressionList_2_0= ruleexpressionList ) ) ) )
            // InternalGo.g:2226:2: ( ( (lv_identifierList_0_0= ruleidentifierList ) ) otherlv_1= ':=' ( (lv_expressionList_2_0= ruleexpressionList ) ) )
            {
            // InternalGo.g:2226:2: ( ( (lv_identifierList_0_0= ruleidentifierList ) ) otherlv_1= ':=' ( (lv_expressionList_2_0= ruleexpressionList ) ) )
            // InternalGo.g:2227:3: ( (lv_identifierList_0_0= ruleidentifierList ) ) otherlv_1= ':=' ( (lv_expressionList_2_0= ruleexpressionList ) )
            {
            // InternalGo.g:2227:3: ( (lv_identifierList_0_0= ruleidentifierList ) )
            // InternalGo.g:2228:4: (lv_identifierList_0_0= ruleidentifierList )
            {
            // InternalGo.g:2228:4: (lv_identifierList_0_0= ruleidentifierList )
            // InternalGo.g:2229:5: lv_identifierList_0_0= ruleidentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getShortVarDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_27);
            lv_identifierList_0_0=ruleidentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
              					}
              					set(
              						current,
              						"identifierList",
              						lv_identifierList_0_0,
              						"org.xtext.Go.identifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,72,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1());
              		
            }
            // InternalGo.g:2250:3: ( (lv_expressionList_2_0= ruleexpressionList ) )
            // InternalGo.g:2251:4: (lv_expressionList_2_0= ruleexpressionList )
            {
            // InternalGo.g:2251:4: (lv_expressionList_2_0= ruleexpressionList )
            // InternalGo.g:2252:5: lv_expressionList_2_0= ruleexpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getShortVarDeclAccess().getExpressionListExpressionListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expressionList_2_0=ruleexpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
              					}
              					set(
              						current,
              						"expressionList",
              						lv_expressionList_2_0,
              						"org.xtext.Go.expressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleshortVarDecl"


    // $ANTLR start "entryRuleemptyStmt"
    // InternalGo.g:2273:1: entryRuleemptyStmt returns [String current=null] : iv_ruleemptyStmt= ruleemptyStmt EOF ;
    public final String entryRuleemptyStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleemptyStmt = null;


        try {
            // InternalGo.g:2273:49: (iv_ruleemptyStmt= ruleemptyStmt EOF )
            // InternalGo.g:2274:2: iv_ruleemptyStmt= ruleemptyStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleemptyStmt=ruleemptyStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleemptyStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleemptyStmt"


    // $ANTLR start "ruleemptyStmt"
    // InternalGo.g:2280:1: ruleemptyStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_WS_0= RULE_WS ;
    public final AntlrDatatypeRuleToken ruleemptyStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_WS_0=null;


        	enterRule();

        try {
            // InternalGo.g:2286:2: (this_WS_0= RULE_WS )
            // InternalGo.g:2287:2: this_WS_0= RULE_WS
            {
            this_WS_0=(Token)match(input,RULE_WS,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_WS_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_WS_0, grammarAccess.getEmptyStmtAccess().getWSTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleemptyStmt"


    // $ANTLR start "entryRulelabeledStmt"
    // InternalGo.g:2297:1: entryRulelabeledStmt returns [EObject current=null] : iv_rulelabeledStmt= rulelabeledStmt EOF ;
    public final EObject entryRulelabeledStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulelabeledStmt = null;


        try {
            // InternalGo.g:2297:52: (iv_rulelabeledStmt= rulelabeledStmt EOF )
            // InternalGo.g:2298:2: iv_rulelabeledStmt= rulelabeledStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabeledStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulelabeledStmt=rulelabeledStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelabeledStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulelabeledStmt"


    // $ANTLR start "rulelabeledStmt"
    // InternalGo.g:2304:1: rulelabeledStmt returns [EObject current=null] : (this_IDENTIFIER_0= RULE_IDENTIFIER otherlv_1= ':' ( (lv_statement_2_0= rulestatement ) ) ) ;
    public final EObject rulelabeledStmt() throws RecognitionException {
        EObject current = null;

        Token this_IDENTIFIER_0=null;
        Token otherlv_1=null;
        EObject lv_statement_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2310:2: ( (this_IDENTIFIER_0= RULE_IDENTIFIER otherlv_1= ':' ( (lv_statement_2_0= rulestatement ) ) ) )
            // InternalGo.g:2311:2: (this_IDENTIFIER_0= RULE_IDENTIFIER otherlv_1= ':' ( (lv_statement_2_0= rulestatement ) ) )
            {
            // InternalGo.g:2311:2: (this_IDENTIFIER_0= RULE_IDENTIFIER otherlv_1= ':' ( (lv_statement_2_0= rulestatement ) ) )
            // InternalGo.g:2312:3: this_IDENTIFIER_0= RULE_IDENTIFIER otherlv_1= ':' ( (lv_statement_2_0= rulestatement ) )
            {
            this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_IDENTIFIER_0, grammarAccess.getLabeledStmtAccess().getIDENTIFIERTerminalRuleCall_0());
              		
            }
            otherlv_1=(Token)match(input,73,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLabeledStmtAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:2320:3: ( (lv_statement_2_0= rulestatement ) )
            // InternalGo.g:2321:4: (lv_statement_2_0= rulestatement )
            {
            // InternalGo.g:2321:4: (lv_statement_2_0= rulestatement )
            // InternalGo.g:2322:5: lv_statement_2_0= rulestatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLabeledStmtAccess().getStatementStatementParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statement_2_0=rulestatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLabeledStmtRule());
              					}
              					set(
              						current,
              						"statement",
              						lv_statement_2_0,
              						"org.xtext.Go.statement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulelabeledStmt"


    // $ANTLR start "entryRulereturnStmt"
    // InternalGo.g:2343:1: entryRulereturnStmt returns [EObject current=null] : iv_rulereturnStmt= rulereturnStmt EOF ;
    public final EObject entryRulereturnStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulereturnStmt = null;


        try {
            // InternalGo.g:2343:51: (iv_rulereturnStmt= rulereturnStmt EOF )
            // InternalGo.g:2344:2: iv_rulereturnStmt= rulereturnStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulereturnStmt=rulereturnStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulereturnStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulereturnStmt"


    // $ANTLR start "rulereturnStmt"
    // InternalGo.g:2350:1: rulereturnStmt returns [EObject current=null] : (otherlv_0= 'return' ( (lv_expressionList_1_0= ruleexpressionList ) )? ) ;
    public final EObject rulereturnStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_expressionList_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2356:2: ( (otherlv_0= 'return' ( (lv_expressionList_1_0= ruleexpressionList ) )? ) )
            // InternalGo.g:2357:2: (otherlv_0= 'return' ( (lv_expressionList_1_0= ruleexpressionList ) )? )
            {
            // InternalGo.g:2357:2: (otherlv_0= 'return' ( (lv_expressionList_1_0= ruleexpressionList ) )? )
            // InternalGo.g:2358:3: otherlv_0= 'return' ( (lv_expressionList_1_0= ruleexpressionList ) )?
            {
            otherlv_0=(Token)match(input,74,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getReturnStmtAccess().getReturnKeyword_0());
              		
            }
            // InternalGo.g:2362:3: ( (lv_expressionList_1_0= ruleexpressionList ) )?
            int alt27=2;
            switch ( input.LA(1) ) {
                case RULE_IDENTIFIER:
                case RULE_STRING_LIT:
                case RULE_INT_LIT:
                case RULE_FLOAT_LIT:
                case RULE_IMAGINARY_LIT:
                case RULE_RUNE_LIT:
                case RULE_BINARY_OP:
                case 47:
                case 49:
                case 52:
                case 54:
                case 58:
                case 61:
                case 62:
                case 64:
                case 65:
                case 70:
                case 89:
                case 91:
                case 92:
                case 93:
                case 95:
                case 96:
                    {
                    alt27=1;
                    }
                    break;
                case 44:
                    {
                    int LA27_2 = input.LA(2);

                    if ( (synpred57_InternalGo()) ) {
                        alt27=1;
                    }
                    }
                    break;
                case EOF:
                    {
                    int LA27_3 = input.LA(2);

                    if ( (synpred57_InternalGo()) ) {
                        alt27=1;
                    }
                    }
                    break;
            }

            switch (alt27) {
                case 1 :
                    // InternalGo.g:2363:4: (lv_expressionList_1_0= ruleexpressionList )
                    {
                    // InternalGo.g:2363:4: (lv_expressionList_1_0= ruleexpressionList )
                    // InternalGo.g:2364:5: lv_expressionList_1_0= ruleexpressionList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReturnStmtAccess().getExpressionListExpressionListParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressionList_1_0=ruleexpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReturnStmtRule());
                      					}
                      					set(
                      						current,
                      						"expressionList",
                      						lv_expressionList_1_0,
                      						"org.xtext.Go.expressionList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulereturnStmt"


    // $ANTLR start "entryRulebreakStmt"
    // InternalGo.g:2385:1: entryRulebreakStmt returns [String current=null] : iv_rulebreakStmt= rulebreakStmt EOF ;
    public final String entryRulebreakStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulebreakStmt = null;


        try {
            // InternalGo.g:2385:49: (iv_rulebreakStmt= rulebreakStmt EOF )
            // InternalGo.g:2386:2: iv_rulebreakStmt= rulebreakStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBreakStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulebreakStmt=rulebreakStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulebreakStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulebreakStmt"


    // $ANTLR start "rulebreakStmt"
    // InternalGo.g:2392:1: rulebreakStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'break' (this_IDENTIFIER_1= RULE_IDENTIFIER )? ) ;
    public final AntlrDatatypeRuleToken rulebreakStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_IDENTIFIER_1=null;


        	enterRule();

        try {
            // InternalGo.g:2398:2: ( (kw= 'break' (this_IDENTIFIER_1= RULE_IDENTIFIER )? ) )
            // InternalGo.g:2399:2: (kw= 'break' (this_IDENTIFIER_1= RULE_IDENTIFIER )? )
            {
            // InternalGo.g:2399:2: (kw= 'break' (this_IDENTIFIER_1= RULE_IDENTIFIER )? )
            // InternalGo.g:2400:3: kw= 'break' (this_IDENTIFIER_1= RULE_IDENTIFIER )?
            {
            kw=(Token)match(input,75,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getBreakStmtAccess().getBreakKeyword_0());
              		
            }
            // InternalGo.g:2405:3: (this_IDENTIFIER_1= RULE_IDENTIFIER )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==RULE_IDENTIFIER) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalGo.g:2406:4: this_IDENTIFIER_1= RULE_IDENTIFIER
                    {
                    this_IDENTIFIER_1=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_IDENTIFIER_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_IDENTIFIER_1, grammarAccess.getBreakStmtAccess().getIDENTIFIERTerminalRuleCall_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulebreakStmt"


    // $ANTLR start "entryRulecontinueStmt"
    // InternalGo.g:2418:1: entryRulecontinueStmt returns [String current=null] : iv_rulecontinueStmt= rulecontinueStmt EOF ;
    public final String entryRulecontinueStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulecontinueStmt = null;


        try {
            // InternalGo.g:2418:52: (iv_rulecontinueStmt= rulecontinueStmt EOF )
            // InternalGo.g:2419:2: iv_rulecontinueStmt= rulecontinueStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContinueStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecontinueStmt=rulecontinueStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecontinueStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecontinueStmt"


    // $ANTLR start "rulecontinueStmt"
    // InternalGo.g:2425:1: rulecontinueStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'continue' (this_IDENTIFIER_1= RULE_IDENTIFIER )? ) ;
    public final AntlrDatatypeRuleToken rulecontinueStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_IDENTIFIER_1=null;


        	enterRule();

        try {
            // InternalGo.g:2431:2: ( (kw= 'continue' (this_IDENTIFIER_1= RULE_IDENTIFIER )? ) )
            // InternalGo.g:2432:2: (kw= 'continue' (this_IDENTIFIER_1= RULE_IDENTIFIER )? )
            {
            // InternalGo.g:2432:2: (kw= 'continue' (this_IDENTIFIER_1= RULE_IDENTIFIER )? )
            // InternalGo.g:2433:3: kw= 'continue' (this_IDENTIFIER_1= RULE_IDENTIFIER )?
            {
            kw=(Token)match(input,76,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getContinueStmtAccess().getContinueKeyword_0());
              		
            }
            // InternalGo.g:2438:3: (this_IDENTIFIER_1= RULE_IDENTIFIER )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==RULE_IDENTIFIER) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalGo.g:2439:4: this_IDENTIFIER_1= RULE_IDENTIFIER
                    {
                    this_IDENTIFIER_1=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_IDENTIFIER_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_IDENTIFIER_1, grammarAccess.getContinueStmtAccess().getIDENTIFIERTerminalRuleCall_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecontinueStmt"


    // $ANTLR start "entryRulegotoStmt"
    // InternalGo.g:2451:1: entryRulegotoStmt returns [String current=null] : iv_rulegotoStmt= rulegotoStmt EOF ;
    public final String entryRulegotoStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulegotoStmt = null;


        try {
            // InternalGo.g:2451:48: (iv_rulegotoStmt= rulegotoStmt EOF )
            // InternalGo.g:2452:2: iv_rulegotoStmt= rulegotoStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGotoStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulegotoStmt=rulegotoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulegotoStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulegotoStmt"


    // $ANTLR start "rulegotoStmt"
    // InternalGo.g:2458:1: rulegotoStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'goto' this_IDENTIFIER_1= RULE_IDENTIFIER ) ;
    public final AntlrDatatypeRuleToken rulegotoStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_IDENTIFIER_1=null;


        	enterRule();

        try {
            // InternalGo.g:2464:2: ( (kw= 'goto' this_IDENTIFIER_1= RULE_IDENTIFIER ) )
            // InternalGo.g:2465:2: (kw= 'goto' this_IDENTIFIER_1= RULE_IDENTIFIER )
            {
            // InternalGo.g:2465:2: (kw= 'goto' this_IDENTIFIER_1= RULE_IDENTIFIER )
            // InternalGo.g:2466:3: kw= 'goto' this_IDENTIFIER_1= RULE_IDENTIFIER
            {
            kw=(Token)match(input,77,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getGotoStmtAccess().getGotoKeyword_0());
              		
            }
            this_IDENTIFIER_1=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_IDENTIFIER_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_IDENTIFIER_1, grammarAccess.getGotoStmtAccess().getIDENTIFIERTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulegotoStmt"


    // $ANTLR start "entryRulefallthroughStmt"
    // InternalGo.g:2482:1: entryRulefallthroughStmt returns [String current=null] : iv_rulefallthroughStmt= rulefallthroughStmt EOF ;
    public final String entryRulefallthroughStmt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulefallthroughStmt = null;


        try {
            // InternalGo.g:2482:55: (iv_rulefallthroughStmt= rulefallthroughStmt EOF )
            // InternalGo.g:2483:2: iv_rulefallthroughStmt= rulefallthroughStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFallthroughStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefallthroughStmt=rulefallthroughStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefallthroughStmt.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefallthroughStmt"


    // $ANTLR start "rulefallthroughStmt"
    // InternalGo.g:2489:1: rulefallthroughStmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'fallthrough' ;
    public final AntlrDatatypeRuleToken rulefallthroughStmt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:2495:2: (kw= 'fallthrough' )
            // InternalGo.g:2496:2: kw= 'fallthrough'
            {
            kw=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getFallthroughStmtAccess().getFallthroughKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefallthroughStmt"


    // $ANTLR start "entryRuledeferStmt"
    // InternalGo.g:2504:1: entryRuledeferStmt returns [EObject current=null] : iv_ruledeferStmt= ruledeferStmt EOF ;
    public final EObject entryRuledeferStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledeferStmt = null;


        try {
            // InternalGo.g:2504:50: (iv_ruledeferStmt= ruledeferStmt EOF )
            // InternalGo.g:2505:2: iv_ruledeferStmt= ruledeferStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeferStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledeferStmt=ruledeferStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledeferStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledeferStmt"


    // $ANTLR start "ruledeferStmt"
    // InternalGo.g:2511:1: ruledeferStmt returns [EObject current=null] : (otherlv_0= 'defer' ( (lv_expression_1_0= ruleexpression ) ) ) ;
    public final EObject ruledeferStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_expression_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2517:2: ( (otherlv_0= 'defer' ( (lv_expression_1_0= ruleexpression ) ) ) )
            // InternalGo.g:2518:2: (otherlv_0= 'defer' ( (lv_expression_1_0= ruleexpression ) ) )
            {
            // InternalGo.g:2518:2: (otherlv_0= 'defer' ( (lv_expression_1_0= ruleexpression ) ) )
            // InternalGo.g:2519:3: otherlv_0= 'defer' ( (lv_expression_1_0= ruleexpression ) )
            {
            otherlv_0=(Token)match(input,79,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDeferStmtAccess().getDeferKeyword_0());
              		
            }
            // InternalGo.g:2523:3: ( (lv_expression_1_0= ruleexpression ) )
            // InternalGo.g:2524:4: (lv_expression_1_0= ruleexpression )
            {
            // InternalGo.g:2524:4: (lv_expression_1_0= ruleexpression )
            // InternalGo.g:2525:5: lv_expression_1_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDeferStmtAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_1_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDeferStmtRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_1_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledeferStmt"


    // $ANTLR start "entryRuleifStmt"
    // InternalGo.g:2546:1: entryRuleifStmt returns [EObject current=null] : iv_ruleifStmt= ruleifStmt EOF ;
    public final EObject entryRuleifStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleifStmt = null;


        try {
            // InternalGo.g:2546:47: (iv_ruleifStmt= ruleifStmt EOF )
            // InternalGo.g:2547:2: iv_ruleifStmt= ruleifStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleifStmt=ruleifStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleifStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleifStmt"


    // $ANTLR start "ruleifStmt"
    // InternalGo.g:2553:1: ruleifStmt returns [EObject current=null] : (otherlv_0= 'if' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleexpression ) ) ( (lv_block_4_0= ruleblock ) ) (otherlv_5= 'else' ( ( (lv_ifStmt_6_0= ruleifStmt ) ) | ( (lv_block_7_0= ruleblock ) ) ) )? ) ;
    public final EObject ruleifStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_simpleStmt_1_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_block_4_0 = null;

        EObject lv_ifStmt_6_0 = null;

        EObject lv_block_7_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2559:2: ( (otherlv_0= 'if' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleexpression ) ) ( (lv_block_4_0= ruleblock ) ) (otherlv_5= 'else' ( ( (lv_ifStmt_6_0= ruleifStmt ) ) | ( (lv_block_7_0= ruleblock ) ) ) )? ) )
            // InternalGo.g:2560:2: (otherlv_0= 'if' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleexpression ) ) ( (lv_block_4_0= ruleblock ) ) (otherlv_5= 'else' ( ( (lv_ifStmt_6_0= ruleifStmt ) ) | ( (lv_block_7_0= ruleblock ) ) ) )? )
            {
            // InternalGo.g:2560:2: (otherlv_0= 'if' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleexpression ) ) ( (lv_block_4_0= ruleblock ) ) (otherlv_5= 'else' ( ( (lv_ifStmt_6_0= ruleifStmt ) ) | ( (lv_block_7_0= ruleblock ) ) ) )? )
            // InternalGo.g:2561:3: otherlv_0= 'if' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleexpression ) ) ( (lv_block_4_0= ruleblock ) ) (otherlv_5= 'else' ( ( (lv_ifStmt_6_0= ruleifStmt ) ) | ( (lv_block_7_0= ruleblock ) ) ) )?
            {
            otherlv_0=(Token)match(input,80,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIfStmtAccess().getIfKeyword_0());
              		
            }
            // InternalGo.g:2565:3: ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )?
            int alt30=2;
            alt30 = dfa30.predict(input);
            switch (alt30) {
                case 1 :
                    // InternalGo.g:2566:4: ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';'
                    {
                    // InternalGo.g:2566:4: ( (lv_simpleStmt_1_0= rulesimpleStmt ) )
                    // InternalGo.g:2567:5: (lv_simpleStmt_1_0= rulesimpleStmt )
                    {
                    // InternalGo.g:2567:5: (lv_simpleStmt_1_0= rulesimpleStmt )
                    // InternalGo.g:2568:6: lv_simpleStmt_1_0= rulesimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIfStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_simpleStmt_1_0=rulesimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIfStmtRule());
                      						}
                      						set(
                      							current,
                      							"simpleStmt",
                      							lv_simpleStmt_1_0,
                      							"org.xtext.Go.simpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,44,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getIfStmtAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:2590:3: ( (lv_expression_3_0= ruleexpression ) )
            // InternalGo.g:2591:4: (lv_expression_3_0= ruleexpression )
            {
            // InternalGo.g:2591:4: (lv_expression_3_0= ruleexpression )
            // InternalGo.g:2592:5: lv_expression_3_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_18);
            lv_expression_3_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStmtRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2609:3: ( (lv_block_4_0= ruleblock ) )
            // InternalGo.g:2610:4: (lv_block_4_0= ruleblock )
            {
            // InternalGo.g:2610:4: (lv_block_4_0= ruleblock )
            // InternalGo.g:2611:5: lv_block_4_0= ruleblock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_33);
            lv_block_4_0=ruleblock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStmtRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_4_0,
              						"org.xtext.Go.block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2628:3: (otherlv_5= 'else' ( ( (lv_ifStmt_6_0= ruleifStmt ) ) | ( (lv_block_7_0= ruleblock ) ) ) )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==81) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // InternalGo.g:2629:4: otherlv_5= 'else' ( ( (lv_ifStmt_6_0= ruleifStmt ) ) | ( (lv_block_7_0= ruleblock ) ) )
                    {
                    otherlv_5=(Token)match(input,81,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getIfStmtAccess().getElseKeyword_4_0());
                      			
                    }
                    // InternalGo.g:2633:4: ( ( (lv_ifStmt_6_0= ruleifStmt ) ) | ( (lv_block_7_0= ruleblock ) ) )
                    int alt31=2;
                    int LA31_0 = input.LA(1);

                    if ( (LA31_0==80) ) {
                        alt31=1;
                    }
                    else if ( (LA31_0==56) ) {
                        alt31=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 31, 0, input);

                        throw nvae;
                    }
                    switch (alt31) {
                        case 1 :
                            // InternalGo.g:2634:5: ( (lv_ifStmt_6_0= ruleifStmt ) )
                            {
                            // InternalGo.g:2634:5: ( (lv_ifStmt_6_0= ruleifStmt ) )
                            // InternalGo.g:2635:6: (lv_ifStmt_6_0= ruleifStmt )
                            {
                            // InternalGo.g:2635:6: (lv_ifStmt_6_0= ruleifStmt )
                            // InternalGo.g:2636:7: lv_ifStmt_6_0= ruleifStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getIfStmtAccess().getIfStmtIfStmtParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_ifStmt_6_0=ruleifStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getIfStmtRule());
                              							}
                              							set(
                              								current,
                              								"ifStmt",
                              								lv_ifStmt_6_0,
                              								"org.xtext.Go.ifStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:2654:5: ( (lv_block_7_0= ruleblock ) )
                            {
                            // InternalGo.g:2654:5: ( (lv_block_7_0= ruleblock ) )
                            // InternalGo.g:2655:6: (lv_block_7_0= ruleblock )
                            {
                            // InternalGo.g:2655:6: (lv_block_7_0= ruleblock )
                            // InternalGo.g:2656:7: lv_block_7_0= ruleblock
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_4_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_block_7_0=ruleblock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getIfStmtRule());
                              							}
                              							set(
                              								current,
                              								"block",
                              								lv_block_7_0,
                              								"org.xtext.Go.block");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleifStmt"


    // $ANTLR start "entryRuleswitchStmt"
    // InternalGo.g:2679:1: entryRuleswitchStmt returns [EObject current=null] : iv_ruleswitchStmt= ruleswitchStmt EOF ;
    public final EObject entryRuleswitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleswitchStmt = null;


        try {
            // InternalGo.g:2679:51: (iv_ruleswitchStmt= ruleswitchStmt EOF )
            // InternalGo.g:2680:2: iv_ruleswitchStmt= ruleswitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleswitchStmt=ruleswitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleswitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleswitchStmt"


    // $ANTLR start "ruleswitchStmt"
    // InternalGo.g:2686:1: ruleswitchStmt returns [EObject current=null] : ( ( (lv_exprSwitchStmt_0_0= ruleexprSwitchStmt ) ) | ( (lv_typeSwitchStmt_1_0= ruletypeSwitchStmt ) ) ) ;
    public final EObject ruleswitchStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_exprSwitchStmt_0_0 = null;

        EObject lv_typeSwitchStmt_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2692:2: ( ( ( (lv_exprSwitchStmt_0_0= ruleexprSwitchStmt ) ) | ( (lv_typeSwitchStmt_1_0= ruletypeSwitchStmt ) ) ) )
            // InternalGo.g:2693:2: ( ( (lv_exprSwitchStmt_0_0= ruleexprSwitchStmt ) ) | ( (lv_typeSwitchStmt_1_0= ruletypeSwitchStmt ) ) )
            {
            // InternalGo.g:2693:2: ( ( (lv_exprSwitchStmt_0_0= ruleexprSwitchStmt ) ) | ( (lv_typeSwitchStmt_1_0= ruletypeSwitchStmt ) ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==82) ) {
                int LA33_1 = input.LA(2);

                if ( (synpred63_InternalGo()) ) {
                    alt33=1;
                }
                else if ( (true) ) {
                    alt33=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 33, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalGo.g:2694:3: ( (lv_exprSwitchStmt_0_0= ruleexprSwitchStmt ) )
                    {
                    // InternalGo.g:2694:3: ( (lv_exprSwitchStmt_0_0= ruleexprSwitchStmt ) )
                    // InternalGo.g:2695:4: (lv_exprSwitchStmt_0_0= ruleexprSwitchStmt )
                    {
                    // InternalGo.g:2695:4: (lv_exprSwitchStmt_0_0= ruleexprSwitchStmt )
                    // InternalGo.g:2696:5: lv_exprSwitchStmt_0_0= ruleexprSwitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSwitchStmtAccess().getExprSwitchStmtExprSwitchStmtParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_exprSwitchStmt_0_0=ruleexprSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSwitchStmtRule());
                      					}
                      					set(
                      						current,
                      						"exprSwitchStmt",
                      						lv_exprSwitchStmt_0_0,
                      						"org.xtext.Go.exprSwitchStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2714:3: ( (lv_typeSwitchStmt_1_0= ruletypeSwitchStmt ) )
                    {
                    // InternalGo.g:2714:3: ( (lv_typeSwitchStmt_1_0= ruletypeSwitchStmt ) )
                    // InternalGo.g:2715:4: (lv_typeSwitchStmt_1_0= ruletypeSwitchStmt )
                    {
                    // InternalGo.g:2715:4: (lv_typeSwitchStmt_1_0= ruletypeSwitchStmt )
                    // InternalGo.g:2716:5: lv_typeSwitchStmt_1_0= ruletypeSwitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSwitchStmtAccess().getTypeSwitchStmtTypeSwitchStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeSwitchStmt_1_0=ruletypeSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSwitchStmtRule());
                      					}
                      					set(
                      						current,
                      						"typeSwitchStmt",
                      						lv_typeSwitchStmt_1_0,
                      						"org.xtext.Go.typeSwitchStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleswitchStmt"


    // $ANTLR start "entryRuleexprSwitchStmt"
    // InternalGo.g:2737:1: entryRuleexprSwitchStmt returns [EObject current=null] : iv_ruleexprSwitchStmt= ruleexprSwitchStmt EOF ;
    public final EObject entryRuleexprSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexprSwitchStmt = null;


        try {
            // InternalGo.g:2737:55: (iv_ruleexprSwitchStmt= ruleexprSwitchStmt EOF )
            // InternalGo.g:2738:2: iv_ruleexprSwitchStmt= ruleexprSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexprSwitchStmt=ruleexprSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexprSwitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexprSwitchStmt"


    // $ANTLR start "ruleexprSwitchStmt"
    // InternalGo.g:2744:1: ruleexprSwitchStmt returns [EObject current=null] : (otherlv_0= 'switch' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleexpression ) )? otherlv_4= '{' ( (lv_exprCaseClause_5_0= ruleexprCaseClause ) )* otherlv_6= '}' ) ;
    public final EObject ruleexprSwitchStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_simpleStmt_1_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_exprCaseClause_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2750:2: ( (otherlv_0= 'switch' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleexpression ) )? otherlv_4= '{' ( (lv_exprCaseClause_5_0= ruleexprCaseClause ) )* otherlv_6= '}' ) )
            // InternalGo.g:2751:2: (otherlv_0= 'switch' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleexpression ) )? otherlv_4= '{' ( (lv_exprCaseClause_5_0= ruleexprCaseClause ) )* otherlv_6= '}' )
            {
            // InternalGo.g:2751:2: (otherlv_0= 'switch' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleexpression ) )? otherlv_4= '{' ( (lv_exprCaseClause_5_0= ruleexprCaseClause ) )* otherlv_6= '}' )
            // InternalGo.g:2752:3: otherlv_0= 'switch' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )? ( (lv_expression_3_0= ruleexpression ) )? otherlv_4= '{' ( (lv_exprCaseClause_5_0= ruleexprCaseClause ) )* otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,82,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getExprSwitchStmtAccess().getSwitchKeyword_0());
              		
            }
            // InternalGo.g:2756:3: ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )?
            int alt34=2;
            alt34 = dfa34.predict(input);
            switch (alt34) {
                case 1 :
                    // InternalGo.g:2757:4: ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';'
                    {
                    // InternalGo.g:2757:4: ( (lv_simpleStmt_1_0= rulesimpleStmt ) )
                    // InternalGo.g:2758:5: (lv_simpleStmt_1_0= rulesimpleStmt )
                    {
                    // InternalGo.g:2758:5: (lv_simpleStmt_1_0= rulesimpleStmt )
                    // InternalGo.g:2759:6: lv_simpleStmt_1_0= rulesimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_simpleStmt_1_0=rulesimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
                      						}
                      						set(
                      							current,
                      							"simpleStmt",
                      							lv_simpleStmt_1_0,
                      							"org.xtext.Go.simpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,44,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExprSwitchStmtAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:2781:3: ( (lv_expression_3_0= ruleexpression ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( ((LA35_0>=RULE_IDENTIFIER && LA35_0<=RULE_STRING_LIT)||(LA35_0>=RULE_INT_LIT && LA35_0<=RULE_BINARY_OP)||LA35_0==47||LA35_0==49||LA35_0==54||LA35_0==58||(LA35_0>=61 && LA35_0<=62)||(LA35_0>=64 && LA35_0<=65)||LA35_0==70||LA35_0==89||(LA35_0>=91 && LA35_0<=93)||(LA35_0>=95 && LA35_0<=96)) ) {
                alt35=1;
            }
            else if ( (LA35_0==56) ) {
                int LA35_2 = input.LA(2);

                if ( (synpred65_InternalGo()) ) {
                    alt35=1;
                }
            }
            switch (alt35) {
                case 1 :
                    // InternalGo.g:2782:4: (lv_expression_3_0= ruleexpression )
                    {
                    // InternalGo.g:2782:4: (lv_expression_3_0= ruleexpression )
                    // InternalGo.g:2783:5: lv_expression_3_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExpressionExpressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_18);
                    lv_expression_3_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_3_0,
                      						"org.xtext.Go.expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,56,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getExprSwitchStmtAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalGo.g:2804:3: ( (lv_exprCaseClause_5_0= ruleexprCaseClause ) )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( ((LA36_0>=83 && LA36_0<=84)) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalGo.g:2805:4: (lv_exprCaseClause_5_0= ruleexprCaseClause )
            	    {
            	    // InternalGo.g:2805:4: (lv_exprCaseClause_5_0= ruleexprCaseClause )
            	    // InternalGo.g:2806:5: lv_exprCaseClause_5_0= ruleexprCaseClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExprCaseClauseExprCaseClauseParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_exprCaseClause_5_0=ruleexprCaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
            	      					}
            	      					set(
            	      						current,
            	      						"exprCaseClause",
            	      						lv_exprCaseClause_5_0,
            	      						"org.xtext.Go.exprCaseClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

            otherlv_6=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getExprSwitchStmtAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexprSwitchStmt"


    // $ANTLR start "entryRuleexprCaseClause"
    // InternalGo.g:2831:1: entryRuleexprCaseClause returns [EObject current=null] : iv_ruleexprCaseClause= ruleexprCaseClause EOF ;
    public final EObject entryRuleexprCaseClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexprCaseClause = null;


        try {
            // InternalGo.g:2831:55: (iv_ruleexprCaseClause= ruleexprCaseClause EOF )
            // InternalGo.g:2832:2: iv_ruleexprCaseClause= ruleexprCaseClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexprCaseClause=ruleexprCaseClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexprCaseClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexprCaseClause"


    // $ANTLR start "ruleexprCaseClause"
    // InternalGo.g:2838:1: ruleexprCaseClause returns [EObject current=null] : ( ( (lv_exprSwitchCase_0_0= ruleexprSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) ) ;
    public final EObject ruleexprCaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_exprSwitchCase_0_0 = null;

        EObject lv_statementList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2844:2: ( ( ( (lv_exprSwitchCase_0_0= ruleexprSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) ) )
            // InternalGo.g:2845:2: ( ( (lv_exprSwitchCase_0_0= ruleexprSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) )
            {
            // InternalGo.g:2845:2: ( ( (lv_exprSwitchCase_0_0= ruleexprSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) )
            // InternalGo.g:2846:3: ( (lv_exprSwitchCase_0_0= ruleexprSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) )
            {
            // InternalGo.g:2846:3: ( (lv_exprSwitchCase_0_0= ruleexprSwitchCase ) )
            // InternalGo.g:2847:4: (lv_exprSwitchCase_0_0= ruleexprSwitchCase )
            {
            // InternalGo.g:2847:4: (lv_exprSwitchCase_0_0= ruleexprSwitchCase )
            // InternalGo.g:2848:5: lv_exprSwitchCase_0_0= ruleexprSwitchCase
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseExprSwitchCaseParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_28);
            lv_exprSwitchCase_0_0=ruleexprSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExprCaseClauseRule());
              					}
              					set(
              						current,
              						"exprSwitchCase",
              						lv_exprSwitchCase_0_0,
              						"org.xtext.Go.exprSwitchCase");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,73,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExprCaseClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:2869:3: ( (lv_statementList_2_0= rulestatementList ) )
            // InternalGo.g:2870:4: (lv_statementList_2_0= rulestatementList )
            {
            // InternalGo.g:2870:4: (lv_statementList_2_0= rulestatementList )
            // InternalGo.g:2871:5: lv_statementList_2_0= rulestatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExprCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statementList_2_0=rulestatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExprCaseClauseRule());
              					}
              					set(
              						current,
              						"statementList",
              						lv_statementList_2_0,
              						"org.xtext.Go.statementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexprCaseClause"


    // $ANTLR start "entryRuleexprSwitchCase"
    // InternalGo.g:2892:1: entryRuleexprSwitchCase returns [EObject current=null] : iv_ruleexprSwitchCase= ruleexprSwitchCase EOF ;
    public final EObject entryRuleexprSwitchCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexprSwitchCase = null;


        try {
            // InternalGo.g:2892:55: (iv_ruleexprSwitchCase= ruleexprSwitchCase EOF )
            // InternalGo.g:2893:2: iv_ruleexprSwitchCase= ruleexprSwitchCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprSwitchCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexprSwitchCase=ruleexprSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexprSwitchCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexprSwitchCase"


    // $ANTLR start "ruleexprSwitchCase"
    // InternalGo.g:2899:1: ruleexprSwitchCase returns [EObject current=null] : ( (otherlv_0= 'case' ( (lv_expressionList_1_0= ruleexpressionList ) ) ) | otherlv_2= 'default' ) ;
    public final EObject ruleexprSwitchCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expressionList_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2905:2: ( ( (otherlv_0= 'case' ( (lv_expressionList_1_0= ruleexpressionList ) ) ) | otherlv_2= 'default' ) )
            // InternalGo.g:2906:2: ( (otherlv_0= 'case' ( (lv_expressionList_1_0= ruleexpressionList ) ) ) | otherlv_2= 'default' )
            {
            // InternalGo.g:2906:2: ( (otherlv_0= 'case' ( (lv_expressionList_1_0= ruleexpressionList ) ) ) | otherlv_2= 'default' )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==83) ) {
                alt37=1;
            }
            else if ( (LA37_0==84) ) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalGo.g:2907:3: (otherlv_0= 'case' ( (lv_expressionList_1_0= ruleexpressionList ) ) )
                    {
                    // InternalGo.g:2907:3: (otherlv_0= 'case' ( (lv_expressionList_1_0= ruleexpressionList ) ) )
                    // InternalGo.g:2908:4: otherlv_0= 'case' ( (lv_expressionList_1_0= ruleexpressionList ) )
                    {
                    otherlv_0=(Token)match(input,83,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getExprSwitchCaseAccess().getCaseKeyword_0_0());
                      			
                    }
                    // InternalGo.g:2912:4: ( (lv_expressionList_1_0= ruleexpressionList ) )
                    // InternalGo.g:2913:5: (lv_expressionList_1_0= ruleexpressionList )
                    {
                    // InternalGo.g:2913:5: (lv_expressionList_1_0= ruleexpressionList )
                    // InternalGo.g:2914:6: lv_expressionList_1_0= ruleexpressionList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExprSwitchCaseAccess().getExpressionListExpressionListParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressionList_1_0=ruleexpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExprSwitchCaseRule());
                      						}
                      						set(
                      							current,
                      							"expressionList",
                      							lv_expressionList_1_0,
                      							"org.xtext.Go.expressionList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2933:3: otherlv_2= 'default'
                    {
                    otherlv_2=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_2, grammarAccess.getExprSwitchCaseAccess().getDefaultKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexprSwitchCase"


    // $ANTLR start "entryRuletypeSwitchStmt"
    // InternalGo.g:2941:1: entryRuletypeSwitchStmt returns [EObject current=null] : iv_ruletypeSwitchStmt= ruletypeSwitchStmt EOF ;
    public final EObject entryRuletypeSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeSwitchStmt = null;


        try {
            // InternalGo.g:2941:55: (iv_ruletypeSwitchStmt= ruletypeSwitchStmt EOF )
            // InternalGo.g:2942:2: iv_ruletypeSwitchStmt= ruletypeSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeSwitchStmt=ruletypeSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeSwitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeSwitchStmt"


    // $ANTLR start "ruletypeSwitchStmt"
    // InternalGo.g:2948:1: ruletypeSwitchStmt returns [EObject current=null] : (otherlv_0= 'switch' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )? ( (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typeCaseClause_5_0= ruletypeCaseClause ) )* otherlv_6= '}' ) ;
    public final EObject ruletypeSwitchStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_simpleStmt_1_0 = null;

        EObject lv_typeSwitchGuard_3_0 = null;

        EObject lv_typeCaseClause_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2954:2: ( (otherlv_0= 'switch' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )? ( (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typeCaseClause_5_0= ruletypeCaseClause ) )* otherlv_6= '}' ) )
            // InternalGo.g:2955:2: (otherlv_0= 'switch' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )? ( (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typeCaseClause_5_0= ruletypeCaseClause ) )* otherlv_6= '}' )
            {
            // InternalGo.g:2955:2: (otherlv_0= 'switch' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )? ( (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typeCaseClause_5_0= ruletypeCaseClause ) )* otherlv_6= '}' )
            // InternalGo.g:2956:3: otherlv_0= 'switch' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )? ( (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typeCaseClause_5_0= ruletypeCaseClause ) )* otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,82,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeSwitchStmtAccess().getSwitchKeyword_0());
              		
            }
            // InternalGo.g:2960:3: ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )?
            int alt38=2;
            alt38 = dfa38.predict(input);
            switch (alt38) {
                case 1 :
                    // InternalGo.g:2961:4: ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';'
                    {
                    // InternalGo.g:2961:4: ( (lv_simpleStmt_1_0= rulesimpleStmt ) )
                    // InternalGo.g:2962:5: (lv_simpleStmt_1_0= rulesimpleStmt )
                    {
                    // InternalGo.g:2962:5: (lv_simpleStmt_1_0= rulesimpleStmt )
                    // InternalGo.g:2963:6: lv_simpleStmt_1_0= rulesimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_simpleStmt_1_0=rulesimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
                      						}
                      						set(
                      							current,
                      							"simpleStmt",
                      							lv_simpleStmt_1_0,
                      							"org.xtext.Go.simpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,44,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getTypeSwitchStmtAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:2985:3: ( (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard ) )
            // InternalGo.g:2986:4: (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard )
            {
            // InternalGo.g:2986:4: (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard )
            // InternalGo.g:2987:5: lv_typeSwitchGuard_3_0= ruletypeSwitchGuard
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getTypeSwitchGuardTypeSwitchGuardParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_18);
            lv_typeSwitchGuard_3_0=ruletypeSwitchGuard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
              					}
              					set(
              						current,
              						"typeSwitchGuard",
              						lv_typeSwitchGuard_3_0,
              						"org.xtext.Go.typeSwitchGuard");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,56,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchStmtAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalGo.g:3008:3: ( (lv_typeCaseClause_5_0= ruletypeCaseClause ) )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( ((LA39_0>=83 && LA39_0<=84)) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalGo.g:3009:4: (lv_typeCaseClause_5_0= ruletypeCaseClause )
            	    {
            	    // InternalGo.g:3009:4: (lv_typeCaseClause_5_0= ruletypeCaseClause )
            	    // InternalGo.g:3010:5: lv_typeCaseClause_5_0= ruletypeCaseClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getTypeCaseClauseTypeCaseClauseParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_typeCaseClause_5_0=ruletypeCaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
            	      					}
            	      					set(
            	      						current,
            	      						"typeCaseClause",
            	      						lv_typeCaseClause_5_0,
            	      						"org.xtext.Go.typeCaseClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

            otherlv_6=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchStmtAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeSwitchStmt"


    // $ANTLR start "entryRuletypeSwitchGuard"
    // InternalGo.g:3035:1: entryRuletypeSwitchGuard returns [EObject current=null] : iv_ruletypeSwitchGuard= ruletypeSwitchGuard EOF ;
    public final EObject entryRuletypeSwitchGuard() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeSwitchGuard = null;


        try {
            // InternalGo.g:3035:56: (iv_ruletypeSwitchGuard= ruletypeSwitchGuard EOF )
            // InternalGo.g:3036:2: iv_ruletypeSwitchGuard= ruletypeSwitchGuard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchGuardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeSwitchGuard=ruletypeSwitchGuard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeSwitchGuard; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeSwitchGuard"


    // $ANTLR start "ruletypeSwitchGuard"
    // InternalGo.g:3042:1: ruletypeSwitchGuard returns [EObject current=null] : ( (this_IDENTIFIER_0= RULE_IDENTIFIER otherlv_1= ':=' )? ( (lv_primaryExpr_2_0= ruleprimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' ) ;
    public final EObject ruletypeSwitchGuard() throws RecognitionException {
        EObject current = null;

        Token this_IDENTIFIER_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_primaryExpr_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3048:2: ( ( (this_IDENTIFIER_0= RULE_IDENTIFIER otherlv_1= ':=' )? ( (lv_primaryExpr_2_0= ruleprimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' ) )
            // InternalGo.g:3049:2: ( (this_IDENTIFIER_0= RULE_IDENTIFIER otherlv_1= ':=' )? ( (lv_primaryExpr_2_0= ruleprimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' )
            {
            // InternalGo.g:3049:2: ( (this_IDENTIFIER_0= RULE_IDENTIFIER otherlv_1= ':=' )? ( (lv_primaryExpr_2_0= ruleprimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' )
            // InternalGo.g:3050:3: (this_IDENTIFIER_0= RULE_IDENTIFIER otherlv_1= ':=' )? ( (lv_primaryExpr_2_0= ruleprimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')'
            {
            // InternalGo.g:3050:3: (this_IDENTIFIER_0= RULE_IDENTIFIER otherlv_1= ':=' )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==RULE_IDENTIFIER) ) {
                int LA40_1 = input.LA(2);

                if ( (LA40_1==72) ) {
                    alt40=1;
                }
            }
            switch (alt40) {
                case 1 :
                    // InternalGo.g:3051:4: this_IDENTIFIER_0= RULE_IDENTIFIER otherlv_1= ':='
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_IDENTIFIER_0, grammarAccess.getTypeSwitchGuardAccess().getIDENTIFIERTerminalRuleCall_0_0());
                      			
                    }
                    otherlv_1=(Token)match(input,72,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:3060:3: ( (lv_primaryExpr_2_0= ruleprimaryExpr ) )
            // InternalGo.g:3061:4: (lv_primaryExpr_2_0= ruleprimaryExpr )
            {
            // InternalGo.g:3061:4: (lv_primaryExpr_2_0= ruleprimaryExpr )
            // InternalGo.g:3062:5: lv_primaryExpr_2_0= ruleprimaryExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprPrimaryExprParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_39);
            lv_primaryExpr_2_0=ruleprimaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeSwitchGuardRule());
              					}
              					set(
              						current,
              						"primaryExpr",
              						lv_primaryExpr_2_0,
              						"org.xtext.Go.primaryExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,49,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getTypeSwitchGuardAccess().getFullStopKeyword_2());
              		
            }
            otherlv_4=(Token)match(input,47,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchGuardAccess().getLeftParenthesisKeyword_3());
              		
            }
            otherlv_5=(Token)match(input,53,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getTypeSwitchGuardAccess().getTypeKeyword_4());
              		
            }
            otherlv_6=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchGuardAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeSwitchGuard"


    // $ANTLR start "entryRuletypeCaseClause"
    // InternalGo.g:3099:1: entryRuletypeCaseClause returns [EObject current=null] : iv_ruletypeCaseClause= ruletypeCaseClause EOF ;
    public final EObject entryRuletypeCaseClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeCaseClause = null;


        try {
            // InternalGo.g:3099:55: (iv_ruletypeCaseClause= ruletypeCaseClause EOF )
            // InternalGo.g:3100:2: iv_ruletypeCaseClause= ruletypeCaseClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeCaseClause=ruletypeCaseClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeCaseClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeCaseClause"


    // $ANTLR start "ruletypeCaseClause"
    // InternalGo.g:3106:1: ruletypeCaseClause returns [EObject current=null] : ( ( (lv_typeSwitchCase_0_0= ruletypeSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) ) ;
    public final EObject ruletypeCaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_typeSwitchCase_0_0 = null;

        EObject lv_statementList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3112:2: ( ( ( (lv_typeSwitchCase_0_0= ruletypeSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) ) )
            // InternalGo.g:3113:2: ( ( (lv_typeSwitchCase_0_0= ruletypeSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) )
            {
            // InternalGo.g:3113:2: ( ( (lv_typeSwitchCase_0_0= ruletypeSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) )
            // InternalGo.g:3114:3: ( (lv_typeSwitchCase_0_0= ruletypeSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) )
            {
            // InternalGo.g:3114:3: ( (lv_typeSwitchCase_0_0= ruletypeSwitchCase ) )
            // InternalGo.g:3115:4: (lv_typeSwitchCase_0_0= ruletypeSwitchCase )
            {
            // InternalGo.g:3115:4: (lv_typeSwitchCase_0_0= ruletypeSwitchCase )
            // InternalGo.g:3116:5: lv_typeSwitchCase_0_0= ruletypeSwitchCase
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseTypeSwitchCaseParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_28);
            lv_typeSwitchCase_0_0=ruletypeSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeCaseClauseRule());
              					}
              					set(
              						current,
              						"typeSwitchCase",
              						lv_typeSwitchCase_0_0,
              						"org.xtext.Go.typeSwitchCase");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,73,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:3137:3: ( (lv_statementList_2_0= rulestatementList ) )
            // InternalGo.g:3138:4: (lv_statementList_2_0= rulestatementList )
            {
            // InternalGo.g:3138:4: (lv_statementList_2_0= rulestatementList )
            // InternalGo.g:3139:5: lv_statementList_2_0= rulestatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statementList_2_0=rulestatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeCaseClauseRule());
              					}
              					set(
              						current,
              						"statementList",
              						lv_statementList_2_0,
              						"org.xtext.Go.statementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeCaseClause"


    // $ANTLR start "entryRuletypeSwitchCase"
    // InternalGo.g:3160:1: entryRuletypeSwitchCase returns [EObject current=null] : iv_ruletypeSwitchCase= ruletypeSwitchCase EOF ;
    public final EObject entryRuletypeSwitchCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeSwitchCase = null;


        try {
            // InternalGo.g:3160:55: (iv_ruletypeSwitchCase= ruletypeSwitchCase EOF )
            // InternalGo.g:3161:2: iv_ruletypeSwitchCase= ruletypeSwitchCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeSwitchCase=ruletypeSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeSwitchCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeSwitchCase"


    // $ANTLR start "ruletypeSwitchCase"
    // InternalGo.g:3167:1: ruletypeSwitchCase returns [EObject current=null] : ( (otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) ) ) | otherlv_2= 'default' ) ;
    public final EObject ruletypeSwitchCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_typeList_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3173:2: ( ( (otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) ) ) | otherlv_2= 'default' ) )
            // InternalGo.g:3174:2: ( (otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) ) ) | otherlv_2= 'default' )
            {
            // InternalGo.g:3174:2: ( (otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) ) ) | otherlv_2= 'default' )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==83) ) {
                alt41=1;
            }
            else if ( (LA41_0==84) ) {
                alt41=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // InternalGo.g:3175:3: (otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) ) )
                    {
                    // InternalGo.g:3175:3: (otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) ) )
                    // InternalGo.g:3176:4: otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) )
                    {
                    otherlv_0=(Token)match(input,83,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getTypeSwitchCaseAccess().getCaseKeyword_0_0());
                      			
                    }
                    // InternalGo.g:3180:4: ( (lv_typeList_1_0= ruletypeList ) )
                    // InternalGo.g:3181:5: (lv_typeList_1_0= ruletypeList )
                    {
                    // InternalGo.g:3181:5: (lv_typeList_1_0= ruletypeList )
                    // InternalGo.g:3182:6: lv_typeList_1_0= ruletypeList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeSwitchCaseAccess().getTypeListTypeListParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeList_1_0=ruletypeList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeSwitchCaseRule());
                      						}
                      						set(
                      							current,
                      							"typeList",
                      							lv_typeList_1_0,
                      							"org.xtext.Go.typeList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3201:3: otherlv_2= 'default'
                    {
                    otherlv_2=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_2, grammarAccess.getTypeSwitchCaseAccess().getDefaultKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeSwitchCase"


    // $ANTLR start "entryRuletypeList"
    // InternalGo.g:3209:1: entryRuletypeList returns [EObject current=null] : iv_ruletypeList= ruletypeList EOF ;
    public final EObject entryRuletypeList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeList = null;


        try {
            // InternalGo.g:3209:49: (iv_ruletypeList= ruletypeList EOF )
            // InternalGo.g:3210:2: iv_ruletypeList= ruletypeList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeList=ruletypeList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeList"


    // $ANTLR start "ruletypeList"
    // InternalGo.g:3216:1: ruletypeList returns [EObject current=null] : ( ( (lv_type_0_0= ruletype ) ) (otherlv_1= ',' ( (lv_type_2_0= ruletype ) ) )* ) ;
    public final EObject ruletypeList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_type_0_0 = null;

        EObject lv_type_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3222:2: ( ( ( (lv_type_0_0= ruletype ) ) (otherlv_1= ',' ( (lv_type_2_0= ruletype ) ) )* ) )
            // InternalGo.g:3223:2: ( ( (lv_type_0_0= ruletype ) ) (otherlv_1= ',' ( (lv_type_2_0= ruletype ) ) )* )
            {
            // InternalGo.g:3223:2: ( ( (lv_type_0_0= ruletype ) ) (otherlv_1= ',' ( (lv_type_2_0= ruletype ) ) )* )
            // InternalGo.g:3224:3: ( (lv_type_0_0= ruletype ) ) (otherlv_1= ',' ( (lv_type_2_0= ruletype ) ) )*
            {
            // InternalGo.g:3224:3: ( (lv_type_0_0= ruletype ) )
            // InternalGo.g:3225:4: (lv_type_0_0= ruletype )
            {
            // InternalGo.g:3225:4: (lv_type_0_0= ruletype )
            // InternalGo.g:3226:5: lv_type_0_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_type_0_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeListRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_0_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:3243:3: (otherlv_1= ',' ( (lv_type_2_0= ruletype ) ) )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==52) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalGo.g:3244:4: otherlv_1= ',' ( (lv_type_2_0= ruletype ) )
            	    {
            	    otherlv_1=(Token)match(input,52,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getTypeListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:3248:4: ( (lv_type_2_0= ruletype ) )
            	    // InternalGo.g:3249:5: (lv_type_2_0= ruletype )
            	    {
            	    // InternalGo.g:3249:5: (lv_type_2_0= ruletype )
            	    // InternalGo.g:3250:6: lv_type_2_0= ruletype
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_type_2_0=ruletype();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypeListRule());
            	      						}
            	      						set(
            	      							current,
            	      							"type",
            	      							lv_type_2_0,
            	      							"org.xtext.Go.type");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeList"


    // $ANTLR start "entryRuleselectStmt"
    // InternalGo.g:3272:1: entryRuleselectStmt returns [EObject current=null] : iv_ruleselectStmt= ruleselectStmt EOF ;
    public final EObject entryRuleselectStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleselectStmt = null;


        try {
            // InternalGo.g:3272:51: (iv_ruleselectStmt= ruleselectStmt EOF )
            // InternalGo.g:3273:2: iv_ruleselectStmt= ruleselectStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleselectStmt=ruleselectStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleselectStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleselectStmt"


    // $ANTLR start "ruleselectStmt"
    // InternalGo.g:3279:1: ruleselectStmt returns [EObject current=null] : (otherlv_0= 'select' otherlv_1= '{' ( (lv_commClause_2_0= rulecommClause ) )* otherlv_3= '}' ) ;
    public final EObject ruleselectStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_commClause_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3285:2: ( (otherlv_0= 'select' otherlv_1= '{' ( (lv_commClause_2_0= rulecommClause ) )* otherlv_3= '}' ) )
            // InternalGo.g:3286:2: (otherlv_0= 'select' otherlv_1= '{' ( (lv_commClause_2_0= rulecommClause ) )* otherlv_3= '}' )
            {
            // InternalGo.g:3286:2: (otherlv_0= 'select' otherlv_1= '{' ( (lv_commClause_2_0= rulecommClause ) )* otherlv_3= '}' )
            // InternalGo.g:3287:3: otherlv_0= 'select' otherlv_1= '{' ( (lv_commClause_2_0= rulecommClause ) )* otherlv_3= '}'
            {
            otherlv_0=(Token)match(input,85,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSelectStmtAccess().getSelectKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,56,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalGo.g:3295:3: ( (lv_commClause_2_0= rulecommClause ) )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( ((LA43_0>=83 && LA43_0<=84)) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalGo.g:3296:4: (lv_commClause_2_0= rulecommClause )
            	    {
            	    // InternalGo.g:3296:4: (lv_commClause_2_0= rulecommClause )
            	    // InternalGo.g:3297:5: lv_commClause_2_0= rulecommClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSelectStmtAccess().getCommClauseCommClauseParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_commClause_2_0=rulecommClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSelectStmtRule());
            	      					}
            	      					set(
            	      						current,
            	      						"commClause",
            	      						lv_commClause_2_0,
            	      						"org.xtext.Go.commClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            otherlv_3=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleselectStmt"


    // $ANTLR start "entryRulecommClause"
    // InternalGo.g:3322:1: entryRulecommClause returns [EObject current=null] : iv_rulecommClause= rulecommClause EOF ;
    public final EObject entryRulecommClause() throws RecognitionException {
        EObject current = null;

        EObject iv_rulecommClause = null;


        try {
            // InternalGo.g:3322:51: (iv_rulecommClause= rulecommClause EOF )
            // InternalGo.g:3323:2: iv_rulecommClause= rulecommClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecommClause=rulecommClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecommClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecommClause"


    // $ANTLR start "rulecommClause"
    // InternalGo.g:3329:1: rulecommClause returns [EObject current=null] : ( ( (lv_commCase_0_0= rulecommCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) ) ;
    public final EObject rulecommClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_commCase_0_0 = null;

        EObject lv_statementList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3335:2: ( ( ( (lv_commCase_0_0= rulecommCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) ) )
            // InternalGo.g:3336:2: ( ( (lv_commCase_0_0= rulecommCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) )
            {
            // InternalGo.g:3336:2: ( ( (lv_commCase_0_0= rulecommCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) )
            // InternalGo.g:3337:3: ( (lv_commCase_0_0= rulecommCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) )
            {
            // InternalGo.g:3337:3: ( (lv_commCase_0_0= rulecommCase ) )
            // InternalGo.g:3338:4: (lv_commCase_0_0= rulecommCase )
            {
            // InternalGo.g:3338:4: (lv_commCase_0_0= rulecommCase )
            // InternalGo.g:3339:5: lv_commCase_0_0= rulecommCase
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCommClauseAccess().getCommCaseCommCaseParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_28);
            lv_commCase_0_0=rulecommCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCommClauseRule());
              					}
              					set(
              						current,
              						"commCase",
              						lv_commCase_0_0,
              						"org.xtext.Go.commCase");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,73,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getCommClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:3360:3: ( (lv_statementList_2_0= rulestatementList ) )
            // InternalGo.g:3361:4: (lv_statementList_2_0= rulestatementList )
            {
            // InternalGo.g:3361:4: (lv_statementList_2_0= rulestatementList )
            // InternalGo.g:3362:5: lv_statementList_2_0= rulestatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCommClauseAccess().getStatementListStatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statementList_2_0=rulestatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCommClauseRule());
              					}
              					set(
              						current,
              						"statementList",
              						lv_statementList_2_0,
              						"org.xtext.Go.statementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecommClause"


    // $ANTLR start "entryRulecommCase"
    // InternalGo.g:3383:1: entryRulecommCase returns [EObject current=null] : iv_rulecommCase= rulecommCase EOF ;
    public final EObject entryRulecommCase() throws RecognitionException {
        EObject current = null;

        EObject iv_rulecommCase = null;


        try {
            // InternalGo.g:3383:49: (iv_rulecommCase= rulecommCase EOF )
            // InternalGo.g:3384:2: iv_rulecommCase= rulecommCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecommCase=rulecommCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecommCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecommCase"


    // $ANTLR start "rulecommCase"
    // InternalGo.g:3390:1: rulecommCase returns [EObject current=null] : ( (otherlv_0= 'case' ( ( (lv_sendStmt_1_0= rulesendStmt ) ) | ( (lv_recvStmt_2_0= rulerecvStmt ) ) ) ) | otherlv_3= 'default' ) ;
    public final EObject rulecommCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_sendStmt_1_0 = null;

        EObject lv_recvStmt_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3396:2: ( ( (otherlv_0= 'case' ( ( (lv_sendStmt_1_0= rulesendStmt ) ) | ( (lv_recvStmt_2_0= rulerecvStmt ) ) ) ) | otherlv_3= 'default' ) )
            // InternalGo.g:3397:2: ( (otherlv_0= 'case' ( ( (lv_sendStmt_1_0= rulesendStmt ) ) | ( (lv_recvStmt_2_0= rulerecvStmt ) ) ) ) | otherlv_3= 'default' )
            {
            // InternalGo.g:3397:2: ( (otherlv_0= 'case' ( ( (lv_sendStmt_1_0= rulesendStmt ) ) | ( (lv_recvStmt_2_0= rulerecvStmt ) ) ) ) | otherlv_3= 'default' )
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==83) ) {
                alt45=1;
            }
            else if ( (LA45_0==84) ) {
                alt45=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // InternalGo.g:3398:3: (otherlv_0= 'case' ( ( (lv_sendStmt_1_0= rulesendStmt ) ) | ( (lv_recvStmt_2_0= rulerecvStmt ) ) ) )
                    {
                    // InternalGo.g:3398:3: (otherlv_0= 'case' ( ( (lv_sendStmt_1_0= rulesendStmt ) ) | ( (lv_recvStmt_2_0= rulerecvStmt ) ) ) )
                    // InternalGo.g:3399:4: otherlv_0= 'case' ( ( (lv_sendStmt_1_0= rulesendStmt ) ) | ( (lv_recvStmt_2_0= rulerecvStmt ) ) )
                    {
                    otherlv_0=(Token)match(input,83,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getCommCaseAccess().getCaseKeyword_0_0());
                      			
                    }
                    // InternalGo.g:3403:4: ( ( (lv_sendStmt_1_0= rulesendStmt ) ) | ( (lv_recvStmt_2_0= rulerecvStmt ) ) )
                    int alt44=2;
                    alt44 = dfa44.predict(input);
                    switch (alt44) {
                        case 1 :
                            // InternalGo.g:3404:5: ( (lv_sendStmt_1_0= rulesendStmt ) )
                            {
                            // InternalGo.g:3404:5: ( (lv_sendStmt_1_0= rulesendStmt ) )
                            // InternalGo.g:3405:6: (lv_sendStmt_1_0= rulesendStmt )
                            {
                            // InternalGo.g:3405:6: (lv_sendStmt_1_0= rulesendStmt )
                            // InternalGo.g:3406:7: lv_sendStmt_1_0= rulesendStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCommCaseAccess().getSendStmtSendStmtParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_sendStmt_1_0=rulesendStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCommCaseRule());
                              							}
                              							set(
                              								current,
                              								"sendStmt",
                              								lv_sendStmt_1_0,
                              								"org.xtext.Go.sendStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:3424:5: ( (lv_recvStmt_2_0= rulerecvStmt ) )
                            {
                            // InternalGo.g:3424:5: ( (lv_recvStmt_2_0= rulerecvStmt ) )
                            // InternalGo.g:3425:6: (lv_recvStmt_2_0= rulerecvStmt )
                            {
                            // InternalGo.g:3425:6: (lv_recvStmt_2_0= rulerecvStmt )
                            // InternalGo.g:3426:7: lv_recvStmt_2_0= rulerecvStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCommCaseAccess().getRecvStmtRecvStmtParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_recvStmt_2_0=rulerecvStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCommCaseRule());
                              							}
                              							set(
                              								current,
                              								"recvStmt",
                              								lv_recvStmt_2_0,
                              								"org.xtext.Go.recvStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3446:3: otherlv_3= 'default'
                    {
                    otherlv_3=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_3, grammarAccess.getCommCaseAccess().getDefaultKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecommCase"


    // $ANTLR start "entryRulerecvStmt"
    // InternalGo.g:3454:1: entryRulerecvStmt returns [EObject current=null] : iv_rulerecvStmt= rulerecvStmt EOF ;
    public final EObject entryRulerecvStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerecvStmt = null;


        try {
            // InternalGo.g:3454:49: (iv_rulerecvStmt= rulerecvStmt EOF )
            // InternalGo.g:3455:2: iv_rulerecvStmt= rulerecvStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRecvStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerecvStmt=rulerecvStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerecvStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerecvStmt"


    // $ANTLR start "rulerecvStmt"
    // InternalGo.g:3461:1: rulerecvStmt returns [EObject current=null] : ( ( ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? ( (lv_expression_4_0= ruleexpression ) ) ) ;
    public final EObject rulerecvStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expressionList_0_0 = null;

        AntlrDatatypeRuleToken lv_identifierList_2_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3467:2: ( ( ( ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? ( (lv_expression_4_0= ruleexpression ) ) ) )
            // InternalGo.g:3468:2: ( ( ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? ( (lv_expression_4_0= ruleexpression ) ) )
            {
            // InternalGo.g:3468:2: ( ( ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? ( (lv_expression_4_0= ruleexpression ) ) )
            // InternalGo.g:3469:3: ( ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? ( (lv_expression_4_0= ruleexpression ) )
            {
            // InternalGo.g:3469:3: ( ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )?
            int alt46=3;
            alt46 = dfa46.predict(input);
            switch (alt46) {
                case 1 :
                    // InternalGo.g:3470:4: ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' )
                    {
                    // InternalGo.g:3470:4: ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' )
                    // InternalGo.g:3471:5: ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '='
                    {
                    // InternalGo.g:3471:5: ( (lv_expressionList_0_0= ruleexpressionList ) )
                    // InternalGo.g:3472:6: (lv_expressionList_0_0= ruleexpressionList )
                    {
                    // InternalGo.g:3472:6: (lv_expressionList_0_0= ruleexpressionList )
                    // InternalGo.g:3473:7: lv_expressionList_0_0= ruleexpressionList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRecvStmtAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_13);
                    lv_expressionList_0_0=ruleexpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRecvStmtRule());
                      							}
                      							set(
                      								current,
                      								"expressionList",
                      								lv_expressionList_0_0,
                      								"org.xtext.Go.expressionList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,51,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getRecvStmtAccess().getEqualsSignKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3496:4: ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' )
                    {
                    // InternalGo.g:3496:4: ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' )
                    // InternalGo.g:3497:5: ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':='
                    {
                    // InternalGo.g:3497:5: ( (lv_identifierList_2_0= ruleidentifierList ) )
                    // InternalGo.g:3498:6: (lv_identifierList_2_0= ruleidentifierList )
                    {
                    // InternalGo.g:3498:6: (lv_identifierList_2_0= ruleidentifierList )
                    // InternalGo.g:3499:7: lv_identifierList_2_0= ruleidentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRecvStmtAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_27);
                    lv_identifierList_2_0=ruleidentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRecvStmtRule());
                      							}
                      							set(
                      								current,
                      								"identifierList",
                      								lv_identifierList_2_0,
                      								"org.xtext.Go.identifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,72,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRecvStmtAccess().getColonEqualsSignKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:3522:3: ( (lv_expression_4_0= ruleexpression ) )
            // InternalGo.g:3523:4: (lv_expression_4_0= ruleexpression )
            {
            // InternalGo.g:3523:4: (lv_expression_4_0= ruleexpression )
            // InternalGo.g:3524:5: lv_expression_4_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRecvStmtAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_4_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRecvStmtRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_4_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerecvStmt"


    // $ANTLR start "entryRuleforStmt"
    // InternalGo.g:3545:1: entryRuleforStmt returns [EObject current=null] : iv_ruleforStmt= ruleforStmt EOF ;
    public final EObject entryRuleforStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleforStmt = null;


        try {
            // InternalGo.g:3545:48: (iv_ruleforStmt= ruleforStmt EOF )
            // InternalGo.g:3546:2: iv_ruleforStmt= ruleforStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleforStmt=ruleforStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleforStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleforStmt"


    // $ANTLR start "ruleforStmt"
    // InternalGo.g:3552:1: ruleforStmt returns [EObject current=null] : (otherlv_0= 'for' ( ( (lv_expression_1_0= ruleexpression ) ) | ( (lv_forClause_2_0= ruleforClause ) ) | ( (lv_rangeClause_3_0= rulerangeClause ) ) )? ( (lv_block_4_0= ruleblock ) ) ) ;
    public final EObject ruleforStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_expression_1_0 = null;

        EObject lv_forClause_2_0 = null;

        EObject lv_rangeClause_3_0 = null;

        EObject lv_block_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3558:2: ( (otherlv_0= 'for' ( ( (lv_expression_1_0= ruleexpression ) ) | ( (lv_forClause_2_0= ruleforClause ) ) | ( (lv_rangeClause_3_0= rulerangeClause ) ) )? ( (lv_block_4_0= ruleblock ) ) ) )
            // InternalGo.g:3559:2: (otherlv_0= 'for' ( ( (lv_expression_1_0= ruleexpression ) ) | ( (lv_forClause_2_0= ruleforClause ) ) | ( (lv_rangeClause_3_0= rulerangeClause ) ) )? ( (lv_block_4_0= ruleblock ) ) )
            {
            // InternalGo.g:3559:2: (otherlv_0= 'for' ( ( (lv_expression_1_0= ruleexpression ) ) | ( (lv_forClause_2_0= ruleforClause ) ) | ( (lv_rangeClause_3_0= rulerangeClause ) ) )? ( (lv_block_4_0= ruleblock ) ) )
            // InternalGo.g:3560:3: otherlv_0= 'for' ( ( (lv_expression_1_0= ruleexpression ) ) | ( (lv_forClause_2_0= ruleforClause ) ) | ( (lv_rangeClause_3_0= rulerangeClause ) ) )? ( (lv_block_4_0= ruleblock ) )
            {
            otherlv_0=(Token)match(input,86,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getForStmtAccess().getForKeyword_0());
              		
            }
            // InternalGo.g:3564:3: ( ( (lv_expression_1_0= ruleexpression ) ) | ( (lv_forClause_2_0= ruleforClause ) ) | ( (lv_rangeClause_3_0= rulerangeClause ) ) )?
            int alt47=4;
            alt47 = dfa47.predict(input);
            switch (alt47) {
                case 1 :
                    // InternalGo.g:3565:4: ( (lv_expression_1_0= ruleexpression ) )
                    {
                    // InternalGo.g:3565:4: ( (lv_expression_1_0= ruleexpression ) )
                    // InternalGo.g:3566:5: (lv_expression_1_0= ruleexpression )
                    {
                    // InternalGo.g:3566:5: (lv_expression_1_0= ruleexpression )
                    // InternalGo.g:3567:6: lv_expression_1_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForStmtAccess().getExpressionExpressionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_expression_1_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForStmtRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_0,
                      							"org.xtext.Go.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3585:4: ( (lv_forClause_2_0= ruleforClause ) )
                    {
                    // InternalGo.g:3585:4: ( (lv_forClause_2_0= ruleforClause ) )
                    // InternalGo.g:3586:5: (lv_forClause_2_0= ruleforClause )
                    {
                    // InternalGo.g:3586:5: (lv_forClause_2_0= ruleforClause )
                    // InternalGo.g:3587:6: lv_forClause_2_0= ruleforClause
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForStmtAccess().getForClauseForClauseParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_forClause_2_0=ruleforClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForStmtRule());
                      						}
                      						set(
                      							current,
                      							"forClause",
                      							lv_forClause_2_0,
                      							"org.xtext.Go.forClause");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3605:4: ( (lv_rangeClause_3_0= rulerangeClause ) )
                    {
                    // InternalGo.g:3605:4: ( (lv_rangeClause_3_0= rulerangeClause ) )
                    // InternalGo.g:3606:5: (lv_rangeClause_3_0= rulerangeClause )
                    {
                    // InternalGo.g:3606:5: (lv_rangeClause_3_0= rulerangeClause )
                    // InternalGo.g:3607:6: lv_rangeClause_3_0= rulerangeClause
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForStmtAccess().getRangeClauseRangeClauseParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_rangeClause_3_0=rulerangeClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForStmtRule());
                      						}
                      						set(
                      							current,
                      							"rangeClause",
                      							lv_rangeClause_3_0,
                      							"org.xtext.Go.rangeClause");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGo.g:3625:3: ( (lv_block_4_0= ruleblock ) )
            // InternalGo.g:3626:4: (lv_block_4_0= ruleblock )
            {
            // InternalGo.g:3626:4: (lv_block_4_0= ruleblock )
            // InternalGo.g:3627:5: lv_block_4_0= ruleblock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForStmtAccess().getBlockBlockParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_block_4_0=ruleblock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForStmtRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_4_0,
              						"org.xtext.Go.block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleforStmt"


    // $ANTLR start "entryRuleforClause"
    // InternalGo.g:3648:1: entryRuleforClause returns [EObject current=null] : iv_ruleforClause= ruleforClause EOF ;
    public final EObject entryRuleforClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleforClause = null;


        try {
            // InternalGo.g:3648:50: (iv_ruleforClause= ruleforClause EOF )
            // InternalGo.g:3649:2: iv_ruleforClause= ruleforClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleforClause=ruleforClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleforClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleforClause"


    // $ANTLR start "ruleforClause"
    // InternalGo.g:3655:1: ruleforClause returns [EObject current=null] : ( ( (lv_simpleStmt_0_0= rulesimpleStmt ) )? otherlv_1= ';' ( (lv_expression_2_0= ruleexpression ) )? otherlv_3= ';' ( (lv_simpleStmt_4_0= rulesimpleStmt ) )? ) ;
    public final EObject ruleforClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_simpleStmt_0_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_simpleStmt_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3661:2: ( ( ( (lv_simpleStmt_0_0= rulesimpleStmt ) )? otherlv_1= ';' ( (lv_expression_2_0= ruleexpression ) )? otherlv_3= ';' ( (lv_simpleStmt_4_0= rulesimpleStmt ) )? ) )
            // InternalGo.g:3662:2: ( ( (lv_simpleStmt_0_0= rulesimpleStmt ) )? otherlv_1= ';' ( (lv_expression_2_0= ruleexpression ) )? otherlv_3= ';' ( (lv_simpleStmt_4_0= rulesimpleStmt ) )? )
            {
            // InternalGo.g:3662:2: ( ( (lv_simpleStmt_0_0= rulesimpleStmt ) )? otherlv_1= ';' ( (lv_expression_2_0= ruleexpression ) )? otherlv_3= ';' ( (lv_simpleStmt_4_0= rulesimpleStmt ) )? )
            // InternalGo.g:3663:3: ( (lv_simpleStmt_0_0= rulesimpleStmt ) )? otherlv_1= ';' ( (lv_expression_2_0= ruleexpression ) )? otherlv_3= ';' ( (lv_simpleStmt_4_0= rulesimpleStmt ) )?
            {
            // InternalGo.g:3663:3: ( (lv_simpleStmt_0_0= rulesimpleStmt ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( ((LA48_0>=RULE_IDENTIFIER && LA48_0<=RULE_BINARY_OP)||LA48_0==47||LA48_0==49||(LA48_0>=51 && LA48_0<=52)||LA48_0==54||(LA48_0>=58 && LA48_0<=71)||LA48_0==89||(LA48_0>=91 && LA48_0<=93)||(LA48_0>=95 && LA48_0<=96)) ) {
                alt48=1;
            }
            else if ( (LA48_0==44) ) {
                int LA48_2 = input.LA(2);

                if ( (synpred81_InternalGo()) ) {
                    alt48=1;
                }
            }
            switch (alt48) {
                case 1 :
                    // InternalGo.g:3664:4: (lv_simpleStmt_0_0= rulesimpleStmt )
                    {
                    // InternalGo.g:3664:4: (lv_simpleStmt_0_0= rulesimpleStmt )
                    // InternalGo.g:3665:5: lv_simpleStmt_0_0= rulesimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getSimpleStmtSimpleStmtParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_4);
                    lv_simpleStmt_0_0=rulesimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"simpleStmt",
                      						lv_simpleStmt_0_0,
                      						"org.xtext.Go.simpleStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,44,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getForClauseAccess().getSemicolonKeyword_1());
              		
            }
            // InternalGo.g:3686:3: ( (lv_expression_2_0= ruleexpression ) )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( ((LA49_0>=RULE_IDENTIFIER && LA49_0<=RULE_STRING_LIT)||(LA49_0>=RULE_INT_LIT && LA49_0<=RULE_BINARY_OP)||LA49_0==47||LA49_0==49||LA49_0==54||LA49_0==58||(LA49_0>=61 && LA49_0<=62)||(LA49_0>=64 && LA49_0<=65)||LA49_0==70||LA49_0==89||(LA49_0>=91 && LA49_0<=93)||(LA49_0>=95 && LA49_0<=96)) ) {
                alt49=1;
            }
            else if ( (LA49_0==44) ) {
                int LA49_2 = input.LA(2);

                if ( (synpred82_InternalGo()) ) {
                    alt49=1;
                }
            }
            switch (alt49) {
                case 1 :
                    // InternalGo.g:3687:4: (lv_expression_2_0= ruleexpression )
                    {
                    // InternalGo.g:3687:4: (lv_expression_2_0= ruleexpression )
                    // InternalGo.g:3688:5: lv_expression_2_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getExpressionExpressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_4);
                    lv_expression_2_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_2_0,
                      						"org.xtext.Go.expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,44,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getForClauseAccess().getSemicolonKeyword_3());
              		
            }
            // InternalGo.g:3709:3: ( (lv_simpleStmt_4_0= rulesimpleStmt ) )?
            int alt50=2;
            switch ( input.LA(1) ) {
                case RULE_IDENTIFIER:
                case RULE_STRING_LIT:
                case RULE_WS:
                case RULE_INT_LIT:
                case RULE_FLOAT_LIT:
                case RULE_IMAGINARY_LIT:
                case RULE_RUNE_LIT:
                case RULE_BINARY_OP:
                case 47:
                case 49:
                case 51:
                case 52:
                case 54:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 65:
                case 66:
                case 67:
                case 68:
                case 69:
                case 70:
                case 71:
                case 89:
                case 91:
                case 92:
                case 93:
                case 95:
                case 96:
                    {
                    alt50=1;
                    }
                    break;
                case 56:
                    {
                    int LA50_2 = input.LA(2);

                    if ( (synpred83_InternalGo()) ) {
                        alt50=1;
                    }
                    }
                    break;
                case EOF:
                    {
                    int LA50_3 = input.LA(2);

                    if ( (synpred83_InternalGo()) ) {
                        alt50=1;
                    }
                    }
                    break;
            }

            switch (alt50) {
                case 1 :
                    // InternalGo.g:3710:4: (lv_simpleStmt_4_0= rulesimpleStmt )
                    {
                    // InternalGo.g:3710:4: (lv_simpleStmt_4_0= rulesimpleStmt )
                    // InternalGo.g:3711:5: lv_simpleStmt_4_0= rulesimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getSimpleStmtSimpleStmtParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_simpleStmt_4_0=rulesimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"simpleStmt",
                      						lv_simpleStmt_4_0,
                      						"org.xtext.Go.simpleStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleforClause"


    // $ANTLR start "entryRulerangeClause"
    // InternalGo.g:3732:1: entryRulerangeClause returns [EObject current=null] : iv_rulerangeClause= rulerangeClause EOF ;
    public final EObject entryRulerangeClause() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerangeClause = null;


        try {
            // InternalGo.g:3732:52: (iv_rulerangeClause= rulerangeClause EOF )
            // InternalGo.g:3733:2: iv_rulerangeClause= rulerangeClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRangeClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerangeClause=rulerangeClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerangeClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerangeClause"


    // $ANTLR start "rulerangeClause"
    // InternalGo.g:3739:1: rulerangeClause returns [EObject current=null] : ( ( ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleexpression ) ) ) ;
    public final EObject rulerangeClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expressionList_0_0 = null;

        AntlrDatatypeRuleToken lv_identifierList_2_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3745:2: ( ( ( ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleexpression ) ) ) )
            // InternalGo.g:3746:2: ( ( ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleexpression ) ) )
            {
            // InternalGo.g:3746:2: ( ( ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleexpression ) ) )
            // InternalGo.g:3747:3: ( ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expression_5_0= ruleexpression ) )
            {
            // InternalGo.g:3747:3: ( ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )?
            int alt51=3;
            alt51 = dfa51.predict(input);
            switch (alt51) {
                case 1 :
                    // InternalGo.g:3748:4: ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' )
                    {
                    // InternalGo.g:3748:4: ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' )
                    // InternalGo.g:3749:5: ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '='
                    {
                    // InternalGo.g:3749:5: ( (lv_expressionList_0_0= ruleexpressionList ) )
                    // InternalGo.g:3750:6: (lv_expressionList_0_0= ruleexpressionList )
                    {
                    // InternalGo.g:3750:6: (lv_expressionList_0_0= ruleexpressionList )
                    // InternalGo.g:3751:7: lv_expressionList_0_0= ruleexpressionList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRangeClauseAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_13);
                    lv_expressionList_0_0=ruleexpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRangeClauseRule());
                      							}
                      							set(
                      								current,
                      								"expressionList",
                      								lv_expressionList_0_0,
                      								"org.xtext.Go.expressionList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,51,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getRangeClauseAccess().getEqualsSignKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3774:4: ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' )
                    {
                    // InternalGo.g:3774:4: ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' )
                    // InternalGo.g:3775:5: ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':='
                    {
                    // InternalGo.g:3775:5: ( (lv_identifierList_2_0= ruleidentifierList ) )
                    // InternalGo.g:3776:6: (lv_identifierList_2_0= ruleidentifierList )
                    {
                    // InternalGo.g:3776:6: (lv_identifierList_2_0= ruleidentifierList )
                    // InternalGo.g:3777:7: lv_identifierList_2_0= ruleidentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRangeClauseAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_27);
                    lv_identifierList_2_0=ruleidentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRangeClauseRule());
                      							}
                      							set(
                      								current,
                      								"identifierList",
                      								lv_identifierList_2_0,
                      								"org.xtext.Go.identifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,72,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,87,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRangeClauseAccess().getRangeKeyword_1());
              		
            }
            // InternalGo.g:3804:3: ( (lv_expression_5_0= ruleexpression ) )
            // InternalGo.g:3805:4: (lv_expression_5_0= ruleexpression )
            {
            // InternalGo.g:3805:4: (lv_expression_5_0= ruleexpression )
            // InternalGo.g:3806:5: lv_expression_5_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRangeClauseAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRangeClauseRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerangeClause"


    // $ANTLR start "entryRulegoStmt"
    // InternalGo.g:3827:1: entryRulegoStmt returns [EObject current=null] : iv_rulegoStmt= rulegoStmt EOF ;
    public final EObject entryRulegoStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulegoStmt = null;


        try {
            // InternalGo.g:3827:47: (iv_rulegoStmt= rulegoStmt EOF )
            // InternalGo.g:3828:2: iv_rulegoStmt= rulegoStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGoStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulegoStmt=rulegoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulegoStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulegoStmt"


    // $ANTLR start "rulegoStmt"
    // InternalGo.g:3834:1: rulegoStmt returns [EObject current=null] : (otherlv_0= 'go' ( (lv_expression_1_0= ruleexpression ) ) ) ;
    public final EObject rulegoStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_expression_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3840:2: ( (otherlv_0= 'go' ( (lv_expression_1_0= ruleexpression ) ) ) )
            // InternalGo.g:3841:2: (otherlv_0= 'go' ( (lv_expression_1_0= ruleexpression ) ) )
            {
            // InternalGo.g:3841:2: (otherlv_0= 'go' ( (lv_expression_1_0= ruleexpression ) ) )
            // InternalGo.g:3842:3: otherlv_0= 'go' ( (lv_expression_1_0= ruleexpression ) )
            {
            otherlv_0=(Token)match(input,88,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getGoStmtAccess().getGoKeyword_0());
              		
            }
            // InternalGo.g:3846:3: ( (lv_expression_1_0= ruleexpression ) )
            // InternalGo.g:3847:4: (lv_expression_1_0= ruleexpression )
            {
            // InternalGo.g:3847:4: (lv_expression_1_0= ruleexpression )
            // InternalGo.g:3848:5: lv_expression_1_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGoStmtAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_1_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGoStmtRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_1_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulegoStmt"


    // $ANTLR start "entryRuletype"
    // InternalGo.g:3869:1: entryRuletype returns [EObject current=null] : iv_ruletype= ruletype EOF ;
    public final EObject entryRuletype() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletype = null;


        try {
            // InternalGo.g:3869:45: (iv_ruletype= ruletype EOF )
            // InternalGo.g:3870:2: iv_ruletype= ruletype EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletype=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletype; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletype"


    // $ANTLR start "ruletype"
    // InternalGo.g:3876:1: ruletype returns [EObject current=null] : ( ( (lv_typeName_0_0= ruletypeName ) ) | ( (lv_typeLit_1_0= ruletypeLit ) ) | (otherlv_2= '(' ( (lv_type_3_0= ruletype ) ) otherlv_4= ')' ) ) ;
    public final EObject ruletype() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_typeName_0_0 = null;

        EObject lv_typeLit_1_0 = null;

        EObject lv_type_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3882:2: ( ( ( (lv_typeName_0_0= ruletypeName ) ) | ( (lv_typeLit_1_0= ruletypeLit ) ) | (otherlv_2= '(' ( (lv_type_3_0= ruletype ) ) otherlv_4= ')' ) ) )
            // InternalGo.g:3883:2: ( ( (lv_typeName_0_0= ruletypeName ) ) | ( (lv_typeLit_1_0= ruletypeLit ) ) | (otherlv_2= '(' ( (lv_type_3_0= ruletype ) ) otherlv_4= ')' ) )
            {
            // InternalGo.g:3883:2: ( ( (lv_typeName_0_0= ruletypeName ) ) | ( (lv_typeLit_1_0= ruletypeLit ) ) | (otherlv_2= '(' ( (lv_type_3_0= ruletype ) ) otherlv_4= ')' ) )
            int alt52=3;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                alt52=1;
                }
                break;
            case 54:
            case 58:
            case 65:
            case 89:
            case 91:
            case 92:
            case 93:
            case 95:
                {
                alt52=2;
                }
                break;
            case 47:
                {
                alt52=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }

            switch (alt52) {
                case 1 :
                    // InternalGo.g:3884:3: ( (lv_typeName_0_0= ruletypeName ) )
                    {
                    // InternalGo.g:3884:3: ( (lv_typeName_0_0= ruletypeName ) )
                    // InternalGo.g:3885:4: (lv_typeName_0_0= ruletypeName )
                    {
                    // InternalGo.g:3885:4: (lv_typeName_0_0= ruletypeName )
                    // InternalGo.g:3886:5: lv_typeName_0_0= ruletypeName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeAccess().getTypeNameTypeNameParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeName_0_0=ruletypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeRule());
                      					}
                      					set(
                      						current,
                      						"typeName",
                      						lv_typeName_0_0,
                      						"org.xtext.Go.typeName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3904:3: ( (lv_typeLit_1_0= ruletypeLit ) )
                    {
                    // InternalGo.g:3904:3: ( (lv_typeLit_1_0= ruletypeLit ) )
                    // InternalGo.g:3905:4: (lv_typeLit_1_0= ruletypeLit )
                    {
                    // InternalGo.g:3905:4: (lv_typeLit_1_0= ruletypeLit )
                    // InternalGo.g:3906:5: lv_typeLit_1_0= ruletypeLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeAccess().getTypeLitTypeLitParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeLit_1_0=ruletypeLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeRule());
                      					}
                      					set(
                      						current,
                      						"typeLit",
                      						lv_typeLit_1_0,
                      						"org.xtext.Go.typeLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3924:3: (otherlv_2= '(' ( (lv_type_3_0= ruletype ) ) otherlv_4= ')' )
                    {
                    // InternalGo.g:3924:3: (otherlv_2= '(' ( (lv_type_3_0= ruletype ) ) otherlv_4= ')' )
                    // InternalGo.g:3925:4: otherlv_2= '(' ( (lv_type_3_0= ruletype ) ) otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,47,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalGo.g:3929:4: ( (lv_type_3_0= ruletype ) )
                    // InternalGo.g:3930:5: (lv_type_3_0= ruletype )
                    {
                    // InternalGo.g:3930:5: (lv_type_3_0= ruletype )
                    // InternalGo.g:3931:6: lv_type_3_0= ruletype
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeAccess().getTypeTypeParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_41);
                    lv_type_3_0=ruletype();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_3_0,
                      							"org.xtext.Go.type");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletype"


    // $ANTLR start "entryRuletypeName"
    // InternalGo.g:3957:1: entryRuletypeName returns [EObject current=null] : iv_ruletypeName= ruletypeName EOF ;
    public final EObject entryRuletypeName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeName = null;


        try {
            // InternalGo.g:3957:49: (iv_ruletypeName= ruletypeName EOF )
            // InternalGo.g:3958:2: iv_ruletypeName= ruletypeName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeName=ruletypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeName"


    // $ANTLR start "ruletypeName"
    // InternalGo.g:3964:1: ruletypeName returns [EObject current=null] : (this_IDENTIFIER_0= RULE_IDENTIFIER | ( (lv_qualifiedIdent_1_0= rulequalifiedIdent ) ) ) ;
    public final EObject ruletypeName() throws RecognitionException {
        EObject current = null;

        Token this_IDENTIFIER_0=null;
        AntlrDatatypeRuleToken lv_qualifiedIdent_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3970:2: ( (this_IDENTIFIER_0= RULE_IDENTIFIER | ( (lv_qualifiedIdent_1_0= rulequalifiedIdent ) ) ) )
            // InternalGo.g:3971:2: (this_IDENTIFIER_0= RULE_IDENTIFIER | ( (lv_qualifiedIdent_1_0= rulequalifiedIdent ) ) )
            {
            // InternalGo.g:3971:2: (this_IDENTIFIER_0= RULE_IDENTIFIER | ( (lv_qualifiedIdent_1_0= rulequalifiedIdent ) ) )
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==RULE_IDENTIFIER) ) {
                int LA53_1 = input.LA(2);

                if ( (LA53_1==EOF||LA53_1==RULE_STRING_LIT||LA53_1==44||(LA53_1>=47 && LA53_1<=48)||(LA53_1>=51 && LA53_1<=52)||LA53_1==56||LA53_1==73||LA53_1==90||LA53_1==94) ) {
                    alt53=1;
                }
                else if ( (LA53_1==49) ) {
                    int LA53_3 = input.LA(3);

                    if ( (LA53_3==RULE_IDENTIFIER) ) {
                        int LA53_4 = input.LA(4);

                        if ( (synpred88_InternalGo()) ) {
                            alt53=1;
                        }
                        else if ( (true) ) {
                            alt53=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 53, 4, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 53, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }
            switch (alt53) {
                case 1 :
                    // InternalGo.g:3972:3: this_IDENTIFIER_0= RULE_IDENTIFIER
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_IDENTIFIER_0, grammarAccess.getTypeNameAccess().getIDENTIFIERTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:3977:3: ( (lv_qualifiedIdent_1_0= rulequalifiedIdent ) )
                    {
                    // InternalGo.g:3977:3: ( (lv_qualifiedIdent_1_0= rulequalifiedIdent ) )
                    // InternalGo.g:3978:4: (lv_qualifiedIdent_1_0= rulequalifiedIdent )
                    {
                    // InternalGo.g:3978:4: (lv_qualifiedIdent_1_0= rulequalifiedIdent )
                    // InternalGo.g:3979:5: lv_qualifiedIdent_1_0= rulequalifiedIdent
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeNameAccess().getQualifiedIdentQualifiedIdentParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_qualifiedIdent_1_0=rulequalifiedIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeNameRule());
                      					}
                      					set(
                      						current,
                      						"qualifiedIdent",
                      						lv_qualifiedIdent_1_0,
                      						"org.xtext.Go.qualifiedIdent");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeName"


    // $ANTLR start "entryRuletypeLit"
    // InternalGo.g:4000:1: entryRuletypeLit returns [EObject current=null] : iv_ruletypeLit= ruletypeLit EOF ;
    public final EObject entryRuletypeLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeLit = null;


        try {
            // InternalGo.g:4000:48: (iv_ruletypeLit= ruletypeLit EOF )
            // InternalGo.g:4001:2: iv_ruletypeLit= ruletypeLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeLit=ruletypeLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeLit"


    // $ANTLR start "ruletypeLit"
    // InternalGo.g:4007:1: ruletypeLit returns [EObject current=null] : ( ( (lv_arrayType_0_0= rulearrayType ) ) | ( (lv_structType_1_0= rulestructType ) ) | ( (lv_pointerType_2_0= rulepointerType ) ) | ( (lv_functionType_3_0= rulefunctionType ) ) | ( (lv_interfaceType_4_0= ruleinterfaceType ) ) | ( (lv_sliceType_5_0= rulesliceType ) ) | ( (lv_mapType_6_0= rulemapType ) ) | ( (lv_channelType_7_0= rulechannelType ) ) ) ;
    public final EObject ruletypeLit() throws RecognitionException {
        EObject current = null;

        EObject lv_arrayType_0_0 = null;

        EObject lv_structType_1_0 = null;

        EObject lv_pointerType_2_0 = null;

        EObject lv_functionType_3_0 = null;

        EObject lv_interfaceType_4_0 = null;

        EObject lv_sliceType_5_0 = null;

        EObject lv_mapType_6_0 = null;

        EObject lv_channelType_7_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4013:2: ( ( ( (lv_arrayType_0_0= rulearrayType ) ) | ( (lv_structType_1_0= rulestructType ) ) | ( (lv_pointerType_2_0= rulepointerType ) ) | ( (lv_functionType_3_0= rulefunctionType ) ) | ( (lv_interfaceType_4_0= ruleinterfaceType ) ) | ( (lv_sliceType_5_0= rulesliceType ) ) | ( (lv_mapType_6_0= rulemapType ) ) | ( (lv_channelType_7_0= rulechannelType ) ) ) )
            // InternalGo.g:4014:2: ( ( (lv_arrayType_0_0= rulearrayType ) ) | ( (lv_structType_1_0= rulestructType ) ) | ( (lv_pointerType_2_0= rulepointerType ) ) | ( (lv_functionType_3_0= rulefunctionType ) ) | ( (lv_interfaceType_4_0= ruleinterfaceType ) ) | ( (lv_sliceType_5_0= rulesliceType ) ) | ( (lv_mapType_6_0= rulemapType ) ) | ( (lv_channelType_7_0= rulechannelType ) ) )
            {
            // InternalGo.g:4014:2: ( ( (lv_arrayType_0_0= rulearrayType ) ) | ( (lv_structType_1_0= rulestructType ) ) | ( (lv_pointerType_2_0= rulepointerType ) ) | ( (lv_functionType_3_0= rulefunctionType ) ) | ( (lv_interfaceType_4_0= ruleinterfaceType ) ) | ( (lv_sliceType_5_0= rulesliceType ) ) | ( (lv_mapType_6_0= rulemapType ) ) | ( (lv_channelType_7_0= rulechannelType ) ) )
            int alt54=8;
            alt54 = dfa54.predict(input);
            switch (alt54) {
                case 1 :
                    // InternalGo.g:4015:3: ( (lv_arrayType_0_0= rulearrayType ) )
                    {
                    // InternalGo.g:4015:3: ( (lv_arrayType_0_0= rulearrayType ) )
                    // InternalGo.g:4016:4: (lv_arrayType_0_0= rulearrayType )
                    {
                    // InternalGo.g:4016:4: (lv_arrayType_0_0= rulearrayType )
                    // InternalGo.g:4017:5: lv_arrayType_0_0= rulearrayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getArrayTypeArrayTypeParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arrayType_0_0=rulearrayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"arrayType",
                      						lv_arrayType_0_0,
                      						"org.xtext.Go.arrayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4035:3: ( (lv_structType_1_0= rulestructType ) )
                    {
                    // InternalGo.g:4035:3: ( (lv_structType_1_0= rulestructType ) )
                    // InternalGo.g:4036:4: (lv_structType_1_0= rulestructType )
                    {
                    // InternalGo.g:4036:4: (lv_structType_1_0= rulestructType )
                    // InternalGo.g:4037:5: lv_structType_1_0= rulestructType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getStructTypeStructTypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_structType_1_0=rulestructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"structType",
                      						lv_structType_1_0,
                      						"org.xtext.Go.structType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:4055:3: ( (lv_pointerType_2_0= rulepointerType ) )
                    {
                    // InternalGo.g:4055:3: ( (lv_pointerType_2_0= rulepointerType ) )
                    // InternalGo.g:4056:4: (lv_pointerType_2_0= rulepointerType )
                    {
                    // InternalGo.g:4056:4: (lv_pointerType_2_0= rulepointerType )
                    // InternalGo.g:4057:5: lv_pointerType_2_0= rulepointerType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getPointerTypePointerTypeParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_pointerType_2_0=rulepointerType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"pointerType",
                      						lv_pointerType_2_0,
                      						"org.xtext.Go.pointerType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:4075:3: ( (lv_functionType_3_0= rulefunctionType ) )
                    {
                    // InternalGo.g:4075:3: ( (lv_functionType_3_0= rulefunctionType ) )
                    // InternalGo.g:4076:4: (lv_functionType_3_0= rulefunctionType )
                    {
                    // InternalGo.g:4076:4: (lv_functionType_3_0= rulefunctionType )
                    // InternalGo.g:4077:5: lv_functionType_3_0= rulefunctionType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getFunctionTypeFunctionTypeParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_functionType_3_0=rulefunctionType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"functionType",
                      						lv_functionType_3_0,
                      						"org.xtext.Go.functionType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:4095:3: ( (lv_interfaceType_4_0= ruleinterfaceType ) )
                    {
                    // InternalGo.g:4095:3: ( (lv_interfaceType_4_0= ruleinterfaceType ) )
                    // InternalGo.g:4096:4: (lv_interfaceType_4_0= ruleinterfaceType )
                    {
                    // InternalGo.g:4096:4: (lv_interfaceType_4_0= ruleinterfaceType )
                    // InternalGo.g:4097:5: lv_interfaceType_4_0= ruleinterfaceType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getInterfaceTypeInterfaceTypeParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_interfaceType_4_0=ruleinterfaceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"interfaceType",
                      						lv_interfaceType_4_0,
                      						"org.xtext.Go.interfaceType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:4115:3: ( (lv_sliceType_5_0= rulesliceType ) )
                    {
                    // InternalGo.g:4115:3: ( (lv_sliceType_5_0= rulesliceType ) )
                    // InternalGo.g:4116:4: (lv_sliceType_5_0= rulesliceType )
                    {
                    // InternalGo.g:4116:4: (lv_sliceType_5_0= rulesliceType )
                    // InternalGo.g:4117:5: lv_sliceType_5_0= rulesliceType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getSliceTypeSliceTypeParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_sliceType_5_0=rulesliceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"sliceType",
                      						lv_sliceType_5_0,
                      						"org.xtext.Go.sliceType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalGo.g:4135:3: ( (lv_mapType_6_0= rulemapType ) )
                    {
                    // InternalGo.g:4135:3: ( (lv_mapType_6_0= rulemapType ) )
                    // InternalGo.g:4136:4: (lv_mapType_6_0= rulemapType )
                    {
                    // InternalGo.g:4136:4: (lv_mapType_6_0= rulemapType )
                    // InternalGo.g:4137:5: lv_mapType_6_0= rulemapType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getMapTypeMapTypeParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_mapType_6_0=rulemapType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"mapType",
                      						lv_mapType_6_0,
                      						"org.xtext.Go.mapType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalGo.g:4155:3: ( (lv_channelType_7_0= rulechannelType ) )
                    {
                    // InternalGo.g:4155:3: ( (lv_channelType_7_0= rulechannelType ) )
                    // InternalGo.g:4156:4: (lv_channelType_7_0= rulechannelType )
                    {
                    // InternalGo.g:4156:4: (lv_channelType_7_0= rulechannelType )
                    // InternalGo.g:4157:5: lv_channelType_7_0= rulechannelType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getChannelTypeChannelTypeParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_channelType_7_0=rulechannelType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"channelType",
                      						lv_channelType_7_0,
                      						"org.xtext.Go.channelType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeLit"


    // $ANTLR start "entryRulearrayType"
    // InternalGo.g:4178:1: entryRulearrayType returns [EObject current=null] : iv_rulearrayType= rulearrayType EOF ;
    public final EObject entryRulearrayType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulearrayType = null;


        try {
            // InternalGo.g:4178:50: (iv_rulearrayType= rulearrayType EOF )
            // InternalGo.g:4179:2: iv_rulearrayType= rulearrayType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulearrayType=rulearrayType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulearrayType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulearrayType"


    // $ANTLR start "rulearrayType"
    // InternalGo.g:4185:1: rulearrayType returns [EObject current=null] : (otherlv_0= '[' ( (lv_arrayLength_1_0= rulearrayLength ) ) otherlv_2= ']' ( (lv_elementType_3_0= ruleelementType ) ) ) ;
    public final EObject rulearrayType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_arrayLength_1_0 = null;

        EObject lv_elementType_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4191:2: ( (otherlv_0= '[' ( (lv_arrayLength_1_0= rulearrayLength ) ) otherlv_2= ']' ( (lv_elementType_3_0= ruleelementType ) ) ) )
            // InternalGo.g:4192:2: (otherlv_0= '[' ( (lv_arrayLength_1_0= rulearrayLength ) ) otherlv_2= ']' ( (lv_elementType_3_0= ruleelementType ) ) )
            {
            // InternalGo.g:4192:2: (otherlv_0= '[' ( (lv_arrayLength_1_0= rulearrayLength ) ) otherlv_2= ']' ( (lv_elementType_3_0= ruleelementType ) ) )
            // InternalGo.g:4193:3: otherlv_0= '[' ( (lv_arrayLength_1_0= rulearrayLength ) ) otherlv_2= ']' ( (lv_elementType_3_0= ruleelementType ) )
            {
            otherlv_0=(Token)match(input,89,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalGo.g:4197:3: ( (lv_arrayLength_1_0= rulearrayLength ) )
            // InternalGo.g:4198:4: (lv_arrayLength_1_0= rulearrayLength )
            {
            // InternalGo.g:4198:4: (lv_arrayLength_1_0= rulearrayLength )
            // InternalGo.g:4199:5: lv_arrayLength_1_0= rulearrayLength
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArrayTypeAccess().getArrayLengthArrayLengthParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_46);
            lv_arrayLength_1_0=rulearrayLength();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArrayTypeRule());
              					}
              					set(
              						current,
              						"arrayLength",
              						lv_arrayLength_1_0,
              						"org.xtext.Go.arrayLength");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,90,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2());
              		
            }
            // InternalGo.g:4220:3: ( (lv_elementType_3_0= ruleelementType ) )
            // InternalGo.g:4221:4: (lv_elementType_3_0= ruleelementType )
            {
            // InternalGo.g:4221:4: (lv_elementType_3_0= ruleelementType )
            // InternalGo.g:4222:5: lv_elementType_3_0= ruleelementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArrayTypeAccess().getElementTypeElementTypeParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elementType_3_0=ruleelementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArrayTypeRule());
              					}
              					set(
              						current,
              						"elementType",
              						lv_elementType_3_0,
              						"org.xtext.Go.elementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulearrayType"


    // $ANTLR start "entryRulearrayLength"
    // InternalGo.g:4243:1: entryRulearrayLength returns [EObject current=null] : iv_rulearrayLength= rulearrayLength EOF ;
    public final EObject entryRulearrayLength() throws RecognitionException {
        EObject current = null;

        EObject iv_rulearrayLength = null;


        try {
            // InternalGo.g:4243:52: (iv_rulearrayLength= rulearrayLength EOF )
            // InternalGo.g:4244:2: iv_rulearrayLength= rulearrayLength EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayLengthRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulearrayLength=rulearrayLength();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulearrayLength; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulearrayLength"


    // $ANTLR start "rulearrayLength"
    // InternalGo.g:4250:1: rulearrayLength returns [EObject current=null] : ( (lv_expression_0_0= ruleexpression ) ) ;
    public final EObject rulearrayLength() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4256:2: ( ( (lv_expression_0_0= ruleexpression ) ) )
            // InternalGo.g:4257:2: ( (lv_expression_0_0= ruleexpression ) )
            {
            // InternalGo.g:4257:2: ( (lv_expression_0_0= ruleexpression ) )
            // InternalGo.g:4258:3: (lv_expression_0_0= ruleexpression )
            {
            // InternalGo.g:4258:3: (lv_expression_0_0= ruleexpression )
            // InternalGo.g:4259:4: lv_expression_0_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getArrayLengthAccess().getExpressionExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_expression_0_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getArrayLengthRule());
              				}
              				set(
              					current,
              					"expression",
              					lv_expression_0_0,
              					"org.xtext.Go.expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulearrayLength"


    // $ANTLR start "entryRuleelementType"
    // InternalGo.g:4279:1: entryRuleelementType returns [EObject current=null] : iv_ruleelementType= ruleelementType EOF ;
    public final EObject entryRuleelementType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleelementType = null;


        try {
            // InternalGo.g:4279:52: (iv_ruleelementType= ruleelementType EOF )
            // InternalGo.g:4280:2: iv_ruleelementType= ruleelementType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleelementType=ruleelementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleelementType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleelementType"


    // $ANTLR start "ruleelementType"
    // InternalGo.g:4286:1: ruleelementType returns [EObject current=null] : ( (lv_type_0_0= ruletype ) ) ;
    public final EObject ruleelementType() throws RecognitionException {
        EObject current = null;

        EObject lv_type_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4292:2: ( ( (lv_type_0_0= ruletype ) ) )
            // InternalGo.g:4293:2: ( (lv_type_0_0= ruletype ) )
            {
            // InternalGo.g:4293:2: ( (lv_type_0_0= ruletype ) )
            // InternalGo.g:4294:3: (lv_type_0_0= ruletype )
            {
            // InternalGo.g:4294:3: (lv_type_0_0= ruletype )
            // InternalGo.g:4295:4: lv_type_0_0= ruletype
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getElementTypeAccess().getTypeTypeParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_type_0_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getElementTypeRule());
              				}
              				set(
              					current,
              					"type",
              					lv_type_0_0,
              					"org.xtext.Go.type");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleelementType"


    // $ANTLR start "entryRulepointerType"
    // InternalGo.g:4315:1: entryRulepointerType returns [EObject current=null] : iv_rulepointerType= rulepointerType EOF ;
    public final EObject entryRulepointerType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulepointerType = null;


        try {
            // InternalGo.g:4315:52: (iv_rulepointerType= rulepointerType EOF )
            // InternalGo.g:4316:2: iv_rulepointerType= rulepointerType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPointerTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulepointerType=rulepointerType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulepointerType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulepointerType"


    // $ANTLR start "rulepointerType"
    // InternalGo.g:4322:1: rulepointerType returns [EObject current=null] : (otherlv_0= '*' ( (lv_type_1_0= ruletype ) ) ) ;
    public final EObject rulepointerType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_type_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4328:2: ( (otherlv_0= '*' ( (lv_type_1_0= ruletype ) ) ) )
            // InternalGo.g:4329:2: (otherlv_0= '*' ( (lv_type_1_0= ruletype ) ) )
            {
            // InternalGo.g:4329:2: (otherlv_0= '*' ( (lv_type_1_0= ruletype ) ) )
            // InternalGo.g:4330:3: otherlv_0= '*' ( (lv_type_1_0= ruletype ) )
            {
            otherlv_0=(Token)match(input,65,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0());
              		
            }
            // InternalGo.g:4334:3: ( (lv_type_1_0= ruletype ) )
            // InternalGo.g:4335:4: (lv_type_1_0= ruletype )
            {
            // InternalGo.g:4335:4: (lv_type_1_0= ruletype )
            // InternalGo.g:4336:5: lv_type_1_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPointerTypeAccess().getTypeTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_type_1_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPointerTypeRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_1_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulepointerType"


    // $ANTLR start "entryRuleinterfaceType"
    // InternalGo.g:4357:1: entryRuleinterfaceType returns [EObject current=null] : iv_ruleinterfaceType= ruleinterfaceType EOF ;
    public final EObject entryRuleinterfaceType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleinterfaceType = null;


        try {
            // InternalGo.g:4357:54: (iv_ruleinterfaceType= ruleinterfaceType EOF )
            // InternalGo.g:4358:2: iv_ruleinterfaceType= ruleinterfaceType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterfaceTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinterfaceType=ruleinterfaceType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinterfaceType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinterfaceType"


    // $ANTLR start "ruleinterfaceType"
    // InternalGo.g:4364:1: ruleinterfaceType returns [EObject current=null] : (otherlv_0= 'interface' otherlv_1= '{' ( ( (lv_methodSpec_2_0= rulemethodSpec ) ) otherlv_3= ';' )* otherlv_4= '}' ) ;
    public final EObject ruleinterfaceType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_methodSpec_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4370:2: ( (otherlv_0= 'interface' otherlv_1= '{' ( ( (lv_methodSpec_2_0= rulemethodSpec ) ) otherlv_3= ';' )* otherlv_4= '}' ) )
            // InternalGo.g:4371:2: (otherlv_0= 'interface' otherlv_1= '{' ( ( (lv_methodSpec_2_0= rulemethodSpec ) ) otherlv_3= ';' )* otherlv_4= '}' )
            {
            // InternalGo.g:4371:2: (otherlv_0= 'interface' otherlv_1= '{' ( ( (lv_methodSpec_2_0= rulemethodSpec ) ) otherlv_3= ';' )* otherlv_4= '}' )
            // InternalGo.g:4372:3: otherlv_0= 'interface' otherlv_1= '{' ( ( (lv_methodSpec_2_0= rulemethodSpec ) ) otherlv_3= ';' )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,91,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,56,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalGo.g:4380:3: ( ( (lv_methodSpec_2_0= rulemethodSpec ) ) otherlv_3= ';' )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==RULE_IDENTIFIER) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalGo.g:4381:4: ( (lv_methodSpec_2_0= rulemethodSpec ) ) otherlv_3= ';'
            	    {
            	    // InternalGo.g:4381:4: ( (lv_methodSpec_2_0= rulemethodSpec ) )
            	    // InternalGo.g:4382:5: (lv_methodSpec_2_0= rulemethodSpec )
            	    {
            	    // InternalGo.g:4382:5: (lv_methodSpec_2_0= rulemethodSpec )
            	    // InternalGo.g:4383:6: lv_methodSpec_2_0= rulemethodSpec
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getInterfaceTypeAccess().getMethodSpecMethodSpecParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_methodSpec_2_0=rulemethodSpec();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getInterfaceTypeRule());
            	      						}
            	      						set(
            	      							current,
            	      							"methodSpec",
            	      							lv_methodSpec_2_0,
            	      							"org.xtext.Go.methodSpec");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,44,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getInterfaceTypeAccess().getSemicolonKeyword_2_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            otherlv_4=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinterfaceType"


    // $ANTLR start "entryRulesliceType"
    // InternalGo.g:4413:1: entryRulesliceType returns [EObject current=null] : iv_rulesliceType= rulesliceType EOF ;
    public final EObject entryRulesliceType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulesliceType = null;


        try {
            // InternalGo.g:4413:50: (iv_rulesliceType= rulesliceType EOF )
            // InternalGo.g:4414:2: iv_rulesliceType= rulesliceType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSliceTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulesliceType=rulesliceType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesliceType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulesliceType"


    // $ANTLR start "rulesliceType"
    // InternalGo.g:4420:1: rulesliceType returns [EObject current=null] : (otherlv_0= '[' otherlv_1= ']' ( (lv_elementType_2_0= ruleelementType ) ) ) ;
    public final EObject rulesliceType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_elementType_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4426:2: ( (otherlv_0= '[' otherlv_1= ']' ( (lv_elementType_2_0= ruleelementType ) ) ) )
            // InternalGo.g:4427:2: (otherlv_0= '[' otherlv_1= ']' ( (lv_elementType_2_0= ruleelementType ) ) )
            {
            // InternalGo.g:4427:2: (otherlv_0= '[' otherlv_1= ']' ( (lv_elementType_2_0= ruleelementType ) ) )
            // InternalGo.g:4428:3: otherlv_0= '[' otherlv_1= ']' ( (lv_elementType_2_0= ruleelementType ) )
            {
            otherlv_0=(Token)match(input,89,FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSliceTypeAccess().getLeftSquareBracketKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,90,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSliceTypeAccess().getRightSquareBracketKeyword_1());
              		
            }
            // InternalGo.g:4436:3: ( (lv_elementType_2_0= ruleelementType ) )
            // InternalGo.g:4437:4: (lv_elementType_2_0= ruleelementType )
            {
            // InternalGo.g:4437:4: (lv_elementType_2_0= ruleelementType )
            // InternalGo.g:4438:5: lv_elementType_2_0= ruleelementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSliceTypeAccess().getElementTypeElementTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elementType_2_0=ruleelementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSliceTypeRule());
              					}
              					set(
              						current,
              						"elementType",
              						lv_elementType_2_0,
              						"org.xtext.Go.elementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulesliceType"


    // $ANTLR start "entryRulemapType"
    // InternalGo.g:4459:1: entryRulemapType returns [EObject current=null] : iv_rulemapType= rulemapType EOF ;
    public final EObject entryRulemapType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulemapType = null;


        try {
            // InternalGo.g:4459:48: (iv_rulemapType= rulemapType EOF )
            // InternalGo.g:4460:2: iv_rulemapType= rulemapType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulemapType=rulemapType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulemapType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulemapType"


    // $ANTLR start "rulemapType"
    // InternalGo.g:4466:1: rulemapType returns [EObject current=null] : (otherlv_0= 'map' otherlv_1= '[' ( (lv_type_2_0= ruletype ) ) otherlv_3= ']' ( (lv_elementType_4_0= ruleelementType ) ) ) ;
    public final EObject rulemapType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_type_2_0 = null;

        EObject lv_elementType_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4472:2: ( (otherlv_0= 'map' otherlv_1= '[' ( (lv_type_2_0= ruletype ) ) otherlv_3= ']' ( (lv_elementType_4_0= ruleelementType ) ) ) )
            // InternalGo.g:4473:2: (otherlv_0= 'map' otherlv_1= '[' ( (lv_type_2_0= ruletype ) ) otherlv_3= ']' ( (lv_elementType_4_0= ruleelementType ) ) )
            {
            // InternalGo.g:4473:2: (otherlv_0= 'map' otherlv_1= '[' ( (lv_type_2_0= ruletype ) ) otherlv_3= ']' ( (lv_elementType_4_0= ruleelementType ) ) )
            // InternalGo.g:4474:3: otherlv_0= 'map' otherlv_1= '[' ( (lv_type_2_0= ruletype ) ) otherlv_3= ']' ( (lv_elementType_4_0= ruleelementType ) )
            {
            otherlv_0=(Token)match(input,92,FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMapTypeAccess().getMapKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,89,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalGo.g:4482:3: ( (lv_type_2_0= ruletype ) )
            // InternalGo.g:4483:4: (lv_type_2_0= ruletype )
            {
            // InternalGo.g:4483:4: (lv_type_2_0= ruletype )
            // InternalGo.g:4484:5: lv_type_2_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapTypeAccess().getTypeTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_46);
            lv_type_2_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapTypeRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,90,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3());
              		
            }
            // InternalGo.g:4505:3: ( (lv_elementType_4_0= ruleelementType ) )
            // InternalGo.g:4506:4: (lv_elementType_4_0= ruleelementType )
            {
            // InternalGo.g:4506:4: (lv_elementType_4_0= ruleelementType )
            // InternalGo.g:4507:5: lv_elementType_4_0= ruleelementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapTypeAccess().getElementTypeElementTypeParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elementType_4_0=ruleelementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapTypeRule());
              					}
              					set(
              						current,
              						"elementType",
              						lv_elementType_4_0,
              						"org.xtext.Go.elementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulemapType"


    // $ANTLR start "entryRulechannelType"
    // InternalGo.g:4528:1: entryRulechannelType returns [EObject current=null] : iv_rulechannelType= rulechannelType EOF ;
    public final EObject entryRulechannelType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulechannelType = null;


        try {
            // InternalGo.g:4528:52: (iv_rulechannelType= rulechannelType EOF )
            // InternalGo.g:4529:2: iv_rulechannelType= rulechannelType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChannelTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulechannelType=rulechannelType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulechannelType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulechannelType"


    // $ANTLR start "rulechannelType"
    // InternalGo.g:4535:1: rulechannelType returns [EObject current=null] : ( (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_elementType_5_0= ruleelementType ) ) ) ;
    public final EObject rulechannelType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_elementType_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4541:2: ( ( (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_elementType_5_0= ruleelementType ) ) ) )
            // InternalGo.g:4542:2: ( (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_elementType_5_0= ruleelementType ) ) )
            {
            // InternalGo.g:4542:2: ( (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_elementType_5_0= ruleelementType ) ) )
            // InternalGo.g:4543:3: (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_elementType_5_0= ruleelementType ) )
            {
            // InternalGo.g:4543:3: (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) )
            int alt56=3;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==93) ) {
                int LA56_1 = input.LA(2);

                if ( (synpred97_InternalGo()) ) {
                    alt56=1;
                }
                else if ( (synpred98_InternalGo()) ) {
                    alt56=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA56_0==58) ) {
                alt56=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // InternalGo.g:4544:4: otherlv_0= 'chan'
                    {
                    otherlv_0=(Token)match(input,93,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getChannelTypeAccess().getChanKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:4549:4: (otherlv_1= 'chan' otherlv_2= '<-' )
                    {
                    // InternalGo.g:4549:4: (otherlv_1= 'chan' otherlv_2= '<-' )
                    // InternalGo.g:4550:5: otherlv_1= 'chan' otherlv_2= '<-'
                    {
                    otherlv_1=(Token)match(input,93,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_0());
                      				
                    }
                    otherlv_2=(Token)match(input,58,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:4560:4: (otherlv_3= '<-' otherlv_4= 'chan' )
                    {
                    // InternalGo.g:4560:4: (otherlv_3= '<-' otherlv_4= 'chan' )
                    // InternalGo.g:4561:5: otherlv_3= '<-' otherlv_4= 'chan'
                    {
                    otherlv_3=(Token)match(input,58,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_2_0());
                      				
                    }
                    otherlv_4=(Token)match(input,93,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getChannelTypeAccess().getChanKeyword_0_2_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:4571:3: ( (lv_elementType_5_0= ruleelementType ) )
            // InternalGo.g:4572:4: (lv_elementType_5_0= ruleelementType )
            {
            // InternalGo.g:4572:4: (lv_elementType_5_0= ruleelementType )
            // InternalGo.g:4573:5: lv_elementType_5_0= ruleelementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChannelTypeAccess().getElementTypeElementTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elementType_5_0=ruleelementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChannelTypeRule());
              					}
              					set(
              						current,
              						"elementType",
              						lv_elementType_5_0,
              						"org.xtext.Go.elementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulechannelType"


    // $ANTLR start "entryRulemethodSpec"
    // InternalGo.g:4594:1: entryRulemethodSpec returns [EObject current=null] : iv_rulemethodSpec= rulemethodSpec EOF ;
    public final EObject entryRulemethodSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_rulemethodSpec = null;


        try {
            // InternalGo.g:4594:51: (iv_rulemethodSpec= rulemethodSpec EOF )
            // InternalGo.g:4595:2: iv_rulemethodSpec= rulemethodSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulemethodSpec=rulemethodSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulemethodSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulemethodSpec"


    // $ANTLR start "rulemethodSpec"
    // InternalGo.g:4601:1: rulemethodSpec returns [EObject current=null] : ( (this_IDENTIFIER_0= RULE_IDENTIFIER ( (lv_signature_1_0= rulesignature ) ) ) | ( (lv_typeName_2_0= ruletypeName ) ) ) ;
    public final EObject rulemethodSpec() throws RecognitionException {
        EObject current = null;

        Token this_IDENTIFIER_0=null;
        EObject lv_signature_1_0 = null;

        EObject lv_typeName_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4607:2: ( ( (this_IDENTIFIER_0= RULE_IDENTIFIER ( (lv_signature_1_0= rulesignature ) ) ) | ( (lv_typeName_2_0= ruletypeName ) ) ) )
            // InternalGo.g:4608:2: ( (this_IDENTIFIER_0= RULE_IDENTIFIER ( (lv_signature_1_0= rulesignature ) ) ) | ( (lv_typeName_2_0= ruletypeName ) ) )
            {
            // InternalGo.g:4608:2: ( (this_IDENTIFIER_0= RULE_IDENTIFIER ( (lv_signature_1_0= rulesignature ) ) ) | ( (lv_typeName_2_0= ruletypeName ) ) )
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==RULE_IDENTIFIER) ) {
                int LA57_1 = input.LA(2);

                if ( (LA57_1==EOF||LA57_1==44||LA57_1==49) ) {
                    alt57=2;
                }
                else if ( (LA57_1==47) ) {
                    alt57=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 57, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }
            switch (alt57) {
                case 1 :
                    // InternalGo.g:4609:3: (this_IDENTIFIER_0= RULE_IDENTIFIER ( (lv_signature_1_0= rulesignature ) ) )
                    {
                    // InternalGo.g:4609:3: (this_IDENTIFIER_0= RULE_IDENTIFIER ( (lv_signature_1_0= rulesignature ) ) )
                    // InternalGo.g:4610:4: this_IDENTIFIER_0= RULE_IDENTIFIER ( (lv_signature_1_0= rulesignature ) )
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_IDENTIFIER_0, grammarAccess.getMethodSpecAccess().getIDENTIFIERTerminalRuleCall_0_0());
                      			
                    }
                    // InternalGo.g:4614:4: ( (lv_signature_1_0= rulesignature ) )
                    // InternalGo.g:4615:5: (lv_signature_1_0= rulesignature )
                    {
                    // InternalGo.g:4615:5: (lv_signature_1_0= rulesignature )
                    // InternalGo.g:4616:6: lv_signature_1_0= rulesignature
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodSpecAccess().getSignatureSignatureParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_signature_1_0=rulesignature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodSpecRule());
                      						}
                      						set(
                      							current,
                      							"signature",
                      							lv_signature_1_0,
                      							"org.xtext.Go.signature");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4635:3: ( (lv_typeName_2_0= ruletypeName ) )
                    {
                    // InternalGo.g:4635:3: ( (lv_typeName_2_0= ruletypeName ) )
                    // InternalGo.g:4636:4: (lv_typeName_2_0= ruletypeName )
                    {
                    // InternalGo.g:4636:4: (lv_typeName_2_0= ruletypeName )
                    // InternalGo.g:4637:5: lv_typeName_2_0= ruletypeName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodSpecAccess().getTypeNameTypeNameParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeName_2_0=ruletypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodSpecRule());
                      					}
                      					set(
                      						current,
                      						"typeName",
                      						lv_typeName_2_0,
                      						"org.xtext.Go.typeName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulemethodSpec"


    // $ANTLR start "entryRulefunctionType"
    // InternalGo.g:4658:1: entryRulefunctionType returns [EObject current=null] : iv_rulefunctionType= rulefunctionType EOF ;
    public final EObject entryRulefunctionType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefunctionType = null;


        try {
            // InternalGo.g:4658:53: (iv_rulefunctionType= rulefunctionType EOF )
            // InternalGo.g:4659:2: iv_rulefunctionType= rulefunctionType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefunctionType=rulefunctionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefunctionType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefunctionType"


    // $ANTLR start "rulefunctionType"
    // InternalGo.g:4665:1: rulefunctionType returns [EObject current=null] : (otherlv_0= 'func' ( (lv_signature_1_0= rulesignature ) ) ) ;
    public final EObject rulefunctionType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_signature_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4671:2: ( (otherlv_0= 'func' ( (lv_signature_1_0= rulesignature ) ) ) )
            // InternalGo.g:4672:2: (otherlv_0= 'func' ( (lv_signature_1_0= rulesignature ) ) )
            {
            // InternalGo.g:4672:2: (otherlv_0= 'func' ( (lv_signature_1_0= rulesignature ) ) )
            // InternalGo.g:4673:3: otherlv_0= 'func' ( (lv_signature_1_0= rulesignature ) )
            {
            otherlv_0=(Token)match(input,54,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionTypeAccess().getFuncKeyword_0());
              		
            }
            // InternalGo.g:4677:3: ( (lv_signature_1_0= rulesignature ) )
            // InternalGo.g:4678:4: (lv_signature_1_0= rulesignature )
            {
            // InternalGo.g:4678:4: (lv_signature_1_0= rulesignature )
            // InternalGo.g:4679:5: lv_signature_1_0= rulesignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionTypeAccess().getSignatureSignatureParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_signature_1_0=rulesignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionTypeRule());
              					}
              					set(
              						current,
              						"signature",
              						lv_signature_1_0,
              						"org.xtext.Go.signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefunctionType"


    // $ANTLR start "entryRulesignature"
    // InternalGo.g:4700:1: entryRulesignature returns [EObject current=null] : iv_rulesignature= rulesignature EOF ;
    public final EObject entryRulesignature() throws RecognitionException {
        EObject current = null;

        EObject iv_rulesignature = null;


        try {
            // InternalGo.g:4700:50: (iv_rulesignature= rulesignature EOF )
            // InternalGo.g:4701:2: iv_rulesignature= rulesignature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulesignature=rulesignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesignature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulesignature"


    // $ANTLR start "rulesignature"
    // InternalGo.g:4707:1: rulesignature returns [EObject current=null] : ( ( (lv_parameters_0_0= ruleparameters ) ) ( (lv_result_1_0= ruleresult ) )? ) ;
    public final EObject rulesignature() throws RecognitionException {
        EObject current = null;

        EObject lv_parameters_0_0 = null;

        EObject lv_result_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4713:2: ( ( ( (lv_parameters_0_0= ruleparameters ) ) ( (lv_result_1_0= ruleresult ) )? ) )
            // InternalGo.g:4714:2: ( ( (lv_parameters_0_0= ruleparameters ) ) ( (lv_result_1_0= ruleresult ) )? )
            {
            // InternalGo.g:4714:2: ( ( (lv_parameters_0_0= ruleparameters ) ) ( (lv_result_1_0= ruleresult ) )? )
            // InternalGo.g:4715:3: ( (lv_parameters_0_0= ruleparameters ) ) ( (lv_result_1_0= ruleresult ) )?
            {
            // InternalGo.g:4715:3: ( (lv_parameters_0_0= ruleparameters ) )
            // InternalGo.g:4716:4: (lv_parameters_0_0= ruleparameters )
            {
            // InternalGo.g:4716:4: (lv_parameters_0_0= ruleparameters )
            // InternalGo.g:4717:5: lv_parameters_0_0= ruleparameters
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_50);
            lv_parameters_0_0=ruleparameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSignatureRule());
              					}
              					set(
              						current,
              						"parameters",
              						lv_parameters_0_0,
              						"org.xtext.Go.parameters");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:4734:3: ( (lv_result_1_0= ruleresult ) )?
            int alt58=2;
            alt58 = dfa58.predict(input);
            switch (alt58) {
                case 1 :
                    // InternalGo.g:4735:4: (lv_result_1_0= ruleresult )
                    {
                    // InternalGo.g:4735:4: (lv_result_1_0= ruleresult )
                    // InternalGo.g:4736:5: lv_result_1_0= ruleresult
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_result_1_0=ruleresult();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSignatureRule());
                      					}
                      					set(
                      						current,
                      						"result",
                      						lv_result_1_0,
                      						"org.xtext.Go.result");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulesignature"


    // $ANTLR start "entryRuleresult"
    // InternalGo.g:4757:1: entryRuleresult returns [EObject current=null] : iv_ruleresult= ruleresult EOF ;
    public final EObject entryRuleresult() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleresult = null;


        try {
            // InternalGo.g:4757:47: (iv_ruleresult= ruleresult EOF )
            // InternalGo.g:4758:2: iv_ruleresult= ruleresult EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getResultRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleresult=ruleresult();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleresult; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleresult"


    // $ANTLR start "ruleresult"
    // InternalGo.g:4764:1: ruleresult returns [EObject current=null] : ( ( (lv_parameters_0_0= ruleparameters ) ) | ( (lv_type_1_0= ruletype ) ) ) ;
    public final EObject ruleresult() throws RecognitionException {
        EObject current = null;

        EObject lv_parameters_0_0 = null;

        EObject lv_type_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4770:2: ( ( ( (lv_parameters_0_0= ruleparameters ) ) | ( (lv_type_1_0= ruletype ) ) ) )
            // InternalGo.g:4771:2: ( ( (lv_parameters_0_0= ruleparameters ) ) | ( (lv_type_1_0= ruletype ) ) )
            {
            // InternalGo.g:4771:2: ( ( (lv_parameters_0_0= ruleparameters ) ) | ( (lv_type_1_0= ruletype ) ) )
            int alt59=2;
            alt59 = dfa59.predict(input);
            switch (alt59) {
                case 1 :
                    // InternalGo.g:4772:3: ( (lv_parameters_0_0= ruleparameters ) )
                    {
                    // InternalGo.g:4772:3: ( (lv_parameters_0_0= ruleparameters ) )
                    // InternalGo.g:4773:4: (lv_parameters_0_0= ruleparameters )
                    {
                    // InternalGo.g:4773:4: (lv_parameters_0_0= ruleparameters )
                    // InternalGo.g:4774:5: lv_parameters_0_0= ruleparameters
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getResultAccess().getParametersParametersParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_parameters_0_0=ruleparameters();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getResultRule());
                      					}
                      					set(
                      						current,
                      						"parameters",
                      						lv_parameters_0_0,
                      						"org.xtext.Go.parameters");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4792:3: ( (lv_type_1_0= ruletype ) )
                    {
                    // InternalGo.g:4792:3: ( (lv_type_1_0= ruletype ) )
                    // InternalGo.g:4793:4: (lv_type_1_0= ruletype )
                    {
                    // InternalGo.g:4793:4: (lv_type_1_0= ruletype )
                    // InternalGo.g:4794:5: lv_type_1_0= ruletype
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getResultAccess().getTypeTypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_1_0=ruletype();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getResultRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_1_0,
                      						"org.xtext.Go.type");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleresult"


    // $ANTLR start "entryRuleparameters"
    // InternalGo.g:4815:1: entryRuleparameters returns [EObject current=null] : iv_ruleparameters= ruleparameters EOF ;
    public final EObject entryRuleparameters() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleparameters = null;


        try {
            // InternalGo.g:4815:51: (iv_ruleparameters= ruleparameters EOF )
            // InternalGo.g:4816:2: iv_ruleparameters= ruleparameters EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParametersRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleparameters=ruleparameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleparameters; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleparameters"


    // $ANTLR start "ruleparameters"
    // InternalGo.g:4822:1: ruleparameters returns [EObject current=null] : (otherlv_0= '(' ( ( (lv_parameterList_1_0= ruleparameterList ) ) (otherlv_2= ',' )? )? otherlv_3= ')' ) ;
    public final EObject ruleparameters() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject lv_parameterList_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4828:2: ( (otherlv_0= '(' ( ( (lv_parameterList_1_0= ruleparameterList ) ) (otherlv_2= ',' )? )? otherlv_3= ')' ) )
            // InternalGo.g:4829:2: (otherlv_0= '(' ( ( (lv_parameterList_1_0= ruleparameterList ) ) (otherlv_2= ',' )? )? otherlv_3= ')' )
            {
            // InternalGo.g:4829:2: (otherlv_0= '(' ( ( (lv_parameterList_1_0= ruleparameterList ) ) (otherlv_2= ',' )? )? otherlv_3= ')' )
            // InternalGo.g:4830:3: otherlv_0= '(' ( ( (lv_parameterList_1_0= ruleparameterList ) ) (otherlv_2= ',' )? )? otherlv_3= ')'
            {
            otherlv_0=(Token)match(input,47,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalGo.g:4834:3: ( ( (lv_parameterList_1_0= ruleparameterList ) ) (otherlv_2= ',' )? )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==RULE_IDENTIFIER||LA61_0==47||LA61_0==54||LA61_0==58||LA61_0==65||LA61_0==89||(LA61_0>=91 && LA61_0<=95)) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalGo.g:4835:4: ( (lv_parameterList_1_0= ruleparameterList ) ) (otherlv_2= ',' )?
                    {
                    // InternalGo.g:4835:4: ( (lv_parameterList_1_0= ruleparameterList ) )
                    // InternalGo.g:4836:5: (lv_parameterList_1_0= ruleparameterList )
                    {
                    // InternalGo.g:4836:5: (lv_parameterList_1_0= ruleparameterList )
                    // InternalGo.g:4837:6: lv_parameterList_1_0= ruleparameterList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParametersAccess().getParameterListParameterListParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_52);
                    lv_parameterList_1_0=ruleparameterList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParametersRule());
                      						}
                      						set(
                      							current,
                      							"parameterList",
                      							lv_parameterList_1_0,
                      							"org.xtext.Go.parameterList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:4854:4: (otherlv_2= ',' )?
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==52) ) {
                        alt60=1;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalGo.g:4855:5: otherlv_2= ','
                            {
                            otherlv_2=(Token)match(input,52,FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getParametersAccess().getCommaKeyword_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getParametersAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleparameters"


    // $ANTLR start "entryRuleparameterList"
    // InternalGo.g:4869:1: entryRuleparameterList returns [EObject current=null] : iv_ruleparameterList= ruleparameterList EOF ;
    public final EObject entryRuleparameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleparameterList = null;


        try {
            // InternalGo.g:4869:54: (iv_ruleparameterList= ruleparameterList EOF )
            // InternalGo.g:4870:2: iv_ruleparameterList= ruleparameterList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleparameterList=ruleparameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleparameterList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleparameterList"


    // $ANTLR start "ruleparameterList"
    // InternalGo.g:4876:1: ruleparameterList returns [EObject current=null] : ( ( (lv_parameterDecl_0_0= ruleparameterDecl ) ) (otherlv_1= ',' ( (lv_parameterDecl_2_0= ruleparameterDecl ) ) )* ) ;
    public final EObject ruleparameterList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_parameterDecl_0_0 = null;

        EObject lv_parameterDecl_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4882:2: ( ( ( (lv_parameterDecl_0_0= ruleparameterDecl ) ) (otherlv_1= ',' ( (lv_parameterDecl_2_0= ruleparameterDecl ) ) )* ) )
            // InternalGo.g:4883:2: ( ( (lv_parameterDecl_0_0= ruleparameterDecl ) ) (otherlv_1= ',' ( (lv_parameterDecl_2_0= ruleparameterDecl ) ) )* )
            {
            // InternalGo.g:4883:2: ( ( (lv_parameterDecl_0_0= ruleparameterDecl ) ) (otherlv_1= ',' ( (lv_parameterDecl_2_0= ruleparameterDecl ) ) )* )
            // InternalGo.g:4884:3: ( (lv_parameterDecl_0_0= ruleparameterDecl ) ) (otherlv_1= ',' ( (lv_parameterDecl_2_0= ruleparameterDecl ) ) )*
            {
            // InternalGo.g:4884:3: ( (lv_parameterDecl_0_0= ruleparameterDecl ) )
            // InternalGo.g:4885:4: (lv_parameterDecl_0_0= ruleparameterDecl )
            {
            // InternalGo.g:4885:4: (lv_parameterDecl_0_0= ruleparameterDecl )
            // InternalGo.g:4886:5: lv_parameterDecl_0_0= ruleparameterDecl
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_parameterDecl_0_0=ruleparameterDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterListRule());
              					}
              					set(
              						current,
              						"parameterDecl",
              						lv_parameterDecl_0_0,
              						"org.xtext.Go.parameterDecl");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:4903:3: (otherlv_1= ',' ( (lv_parameterDecl_2_0= ruleparameterDecl ) ) )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==52) ) {
                    int LA62_1 = input.LA(2);

                    if ( (LA62_1==RULE_IDENTIFIER||LA62_1==47||LA62_1==54||LA62_1==58||LA62_1==65||LA62_1==89||(LA62_1>=91 && LA62_1<=95)) ) {
                        alt62=1;
                    }


                }


                switch (alt62) {
            	case 1 :
            	    // InternalGo.g:4904:4: otherlv_1= ',' ( (lv_parameterDecl_2_0= ruleparameterDecl ) )
            	    {
            	    otherlv_1=(Token)match(input,52,FOLLOW_53); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:4908:4: ( (lv_parameterDecl_2_0= ruleparameterDecl ) )
            	    // InternalGo.g:4909:5: (lv_parameterDecl_2_0= ruleparameterDecl )
            	    {
            	    // InternalGo.g:4909:5: (lv_parameterDecl_2_0= ruleparameterDecl )
            	    // InternalGo.g:4910:6: lv_parameterDecl_2_0= ruleparameterDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_parameterDecl_2_0=ruleparameterDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getParameterListRule());
            	      						}
            	      						set(
            	      							current,
            	      							"parameterDecl",
            	      							lv_parameterDecl_2_0,
            	      							"org.xtext.Go.parameterDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleparameterList"


    // $ANTLR start "entryRuleparameterDecl"
    // InternalGo.g:4932:1: entryRuleparameterDecl returns [EObject current=null] : iv_ruleparameterDecl= ruleparameterDecl EOF ;
    public final EObject entryRuleparameterDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleparameterDecl = null;


        try {
            // InternalGo.g:4932:54: (iv_ruleparameterDecl= ruleparameterDecl EOF )
            // InternalGo.g:4933:2: iv_ruleparameterDecl= ruleparameterDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleparameterDecl=ruleparameterDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleparameterDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleparameterDecl"


    // $ANTLR start "ruleparameterDecl"
    // InternalGo.g:4939:1: ruleparameterDecl returns [EObject current=null] : ( ( (lv_identifierList_0_0= ruleidentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruletype ) ) ) ;
    public final EObject ruleparameterDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_identifierList_0_0 = null;

        EObject lv_type_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4945:2: ( ( ( (lv_identifierList_0_0= ruleidentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruletype ) ) ) )
            // InternalGo.g:4946:2: ( ( (lv_identifierList_0_0= ruleidentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruletype ) ) )
            {
            // InternalGo.g:4946:2: ( ( (lv_identifierList_0_0= ruleidentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruletype ) ) )
            // InternalGo.g:4947:3: ( (lv_identifierList_0_0= ruleidentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruletype ) )
            {
            // InternalGo.g:4947:3: ( (lv_identifierList_0_0= ruleidentifierList ) )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==RULE_IDENTIFIER) ) {
                int LA63_1 = input.LA(2);

                if ( (LA63_1==52) ) {
                    int LA63_3 = input.LA(3);

                    if ( (LA63_3==RULE_IDENTIFIER) ) {
                        int LA63_5 = input.LA(4);

                        if ( (synpred105_InternalGo()) ) {
                            alt63=1;
                        }
                    }
                }
                else if ( (LA63_1==RULE_IDENTIFIER||LA63_1==47||LA63_1==54||LA63_1==58||LA63_1==65||LA63_1==89||(LA63_1>=91 && LA63_1<=95)) ) {
                    alt63=1;
                }
            }
            switch (alt63) {
                case 1 :
                    // InternalGo.g:4948:4: (lv_identifierList_0_0= ruleidentifierList )
                    {
                    // InternalGo.g:4948:4: (lv_identifierList_0_0= ruleidentifierList )
                    // InternalGo.g:4949:5: lv_identifierList_0_0= ruleidentifierList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameterDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_53);
                    lv_identifierList_0_0=ruleidentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameterDeclRule());
                      					}
                      					set(
                      						current,
                      						"identifierList",
                      						lv_identifierList_0_0,
                      						"org.xtext.Go.identifierList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:4966:3: (otherlv_1= '...' )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==94) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalGo.g:4967:4: otherlv_1= '...'
                    {
                    otherlv_1=(Token)match(input,94,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:4972:3: ( (lv_type_2_0= ruletype ) )
            // InternalGo.g:4973:4: (lv_type_2_0= ruletype )
            {
            // InternalGo.g:4973:4: (lv_type_2_0= ruletype )
            // InternalGo.g:4974:5: lv_type_2_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_type_2_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterDeclRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleparameterDecl"


    // $ANTLR start "entryRuleoperand"
    // InternalGo.g:4995:1: entryRuleoperand returns [EObject current=null] : iv_ruleoperand= ruleoperand EOF ;
    public final EObject entryRuleoperand() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleoperand = null;


        try {
            // InternalGo.g:4995:48: (iv_ruleoperand= ruleoperand EOF )
            // InternalGo.g:4996:2: iv_ruleoperand= ruleoperand EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleoperand=ruleoperand();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleoperand; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleoperand"


    // $ANTLR start "ruleoperand"
    // InternalGo.g:5002:1: ruleoperand returns [EObject current=null] : ( ( (lv_literal_0_0= ruleliteral ) ) | ( (lv_operandName_1_0= ruleoperandName ) ) | ( (lv_methodExpr_2_0= rulemethodExpr ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleexpression ) ) otherlv_5= ')' ) ) ;
    public final EObject ruleoperand() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_literal_0_0 = null;

        EObject lv_operandName_1_0 = null;

        EObject lv_methodExpr_2_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5008:2: ( ( ( (lv_literal_0_0= ruleliteral ) ) | ( (lv_operandName_1_0= ruleoperandName ) ) | ( (lv_methodExpr_2_0= rulemethodExpr ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleexpression ) ) otherlv_5= ')' ) ) )
            // InternalGo.g:5009:2: ( ( (lv_literal_0_0= ruleliteral ) ) | ( (lv_operandName_1_0= ruleoperandName ) ) | ( (lv_methodExpr_2_0= rulemethodExpr ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleexpression ) ) otherlv_5= ')' ) )
            {
            // InternalGo.g:5009:2: ( ( (lv_literal_0_0= ruleliteral ) ) | ( (lv_operandName_1_0= ruleoperandName ) ) | ( (lv_methodExpr_2_0= rulemethodExpr ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleexpression ) ) otherlv_5= ')' ) )
            int alt65=4;
            alt65 = dfa65.predict(input);
            switch (alt65) {
                case 1 :
                    // InternalGo.g:5010:3: ( (lv_literal_0_0= ruleliteral ) )
                    {
                    // InternalGo.g:5010:3: ( (lv_literal_0_0= ruleliteral ) )
                    // InternalGo.g:5011:4: (lv_literal_0_0= ruleliteral )
                    {
                    // InternalGo.g:5011:4: (lv_literal_0_0= ruleliteral )
                    // InternalGo.g:5012:5: lv_literal_0_0= ruleliteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleliteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOperandRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.xtext.Go.literal");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5030:3: ( (lv_operandName_1_0= ruleoperandName ) )
                    {
                    // InternalGo.g:5030:3: ( (lv_operandName_1_0= ruleoperandName ) )
                    // InternalGo.g:5031:4: (lv_operandName_1_0= ruleoperandName )
                    {
                    // InternalGo.g:5031:4: (lv_operandName_1_0= ruleoperandName )
                    // InternalGo.g:5032:5: lv_operandName_1_0= ruleoperandName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOperandAccess().getOperandNameOperandNameParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_operandName_1_0=ruleoperandName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOperandRule());
                      					}
                      					set(
                      						current,
                      						"operandName",
                      						lv_operandName_1_0,
                      						"org.xtext.Go.operandName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:5050:3: ( (lv_methodExpr_2_0= rulemethodExpr ) )
                    {
                    // InternalGo.g:5050:3: ( (lv_methodExpr_2_0= rulemethodExpr ) )
                    // InternalGo.g:5051:4: (lv_methodExpr_2_0= rulemethodExpr )
                    {
                    // InternalGo.g:5051:4: (lv_methodExpr_2_0= rulemethodExpr )
                    // InternalGo.g:5052:5: lv_methodExpr_2_0= rulemethodExpr
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOperandAccess().getMethodExprMethodExprParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_methodExpr_2_0=rulemethodExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOperandRule());
                      					}
                      					set(
                      						current,
                      						"methodExpr",
                      						lv_methodExpr_2_0,
                      						"org.xtext.Go.methodExpr");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:5070:3: (otherlv_3= '(' ( (lv_expression_4_0= ruleexpression ) ) otherlv_5= ')' )
                    {
                    // InternalGo.g:5070:3: (otherlv_3= '(' ( (lv_expression_4_0= ruleexpression ) ) otherlv_5= ')' )
                    // InternalGo.g:5071:4: otherlv_3= '(' ( (lv_expression_4_0= ruleexpression ) ) otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,47,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getOperandAccess().getLeftParenthesisKeyword_3_0());
                      			
                    }
                    // InternalGo.g:5075:4: ( (lv_expression_4_0= ruleexpression ) )
                    // InternalGo.g:5076:5: (lv_expression_4_0= ruleexpression )
                    {
                    // InternalGo.g:5076:5: (lv_expression_4_0= ruleexpression )
                    // InternalGo.g:5077:6: lv_expression_4_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_41);
                    lv_expression_4_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperandRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_4_0,
                      							"org.xtext.Go.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getOperandAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleoperand"


    // $ANTLR start "entryRuleliteral"
    // InternalGo.g:5103:1: entryRuleliteral returns [EObject current=null] : iv_ruleliteral= ruleliteral EOF ;
    public final EObject entryRuleliteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleliteral = null;


        try {
            // InternalGo.g:5103:48: (iv_ruleliteral= ruleliteral EOF )
            // InternalGo.g:5104:2: iv_ruleliteral= ruleliteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleliteral=ruleliteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleliteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleliteral"


    // $ANTLR start "ruleliteral"
    // InternalGo.g:5110:1: ruleliteral returns [EObject current=null] : ( ( (lv_basicLit_0_0= rulebasicLit ) ) | ( (lv_compositeLit_1_0= rulecompositeLit ) ) | ( (lv_functionLit_2_0= rulefunctionLit ) ) ) ;
    public final EObject ruleliteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_basicLit_0_0 = null;

        EObject lv_compositeLit_1_0 = null;

        EObject lv_functionLit_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5116:2: ( ( ( (lv_basicLit_0_0= rulebasicLit ) ) | ( (lv_compositeLit_1_0= rulecompositeLit ) ) | ( (lv_functionLit_2_0= rulefunctionLit ) ) ) )
            // InternalGo.g:5117:2: ( ( (lv_basicLit_0_0= rulebasicLit ) ) | ( (lv_compositeLit_1_0= rulecompositeLit ) ) | ( (lv_functionLit_2_0= rulefunctionLit ) ) )
            {
            // InternalGo.g:5117:2: ( ( (lv_basicLit_0_0= rulebasicLit ) ) | ( (lv_compositeLit_1_0= rulecompositeLit ) ) | ( (lv_functionLit_2_0= rulefunctionLit ) ) )
            int alt66=3;
            switch ( input.LA(1) ) {
            case RULE_STRING_LIT:
            case RULE_INT_LIT:
            case RULE_FLOAT_LIT:
            case RULE_IMAGINARY_LIT:
            case RULE_RUNE_LIT:
                {
                alt66=1;
                }
                break;
            case RULE_IDENTIFIER:
            case 89:
            case 92:
            case 95:
                {
                alt66=2;
                }
                break;
            case 54:
                {
                alt66=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }

            switch (alt66) {
                case 1 :
                    // InternalGo.g:5118:3: ( (lv_basicLit_0_0= rulebasicLit ) )
                    {
                    // InternalGo.g:5118:3: ( (lv_basicLit_0_0= rulebasicLit ) )
                    // InternalGo.g:5119:4: (lv_basicLit_0_0= rulebasicLit )
                    {
                    // InternalGo.g:5119:4: (lv_basicLit_0_0= rulebasicLit )
                    // InternalGo.g:5120:5: lv_basicLit_0_0= rulebasicLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getBasicLitBasicLitParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_basicLit_0_0=rulebasicLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"basicLit",
                      						lv_basicLit_0_0,
                      						"org.xtext.Go.basicLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5138:3: ( (lv_compositeLit_1_0= rulecompositeLit ) )
                    {
                    // InternalGo.g:5138:3: ( (lv_compositeLit_1_0= rulecompositeLit ) )
                    // InternalGo.g:5139:4: (lv_compositeLit_1_0= rulecompositeLit )
                    {
                    // InternalGo.g:5139:4: (lv_compositeLit_1_0= rulecompositeLit )
                    // InternalGo.g:5140:5: lv_compositeLit_1_0= rulecompositeLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getCompositeLitCompositeLitParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_compositeLit_1_0=rulecompositeLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"compositeLit",
                      						lv_compositeLit_1_0,
                      						"org.xtext.Go.compositeLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:5158:3: ( (lv_functionLit_2_0= rulefunctionLit ) )
                    {
                    // InternalGo.g:5158:3: ( (lv_functionLit_2_0= rulefunctionLit ) )
                    // InternalGo.g:5159:4: (lv_functionLit_2_0= rulefunctionLit )
                    {
                    // InternalGo.g:5159:4: (lv_functionLit_2_0= rulefunctionLit )
                    // InternalGo.g:5160:5: lv_functionLit_2_0= rulefunctionLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getFunctionLitFunctionLitParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_functionLit_2_0=rulefunctionLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"functionLit",
                      						lv_functionLit_2_0,
                      						"org.xtext.Go.functionLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleliteral"


    // $ANTLR start "entryRulebasicLit"
    // InternalGo.g:5181:1: entryRulebasicLit returns [String current=null] : iv_rulebasicLit= rulebasicLit EOF ;
    public final String entryRulebasicLit() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulebasicLit = null;


        try {
            // InternalGo.g:5181:48: (iv_rulebasicLit= rulebasicLit EOF )
            // InternalGo.g:5182:2: iv_rulebasicLit= rulebasicLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulebasicLit=rulebasicLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulebasicLit.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulebasicLit"


    // $ANTLR start "rulebasicLit"
    // InternalGo.g:5188:1: rulebasicLit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_LIT_0= RULE_INT_LIT | this_FLOAT_LIT_1= RULE_FLOAT_LIT | this_IMAGINARY_LIT_2= RULE_IMAGINARY_LIT | this_RUNE_LIT_3= RULE_RUNE_LIT | this_STRING_LIT_4= RULE_STRING_LIT ) ;
    public final AntlrDatatypeRuleToken rulebasicLit() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_LIT_0=null;
        Token this_FLOAT_LIT_1=null;
        Token this_IMAGINARY_LIT_2=null;
        Token this_RUNE_LIT_3=null;
        Token this_STRING_LIT_4=null;


        	enterRule();

        try {
            // InternalGo.g:5194:2: ( (this_INT_LIT_0= RULE_INT_LIT | this_FLOAT_LIT_1= RULE_FLOAT_LIT | this_IMAGINARY_LIT_2= RULE_IMAGINARY_LIT | this_RUNE_LIT_3= RULE_RUNE_LIT | this_STRING_LIT_4= RULE_STRING_LIT ) )
            // InternalGo.g:5195:2: (this_INT_LIT_0= RULE_INT_LIT | this_FLOAT_LIT_1= RULE_FLOAT_LIT | this_IMAGINARY_LIT_2= RULE_IMAGINARY_LIT | this_RUNE_LIT_3= RULE_RUNE_LIT | this_STRING_LIT_4= RULE_STRING_LIT )
            {
            // InternalGo.g:5195:2: (this_INT_LIT_0= RULE_INT_LIT | this_FLOAT_LIT_1= RULE_FLOAT_LIT | this_IMAGINARY_LIT_2= RULE_IMAGINARY_LIT | this_RUNE_LIT_3= RULE_RUNE_LIT | this_STRING_LIT_4= RULE_STRING_LIT )
            int alt67=5;
            switch ( input.LA(1) ) {
            case RULE_INT_LIT:
                {
                alt67=1;
                }
                break;
            case RULE_FLOAT_LIT:
                {
                alt67=2;
                }
                break;
            case RULE_IMAGINARY_LIT:
                {
                alt67=3;
                }
                break;
            case RULE_RUNE_LIT:
                {
                alt67=4;
                }
                break;
            case RULE_STRING_LIT:
                {
                alt67=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }

            switch (alt67) {
                case 1 :
                    // InternalGo.g:5196:3: this_INT_LIT_0= RULE_INT_LIT
                    {
                    this_INT_LIT_0=(Token)match(input,RULE_INT_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INT_LIT_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_INT_LIT_0, grammarAccess.getBasicLitAccess().getINT_LITTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:5204:3: this_FLOAT_LIT_1= RULE_FLOAT_LIT
                    {
                    this_FLOAT_LIT_1=(Token)match(input,RULE_FLOAT_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FLOAT_LIT_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_FLOAT_LIT_1, grammarAccess.getBasicLitAccess().getFLOAT_LITTerminalRuleCall_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:5212:3: this_IMAGINARY_LIT_2= RULE_IMAGINARY_LIT
                    {
                    this_IMAGINARY_LIT_2=(Token)match(input,RULE_IMAGINARY_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_IMAGINARY_LIT_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_IMAGINARY_LIT_2, grammarAccess.getBasicLitAccess().getIMAGINARY_LITTerminalRuleCall_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:5220:3: this_RUNE_LIT_3= RULE_RUNE_LIT
                    {
                    this_RUNE_LIT_3=(Token)match(input,RULE_RUNE_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_RUNE_LIT_3);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_RUNE_LIT_3, grammarAccess.getBasicLitAccess().getRUNE_LITTerminalRuleCall_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalGo.g:5228:3: this_STRING_LIT_4= RULE_STRING_LIT
                    {
                    this_STRING_LIT_4=(Token)match(input,RULE_STRING_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_LIT_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_LIT_4, grammarAccess.getBasicLitAccess().getSTRING_LITTerminalRuleCall_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulebasicLit"


    // $ANTLR start "entryRuleoperandName"
    // InternalGo.g:5239:1: entryRuleoperandName returns [EObject current=null] : iv_ruleoperandName= ruleoperandName EOF ;
    public final EObject entryRuleoperandName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleoperandName = null;


        try {
            // InternalGo.g:5239:52: (iv_ruleoperandName= ruleoperandName EOF )
            // InternalGo.g:5240:2: iv_ruleoperandName= ruleoperandName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperandNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleoperandName=ruleoperandName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleoperandName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleoperandName"


    // $ANTLR start "ruleoperandName"
    // InternalGo.g:5246:1: ruleoperandName returns [EObject current=null] : (this_IDENTIFIER_0= RULE_IDENTIFIER | ( (lv_qualifiedIdent_1_0= rulequalifiedIdent ) ) ) ;
    public final EObject ruleoperandName() throws RecognitionException {
        EObject current = null;

        Token this_IDENTIFIER_0=null;
        AntlrDatatypeRuleToken lv_qualifiedIdent_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5252:2: ( (this_IDENTIFIER_0= RULE_IDENTIFIER | ( (lv_qualifiedIdent_1_0= rulequalifiedIdent ) ) ) )
            // InternalGo.g:5253:2: (this_IDENTIFIER_0= RULE_IDENTIFIER | ( (lv_qualifiedIdent_1_0= rulequalifiedIdent ) ) )
            {
            // InternalGo.g:5253:2: (this_IDENTIFIER_0= RULE_IDENTIFIER | ( (lv_qualifiedIdent_1_0= rulequalifiedIdent ) ) )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==RULE_IDENTIFIER) ) {
                int LA68_1 = input.LA(2);

                if ( (LA68_1==49) ) {
                    int LA68_2 = input.LA(3);

                    if ( (LA68_2==RULE_IDENTIFIER) ) {
                        alt68=2;
                    }
                    else if ( (LA68_2==47) ) {
                        alt68=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 68, 2, input);

                        throw nvae;
                    }
                }
                else if ( (LA68_1==EOF||LA68_1==RULE_BINARY_OP||LA68_1==44||LA68_1==48||(LA68_1>=51 && LA68_1<=52)||(LA68_1>=56 && LA68_1<=71)||LA68_1==73||LA68_1==90||LA68_1==94) ) {
                    alt68=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 68, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // InternalGo.g:5254:3: this_IDENTIFIER_0= RULE_IDENTIFIER
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_IDENTIFIER_0, grammarAccess.getOperandNameAccess().getIDENTIFIERTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:5259:3: ( (lv_qualifiedIdent_1_0= rulequalifiedIdent ) )
                    {
                    // InternalGo.g:5259:3: ( (lv_qualifiedIdent_1_0= rulequalifiedIdent ) )
                    // InternalGo.g:5260:4: (lv_qualifiedIdent_1_0= rulequalifiedIdent )
                    {
                    // InternalGo.g:5260:4: (lv_qualifiedIdent_1_0= rulequalifiedIdent )
                    // InternalGo.g:5261:5: lv_qualifiedIdent_1_0= rulequalifiedIdent
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOperandNameAccess().getQualifiedIdentQualifiedIdentParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_qualifiedIdent_1_0=rulequalifiedIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOperandNameRule());
                      					}
                      					set(
                      						current,
                      						"qualifiedIdent",
                      						lv_qualifiedIdent_1_0,
                      						"org.xtext.Go.qualifiedIdent");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleoperandName"


    // $ANTLR start "entryRulequalifiedIdent"
    // InternalGo.g:5282:1: entryRulequalifiedIdent returns [String current=null] : iv_rulequalifiedIdent= rulequalifiedIdent EOF ;
    public final String entryRulequalifiedIdent() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulequalifiedIdent = null;


        try {
            // InternalGo.g:5282:54: (iv_rulequalifiedIdent= rulequalifiedIdent EOF )
            // InternalGo.g:5283:2: iv_rulequalifiedIdent= rulequalifiedIdent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedIdentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulequalifiedIdent=rulequalifiedIdent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulequalifiedIdent.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulequalifiedIdent"


    // $ANTLR start "rulequalifiedIdent"
    // InternalGo.g:5289:1: rulequalifiedIdent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IDENTIFIER_0= RULE_IDENTIFIER kw= '.' this_IDENTIFIER_2= RULE_IDENTIFIER ) ;
    public final AntlrDatatypeRuleToken rulequalifiedIdent() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        Token kw=null;
        Token this_IDENTIFIER_2=null;


        	enterRule();

        try {
            // InternalGo.g:5295:2: ( (this_IDENTIFIER_0= RULE_IDENTIFIER kw= '.' this_IDENTIFIER_2= RULE_IDENTIFIER ) )
            // InternalGo.g:5296:2: (this_IDENTIFIER_0= RULE_IDENTIFIER kw= '.' this_IDENTIFIER_2= RULE_IDENTIFIER )
            {
            // InternalGo.g:5296:2: (this_IDENTIFIER_0= RULE_IDENTIFIER kw= '.' this_IDENTIFIER_2= RULE_IDENTIFIER )
            // InternalGo.g:5297:3: this_IDENTIFIER_0= RULE_IDENTIFIER kw= '.' this_IDENTIFIER_2= RULE_IDENTIFIER
            {
            this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_IDENTIFIER_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_IDENTIFIER_0, grammarAccess.getQualifiedIdentAccess().getIDENTIFIERTerminalRuleCall_0());
              		
            }
            kw=(Token)match(input,49,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1());
              		
            }
            this_IDENTIFIER_2=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_IDENTIFIER_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_IDENTIFIER_2, grammarAccess.getQualifiedIdentAccess().getIDENTIFIERTerminalRuleCall_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulequalifiedIdent"


    // $ANTLR start "entryRulecompositeLit"
    // InternalGo.g:5320:1: entryRulecompositeLit returns [EObject current=null] : iv_rulecompositeLit= rulecompositeLit EOF ;
    public final EObject entryRulecompositeLit() throws RecognitionException {
        EObject current = null;

        EObject iv_rulecompositeLit = null;


        try {
            // InternalGo.g:5320:53: (iv_rulecompositeLit= rulecompositeLit EOF )
            // InternalGo.g:5321:2: iv_rulecompositeLit= rulecompositeLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompositeLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecompositeLit=rulecompositeLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecompositeLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecompositeLit"


    // $ANTLR start "rulecompositeLit"
    // InternalGo.g:5327:1: rulecompositeLit returns [EObject current=null] : ( ( (lv_literalType_0_0= ruleliteralType ) ) ( (lv_literalValue_1_0= ruleliteralValue ) ) ) ;
    public final EObject rulecompositeLit() throws RecognitionException {
        EObject current = null;

        EObject lv_literalType_0_0 = null;

        EObject lv_literalValue_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5333:2: ( ( ( (lv_literalType_0_0= ruleliteralType ) ) ( (lv_literalValue_1_0= ruleliteralValue ) ) ) )
            // InternalGo.g:5334:2: ( ( (lv_literalType_0_0= ruleliteralType ) ) ( (lv_literalValue_1_0= ruleliteralValue ) ) )
            {
            // InternalGo.g:5334:2: ( ( (lv_literalType_0_0= ruleliteralType ) ) ( (lv_literalValue_1_0= ruleliteralValue ) ) )
            // InternalGo.g:5335:3: ( (lv_literalType_0_0= ruleliteralType ) ) ( (lv_literalValue_1_0= ruleliteralValue ) )
            {
            // InternalGo.g:5335:3: ( (lv_literalType_0_0= ruleliteralType ) )
            // InternalGo.g:5336:4: (lv_literalType_0_0= ruleliteralType )
            {
            // InternalGo.g:5336:4: (lv_literalType_0_0= ruleliteralType )
            // InternalGo.g:5337:5: lv_literalType_0_0= ruleliteralType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteralTypeLiteralTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_18);
            lv_literalType_0_0=ruleliteralType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompositeLitRule());
              					}
              					set(
              						current,
              						"literalType",
              						lv_literalType_0_0,
              						"org.xtext.Go.literalType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:5354:3: ( (lv_literalValue_1_0= ruleliteralValue ) )
            // InternalGo.g:5355:4: (lv_literalValue_1_0= ruleliteralValue )
            {
            // InternalGo.g:5355:4: (lv_literalValue_1_0= ruleliteralValue )
            // InternalGo.g:5356:5: lv_literalValue_1_0= ruleliteralValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteralValueLiteralValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_literalValue_1_0=ruleliteralValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompositeLitRule());
              					}
              					set(
              						current,
              						"literalValue",
              						lv_literalValue_1_0,
              						"org.xtext.Go.literalValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecompositeLit"


    // $ANTLR start "entryRuleliteralType"
    // InternalGo.g:5377:1: entryRuleliteralType returns [EObject current=null] : iv_ruleliteralType= ruleliteralType EOF ;
    public final EObject entryRuleliteralType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleliteralType = null;


        try {
            // InternalGo.g:5377:52: (iv_ruleliteralType= ruleliteralType EOF )
            // InternalGo.g:5378:2: iv_ruleliteralType= ruleliteralType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleliteralType=ruleliteralType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleliteralType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleliteralType"


    // $ANTLR start "ruleliteralType"
    // InternalGo.g:5384:1: ruleliteralType returns [EObject current=null] : ( ( (lv_structType_0_0= rulestructType ) ) | ( (lv_arrayType_1_0= rulearrayType ) ) | (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_elementType_5_0= ruleelementType ) ) ) | ( (lv_sliceType_6_0= rulesliceType ) ) | ( (lv_mapType_7_0= rulemapType ) ) | ( (lv_typeName_8_0= ruletypeName ) ) ) ;
    public final EObject ruleliteralType() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_structType_0_0 = null;

        EObject lv_arrayType_1_0 = null;

        EObject lv_elementType_5_0 = null;

        EObject lv_sliceType_6_0 = null;

        EObject lv_mapType_7_0 = null;

        EObject lv_typeName_8_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5390:2: ( ( ( (lv_structType_0_0= rulestructType ) ) | ( (lv_arrayType_1_0= rulearrayType ) ) | (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_elementType_5_0= ruleelementType ) ) ) | ( (lv_sliceType_6_0= rulesliceType ) ) | ( (lv_mapType_7_0= rulemapType ) ) | ( (lv_typeName_8_0= ruletypeName ) ) ) )
            // InternalGo.g:5391:2: ( ( (lv_structType_0_0= rulestructType ) ) | ( (lv_arrayType_1_0= rulearrayType ) ) | (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_elementType_5_0= ruleelementType ) ) ) | ( (lv_sliceType_6_0= rulesliceType ) ) | ( (lv_mapType_7_0= rulemapType ) ) | ( (lv_typeName_8_0= ruletypeName ) ) )
            {
            // InternalGo.g:5391:2: ( ( (lv_structType_0_0= rulestructType ) ) | ( (lv_arrayType_1_0= rulearrayType ) ) | (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_elementType_5_0= ruleelementType ) ) ) | ( (lv_sliceType_6_0= rulesliceType ) ) | ( (lv_mapType_7_0= rulemapType ) ) | ( (lv_typeName_8_0= ruletypeName ) ) )
            int alt69=6;
            switch ( input.LA(1) ) {
            case 95:
                {
                alt69=1;
                }
                break;
            case 89:
                {
                int LA69_2 = input.LA(2);

                if ( (synpred118_InternalGo()) ) {
                    alt69=2;
                }
                else if ( (synpred119_InternalGo()) ) {
                    alt69=3;
                }
                else if ( (synpred120_InternalGo()) ) {
                    alt69=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 69, 2, input);

                    throw nvae;
                }
                }
                break;
            case 92:
                {
                alt69=5;
                }
                break;
            case RULE_IDENTIFIER:
                {
                alt69=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }

            switch (alt69) {
                case 1 :
                    // InternalGo.g:5392:3: ( (lv_structType_0_0= rulestructType ) )
                    {
                    // InternalGo.g:5392:3: ( (lv_structType_0_0= rulestructType ) )
                    // InternalGo.g:5393:4: (lv_structType_0_0= rulestructType )
                    {
                    // InternalGo.g:5393:4: (lv_structType_0_0= rulestructType )
                    // InternalGo.g:5394:5: lv_structType_0_0= rulestructType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getStructTypeStructTypeParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_structType_0_0=rulestructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"structType",
                      						lv_structType_0_0,
                      						"org.xtext.Go.structType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5412:3: ( (lv_arrayType_1_0= rulearrayType ) )
                    {
                    // InternalGo.g:5412:3: ( (lv_arrayType_1_0= rulearrayType ) )
                    // InternalGo.g:5413:4: (lv_arrayType_1_0= rulearrayType )
                    {
                    // InternalGo.g:5413:4: (lv_arrayType_1_0= rulearrayType )
                    // InternalGo.g:5414:5: lv_arrayType_1_0= rulearrayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getArrayTypeArrayTypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arrayType_1_0=rulearrayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"arrayType",
                      						lv_arrayType_1_0,
                      						"org.xtext.Go.arrayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:5432:3: (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_elementType_5_0= ruleelementType ) ) )
                    {
                    // InternalGo.g:5432:3: (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_elementType_5_0= ruleelementType ) ) )
                    // InternalGo.g:5433:4: otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_elementType_5_0= ruleelementType ) )
                    {
                    otherlv_2=(Token)match(input,89,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_2_0());
                      			
                    }
                    otherlv_3=(Token)match(input,94,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getLiteralTypeAccess().getFullStopFullStopFullStopKeyword_2_1());
                      			
                    }
                    otherlv_4=(Token)match(input,90,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getLiteralTypeAccess().getRightSquareBracketKeyword_2_2());
                      			
                    }
                    // InternalGo.g:5445:4: ( (lv_elementType_5_0= ruleelementType ) )
                    // InternalGo.g:5446:5: (lv_elementType_5_0= ruleelementType )
                    {
                    // InternalGo.g:5446:5: (lv_elementType_5_0= ruleelementType )
                    // InternalGo.g:5447:6: lv_elementType_5_0= ruleelementType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralTypeAccess().getElementTypeElementTypeParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_elementType_5_0=ruleelementType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      						}
                      						set(
                      							current,
                      							"elementType",
                      							lv_elementType_5_0,
                      							"org.xtext.Go.elementType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:5466:3: ( (lv_sliceType_6_0= rulesliceType ) )
                    {
                    // InternalGo.g:5466:3: ( (lv_sliceType_6_0= rulesliceType ) )
                    // InternalGo.g:5467:4: (lv_sliceType_6_0= rulesliceType )
                    {
                    // InternalGo.g:5467:4: (lv_sliceType_6_0= rulesliceType )
                    // InternalGo.g:5468:5: lv_sliceType_6_0= rulesliceType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getSliceTypeSliceTypeParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_sliceType_6_0=rulesliceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"sliceType",
                      						lv_sliceType_6_0,
                      						"org.xtext.Go.sliceType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:5486:3: ( (lv_mapType_7_0= rulemapType ) )
                    {
                    // InternalGo.g:5486:3: ( (lv_mapType_7_0= rulemapType ) )
                    // InternalGo.g:5487:4: (lv_mapType_7_0= rulemapType )
                    {
                    // InternalGo.g:5487:4: (lv_mapType_7_0= rulemapType )
                    // InternalGo.g:5488:5: lv_mapType_7_0= rulemapType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getMapTypeMapTypeParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_mapType_7_0=rulemapType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"mapType",
                      						lv_mapType_7_0,
                      						"org.xtext.Go.mapType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:5506:3: ( (lv_typeName_8_0= ruletypeName ) )
                    {
                    // InternalGo.g:5506:3: ( (lv_typeName_8_0= ruletypeName ) )
                    // InternalGo.g:5507:4: (lv_typeName_8_0= ruletypeName )
                    {
                    // InternalGo.g:5507:4: (lv_typeName_8_0= ruletypeName )
                    // InternalGo.g:5508:5: lv_typeName_8_0= ruletypeName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeNameTypeNameParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeName_8_0=ruletypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"typeName",
                      						lv_typeName_8_0,
                      						"org.xtext.Go.typeName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleliteralType"


    // $ANTLR start "entryRuleliteralValue"
    // InternalGo.g:5529:1: entryRuleliteralValue returns [EObject current=null] : iv_ruleliteralValue= ruleliteralValue EOF ;
    public final EObject entryRuleliteralValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleliteralValue = null;


        try {
            // InternalGo.g:5529:53: (iv_ruleliteralValue= ruleliteralValue EOF )
            // InternalGo.g:5530:2: iv_ruleliteralValue= ruleliteralValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleliteralValue=ruleliteralValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleliteralValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleliteralValue"


    // $ANTLR start "ruleliteralValue"
    // InternalGo.g:5536:1: ruleliteralValue returns [EObject current=null] : (otherlv_0= '{' ( ( (lv_elementList_1_0= ruleelementList ) ) (otherlv_2= ',' )? )? otherlv_3= '}' ) ;
    public final EObject ruleliteralValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject lv_elementList_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5542:2: ( (otherlv_0= '{' ( ( (lv_elementList_1_0= ruleelementList ) ) (otherlv_2= ',' )? )? otherlv_3= '}' ) )
            // InternalGo.g:5543:2: (otherlv_0= '{' ( ( (lv_elementList_1_0= ruleelementList ) ) (otherlv_2= ',' )? )? otherlv_3= '}' )
            {
            // InternalGo.g:5543:2: (otherlv_0= '{' ( ( (lv_elementList_1_0= ruleelementList ) ) (otherlv_2= ',' )? )? otherlv_3= '}' )
            // InternalGo.g:5544:3: otherlv_0= '{' ( ( (lv_elementList_1_0= ruleelementList ) ) (otherlv_2= ',' )? )? otherlv_3= '}'
            {
            otherlv_0=(Token)match(input,56,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalGo.g:5548:3: ( ( (lv_elementList_1_0= ruleelementList ) ) (otherlv_2= ',' )? )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( ((LA71_0>=RULE_IDENTIFIER && LA71_0<=RULE_STRING_LIT)||(LA71_0>=RULE_INT_LIT && LA71_0<=RULE_BINARY_OP)||LA71_0==47||LA71_0==49||LA71_0==52||LA71_0==54||LA71_0==56||LA71_0==58||(LA71_0>=61 && LA71_0<=62)||(LA71_0>=64 && LA71_0<=65)||LA71_0==70||LA71_0==73||LA71_0==89||(LA71_0>=91 && LA71_0<=93)||(LA71_0>=95 && LA71_0<=96)) ) {
                alt71=1;
            }
            else if ( (LA71_0==57) ) {
                int LA71_2 = input.LA(2);

                if ( (synpred123_InternalGo()) ) {
                    alt71=1;
                }
            }
            switch (alt71) {
                case 1 :
                    // InternalGo.g:5549:4: ( (lv_elementList_1_0= ruleelementList ) ) (otherlv_2= ',' )?
                    {
                    // InternalGo.g:5549:4: ( (lv_elementList_1_0= ruleelementList ) )
                    // InternalGo.g:5550:5: (lv_elementList_1_0= ruleelementList )
                    {
                    // InternalGo.g:5550:5: (lv_elementList_1_0= ruleelementList )
                    // InternalGo.g:5551:6: lv_elementList_1_0= ruleelementList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralValueAccess().getElementListElementListParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_56);
                    lv_elementList_1_0=ruleelementList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralValueRule());
                      						}
                      						set(
                      							current,
                      							"elementList",
                      							lv_elementList_1_0,
                      							"org.xtext.Go.elementList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:5568:4: (otherlv_2= ',' )?
                    int alt70=2;
                    int LA70_0 = input.LA(1);

                    if ( (LA70_0==52) ) {
                        alt70=1;
                    }
                    switch (alt70) {
                        case 1 :
                            // InternalGo.g:5569:5: otherlv_2= ','
                            {
                            otherlv_2=(Token)match(input,52,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getLiteralValueAccess().getCommaKeyword_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleliteralValue"


    // $ANTLR start "entryRuleelementList"
    // InternalGo.g:5583:1: entryRuleelementList returns [EObject current=null] : iv_ruleelementList= ruleelementList EOF ;
    public final EObject entryRuleelementList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleelementList = null;


        try {
            // InternalGo.g:5583:52: (iv_ruleelementList= ruleelementList EOF )
            // InternalGo.g:5584:2: iv_ruleelementList= ruleelementList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleelementList=ruleelementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleelementList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleelementList"


    // $ANTLR start "ruleelementList"
    // InternalGo.g:5590:1: ruleelementList returns [EObject current=null] : ( ( (lv_keyedElement_0_0= rulekeyedElement ) ) (otherlv_1= ',' ( (lv_keyedElement_2_0= rulekeyedElement ) ) )* ) ;
    public final EObject ruleelementList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_keyedElement_0_0 = null;

        EObject lv_keyedElement_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5596:2: ( ( ( (lv_keyedElement_0_0= rulekeyedElement ) ) (otherlv_1= ',' ( (lv_keyedElement_2_0= rulekeyedElement ) ) )* ) )
            // InternalGo.g:5597:2: ( ( (lv_keyedElement_0_0= rulekeyedElement ) ) (otherlv_1= ',' ( (lv_keyedElement_2_0= rulekeyedElement ) ) )* )
            {
            // InternalGo.g:5597:2: ( ( (lv_keyedElement_0_0= rulekeyedElement ) ) (otherlv_1= ',' ( (lv_keyedElement_2_0= rulekeyedElement ) ) )* )
            // InternalGo.g:5598:3: ( (lv_keyedElement_0_0= rulekeyedElement ) ) (otherlv_1= ',' ( (lv_keyedElement_2_0= rulekeyedElement ) ) )*
            {
            // InternalGo.g:5598:3: ( (lv_keyedElement_0_0= rulekeyedElement ) )
            // InternalGo.g:5599:4: (lv_keyedElement_0_0= rulekeyedElement )
            {
            // InternalGo.g:5599:4: (lv_keyedElement_0_0= rulekeyedElement )
            // InternalGo.g:5600:5: lv_keyedElement_0_0= rulekeyedElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_keyedElement_0_0=rulekeyedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getElementListRule());
              					}
              					set(
              						current,
              						"keyedElement",
              						lv_keyedElement_0_0,
              						"org.xtext.Go.keyedElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:5617:3: (otherlv_1= ',' ( (lv_keyedElement_2_0= rulekeyedElement ) ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==52) ) {
                    int LA72_1 = input.LA(2);

                    if ( (synpred124_InternalGo()) ) {
                        alt72=1;
                    }


                }


                switch (alt72) {
            	case 1 :
            	    // InternalGo.g:5618:4: otherlv_1= ',' ( (lv_keyedElement_2_0= rulekeyedElement ) )
            	    {
            	    otherlv_1=(Token)match(input,52,FOLLOW_36); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getElementListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:5622:4: ( (lv_keyedElement_2_0= rulekeyedElement ) )
            	    // InternalGo.g:5623:5: (lv_keyedElement_2_0= rulekeyedElement )
            	    {
            	    // InternalGo.g:5623:5: (lv_keyedElement_2_0= rulekeyedElement )
            	    // InternalGo.g:5624:6: lv_keyedElement_2_0= rulekeyedElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_15);
            	    lv_keyedElement_2_0=rulekeyedElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getElementListRule());
            	      						}
            	      						set(
            	      							current,
            	      							"keyedElement",
            	      							lv_keyedElement_2_0,
            	      							"org.xtext.Go.keyedElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleelementList"


    // $ANTLR start "entryRulekeyedElement"
    // InternalGo.g:5646:1: entryRulekeyedElement returns [EObject current=null] : iv_rulekeyedElement= rulekeyedElement EOF ;
    public final EObject entryRulekeyedElement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulekeyedElement = null;


        try {
            // InternalGo.g:5646:53: (iv_rulekeyedElement= rulekeyedElement EOF )
            // InternalGo.g:5647:2: iv_rulekeyedElement= rulekeyedElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyedElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulekeyedElement=rulekeyedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulekeyedElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulekeyedElement"


    // $ANTLR start "rulekeyedElement"
    // InternalGo.g:5653:1: rulekeyedElement returns [EObject current=null] : ( ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )? ( (lv_element_2_0= ruleelement ) ) ) ;
    public final EObject rulekeyedElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_key_0_0 = null;

        EObject lv_element_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5659:2: ( ( ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )? ( (lv_element_2_0= ruleelement ) ) ) )
            // InternalGo.g:5660:2: ( ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )? ( (lv_element_2_0= ruleelement ) ) )
            {
            // InternalGo.g:5660:2: ( ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )? ( (lv_element_2_0= ruleelement ) ) )
            // InternalGo.g:5661:3: ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )? ( (lv_element_2_0= ruleelement ) )
            {
            // InternalGo.g:5661:3: ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )?
            int alt73=2;
            alt73 = dfa73.predict(input);
            switch (alt73) {
                case 1 :
                    // InternalGo.g:5662:4: ( (lv_key_0_0= rulekey ) ) otherlv_1= ':'
                    {
                    // InternalGo.g:5662:4: ( (lv_key_0_0= rulekey ) )
                    // InternalGo.g:5663:5: (lv_key_0_0= rulekey )
                    {
                    // InternalGo.g:5663:5: (lv_key_0_0= rulekey )
                    // InternalGo.g:5664:6: lv_key_0_0= rulekey
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeyedElementAccess().getKeyKeyParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_28);
                    lv_key_0_0=rulekey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeyedElementRule());
                      						}
                      						set(
                      							current,
                      							"key",
                      							lv_key_0_0,
                      							"org.xtext.Go.key");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,73,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getKeyedElementAccess().getColonKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:5686:3: ( (lv_element_2_0= ruleelement ) )
            // InternalGo.g:5687:4: (lv_element_2_0= ruleelement )
            {
            // InternalGo.g:5687:4: (lv_element_2_0= ruleelement )
            // InternalGo.g:5688:5: lv_element_2_0= ruleelement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_element_2_0=ruleelement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyedElementRule());
              					}
              					set(
              						current,
              						"element",
              						lv_element_2_0,
              						"org.xtext.Go.element");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulekeyedElement"


    // $ANTLR start "entryRulekey"
    // InternalGo.g:5709:1: entryRulekey returns [EObject current=null] : iv_rulekey= rulekey EOF ;
    public final EObject entryRulekey() throws RecognitionException {
        EObject current = null;

        EObject iv_rulekey = null;


        try {
            // InternalGo.g:5709:44: (iv_rulekey= rulekey EOF )
            // InternalGo.g:5710:2: iv_rulekey= rulekey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulekey=rulekey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulekey; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulekey"


    // $ANTLR start "rulekey"
    // InternalGo.g:5716:1: rulekey returns [EObject current=null] : (this_IDENTIFIER_0= RULE_IDENTIFIER | ( (lv_expression_1_0= ruleexpression ) ) | ( (lv_literalValue_2_0= ruleliteralValue ) ) ) ;
    public final EObject rulekey() throws RecognitionException {
        EObject current = null;

        Token this_IDENTIFIER_0=null;
        EObject lv_expression_1_0 = null;

        EObject lv_literalValue_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5722:2: ( (this_IDENTIFIER_0= RULE_IDENTIFIER | ( (lv_expression_1_0= ruleexpression ) ) | ( (lv_literalValue_2_0= ruleliteralValue ) ) ) )
            // InternalGo.g:5723:2: (this_IDENTIFIER_0= RULE_IDENTIFIER | ( (lv_expression_1_0= ruleexpression ) ) | ( (lv_literalValue_2_0= ruleliteralValue ) ) )
            {
            // InternalGo.g:5723:2: (this_IDENTIFIER_0= RULE_IDENTIFIER | ( (lv_expression_1_0= ruleexpression ) ) | ( (lv_literalValue_2_0= ruleliteralValue ) ) )
            int alt74=3;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                int LA74_1 = input.LA(2);

                if ( (synpred126_InternalGo()) ) {
                    alt74=1;
                }
                else if ( (synpred127_InternalGo()) ) {
                    alt74=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 74, 1, input);

                    throw nvae;
                }
                }
                break;
            case EOF:
            case RULE_STRING_LIT:
            case RULE_INT_LIT:
            case RULE_FLOAT_LIT:
            case RULE_IMAGINARY_LIT:
            case RULE_RUNE_LIT:
            case RULE_BINARY_OP:
            case 47:
            case 49:
            case 54:
            case 58:
            case 61:
            case 62:
            case 64:
            case 65:
            case 70:
            case 73:
            case 89:
            case 91:
            case 92:
            case 93:
            case 95:
            case 96:
                {
                alt74=2;
                }
                break;
            case 56:
                {
                alt74=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }

            switch (alt74) {
                case 1 :
                    // InternalGo.g:5724:3: this_IDENTIFIER_0= RULE_IDENTIFIER
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_IDENTIFIER_0, grammarAccess.getKeyAccess().getIDENTIFIERTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:5729:3: ( (lv_expression_1_0= ruleexpression ) )
                    {
                    // InternalGo.g:5729:3: ( (lv_expression_1_0= ruleexpression ) )
                    // InternalGo.g:5730:4: (lv_expression_1_0= ruleexpression )
                    {
                    // InternalGo.g:5730:4: (lv_expression_1_0= ruleexpression )
                    // InternalGo.g:5731:5: lv_expression_1_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getKeyAccess().getExpressionExpressionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_1_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getKeyRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_1_0,
                      						"org.xtext.Go.expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:5749:3: ( (lv_literalValue_2_0= ruleliteralValue ) )
                    {
                    // InternalGo.g:5749:3: ( (lv_literalValue_2_0= ruleliteralValue ) )
                    // InternalGo.g:5750:4: (lv_literalValue_2_0= ruleliteralValue )
                    {
                    // InternalGo.g:5750:4: (lv_literalValue_2_0= ruleliteralValue )
                    // InternalGo.g:5751:5: lv_literalValue_2_0= ruleliteralValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getKeyAccess().getLiteralValueLiteralValueParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literalValue_2_0=ruleliteralValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getKeyRule());
                      					}
                      					set(
                      						current,
                      						"literalValue",
                      						lv_literalValue_2_0,
                      						"org.xtext.Go.literalValue");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulekey"


    // $ANTLR start "entryRuleelement"
    // InternalGo.g:5772:1: entryRuleelement returns [EObject current=null] : iv_ruleelement= ruleelement EOF ;
    public final EObject entryRuleelement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleelement = null;


        try {
            // InternalGo.g:5772:48: (iv_ruleelement= ruleelement EOF )
            // InternalGo.g:5773:2: iv_ruleelement= ruleelement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleelement=ruleelement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleelement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleelement"


    // $ANTLR start "ruleelement"
    // InternalGo.g:5779:1: ruleelement returns [EObject current=null] : ( ( (lv_expression_0_0= ruleexpression ) ) | ( (lv_literalValue_1_0= ruleliteralValue ) ) ) ;
    public final EObject ruleelement() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;

        EObject lv_literalValue_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5785:2: ( ( ( (lv_expression_0_0= ruleexpression ) ) | ( (lv_literalValue_1_0= ruleliteralValue ) ) ) )
            // InternalGo.g:5786:2: ( ( (lv_expression_0_0= ruleexpression ) ) | ( (lv_literalValue_1_0= ruleliteralValue ) ) )
            {
            // InternalGo.g:5786:2: ( ( (lv_expression_0_0= ruleexpression ) ) | ( (lv_literalValue_1_0= ruleliteralValue ) ) )
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==EOF||(LA75_0>=RULE_IDENTIFIER && LA75_0<=RULE_STRING_LIT)||(LA75_0>=RULE_INT_LIT && LA75_0<=RULE_BINARY_OP)||LA75_0==47||LA75_0==49||LA75_0==52||LA75_0==54||(LA75_0>=57 && LA75_0<=58)||(LA75_0>=61 && LA75_0<=62)||(LA75_0>=64 && LA75_0<=65)||LA75_0==70||LA75_0==89||(LA75_0>=91 && LA75_0<=93)||(LA75_0>=95 && LA75_0<=96)) ) {
                alt75=1;
            }
            else if ( (LA75_0==56) ) {
                alt75=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }
            switch (alt75) {
                case 1 :
                    // InternalGo.g:5787:3: ( (lv_expression_0_0= ruleexpression ) )
                    {
                    // InternalGo.g:5787:3: ( (lv_expression_0_0= ruleexpression ) )
                    // InternalGo.g:5788:4: (lv_expression_0_0= ruleexpression )
                    {
                    // InternalGo.g:5788:4: (lv_expression_0_0= ruleexpression )
                    // InternalGo.g:5789:5: lv_expression_0_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getElementAccess().getExpressionExpressionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_0_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getElementRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_0_0,
                      						"org.xtext.Go.expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5807:3: ( (lv_literalValue_1_0= ruleliteralValue ) )
                    {
                    // InternalGo.g:5807:3: ( (lv_literalValue_1_0= ruleliteralValue ) )
                    // InternalGo.g:5808:4: (lv_literalValue_1_0= ruleliteralValue )
                    {
                    // InternalGo.g:5808:4: (lv_literalValue_1_0= ruleliteralValue )
                    // InternalGo.g:5809:5: lv_literalValue_1_0= ruleliteralValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getElementAccess().getLiteralValueLiteralValueParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literalValue_1_0=ruleliteralValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getElementRule());
                      					}
                      					set(
                      						current,
                      						"literalValue",
                      						lv_literalValue_1_0,
                      						"org.xtext.Go.literalValue");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleelement"


    // $ANTLR start "entryRulestructType"
    // InternalGo.g:5830:1: entryRulestructType returns [EObject current=null] : iv_rulestructType= rulestructType EOF ;
    public final EObject entryRulestructType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestructType = null;


        try {
            // InternalGo.g:5830:51: (iv_rulestructType= rulestructType EOF )
            // InternalGo.g:5831:2: iv_rulestructType= rulestructType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestructType=rulestructType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestructType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestructType"


    // $ANTLR start "rulestructType"
    // InternalGo.g:5837:1: rulestructType returns [EObject current=null] : (otherlv_0= 'struct' otherlv_1= '{' ( ( (lv_fieldDecl_2_0= rulefieldDecl ) ) otherlv_3= ';' )* otherlv_4= '}' ) ;
    public final EObject rulestructType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_fieldDecl_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5843:2: ( (otherlv_0= 'struct' otherlv_1= '{' ( ( (lv_fieldDecl_2_0= rulefieldDecl ) ) otherlv_3= ';' )* otherlv_4= '}' ) )
            // InternalGo.g:5844:2: (otherlv_0= 'struct' otherlv_1= '{' ( ( (lv_fieldDecl_2_0= rulefieldDecl ) ) otherlv_3= ';' )* otherlv_4= '}' )
            {
            // InternalGo.g:5844:2: (otherlv_0= 'struct' otherlv_1= '{' ( ( (lv_fieldDecl_2_0= rulefieldDecl ) ) otherlv_3= ';' )* otherlv_4= '}' )
            // InternalGo.g:5845:3: otherlv_0= 'struct' otherlv_1= '{' ( ( (lv_fieldDecl_2_0= rulefieldDecl ) ) otherlv_3= ';' )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,95,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStructTypeAccess().getStructKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,56,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalGo.g:5853:3: ( ( (lv_fieldDecl_2_0= rulefieldDecl ) ) otherlv_3= ';' )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==RULE_IDENTIFIER||LA76_0==65) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalGo.g:5854:4: ( (lv_fieldDecl_2_0= rulefieldDecl ) ) otherlv_3= ';'
            	    {
            	    // InternalGo.g:5854:4: ( (lv_fieldDecl_2_0= rulefieldDecl ) )
            	    // InternalGo.g:5855:5: (lv_fieldDecl_2_0= rulefieldDecl )
            	    {
            	    // InternalGo.g:5855:5: (lv_fieldDecl_2_0= rulefieldDecl )
            	    // InternalGo.g:5856:6: lv_fieldDecl_2_0= rulefieldDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStructTypeAccess().getFieldDeclFieldDeclParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_fieldDecl_2_0=rulefieldDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStructTypeRule());
            	      						}
            	      						set(
            	      							current,
            	      							"fieldDecl",
            	      							lv_fieldDecl_2_0,
            	      							"org.xtext.Go.fieldDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,44,FOLLOW_57); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getStructTypeAccess().getSemicolonKeyword_2_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

            otherlv_4=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestructType"


    // $ANTLR start "entryRulefieldDecl"
    // InternalGo.g:5886:1: entryRulefieldDecl returns [EObject current=null] : iv_rulefieldDecl= rulefieldDecl EOF ;
    public final EObject entryRulefieldDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefieldDecl = null;


        try {
            // InternalGo.g:5886:50: (iv_rulefieldDecl= rulefieldDecl EOF )
            // InternalGo.g:5887:2: iv_rulefieldDecl= rulefieldDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefieldDecl=rulefieldDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefieldDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefieldDecl"


    // $ANTLR start "rulefieldDecl"
    // InternalGo.g:5893:1: rulefieldDecl returns [EObject current=null] : ( ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) ) | ( (lv_anonymousField_2_0= ruleanonymousField ) ) ) (this_STRING_LIT_3= RULE_STRING_LIT )? ) ;
    public final EObject rulefieldDecl() throws RecognitionException {
        EObject current = null;

        Token this_STRING_LIT_3=null;
        AntlrDatatypeRuleToken lv_identifierList_0_0 = null;

        EObject lv_type_1_0 = null;

        EObject lv_anonymousField_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5899:2: ( ( ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) ) | ( (lv_anonymousField_2_0= ruleanonymousField ) ) ) (this_STRING_LIT_3= RULE_STRING_LIT )? ) )
            // InternalGo.g:5900:2: ( ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) ) | ( (lv_anonymousField_2_0= ruleanonymousField ) ) ) (this_STRING_LIT_3= RULE_STRING_LIT )? )
            {
            // InternalGo.g:5900:2: ( ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) ) | ( (lv_anonymousField_2_0= ruleanonymousField ) ) ) (this_STRING_LIT_3= RULE_STRING_LIT )? )
            // InternalGo.g:5901:3: ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) ) | ( (lv_anonymousField_2_0= ruleanonymousField ) ) ) (this_STRING_LIT_3= RULE_STRING_LIT )?
            {
            // InternalGo.g:5901:3: ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) ) | ( (lv_anonymousField_2_0= ruleanonymousField ) ) )
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==RULE_IDENTIFIER) ) {
                int LA77_1 = input.LA(2);

                if ( (LA77_1==EOF||LA77_1==RULE_STRING_LIT||LA77_1==44||LA77_1==49) ) {
                    alt77=2;
                }
                else if ( (LA77_1==RULE_IDENTIFIER||LA77_1==47||LA77_1==52||LA77_1==54||LA77_1==58||LA77_1==65||LA77_1==89||(LA77_1>=91 && LA77_1<=93)||LA77_1==95) ) {
                    alt77=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 77, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA77_0==65) ) {
                alt77=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;
            }
            switch (alt77) {
                case 1 :
                    // InternalGo.g:5902:4: ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) )
                    {
                    // InternalGo.g:5902:4: ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) )
                    // InternalGo.g:5903:5: ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) )
                    {
                    // InternalGo.g:5903:5: ( (lv_identifierList_0_0= ruleidentifierList ) )
                    // InternalGo.g:5904:6: (lv_identifierList_0_0= ruleidentifierList )
                    {
                    // InternalGo.g:5904:6: (lv_identifierList_0_0= ruleidentifierList )
                    // InternalGo.g:5905:7: lv_identifierList_0_0= ruleidentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFieldDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_16);
                    lv_identifierList_0_0=ruleidentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      							}
                      							set(
                      								current,
                      								"identifierList",
                      								lv_identifierList_0_0,
                      								"org.xtext.Go.identifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:5922:5: ( (lv_type_1_0= ruletype ) )
                    // InternalGo.g:5923:6: (lv_type_1_0= ruletype )
                    {
                    // InternalGo.g:5923:6: (lv_type_1_0= ruletype )
                    // InternalGo.g:5924:7: lv_type_1_0= ruletype
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_58);
                    lv_type_1_0=ruletype();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_1_0,
                      								"org.xtext.Go.type");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5943:4: ( (lv_anonymousField_2_0= ruleanonymousField ) )
                    {
                    // InternalGo.g:5943:4: ( (lv_anonymousField_2_0= ruleanonymousField ) )
                    // InternalGo.g:5944:5: (lv_anonymousField_2_0= ruleanonymousField )
                    {
                    // InternalGo.g:5944:5: (lv_anonymousField_2_0= ruleanonymousField )
                    // InternalGo.g:5945:6: lv_anonymousField_2_0= ruleanonymousField
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFieldDeclAccess().getAnonymousFieldAnonymousFieldParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_58);
                    lv_anonymousField_2_0=ruleanonymousField();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      						}
                      						set(
                      							current,
                      							"anonymousField",
                      							lv_anonymousField_2_0,
                      							"org.xtext.Go.anonymousField");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGo.g:5963:3: (this_STRING_LIT_3= RULE_STRING_LIT )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==RULE_STRING_LIT) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalGo.g:5964:4: this_STRING_LIT_3= RULE_STRING_LIT
                    {
                    this_STRING_LIT_3=(Token)match(input,RULE_STRING_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_STRING_LIT_3, grammarAccess.getFieldDeclAccess().getSTRING_LITTerminalRuleCall_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefieldDecl"


    // $ANTLR start "entryRuleanonymousField"
    // InternalGo.g:5973:1: entryRuleanonymousField returns [EObject current=null] : iv_ruleanonymousField= ruleanonymousField EOF ;
    public final EObject entryRuleanonymousField() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleanonymousField = null;


        try {
            // InternalGo.g:5973:55: (iv_ruleanonymousField= ruleanonymousField EOF )
            // InternalGo.g:5974:2: iv_ruleanonymousField= ruleanonymousField EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnonymousFieldRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleanonymousField=ruleanonymousField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleanonymousField; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleanonymousField"


    // $ANTLR start "ruleanonymousField"
    // InternalGo.g:5980:1: ruleanonymousField returns [EObject current=null] : ( (otherlv_0= '*' )? ( (lv_typeName_1_0= ruletypeName ) ) ) ;
    public final EObject ruleanonymousField() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeName_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5986:2: ( ( (otherlv_0= '*' )? ( (lv_typeName_1_0= ruletypeName ) ) ) )
            // InternalGo.g:5987:2: ( (otherlv_0= '*' )? ( (lv_typeName_1_0= ruletypeName ) ) )
            {
            // InternalGo.g:5987:2: ( (otherlv_0= '*' )? ( (lv_typeName_1_0= ruletypeName ) ) )
            // InternalGo.g:5988:3: (otherlv_0= '*' )? ( (lv_typeName_1_0= ruletypeName ) )
            {
            // InternalGo.g:5988:3: (otherlv_0= '*' )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==65) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalGo.g:5989:4: otherlv_0= '*'
                    {
                    otherlv_0=(Token)match(input,65,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getAnonymousFieldAccess().getAsteriskKeyword_0());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:5994:3: ( (lv_typeName_1_0= ruletypeName ) )
            // InternalGo.g:5995:4: (lv_typeName_1_0= ruletypeName )
            {
            // InternalGo.g:5995:4: (lv_typeName_1_0= ruletypeName )
            // InternalGo.g:5996:5: lv_typeName_1_0= ruletypeName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnonymousFieldAccess().getTypeNameTypeNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeName_1_0=ruletypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnonymousFieldRule());
              					}
              					set(
              						current,
              						"typeName",
              						lv_typeName_1_0,
              						"org.xtext.Go.typeName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleanonymousField"


    // $ANTLR start "entryRulefunctionLit"
    // InternalGo.g:6017:1: entryRulefunctionLit returns [EObject current=null] : iv_rulefunctionLit= rulefunctionLit EOF ;
    public final EObject entryRulefunctionLit() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefunctionLit = null;


        try {
            // InternalGo.g:6017:52: (iv_rulefunctionLit= rulefunctionLit EOF )
            // InternalGo.g:6018:2: iv_rulefunctionLit= rulefunctionLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefunctionLit=rulefunctionLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefunctionLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefunctionLit"


    // $ANTLR start "rulefunctionLit"
    // InternalGo.g:6024:1: rulefunctionLit returns [EObject current=null] : (otherlv_0= 'func' ( (lv_function_1_0= rulefunction ) ) ) ;
    public final EObject rulefunctionLit() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_function_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6030:2: ( (otherlv_0= 'func' ( (lv_function_1_0= rulefunction ) ) ) )
            // InternalGo.g:6031:2: (otherlv_0= 'func' ( (lv_function_1_0= rulefunction ) ) )
            {
            // InternalGo.g:6031:2: (otherlv_0= 'func' ( (lv_function_1_0= rulefunction ) ) )
            // InternalGo.g:6032:3: otherlv_0= 'func' ( (lv_function_1_0= rulefunction ) )
            {
            otherlv_0=(Token)match(input,54,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionLitAccess().getFuncKeyword_0());
              		
            }
            // InternalGo.g:6036:3: ( (lv_function_1_0= rulefunction ) )
            // InternalGo.g:6037:4: (lv_function_1_0= rulefunction )
            {
            // InternalGo.g:6037:4: (lv_function_1_0= rulefunction )
            // InternalGo.g:6038:5: lv_function_1_0= rulefunction
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionLitAccess().getFunctionFunctionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_function_1_0=rulefunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionLitRule());
              					}
              					set(
              						current,
              						"function",
              						lv_function_1_0,
              						"org.xtext.Go.function");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefunctionLit"


    // $ANTLR start "entryRuleprimaryExpr"
    // InternalGo.g:6059:1: entryRuleprimaryExpr returns [EObject current=null] : iv_ruleprimaryExpr= ruleprimaryExpr EOF ;
    public final EObject entryRuleprimaryExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExpr = null;


        try {
            // InternalGo.g:6059:52: (iv_ruleprimaryExpr= ruleprimaryExpr EOF )
            // InternalGo.g:6060:2: iv_ruleprimaryExpr= ruleprimaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExpr=ruleprimaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExpr"


    // $ANTLR start "ruleprimaryExpr"
    // InternalGo.g:6066:1: ruleprimaryExpr returns [EObject current=null] : ( ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) ) | ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) ) | ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) ) | ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) ) | ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) ) | ( (lv_primaryExprArguments_6_0= ruleprimaryExprArguments ) ) ) ;
    public final EObject ruleprimaryExpr() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_0_0 = null;

        EObject lv_conversion_1_0 = null;

        EObject lv_primaryExprSelector_2_0 = null;

        EObject lv_primaryExprIndex_3_0 = null;

        EObject lv_primaryExprSlice_4_0 = null;

        EObject lv_primaryExprTypeAssertion_5_0 = null;

        EObject lv_primaryExprArguments_6_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6072:2: ( ( ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) ) | ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) ) | ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) ) | ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) ) | ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) ) | ( (lv_primaryExprArguments_6_0= ruleprimaryExprArguments ) ) ) )
            // InternalGo.g:6073:2: ( ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) ) | ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) ) | ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) ) | ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) ) | ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) ) | ( (lv_primaryExprArguments_6_0= ruleprimaryExprArguments ) ) )
            {
            // InternalGo.g:6073:2: ( ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) ) | ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) ) | ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) ) | ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) ) | ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) ) | ( (lv_primaryExprArguments_6_0= ruleprimaryExprArguments ) ) )
            int alt81=6;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalGo.g:6074:3: ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) )
                    {
                    // InternalGo.g:6074:3: ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) )
                    int alt80=2;
                    alt80 = dfa80.predict(input);
                    switch (alt80) {
                        case 1 :
                            // InternalGo.g:6075:4: ( (lv_operand_0_0= ruleoperand ) )
                            {
                            // InternalGo.g:6075:4: ( (lv_operand_0_0= ruleoperand ) )
                            // InternalGo.g:6076:5: (lv_operand_0_0= ruleoperand )
                            {
                            // InternalGo.g:6076:5: (lv_operand_0_0= ruleoperand )
                            // InternalGo.g:6077:6: lv_operand_0_0= ruleoperand
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExprAccess().getOperandOperandParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_operand_0_0=ruleoperand();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                              						}
                              						set(
                              							current,
                              							"operand",
                              							lv_operand_0_0,
                              							"org.xtext.Go.operand");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:6095:4: ( (lv_conversion_1_0= ruleconversion ) )
                            {
                            // InternalGo.g:6095:4: ( (lv_conversion_1_0= ruleconversion ) )
                            // InternalGo.g:6096:5: (lv_conversion_1_0= ruleconversion )
                            {
                            // InternalGo.g:6096:5: (lv_conversion_1_0= ruleconversion )
                            // InternalGo.g:6097:6: lv_conversion_1_0= ruleconversion
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExprAccess().getConversionConversionParserRuleCall_0_1_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_conversion_1_0=ruleconversion();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                              						}
                              						set(
                              							current,
                              							"conversion",
                              							lv_conversion_1_0,
                              							"org.xtext.Go.conversion");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6116:3: ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) )
                    {
                    // InternalGo.g:6116:3: ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) )
                    // InternalGo.g:6117:4: (lv_primaryExprSelector_2_0= ruleprimaryExprSelector )
                    {
                    // InternalGo.g:6117:4: (lv_primaryExprSelector_2_0= ruleprimaryExprSelector )
                    // InternalGo.g:6118:5: lv_primaryExprSelector_2_0= ruleprimaryExprSelector
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprSelectorPrimaryExprSelectorParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprSelector_2_0=ruleprimaryExprSelector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprSelector",
                      						lv_primaryExprSelector_2_0,
                      						"org.xtext.Go.primaryExprSelector");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6136:3: ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) )
                    {
                    // InternalGo.g:6136:3: ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) )
                    // InternalGo.g:6137:4: (lv_primaryExprIndex_3_0= ruleprimaryExprIndex )
                    {
                    // InternalGo.g:6137:4: (lv_primaryExprIndex_3_0= ruleprimaryExprIndex )
                    // InternalGo.g:6138:5: lv_primaryExprIndex_3_0= ruleprimaryExprIndex
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprIndexPrimaryExprIndexParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprIndex_3_0=ruleprimaryExprIndex();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprIndex",
                      						lv_primaryExprIndex_3_0,
                      						"org.xtext.Go.primaryExprIndex");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:6156:3: ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) )
                    {
                    // InternalGo.g:6156:3: ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) )
                    // InternalGo.g:6157:4: (lv_primaryExprSlice_4_0= ruleprimaryExprSlice )
                    {
                    // InternalGo.g:6157:4: (lv_primaryExprSlice_4_0= ruleprimaryExprSlice )
                    // InternalGo.g:6158:5: lv_primaryExprSlice_4_0= ruleprimaryExprSlice
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprSlicePrimaryExprSliceParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprSlice_4_0=ruleprimaryExprSlice();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprSlice",
                      						lv_primaryExprSlice_4_0,
                      						"org.xtext.Go.primaryExprSlice");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:6176:3: ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) )
                    {
                    // InternalGo.g:6176:3: ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) )
                    // InternalGo.g:6177:4: (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion )
                    {
                    // InternalGo.g:6177:4: (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion )
                    // InternalGo.g:6178:5: lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprTypeAssertionPrimaryExprTypeAssertionParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprTypeAssertion_5_0=ruleprimaryExprTypeAssertion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprTypeAssertion",
                      						lv_primaryExprTypeAssertion_5_0,
                      						"org.xtext.Go.primaryExprTypeAssertion");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:6196:3: ( (lv_primaryExprArguments_6_0= ruleprimaryExprArguments ) )
                    {
                    // InternalGo.g:6196:3: ( (lv_primaryExprArguments_6_0= ruleprimaryExprArguments ) )
                    // InternalGo.g:6197:4: (lv_primaryExprArguments_6_0= ruleprimaryExprArguments )
                    {
                    // InternalGo.g:6197:4: (lv_primaryExprArguments_6_0= ruleprimaryExprArguments )
                    // InternalGo.g:6198:5: lv_primaryExprArguments_6_0= ruleprimaryExprArguments
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprArgumentsPrimaryExprArgumentsParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprArguments_6_0=ruleprimaryExprArguments();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprArguments",
                      						lv_primaryExprArguments_6_0,
                      						"org.xtext.Go.primaryExprArguments");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExpr"


    // $ANTLR start "entryRuleprimaryExprStuff"
    // InternalGo.g:6219:1: entryRuleprimaryExprStuff returns [EObject current=null] : iv_ruleprimaryExprStuff= ruleprimaryExprStuff EOF ;
    public final EObject entryRuleprimaryExprStuff() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExprStuff = null;


        try {
            // InternalGo.g:6219:57: (iv_ruleprimaryExprStuff= ruleprimaryExprStuff EOF )
            // InternalGo.g:6220:2: iv_ruleprimaryExprStuff= ruleprimaryExprStuff EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprStuffRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExprStuff=ruleprimaryExprStuff();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExprStuff; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExprStuff"


    // $ANTLR start "ruleprimaryExprStuff"
    // InternalGo.g:6226:1: ruleprimaryExprStuff returns [EObject current=null] : ( ( (lv_selector_0_0= ruleselector ) ) | ( (lv_index_1_0= ruleindex ) ) | ( (lv_slice_2_0= ruleslice ) ) | ( (lv_typeAssertion_3_0= ruletypeAssertion ) ) | ( (lv_arguments_4_0= rulearguments ) ) ) ;
    public final EObject ruleprimaryExprStuff() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_selector_0_0 = null;

        EObject lv_index_1_0 = null;

        EObject lv_slice_2_0 = null;

        EObject lv_typeAssertion_3_0 = null;

        EObject lv_arguments_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6232:2: ( ( ( (lv_selector_0_0= ruleselector ) ) | ( (lv_index_1_0= ruleindex ) ) | ( (lv_slice_2_0= ruleslice ) ) | ( (lv_typeAssertion_3_0= ruletypeAssertion ) ) | ( (lv_arguments_4_0= rulearguments ) ) ) )
            // InternalGo.g:6233:2: ( ( (lv_selector_0_0= ruleselector ) ) | ( (lv_index_1_0= ruleindex ) ) | ( (lv_slice_2_0= ruleslice ) ) | ( (lv_typeAssertion_3_0= ruletypeAssertion ) ) | ( (lv_arguments_4_0= rulearguments ) ) )
            {
            // InternalGo.g:6233:2: ( ( (lv_selector_0_0= ruleselector ) ) | ( (lv_index_1_0= ruleindex ) ) | ( (lv_slice_2_0= ruleslice ) ) | ( (lv_typeAssertion_3_0= ruletypeAssertion ) ) | ( (lv_arguments_4_0= rulearguments ) ) )
            int alt82=5;
            switch ( input.LA(1) ) {
            case 49:
                {
                int LA82_1 = input.LA(2);

                if ( (synpred139_InternalGo()) ) {
                    alt82=1;
                }
                else if ( (synpred142_InternalGo()) ) {
                    alt82=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 82, 1, input);

                    throw nvae;
                }
                }
                break;
            case 89:
                {
                int LA82_2 = input.LA(2);

                if ( (synpred140_InternalGo()) ) {
                    alt82=2;
                }
                else if ( (synpred141_InternalGo()) ) {
                    alt82=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 82, 2, input);

                    throw nvae;
                }
                }
                break;
            case 47:
                {
                alt82=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 82, 0, input);

                throw nvae;
            }

            switch (alt82) {
                case 1 :
                    // InternalGo.g:6234:3: ( (lv_selector_0_0= ruleselector ) )
                    {
                    // InternalGo.g:6234:3: ( (lv_selector_0_0= ruleselector ) )
                    // InternalGo.g:6235:4: (lv_selector_0_0= ruleselector )
                    {
                    // InternalGo.g:6235:4: (lv_selector_0_0= ruleselector )
                    // InternalGo.g:6236:5: lv_selector_0_0= ruleselector
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getSelectorSelectorParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_selector_0_0=ruleselector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprStuffRule());
                      					}
                      					set(
                      						current,
                      						"selector",
                      						lv_selector_0_0,
                      						"org.xtext.Go.selector");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6254:3: ( (lv_index_1_0= ruleindex ) )
                    {
                    // InternalGo.g:6254:3: ( (lv_index_1_0= ruleindex ) )
                    // InternalGo.g:6255:4: (lv_index_1_0= ruleindex )
                    {
                    // InternalGo.g:6255:4: (lv_index_1_0= ruleindex )
                    // InternalGo.g:6256:5: lv_index_1_0= ruleindex
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getIndexIndexParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_index_1_0=ruleindex();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprStuffRule());
                      					}
                      					set(
                      						current,
                      						"index",
                      						lv_index_1_0,
                      						"org.xtext.Go.index");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6274:3: ( (lv_slice_2_0= ruleslice ) )
                    {
                    // InternalGo.g:6274:3: ( (lv_slice_2_0= ruleslice ) )
                    // InternalGo.g:6275:4: (lv_slice_2_0= ruleslice )
                    {
                    // InternalGo.g:6275:4: (lv_slice_2_0= ruleslice )
                    // InternalGo.g:6276:5: lv_slice_2_0= ruleslice
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getSliceSliceParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_slice_2_0=ruleslice();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprStuffRule());
                      					}
                      					set(
                      						current,
                      						"slice",
                      						lv_slice_2_0,
                      						"org.xtext.Go.slice");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:6294:3: ( (lv_typeAssertion_3_0= ruletypeAssertion ) )
                    {
                    // InternalGo.g:6294:3: ( (lv_typeAssertion_3_0= ruletypeAssertion ) )
                    // InternalGo.g:6295:4: (lv_typeAssertion_3_0= ruletypeAssertion )
                    {
                    // InternalGo.g:6295:4: (lv_typeAssertion_3_0= ruletypeAssertion )
                    // InternalGo.g:6296:5: lv_typeAssertion_3_0= ruletypeAssertion
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getTypeAssertionTypeAssertionParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeAssertion_3_0=ruletypeAssertion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprStuffRule());
                      					}
                      					set(
                      						current,
                      						"typeAssertion",
                      						lv_typeAssertion_3_0,
                      						"org.xtext.Go.typeAssertion");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:6314:3: ( (lv_arguments_4_0= rulearguments ) )
                    {
                    // InternalGo.g:6314:3: ( (lv_arguments_4_0= rulearguments ) )
                    // InternalGo.g:6315:4: (lv_arguments_4_0= rulearguments )
                    {
                    // InternalGo.g:6315:4: (lv_arguments_4_0= rulearguments )
                    // InternalGo.g:6316:5: lv_arguments_4_0= rulearguments
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getArgumentsArgumentsParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arguments_4_0=rulearguments();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprStuffRule());
                      					}
                      					set(
                      						current,
                      						"arguments",
                      						lv_arguments_4_0,
                      						"org.xtext.Go.arguments");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExprStuff"


    // $ANTLR start "entryRuleprimaryExprSelector"
    // InternalGo.g:6337:1: entryRuleprimaryExprSelector returns [EObject current=null] : iv_ruleprimaryExprSelector= ruleprimaryExprSelector EOF ;
    public final EObject entryRuleprimaryExprSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExprSelector = null;


        try {
            // InternalGo.g:6337:60: (iv_ruleprimaryExprSelector= ruleprimaryExprSelector EOF )
            // InternalGo.g:6338:2: iv_ruleprimaryExprSelector= ruleprimaryExprSelector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprSelectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExprSelector=ruleprimaryExprSelector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExprSelector; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExprSelector"


    // $ANTLR start "ruleprimaryExprSelector"
    // InternalGo.g:6344:1: ruleprimaryExprSelector returns [EObject current=null] : ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSelector_1_0= ruleprimaryExprSelector ) ) )? ;
    public final EObject ruleprimaryExprSelector() throws RecognitionException {
        EObject current = null;

        EObject lv_primaryExprStuff_0_0 = null;

        EObject lv_primaryExprSelector_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6350:2: ( ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSelector_1_0= ruleprimaryExprSelector ) ) )? )
            // InternalGo.g:6351:2: ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSelector_1_0= ruleprimaryExprSelector ) ) )?
            {
            // InternalGo.g:6351:2: ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSelector_1_0= ruleprimaryExprSelector ) ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==49) ) {
                int LA83_1 = input.LA(2);

                if ( (LA83_1==RULE_IDENTIFIER) ) {
                    alt83=1;
                }
                else if ( (LA83_1==47) ) {
                    int LA83_4 = input.LA(3);

                    if ( (LA83_4==RULE_IDENTIFIER||LA83_4==47||LA83_4==54||LA83_4==58||LA83_4==65||LA83_4==89||(LA83_4>=91 && LA83_4<=93)||LA83_4==95) ) {
                        alt83=1;
                    }
                }
            }
            else if ( (LA83_0==47||LA83_0==89) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalGo.g:6352:3: ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSelector_1_0= ruleprimaryExprSelector ) )
                    {
                    // InternalGo.g:6352:3: ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) )
                    // InternalGo.g:6353:4: (lv_primaryExprStuff_0_0= ruleprimaryExprStuff )
                    {
                    // InternalGo.g:6353:4: (lv_primaryExprStuff_0_0= ruleprimaryExprStuff )
                    // InternalGo.g:6354:5: lv_primaryExprStuff_0_0= ruleprimaryExprStuff
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_59);
                    lv_primaryExprStuff_0_0=ruleprimaryExprStuff();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprSelectorRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprStuff",
                      						lv_primaryExprStuff_0_0,
                      						"org.xtext.Go.primaryExprStuff");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalGo.g:6371:3: ( (lv_primaryExprSelector_1_0= ruleprimaryExprSelector ) )
                    // InternalGo.g:6372:4: (lv_primaryExprSelector_1_0= ruleprimaryExprSelector )
                    {
                    // InternalGo.g:6372:4: (lv_primaryExprSelector_1_0= ruleprimaryExprSelector )
                    // InternalGo.g:6373:5: lv_primaryExprSelector_1_0= ruleprimaryExprSelector
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprSelectorPrimaryExprSelectorParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprSelector_1_0=ruleprimaryExprSelector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprSelectorRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprSelector",
                      						lv_primaryExprSelector_1_0,
                      						"org.xtext.Go.primaryExprSelector");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExprSelector"


    // $ANTLR start "entryRuleprimaryExprIndex"
    // InternalGo.g:6394:1: entryRuleprimaryExprIndex returns [EObject current=null] : iv_ruleprimaryExprIndex= ruleprimaryExprIndex EOF ;
    public final EObject entryRuleprimaryExprIndex() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExprIndex = null;


        try {
            // InternalGo.g:6394:57: (iv_ruleprimaryExprIndex= ruleprimaryExprIndex EOF )
            // InternalGo.g:6395:2: iv_ruleprimaryExprIndex= ruleprimaryExprIndex EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprIndexRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExprIndex=ruleprimaryExprIndex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExprIndex; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExprIndex"


    // $ANTLR start "ruleprimaryExprIndex"
    // InternalGo.g:6401:1: ruleprimaryExprIndex returns [EObject current=null] : ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprIndex_1_0= ruleprimaryExprSelector ) ) )? ;
    public final EObject ruleprimaryExprIndex() throws RecognitionException {
        EObject current = null;

        EObject lv_primaryExprStuff_0_0 = null;

        EObject lv_primaryExprIndex_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6407:2: ( ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprIndex_1_0= ruleprimaryExprSelector ) ) )? )
            // InternalGo.g:6408:2: ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprIndex_1_0= ruleprimaryExprSelector ) ) )?
            {
            // InternalGo.g:6408:2: ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprIndex_1_0= ruleprimaryExprSelector ) ) )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==49) ) {
                int LA84_1 = input.LA(2);

                if ( (LA84_1==RULE_IDENTIFIER) ) {
                    alt84=1;
                }
                else if ( (LA84_1==47) ) {
                    int LA84_4 = input.LA(3);

                    if ( (LA84_4==RULE_IDENTIFIER||LA84_4==47||LA84_4==54||LA84_4==58||LA84_4==65||LA84_4==89||(LA84_4>=91 && LA84_4<=93)||LA84_4==95) ) {
                        alt84=1;
                    }
                }
            }
            else if ( (LA84_0==47||LA84_0==89) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalGo.g:6409:3: ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprIndex_1_0= ruleprimaryExprSelector ) )
                    {
                    // InternalGo.g:6409:3: ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) )
                    // InternalGo.g:6410:4: (lv_primaryExprStuff_0_0= ruleprimaryExprStuff )
                    {
                    // InternalGo.g:6410:4: (lv_primaryExprStuff_0_0= ruleprimaryExprStuff )
                    // InternalGo.g:6411:5: lv_primaryExprStuff_0_0= ruleprimaryExprStuff
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_59);
                    lv_primaryExprStuff_0_0=ruleprimaryExprStuff();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprIndexRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprStuff",
                      						lv_primaryExprStuff_0_0,
                      						"org.xtext.Go.primaryExprStuff");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalGo.g:6428:3: ( (lv_primaryExprIndex_1_0= ruleprimaryExprSelector ) )
                    // InternalGo.g:6429:4: (lv_primaryExprIndex_1_0= ruleprimaryExprSelector )
                    {
                    // InternalGo.g:6429:4: (lv_primaryExprIndex_1_0= ruleprimaryExprSelector )
                    // InternalGo.g:6430:5: lv_primaryExprIndex_1_0= ruleprimaryExprSelector
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprIndexPrimaryExprSelectorParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprIndex_1_0=ruleprimaryExprSelector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprIndexRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprIndex",
                      						lv_primaryExprIndex_1_0,
                      						"org.xtext.Go.primaryExprSelector");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExprIndex"


    // $ANTLR start "entryRuleprimaryExprSlice"
    // InternalGo.g:6451:1: entryRuleprimaryExprSlice returns [EObject current=null] : iv_ruleprimaryExprSlice= ruleprimaryExprSlice EOF ;
    public final EObject entryRuleprimaryExprSlice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExprSlice = null;


        try {
            // InternalGo.g:6451:57: (iv_ruleprimaryExprSlice= ruleprimaryExprSlice EOF )
            // InternalGo.g:6452:2: iv_ruleprimaryExprSlice= ruleprimaryExprSlice EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprSliceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExprSlice=ruleprimaryExprSlice();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExprSlice; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExprSlice"


    // $ANTLR start "ruleprimaryExprSlice"
    // InternalGo.g:6458:1: ruleprimaryExprSlice returns [EObject current=null] : ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSlice_1_0= ruleprimaryExprSelector ) ) )? ;
    public final EObject ruleprimaryExprSlice() throws RecognitionException {
        EObject current = null;

        EObject lv_primaryExprStuff_0_0 = null;

        EObject lv_primaryExprSlice_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6464:2: ( ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSlice_1_0= ruleprimaryExprSelector ) ) )? )
            // InternalGo.g:6465:2: ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSlice_1_0= ruleprimaryExprSelector ) ) )?
            {
            // InternalGo.g:6465:2: ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSlice_1_0= ruleprimaryExprSelector ) ) )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==49) ) {
                int LA85_1 = input.LA(2);

                if ( (LA85_1==RULE_IDENTIFIER) ) {
                    alt85=1;
                }
                else if ( (LA85_1==47) ) {
                    int LA85_4 = input.LA(3);

                    if ( (LA85_4==RULE_IDENTIFIER||LA85_4==47||LA85_4==54||LA85_4==58||LA85_4==65||LA85_4==89||(LA85_4>=91 && LA85_4<=93)||LA85_4==95) ) {
                        alt85=1;
                    }
                }
            }
            else if ( (LA85_0==47||LA85_0==89) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalGo.g:6466:3: ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSlice_1_0= ruleprimaryExprSelector ) )
                    {
                    // InternalGo.g:6466:3: ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) )
                    // InternalGo.g:6467:4: (lv_primaryExprStuff_0_0= ruleprimaryExprStuff )
                    {
                    // InternalGo.g:6467:4: (lv_primaryExprStuff_0_0= ruleprimaryExprStuff )
                    // InternalGo.g:6468:5: lv_primaryExprStuff_0_0= ruleprimaryExprStuff
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_59);
                    lv_primaryExprStuff_0_0=ruleprimaryExprStuff();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprSliceRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprStuff",
                      						lv_primaryExprStuff_0_0,
                      						"org.xtext.Go.primaryExprStuff");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalGo.g:6485:3: ( (lv_primaryExprSlice_1_0= ruleprimaryExprSelector ) )
                    // InternalGo.g:6486:4: (lv_primaryExprSlice_1_0= ruleprimaryExprSelector )
                    {
                    // InternalGo.g:6486:4: (lv_primaryExprSlice_1_0= ruleprimaryExprSelector )
                    // InternalGo.g:6487:5: lv_primaryExprSlice_1_0= ruleprimaryExprSelector
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprSlicePrimaryExprSelectorParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprSlice_1_0=ruleprimaryExprSelector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprSliceRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprSlice",
                      						lv_primaryExprSlice_1_0,
                      						"org.xtext.Go.primaryExprSelector");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExprSlice"


    // $ANTLR start "entryRuleprimaryExprTypeAssertion"
    // InternalGo.g:6508:1: entryRuleprimaryExprTypeAssertion returns [EObject current=null] : iv_ruleprimaryExprTypeAssertion= ruleprimaryExprTypeAssertion EOF ;
    public final EObject entryRuleprimaryExprTypeAssertion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExprTypeAssertion = null;


        try {
            // InternalGo.g:6508:65: (iv_ruleprimaryExprTypeAssertion= ruleprimaryExprTypeAssertion EOF )
            // InternalGo.g:6509:2: iv_ruleprimaryExprTypeAssertion= ruleprimaryExprTypeAssertion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprTypeAssertionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExprTypeAssertion=ruleprimaryExprTypeAssertion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExprTypeAssertion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExprTypeAssertion"


    // $ANTLR start "ruleprimaryExprTypeAssertion"
    // InternalGo.g:6515:1: ruleprimaryExprTypeAssertion returns [EObject current=null] : ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprTypeAssertion_1_0= ruleprimaryExprSelector ) ) )? ;
    public final EObject ruleprimaryExprTypeAssertion() throws RecognitionException {
        EObject current = null;

        EObject lv_primaryExprStuff_0_0 = null;

        EObject lv_primaryExprTypeAssertion_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6521:2: ( ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprTypeAssertion_1_0= ruleprimaryExprSelector ) ) )? )
            // InternalGo.g:6522:2: ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprTypeAssertion_1_0= ruleprimaryExprSelector ) ) )?
            {
            // InternalGo.g:6522:2: ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprTypeAssertion_1_0= ruleprimaryExprSelector ) ) )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==49) ) {
                int LA86_1 = input.LA(2);

                if ( (LA86_1==RULE_IDENTIFIER) ) {
                    alt86=1;
                }
                else if ( (LA86_1==47) ) {
                    int LA86_4 = input.LA(3);

                    if ( (LA86_4==RULE_IDENTIFIER||LA86_4==47||LA86_4==54||LA86_4==58||LA86_4==65||LA86_4==89||(LA86_4>=91 && LA86_4<=93)||LA86_4==95) ) {
                        alt86=1;
                    }
                }
            }
            else if ( (LA86_0==47||LA86_0==89) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalGo.g:6523:3: ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprTypeAssertion_1_0= ruleprimaryExprSelector ) )
                    {
                    // InternalGo.g:6523:3: ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) )
                    // InternalGo.g:6524:4: (lv_primaryExprStuff_0_0= ruleprimaryExprStuff )
                    {
                    // InternalGo.g:6524:4: (lv_primaryExprStuff_0_0= ruleprimaryExprStuff )
                    // InternalGo.g:6525:5: lv_primaryExprStuff_0_0= ruleprimaryExprStuff
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_59);
                    lv_primaryExprStuff_0_0=ruleprimaryExprStuff();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprTypeAssertionRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprStuff",
                      						lv_primaryExprStuff_0_0,
                      						"org.xtext.Go.primaryExprStuff");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalGo.g:6542:3: ( (lv_primaryExprTypeAssertion_1_0= ruleprimaryExprSelector ) )
                    // InternalGo.g:6543:4: (lv_primaryExprTypeAssertion_1_0= ruleprimaryExprSelector )
                    {
                    // InternalGo.g:6543:4: (lv_primaryExprTypeAssertion_1_0= ruleprimaryExprSelector )
                    // InternalGo.g:6544:5: lv_primaryExprTypeAssertion_1_0= ruleprimaryExprSelector
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprTypeAssertionPrimaryExprSelectorParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprTypeAssertion_1_0=ruleprimaryExprSelector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprTypeAssertionRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprTypeAssertion",
                      						lv_primaryExprTypeAssertion_1_0,
                      						"org.xtext.Go.primaryExprSelector");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExprTypeAssertion"


    // $ANTLR start "entryRuleprimaryExprArguments"
    // InternalGo.g:6565:1: entryRuleprimaryExprArguments returns [EObject current=null] : iv_ruleprimaryExprArguments= ruleprimaryExprArguments EOF ;
    public final EObject entryRuleprimaryExprArguments() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExprArguments = null;


        try {
            // InternalGo.g:6565:61: (iv_ruleprimaryExprArguments= ruleprimaryExprArguments EOF )
            // InternalGo.g:6566:2: iv_ruleprimaryExprArguments= ruleprimaryExprArguments EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExprArguments=ruleprimaryExprArguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExprArguments; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExprArguments"


    // $ANTLR start "ruleprimaryExprArguments"
    // InternalGo.g:6572:1: ruleprimaryExprArguments returns [EObject current=null] : ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprArguments_1_0= ruleprimaryExprArguments ) ) )? ;
    public final EObject ruleprimaryExprArguments() throws RecognitionException {
        EObject current = null;

        EObject lv_primaryExprStuff_0_0 = null;

        EObject lv_primaryExprArguments_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6578:2: ( ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprArguments_1_0= ruleprimaryExprArguments ) ) )? )
            // InternalGo.g:6579:2: ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprArguments_1_0= ruleprimaryExprArguments ) ) )?
            {
            // InternalGo.g:6579:2: ( ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprArguments_1_0= ruleprimaryExprArguments ) ) )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==49) ) {
                int LA87_1 = input.LA(2);

                if ( (LA87_1==RULE_IDENTIFIER) ) {
                    alt87=1;
                }
                else if ( (LA87_1==47) ) {
                    int LA87_4 = input.LA(3);

                    if ( (LA87_4==RULE_IDENTIFIER||LA87_4==47||LA87_4==54||LA87_4==58||LA87_4==65||LA87_4==89||(LA87_4>=91 && LA87_4<=93)||LA87_4==95) ) {
                        alt87=1;
                    }
                }
            }
            else if ( (LA87_0==47||LA87_0==89) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalGo.g:6580:3: ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprArguments_1_0= ruleprimaryExprArguments ) )
                    {
                    // InternalGo.g:6580:3: ( (lv_primaryExprStuff_0_0= ruleprimaryExprStuff ) )
                    // InternalGo.g:6581:4: (lv_primaryExprStuff_0_0= ruleprimaryExprStuff )
                    {
                    // InternalGo.g:6581:4: (lv_primaryExprStuff_0_0= ruleprimaryExprStuff )
                    // InternalGo.g:6582:5: lv_primaryExprStuff_0_0= ruleprimaryExprStuff
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_59);
                    lv_primaryExprStuff_0_0=ruleprimaryExprStuff();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprArgumentsRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprStuff",
                      						lv_primaryExprStuff_0_0,
                      						"org.xtext.Go.primaryExprStuff");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalGo.g:6599:3: ( (lv_primaryExprArguments_1_0= ruleprimaryExprArguments ) )
                    // InternalGo.g:6600:4: (lv_primaryExprArguments_1_0= ruleprimaryExprArguments )
                    {
                    // InternalGo.g:6600:4: (lv_primaryExprArguments_1_0= ruleprimaryExprArguments )
                    // InternalGo.g:6601:5: lv_primaryExprArguments_1_0= ruleprimaryExprArguments
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprArgumentsPrimaryExprArgumentsParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprArguments_1_0=ruleprimaryExprArguments();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprArgumentsRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprArguments",
                      						lv_primaryExprArguments_1_0,
                      						"org.xtext.Go.primaryExprArguments");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExprArguments"


    // $ANTLR start "entryRuleselector"
    // InternalGo.g:6622:1: entryRuleselector returns [String current=null] : iv_ruleselector= ruleselector EOF ;
    public final String entryRuleselector() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleselector = null;


        try {
            // InternalGo.g:6622:48: (iv_ruleselector= ruleselector EOF )
            // InternalGo.g:6623:2: iv_ruleselector= ruleselector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleselector=ruleselector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleselector.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleselector"


    // $ANTLR start "ruleselector"
    // InternalGo.g:6629:1: ruleselector returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '.' this_IDENTIFIER_1= RULE_IDENTIFIER ) ;
    public final AntlrDatatypeRuleToken ruleselector() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_IDENTIFIER_1=null;


        	enterRule();

        try {
            // InternalGo.g:6635:2: ( (kw= '.' this_IDENTIFIER_1= RULE_IDENTIFIER ) )
            // InternalGo.g:6636:2: (kw= '.' this_IDENTIFIER_1= RULE_IDENTIFIER )
            {
            // InternalGo.g:6636:2: (kw= '.' this_IDENTIFIER_1= RULE_IDENTIFIER )
            // InternalGo.g:6637:3: kw= '.' this_IDENTIFIER_1= RULE_IDENTIFIER
            {
            kw=(Token)match(input,49,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getSelectorAccess().getFullStopKeyword_0());
              		
            }
            this_IDENTIFIER_1=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_IDENTIFIER_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_IDENTIFIER_1, grammarAccess.getSelectorAccess().getIDENTIFIERTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleselector"


    // $ANTLR start "entryRuleindex"
    // InternalGo.g:6653:1: entryRuleindex returns [EObject current=null] : iv_ruleindex= ruleindex EOF ;
    public final EObject entryRuleindex() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleindex = null;


        try {
            // InternalGo.g:6653:46: (iv_ruleindex= ruleindex EOF )
            // InternalGo.g:6654:2: iv_ruleindex= ruleindex EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIndexRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleindex=ruleindex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleindex; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleindex"


    // $ANTLR start "ruleindex"
    // InternalGo.g:6660:1: ruleindex returns [EObject current=null] : (otherlv_0= '[' this_expression_1= ruleexpression otherlv_2= ']' ) ;
    public final EObject ruleindex() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_expression_1 = null;



        	enterRule();

        try {
            // InternalGo.g:6666:2: ( (otherlv_0= '[' this_expression_1= ruleexpression otherlv_2= ']' ) )
            // InternalGo.g:6667:2: (otherlv_0= '[' this_expression_1= ruleexpression otherlv_2= ']' )
            {
            // InternalGo.g:6667:2: (otherlv_0= '[' this_expression_1= ruleexpression otherlv_2= ']' )
            // InternalGo.g:6668:3: otherlv_0= '[' this_expression_1= ruleexpression otherlv_2= ']'
            {
            otherlv_0=(Token)match(input,89,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getIndexAccess().getExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_46);
            this_expression_1=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_expression_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleindex"


    // $ANTLR start "entryRuleslice"
    // InternalGo.g:6691:1: entryRuleslice returns [EObject current=null] : iv_ruleslice= ruleslice EOF ;
    public final EObject entryRuleslice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleslice = null;


        try {
            // InternalGo.g:6691:46: (iv_ruleslice= ruleslice EOF )
            // InternalGo.g:6692:2: iv_ruleslice= ruleslice EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSliceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleslice=ruleslice();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleslice; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleslice"


    // $ANTLR start "ruleslice"
    // InternalGo.g:6698:1: ruleslice returns [EObject current=null] : (otherlv_0= '[' ( ( ( (lv_expression_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expression_3_0= ruleexpression ) )? ) | ( ( (lv_expression_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expression_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expression_8_0= ruleexpression ) ) ) ) otherlv_9= ']' ) ;
    public final EObject ruleslice() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_expression_1_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_expression_4_0 = null;

        EObject lv_expression_6_0 = null;

        EObject lv_expression_8_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6704:2: ( (otherlv_0= '[' ( ( ( (lv_expression_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expression_3_0= ruleexpression ) )? ) | ( ( (lv_expression_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expression_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expression_8_0= ruleexpression ) ) ) ) otherlv_9= ']' ) )
            // InternalGo.g:6705:2: (otherlv_0= '[' ( ( ( (lv_expression_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expression_3_0= ruleexpression ) )? ) | ( ( (lv_expression_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expression_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expression_8_0= ruleexpression ) ) ) ) otherlv_9= ']' )
            {
            // InternalGo.g:6705:2: (otherlv_0= '[' ( ( ( (lv_expression_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expression_3_0= ruleexpression ) )? ) | ( ( (lv_expression_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expression_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expression_8_0= ruleexpression ) ) ) ) otherlv_9= ']' )
            // InternalGo.g:6706:3: otherlv_0= '[' ( ( ( (lv_expression_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expression_3_0= ruleexpression ) )? ) | ( ( (lv_expression_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expression_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expression_8_0= ruleexpression ) ) ) ) otherlv_9= ']'
            {
            otherlv_0=(Token)match(input,89,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalGo.g:6710:3: ( ( ( (lv_expression_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expression_3_0= ruleexpression ) )? ) | ( ( (lv_expression_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expression_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expression_8_0= ruleexpression ) ) ) )
            int alt91=2;
            alt91 = dfa91.predict(input);
            switch (alt91) {
                case 1 :
                    // InternalGo.g:6711:4: ( ( (lv_expression_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expression_3_0= ruleexpression ) )? )
                    {
                    // InternalGo.g:6711:4: ( ( (lv_expression_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expression_3_0= ruleexpression ) )? )
                    // InternalGo.g:6712:5: ( (lv_expression_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expression_3_0= ruleexpression ) )?
                    {
                    // InternalGo.g:6712:5: ( (lv_expression_1_0= ruleexpression ) )?
                    int alt88=2;
                    int LA88_0 = input.LA(1);

                    if ( ((LA88_0>=RULE_IDENTIFIER && LA88_0<=RULE_STRING_LIT)||(LA88_0>=RULE_INT_LIT && LA88_0<=RULE_BINARY_OP)||LA88_0==47||LA88_0==49||LA88_0==54||LA88_0==58||(LA88_0>=61 && LA88_0<=62)||(LA88_0>=64 && LA88_0<=65)||LA88_0==70||LA88_0==89||(LA88_0>=91 && LA88_0<=93)||(LA88_0>=95 && LA88_0<=96)) ) {
                        alt88=1;
                    }
                    else if ( (LA88_0==73) ) {
                        int LA88_2 = input.LA(2);

                        if ( (synpred148_InternalGo()) ) {
                            alt88=1;
                        }
                    }
                    switch (alt88) {
                        case 1 :
                            // InternalGo.g:6713:6: (lv_expression_1_0= ruleexpression )
                            {
                            // InternalGo.g:6713:6: (lv_expression_1_0= ruleexpression )
                            // InternalGo.g:6714:7: lv_expression_1_0= ruleexpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_28);
                            lv_expression_1_0=ruleexpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSliceRule());
                              							}
                              							set(
                              								current,
                              								"expression",
                              								lv_expression_1_0,
                              								"org.xtext.Go.expression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,73,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getSliceAccess().getColonKeyword_1_0_1());
                      				
                    }
                    // InternalGo.g:6735:5: ( (lv_expression_3_0= ruleexpression ) )?
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( ((LA89_0>=RULE_IDENTIFIER && LA89_0<=RULE_STRING_LIT)||(LA89_0>=RULE_INT_LIT && LA89_0<=RULE_BINARY_OP)||LA89_0==47||LA89_0==49||LA89_0==54||LA89_0==58||(LA89_0>=61 && LA89_0<=62)||(LA89_0>=64 && LA89_0<=65)||LA89_0==70||LA89_0==89||(LA89_0>=91 && LA89_0<=93)||(LA89_0>=95 && LA89_0<=96)) ) {
                        alt89=1;
                    }
                    else if ( (LA89_0==90) ) {
                        int LA89_2 = input.LA(2);

                        if ( (synpred149_InternalGo()) ) {
                            alt89=1;
                        }
                    }
                    switch (alt89) {
                        case 1 :
                            // InternalGo.g:6736:6: (lv_expression_3_0= ruleexpression )
                            {
                            // InternalGo.g:6736:6: (lv_expression_3_0= ruleexpression )
                            // InternalGo.g:6737:7: lv_expression_3_0= ruleexpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_0_2_0());
                              						
                            }
                            pushFollow(FOLLOW_46);
                            lv_expression_3_0=ruleexpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSliceRule());
                              							}
                              							set(
                              								current,
                              								"expression",
                              								lv_expression_3_0,
                              								"org.xtext.Go.expression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6756:4: ( ( (lv_expression_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expression_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expression_8_0= ruleexpression ) ) )
                    {
                    // InternalGo.g:6756:4: ( ( (lv_expression_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expression_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expression_8_0= ruleexpression ) ) )
                    // InternalGo.g:6757:5: ( (lv_expression_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expression_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expression_8_0= ruleexpression ) )
                    {
                    // InternalGo.g:6757:5: ( (lv_expression_4_0= ruleexpression ) )?
                    int alt90=2;
                    int LA90_0 = input.LA(1);

                    if ( ((LA90_0>=RULE_IDENTIFIER && LA90_0<=RULE_STRING_LIT)||(LA90_0>=RULE_INT_LIT && LA90_0<=RULE_BINARY_OP)||LA90_0==47||LA90_0==49||LA90_0==54||LA90_0==58||(LA90_0>=61 && LA90_0<=62)||(LA90_0>=64 && LA90_0<=65)||LA90_0==70||LA90_0==89||(LA90_0>=91 && LA90_0<=93)||(LA90_0>=95 && LA90_0<=96)) ) {
                        alt90=1;
                    }
                    else if ( (LA90_0==73) ) {
                        int LA90_2 = input.LA(2);

                        if ( (synpred151_InternalGo()) ) {
                            alt90=1;
                        }
                    }
                    switch (alt90) {
                        case 1 :
                            // InternalGo.g:6758:6: (lv_expression_4_0= ruleexpression )
                            {
                            // InternalGo.g:6758:6: (lv_expression_4_0= ruleexpression )
                            // InternalGo.g:6759:7: lv_expression_4_0= ruleexpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_28);
                            lv_expression_4_0=ruleexpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSliceRule());
                              							}
                              							set(
                              								current,
                              								"expression",
                              								lv_expression_4_0,
                              								"org.xtext.Go.expression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,73,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSliceAccess().getColonKeyword_1_1_1());
                      				
                    }
                    // InternalGo.g:6780:5: ( (lv_expression_6_0= ruleexpression ) )
                    // InternalGo.g:6781:6: (lv_expression_6_0= ruleexpression )
                    {
                    // InternalGo.g:6781:6: (lv_expression_6_0= ruleexpression )
                    // InternalGo.g:6782:7: lv_expression_6_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_28);
                    lv_expression_6_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSliceRule());
                      							}
                      							set(
                      								current,
                      								"expression",
                      								lv_expression_6_0,
                      								"org.xtext.Go.expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,73,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSliceAccess().getColonKeyword_1_1_3());
                      				
                    }
                    // InternalGo.g:6803:5: ( (lv_expression_8_0= ruleexpression ) )
                    // InternalGo.g:6804:6: (lv_expression_8_0= ruleexpression )
                    {
                    // InternalGo.g:6804:6: (lv_expression_8_0= ruleexpression )
                    // InternalGo.g:6805:7: lv_expression_8_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_1_4_0());
                      						
                    }
                    pushFollow(FOLLOW_46);
                    lv_expression_8_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSliceRule());
                      							}
                      							set(
                      								current,
                      								"expression",
                      								lv_expression_8_0,
                      								"org.xtext.Go.expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getSliceAccess().getRightSquareBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleslice"


    // $ANTLR start "entryRuletypeAssertion"
    // InternalGo.g:6832:1: entryRuletypeAssertion returns [EObject current=null] : iv_ruletypeAssertion= ruletypeAssertion EOF ;
    public final EObject entryRuletypeAssertion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeAssertion = null;


        try {
            // InternalGo.g:6832:54: (iv_ruletypeAssertion= ruletypeAssertion EOF )
            // InternalGo.g:6833:2: iv_ruletypeAssertion= ruletypeAssertion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeAssertionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeAssertion=ruletypeAssertion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeAssertion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeAssertion"


    // $ANTLR start "ruletypeAssertion"
    // InternalGo.g:6839:1: ruletypeAssertion returns [EObject current=null] : (otherlv_0= '.' otherlv_1= '(' ( (lv_type_2_0= ruletype ) ) otherlv_3= ')' ) ;
    public final EObject ruletypeAssertion() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_type_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6845:2: ( (otherlv_0= '.' otherlv_1= '(' ( (lv_type_2_0= ruletype ) ) otherlv_3= ')' ) )
            // InternalGo.g:6846:2: (otherlv_0= '.' otherlv_1= '(' ( (lv_type_2_0= ruletype ) ) otherlv_3= ')' )
            {
            // InternalGo.g:6846:2: (otherlv_0= '.' otherlv_1= '(' ( (lv_type_2_0= ruletype ) ) otherlv_3= ')' )
            // InternalGo.g:6847:3: otherlv_0= '.' otherlv_1= '(' ( (lv_type_2_0= ruletype ) ) otherlv_3= ')'
            {
            otherlv_0=(Token)match(input,49,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,47,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:6855:3: ( (lv_type_2_0= ruletype ) )
            // InternalGo.g:6856:4: (lv_type_2_0= ruletype )
            {
            // InternalGo.g:6856:4: (lv_type_2_0= ruletype )
            // InternalGo.g:6857:5: lv_type_2_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeAssertionAccess().getTypeTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_41);
            lv_type_2_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeAssertionRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeAssertion"


    // $ANTLR start "entryRulearguments"
    // InternalGo.g:6882:1: entryRulearguments returns [EObject current=null] : iv_rulearguments= rulearguments EOF ;
    public final EObject entryRulearguments() throws RecognitionException {
        EObject current = null;

        EObject iv_rulearguments = null;


        try {
            // InternalGo.g:6882:50: (iv_rulearguments= rulearguments EOF )
            // InternalGo.g:6883:2: iv_rulearguments= rulearguments EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulearguments=rulearguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulearguments; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulearguments"


    // $ANTLR start "rulearguments"
    // InternalGo.g:6889:1: rulearguments returns [EObject current=null] : (otherlv_0= '(' ( ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) ) (otherlv_5= '...' )? (otherlv_6= ',' )? )? otherlv_7= ')' ) ;
    public final EObject rulearguments() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_expressionList_1_0 = null;

        EObject lv_type_2_0 = null;

        EObject lv_expressionList_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6895:2: ( (otherlv_0= '(' ( ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) ) (otherlv_5= '...' )? (otherlv_6= ',' )? )? otherlv_7= ')' ) )
            // InternalGo.g:6896:2: (otherlv_0= '(' ( ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) ) (otherlv_5= '...' )? (otherlv_6= ',' )? )? otherlv_7= ')' )
            {
            // InternalGo.g:6896:2: (otherlv_0= '(' ( ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) ) (otherlv_5= '...' )? (otherlv_6= ',' )? )? otherlv_7= ')' )
            // InternalGo.g:6897:3: otherlv_0= '(' ( ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) ) (otherlv_5= '...' )? (otherlv_6= ',' )? )? otherlv_7= ')'
            {
            otherlv_0=(Token)match(input,47,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalGo.g:6901:3: ( ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) ) (otherlv_5= '...' )? (otherlv_6= ',' )? )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( ((LA96_0>=RULE_IDENTIFIER && LA96_0<=RULE_STRING_LIT)||(LA96_0>=RULE_INT_LIT && LA96_0<=RULE_BINARY_OP)||LA96_0==47||LA96_0==49||LA96_0==52||LA96_0==54||LA96_0==58||(LA96_0>=61 && LA96_0<=62)||(LA96_0>=64 && LA96_0<=65)||LA96_0==70||LA96_0==89||(LA96_0>=91 && LA96_0<=96)) ) {
                alt96=1;
            }
            else if ( (LA96_0==48) ) {
                int LA96_2 = input.LA(2);

                if ( (synpred156_InternalGo()) ) {
                    alt96=1;
                }
            }
            switch (alt96) {
                case 1 :
                    // InternalGo.g:6902:4: ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) ) (otherlv_5= '...' )? (otherlv_6= ',' )?
                    {
                    // InternalGo.g:6902:4: ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) )
                    int alt93=2;
                    alt93 = dfa93.predict(input);
                    switch (alt93) {
                        case 1 :
                            // InternalGo.g:6903:5: ( (lv_expressionList_1_0= ruleexpressionList ) )
                            {
                            // InternalGo.g:6903:5: ( (lv_expressionList_1_0= ruleexpressionList ) )
                            // InternalGo.g:6904:6: (lv_expressionList_1_0= ruleexpressionList )
                            {
                            // InternalGo.g:6904:6: (lv_expressionList_1_0= ruleexpressionList )
                            // InternalGo.g:6905:7: lv_expressionList_1_0= ruleexpressionList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_63);
                            lv_expressionList_1_0=ruleexpressionList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getArgumentsRule());
                              							}
                              							set(
                              								current,
                              								"expressionList",
                              								lv_expressionList_1_0,
                              								"org.xtext.Go.expressionList");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:6923:5: ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? )
                            {
                            // InternalGo.g:6923:5: ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? )
                            // InternalGo.g:6924:6: ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )?
                            {
                            // InternalGo.g:6924:6: ( (lv_type_2_0= ruletype ) )
                            // InternalGo.g:6925:7: (lv_type_2_0= ruletype )
                            {
                            // InternalGo.g:6925:7: (lv_type_2_0= ruletype )
                            // InternalGo.g:6926:8: lv_type_2_0= ruletype
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_1_0_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_63);
                            lv_type_2_0=ruletype();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getArgumentsRule());
                              								}
                              								set(
                              									current,
                              									"type",
                              									lv_type_2_0,
                              									"org.xtext.Go.type");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalGo.g:6943:6: (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )?
                            int alt92=2;
                            int LA92_0 = input.LA(1);

                            if ( (LA92_0==52) ) {
                                int LA92_1 = input.LA(2);

                                if ( (synpred153_InternalGo()) ) {
                                    alt92=1;
                                }
                            }
                            switch (alt92) {
                                case 1 :
                                    // InternalGo.g:6944:7: otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) )
                                    {
                                    otherlv_3=(Token)match(input,52,FOLLOW_14); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_3, grammarAccess.getArgumentsAccess().getCommaKeyword_1_0_1_1_0());
                                      						
                                    }
                                    // InternalGo.g:6948:7: ( (lv_expressionList_4_0= ruleexpressionList ) )
                                    // InternalGo.g:6949:8: (lv_expressionList_4_0= ruleexpressionList )
                                    {
                                    // InternalGo.g:6949:8: (lv_expressionList_4_0= ruleexpressionList )
                                    // InternalGo.g:6950:9: lv_expressionList_4_0= ruleexpressionList
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_1_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_63);
                                    lv_expressionList_4_0=ruleexpressionList();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getArgumentsRule());
                                      									}
                                      									set(
                                      										current,
                                      										"expressionList",
                                      										lv_expressionList_4_0,
                                      										"org.xtext.Go.expressionList");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalGo.g:6970:4: (otherlv_5= '...' )?
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( (LA94_0==94) ) {
                        alt94=1;
                    }
                    switch (alt94) {
                        case 1 :
                            // InternalGo.g:6971:5: otherlv_5= '...'
                            {
                            otherlv_5=(Token)match(input,94,FOLLOW_52); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalGo.g:6976:4: (otherlv_6= ',' )?
                    int alt95=2;
                    int LA95_0 = input.LA(1);

                    if ( (LA95_0==52) ) {
                        alt95=1;
                    }
                    switch (alt95) {
                        case 1 :
                            // InternalGo.g:6977:5: otherlv_6= ','
                            {
                            otherlv_6=(Token)match(input,52,FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getArgumentsAccess().getCommaKeyword_1_2());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulearguments"


    // $ANTLR start "entryRulemethodExpr"
    // InternalGo.g:6991:1: entryRulemethodExpr returns [EObject current=null] : iv_rulemethodExpr= rulemethodExpr EOF ;
    public final EObject entryRulemethodExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_rulemethodExpr = null;


        try {
            // InternalGo.g:6991:51: (iv_rulemethodExpr= rulemethodExpr EOF )
            // InternalGo.g:6992:2: iv_rulemethodExpr= rulemethodExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulemethodExpr=rulemethodExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulemethodExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulemethodExpr"


    // $ANTLR start "rulemethodExpr"
    // InternalGo.g:6998:1: rulemethodExpr returns [EObject current=null] : ( ( (lv_receiverType_0_0= rulereceiverType ) ) otherlv_1= '.' this_IDENTIFIER_2= RULE_IDENTIFIER ) ;
    public final EObject rulemethodExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_IDENTIFIER_2=null;
        EObject lv_receiverType_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7004:2: ( ( ( (lv_receiverType_0_0= rulereceiverType ) ) otherlv_1= '.' this_IDENTIFIER_2= RULE_IDENTIFIER ) )
            // InternalGo.g:7005:2: ( ( (lv_receiverType_0_0= rulereceiverType ) ) otherlv_1= '.' this_IDENTIFIER_2= RULE_IDENTIFIER )
            {
            // InternalGo.g:7005:2: ( ( (lv_receiverType_0_0= rulereceiverType ) ) otherlv_1= '.' this_IDENTIFIER_2= RULE_IDENTIFIER )
            // InternalGo.g:7006:3: ( (lv_receiverType_0_0= rulereceiverType ) ) otherlv_1= '.' this_IDENTIFIER_2= RULE_IDENTIFIER
            {
            // InternalGo.g:7006:3: ( (lv_receiverType_0_0= rulereceiverType ) )
            // InternalGo.g:7007:4: (lv_receiverType_0_0= rulereceiverType )
            {
            // InternalGo.g:7007:4: (lv_receiverType_0_0= rulereceiverType )
            // InternalGo.g:7008:5: lv_receiverType_0_0= rulereceiverType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodExprAccess().getReceiverTypeReceiverTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_39);
            lv_receiverType_0_0=rulereceiverType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodExprRule());
              					}
              					set(
              						current,
              						"receiverType",
              						lv_receiverType_0_0,
              						"org.xtext.Go.receiverType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,49,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMethodExprAccess().getFullStopKeyword_1());
              		
            }
            this_IDENTIFIER_2=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_IDENTIFIER_2, grammarAccess.getMethodExprAccess().getIDENTIFIERTerminalRuleCall_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulemethodExpr"


    // $ANTLR start "entryRulereceiverType"
    // InternalGo.g:7037:1: entryRulereceiverType returns [EObject current=null] : iv_rulereceiverType= rulereceiverType EOF ;
    public final EObject entryRulereceiverType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulereceiverType = null;


        try {
            // InternalGo.g:7037:53: (iv_rulereceiverType= rulereceiverType EOF )
            // InternalGo.g:7038:2: iv_rulereceiverType= rulereceiverType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReceiverTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulereceiverType=rulereceiverType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulereceiverType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulereceiverType"


    // $ANTLR start "rulereceiverType"
    // InternalGo.g:7044:1: rulereceiverType returns [EObject current=null] : ( ( (lv_typeName_0_0= ruletypeName ) ) | (otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')' ) | (otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')' ) ) ;
    public final EObject rulereceiverType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_typeName_0_0 = null;

        EObject lv_typeName_3_0 = null;

        EObject lv_receiverType_6_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7050:2: ( ( ( (lv_typeName_0_0= ruletypeName ) ) | (otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')' ) | (otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')' ) ) )
            // InternalGo.g:7051:2: ( ( (lv_typeName_0_0= ruletypeName ) ) | (otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')' ) | (otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')' ) )
            {
            // InternalGo.g:7051:2: ( ( (lv_typeName_0_0= ruletypeName ) ) | (otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')' ) | (otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')' ) )
            int alt97=3;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==RULE_IDENTIFIER) ) {
                alt97=1;
            }
            else if ( (LA97_0==47) ) {
                int LA97_2 = input.LA(2);

                if ( (LA97_2==RULE_IDENTIFIER||LA97_2==47) ) {
                    alt97=3;
                }
                else if ( (LA97_2==65) ) {
                    alt97=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 97, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 97, 0, input);

                throw nvae;
            }
            switch (alt97) {
                case 1 :
                    // InternalGo.g:7052:3: ( (lv_typeName_0_0= ruletypeName ) )
                    {
                    // InternalGo.g:7052:3: ( (lv_typeName_0_0= ruletypeName ) )
                    // InternalGo.g:7053:4: (lv_typeName_0_0= ruletypeName )
                    {
                    // InternalGo.g:7053:4: (lv_typeName_0_0= ruletypeName )
                    // InternalGo.g:7054:5: lv_typeName_0_0= ruletypeName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReceiverTypeAccess().getTypeNameTypeNameParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeName_0_0=ruletypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReceiverTypeRule());
                      					}
                      					set(
                      						current,
                      						"typeName",
                      						lv_typeName_0_0,
                      						"org.xtext.Go.typeName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7072:3: (otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')' )
                    {
                    // InternalGo.g:7072:3: (otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')' )
                    // InternalGo.g:7073:4: otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')'
                    {
                    otherlv_1=(Token)match(input,47,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getReceiverTypeAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    otherlv_2=(Token)match(input,65,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getReceiverTypeAccess().getAsteriskKeyword_1_1());
                      			
                    }
                    // InternalGo.g:7081:4: ( (lv_typeName_3_0= ruletypeName ) )
                    // InternalGo.g:7082:5: (lv_typeName_3_0= ruletypeName )
                    {
                    // InternalGo.g:7082:5: (lv_typeName_3_0= ruletypeName )
                    // InternalGo.g:7083:6: lv_typeName_3_0= ruletypeName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReceiverTypeAccess().getTypeNameTypeNameParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_41);
                    lv_typeName_3_0=ruletypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReceiverTypeRule());
                      						}
                      						set(
                      							current,
                      							"typeName",
                      							lv_typeName_3_0,
                      							"org.xtext.Go.typeName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getReceiverTypeAccess().getRightParenthesisKeyword_1_3());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:7106:3: (otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')' )
                    {
                    // InternalGo.g:7106:3: (otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')' )
                    // InternalGo.g:7107:4: otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')'
                    {
                    otherlv_5=(Token)match(input,47,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getReceiverTypeAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalGo.g:7111:4: ( (lv_receiverType_6_0= rulereceiverType ) )
                    // InternalGo.g:7112:5: (lv_receiverType_6_0= rulereceiverType )
                    {
                    // InternalGo.g:7112:5: (lv_receiverType_6_0= rulereceiverType )
                    // InternalGo.g:7113:6: lv_receiverType_6_0= rulereceiverType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReceiverTypeAccess().getReceiverTypeReceiverTypeParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_41);
                    lv_receiverType_6_0=rulereceiverType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReceiverTypeRule());
                      						}
                      						set(
                      							current,
                      							"receiverType",
                      							lv_receiverType_6_0,
                      							"org.xtext.Go.receiverType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getReceiverTypeAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulereceiverType"


    // $ANTLR start "entryRuleexpression"
    // InternalGo.g:7139:1: entryRuleexpression returns [EObject current=null] : iv_ruleexpression= ruleexpression EOF ;
    public final EObject entryRuleexpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexpression = null;


        try {
            // InternalGo.g:7139:51: (iv_ruleexpression= ruleexpression EOF )
            // InternalGo.g:7140:2: iv_ruleexpression= ruleexpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexpression=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexpression"


    // $ANTLR start "ruleexpression"
    // InternalGo.g:7146:1: ruleexpression returns [EObject current=null] : ( ( (lv_unaryExpr_0_0= ruleunaryExpr ) ) ( (lv_expressionMatched_1_0= ruleexpressionMatched ) ) ) ;
    public final EObject ruleexpression() throws RecognitionException {
        EObject current = null;

        EObject lv_unaryExpr_0_0 = null;

        EObject lv_expressionMatched_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7152:2: ( ( ( (lv_unaryExpr_0_0= ruleunaryExpr ) ) ( (lv_expressionMatched_1_0= ruleexpressionMatched ) ) ) )
            // InternalGo.g:7153:2: ( ( (lv_unaryExpr_0_0= ruleunaryExpr ) ) ( (lv_expressionMatched_1_0= ruleexpressionMatched ) ) )
            {
            // InternalGo.g:7153:2: ( ( (lv_unaryExpr_0_0= ruleunaryExpr ) ) ( (lv_expressionMatched_1_0= ruleexpressionMatched ) ) )
            // InternalGo.g:7154:3: ( (lv_unaryExpr_0_0= ruleunaryExpr ) ) ( (lv_expressionMatched_1_0= ruleexpressionMatched ) )
            {
            // InternalGo.g:7154:3: ( (lv_unaryExpr_0_0= ruleunaryExpr ) )
            // InternalGo.g:7155:4: (lv_unaryExpr_0_0= ruleunaryExpr )
            {
            // InternalGo.g:7155:4: (lv_unaryExpr_0_0= ruleunaryExpr )
            // InternalGo.g:7156:5: lv_unaryExpr_0_0= ruleunaryExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionAccess().getUnaryExprUnaryExprParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_65);
            lv_unaryExpr_0_0=ruleunaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionRule());
              					}
              					set(
              						current,
              						"unaryExpr",
              						lv_unaryExpr_0_0,
              						"org.xtext.Go.unaryExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:7173:3: ( (lv_expressionMatched_1_0= ruleexpressionMatched ) )
            // InternalGo.g:7174:4: (lv_expressionMatched_1_0= ruleexpressionMatched )
            {
            // InternalGo.g:7174:4: (lv_expressionMatched_1_0= ruleexpressionMatched )
            // InternalGo.g:7175:5: lv_expressionMatched_1_0= ruleexpressionMatched
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionAccess().getExpressionMatchedExpressionMatchedParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expressionMatched_1_0=ruleexpressionMatched();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionRule());
              					}
              					set(
              						current,
              						"expressionMatched",
              						lv_expressionMatched_1_0,
              						"org.xtext.Go.expressionMatched");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexpression"


    // $ANTLR start "entryRuleexpressionMatched"
    // InternalGo.g:7196:1: entryRuleexpressionMatched returns [EObject current=null] : iv_ruleexpressionMatched= ruleexpressionMatched EOF ;
    public final EObject entryRuleexpressionMatched() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexpressionMatched = null;


        try {
            // InternalGo.g:7196:58: (iv_ruleexpressionMatched= ruleexpressionMatched EOF )
            // InternalGo.g:7197:2: iv_ruleexpressionMatched= ruleexpressionMatched EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionMatchedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexpressionMatched=ruleexpressionMatched();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpressionMatched; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexpressionMatched"


    // $ANTLR start "ruleexpressionMatched"
    // InternalGo.g:7203:1: ruleexpressionMatched returns [EObject current=null] : (this_BINARY_OP_0= RULE_BINARY_OP ( (lv_expression_1_0= ruleexpression ) ) )? ;
    public final EObject ruleexpressionMatched() throws RecognitionException {
        EObject current = null;

        Token this_BINARY_OP_0=null;
        EObject lv_expression_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7209:2: ( (this_BINARY_OP_0= RULE_BINARY_OP ( (lv_expression_1_0= ruleexpression ) ) )? )
            // InternalGo.g:7210:2: (this_BINARY_OP_0= RULE_BINARY_OP ( (lv_expression_1_0= ruleexpression ) ) )?
            {
            // InternalGo.g:7210:2: (this_BINARY_OP_0= RULE_BINARY_OP ( (lv_expression_1_0= ruleexpression ) ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==RULE_BINARY_OP) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalGo.g:7211:3: this_BINARY_OP_0= RULE_BINARY_OP ( (lv_expression_1_0= ruleexpression ) )
                    {
                    this_BINARY_OP_0=(Token)match(input,RULE_BINARY_OP,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_BINARY_OP_0, grammarAccess.getExpressionMatchedAccess().getBINARY_OPTerminalRuleCall_0());
                      		
                    }
                    // InternalGo.g:7215:3: ( (lv_expression_1_0= ruleexpression ) )
                    // InternalGo.g:7216:4: (lv_expression_1_0= ruleexpression )
                    {
                    // InternalGo.g:7216:4: (lv_expression_1_0= ruleexpression )
                    // InternalGo.g:7217:5: lv_expression_1_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExpressionMatchedAccess().getExpressionExpressionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_1_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExpressionMatchedRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_1_0,
                      						"org.xtext.Go.expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexpressionMatched"


    // $ANTLR start "entryRuleunaryExpr"
    // InternalGo.g:7238:1: entryRuleunaryExpr returns [EObject current=null] : iv_ruleunaryExpr= ruleunaryExpr EOF ;
    public final EObject entryRuleunaryExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleunaryExpr = null;


        try {
            // InternalGo.g:7238:50: (iv_ruleunaryExpr= ruleunaryExpr EOF )
            // InternalGo.g:7239:2: iv_ruleunaryExpr= ruleunaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleunaryExpr=ruleunaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleunaryExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleunaryExpr"


    // $ANTLR start "ruleunaryExpr"
    // InternalGo.g:7245:1: ruleunaryExpr returns [EObject current=null] : ( ( (lv_primaryExpr_0_0= ruleprimaryExpr ) ) | ( (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) ) ) ) ;
    public final EObject ruleunaryExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_primaryExpr_0_0 = null;

        EObject lv_unaryExpr_8_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7251:2: ( ( ( (lv_primaryExpr_0_0= ruleprimaryExpr ) ) | ( (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) ) ) ) )
            // InternalGo.g:7252:2: ( ( (lv_primaryExpr_0_0= ruleprimaryExpr ) ) | ( (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) ) ) )
            {
            // InternalGo.g:7252:2: ( ( (lv_primaryExpr_0_0= ruleprimaryExpr ) ) | ( (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) ) ) )
            int alt100=2;
            switch ( input.LA(1) ) {
            case EOF:
            case RULE_IDENTIFIER:
            case RULE_STRING_LIT:
            case RULE_INT_LIT:
            case RULE_FLOAT_LIT:
            case RULE_IMAGINARY_LIT:
            case RULE_RUNE_LIT:
            case RULE_BINARY_OP:
            case 44:
            case 47:
            case 48:
            case 49:
            case 51:
            case 52:
            case 54:
            case 56:
            case 57:
            case 59:
            case 60:
            case 63:
            case 66:
            case 67:
            case 68:
            case 69:
            case 71:
            case 73:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
                {
                alt100=1;
                }
                break;
            case 65:
                {
                int LA100_2 = input.LA(2);

                if ( (synpred160_InternalGo()) ) {
                    alt100=1;
                }
                else if ( (true) ) {
                    alt100=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 100, 2, input);

                    throw nvae;
                }
                }
                break;
            case 58:
                {
                int LA100_3 = input.LA(2);

                if ( (synpred160_InternalGo()) ) {
                    alt100=1;
                }
                else if ( (true) ) {
                    alt100=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 100, 3, input);

                    throw nvae;
                }
                }
                break;
            case 61:
                {
                int LA100_4 = input.LA(2);

                if ( (synpred160_InternalGo()) ) {
                    alt100=1;
                }
                else if ( (true) ) {
                    alt100=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 100, 4, input);

                    throw nvae;
                }
                }
                break;
            case 62:
                {
                int LA100_5 = input.LA(2);

                if ( (synpred160_InternalGo()) ) {
                    alt100=1;
                }
                else if ( (true) ) {
                    alt100=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 100, 5, input);

                    throw nvae;
                }
                }
                break;
            case 64:
                {
                int LA100_6 = input.LA(2);

                if ( (synpred160_InternalGo()) ) {
                    alt100=1;
                }
                else if ( (true) ) {
                    alt100=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 100, 6, input);

                    throw nvae;
                }
                }
                break;
            case 70:
                {
                int LA100_7 = input.LA(2);

                if ( (synpred160_InternalGo()) ) {
                    alt100=1;
                }
                else if ( (true) ) {
                    alt100=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 100, 7, input);

                    throw nvae;
                }
                }
                break;
            case 96:
                {
                alt100=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }

            switch (alt100) {
                case 1 :
                    // InternalGo.g:7253:3: ( (lv_primaryExpr_0_0= ruleprimaryExpr ) )
                    {
                    // InternalGo.g:7253:3: ( (lv_primaryExpr_0_0= ruleprimaryExpr ) )
                    // InternalGo.g:7254:4: (lv_primaryExpr_0_0= ruleprimaryExpr )
                    {
                    // InternalGo.g:7254:4: (lv_primaryExpr_0_0= ruleprimaryExpr )
                    // InternalGo.g:7255:5: lv_primaryExpr_0_0= ruleprimaryExpr
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExpr_0_0=ruleprimaryExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnaryExprRule());
                      					}
                      					set(
                      						current,
                      						"primaryExpr",
                      						lv_primaryExpr_0_0,
                      						"org.xtext.Go.primaryExpr");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7273:3: ( (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) ) )
                    {
                    // InternalGo.g:7273:3: ( (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) ) )
                    // InternalGo.g:7274:4: (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) )
                    {
                    // InternalGo.g:7274:4: (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' )
                    int alt99=7;
                    switch ( input.LA(1) ) {
                    case 61:
                        {
                        alt99=1;
                        }
                        break;
                    case 62:
                        {
                        alt99=2;
                        }
                        break;
                    case 96:
                        {
                        alt99=3;
                        }
                        break;
                    case 64:
                        {
                        alt99=4;
                        }
                        break;
                    case 65:
                        {
                        alt99=5;
                        }
                        break;
                    case 70:
                        {
                        alt99=6;
                        }
                        break;
                    case 58:
                        {
                        alt99=7;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 99, 0, input);

                        throw nvae;
                    }

                    switch (alt99) {
                        case 1 :
                            // InternalGo.g:7275:5: otherlv_1= '+'
                            {
                            otherlv_1=(Token)match(input,61,FOLLOW_14); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getUnaryExprAccess().getPlusSignKeyword_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalGo.g:7280:5: otherlv_2= '-'
                            {
                            otherlv_2=(Token)match(input,62,FOLLOW_14); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getUnaryExprAccess().getHyphenMinusKeyword_1_0_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalGo.g:7285:5: otherlv_3= '!'
                            {
                            otherlv_3=(Token)match(input,96,FOLLOW_14); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getUnaryExprAccess().getExclamationMarkKeyword_1_0_2());
                              				
                            }

                            }
                            break;
                        case 4 :
                            // InternalGo.g:7290:5: otherlv_4= '^'
                            {
                            otherlv_4=(Token)match(input,64,FOLLOW_14); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getUnaryExprAccess().getCircumflexAccentKeyword_1_0_3());
                              				
                            }

                            }
                            break;
                        case 5 :
                            // InternalGo.g:7295:5: otherlv_5= '*'
                            {
                            otherlv_5=(Token)match(input,65,FOLLOW_14); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getUnaryExprAccess().getAsteriskKeyword_1_0_4());
                              				
                            }

                            }
                            break;
                        case 6 :
                            // InternalGo.g:7300:5: otherlv_6= '&'
                            {
                            otherlv_6=(Token)match(input,70,FOLLOW_14); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getUnaryExprAccess().getAmpersandKeyword_1_0_5());
                              				
                            }

                            }
                            break;
                        case 7 :
                            // InternalGo.g:7305:5: otherlv_7= '<-'
                            {
                            otherlv_7=(Token)match(input,58,FOLLOW_14); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getUnaryExprAccess().getLessThanSignHyphenMinusKeyword_1_0_6());
                              				
                            }

                            }
                            break;

                    }

                    // InternalGo.g:7310:4: ( (lv_unaryExpr_8_0= ruleunaryExpr ) )
                    // InternalGo.g:7311:5: (lv_unaryExpr_8_0= ruleunaryExpr )
                    {
                    // InternalGo.g:7311:5: (lv_unaryExpr_8_0= ruleunaryExpr )
                    // InternalGo.g:7312:6: lv_unaryExpr_8_0= ruleunaryExpr
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExprAccess().getUnaryExprUnaryExprParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_unaryExpr_8_0=ruleunaryExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExprRule());
                      						}
                      						set(
                      							current,
                      							"unaryExpr",
                      							lv_unaryExpr_8_0,
                      							"org.xtext.Go.unaryExpr");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleunaryExpr"


    // $ANTLR start "entryRuleconversion"
    // InternalGo.g:7334:1: entryRuleconversion returns [EObject current=null] : iv_ruleconversion= ruleconversion EOF ;
    public final EObject entryRuleconversion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleconversion = null;


        try {
            // InternalGo.g:7334:51: (iv_ruleconversion= ruleconversion EOF )
            // InternalGo.g:7335:2: iv_ruleconversion= ruleconversion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConversionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleconversion=ruleconversion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleconversion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleconversion"


    // $ANTLR start "ruleconversion"
    // InternalGo.g:7341:1: ruleconversion returns [EObject current=null] : ( ( (lv_type_0_0= ruletype ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) (otherlv_3= ',' )? otherlv_4= ')' ) ;
    public final EObject ruleconversion() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_type_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7347:2: ( ( ( (lv_type_0_0= ruletype ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) (otherlv_3= ',' )? otherlv_4= ')' ) )
            // InternalGo.g:7348:2: ( ( (lv_type_0_0= ruletype ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) (otherlv_3= ',' )? otherlv_4= ')' )
            {
            // InternalGo.g:7348:2: ( ( (lv_type_0_0= ruletype ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) (otherlv_3= ',' )? otherlv_4= ')' )
            // InternalGo.g:7349:3: ( (lv_type_0_0= ruletype ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) (otherlv_3= ',' )? otherlv_4= ')'
            {
            // InternalGo.g:7349:3: ( (lv_type_0_0= ruletype ) )
            // InternalGo.g:7350:4: (lv_type_0_0= ruletype )
            {
            // InternalGo.g:7350:4: (lv_type_0_0= ruletype )
            // InternalGo.g:7351:5: lv_type_0_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_17);
            lv_type_0_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConversionRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_0_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,47,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:7372:3: ( (lv_expression_2_0= ruleexpression ) )
            // InternalGo.g:7373:4: (lv_expression_2_0= ruleexpression )
            {
            // InternalGo.g:7373:4: (lv_expression_2_0= ruleexpression )
            // InternalGo.g:7374:5: lv_expression_2_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_52);
            lv_expression_2_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConversionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:7391:3: (otherlv_3= ',' )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==52) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalGo.g:7392:4: otherlv_3= ','
                    {
                    otherlv_3=(Token)match(input,52,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getConversionAccess().getCommaKeyword_3());
                      			
                    }

                    }
                    break;

            }

            otherlv_4=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getConversionAccess().getRightParenthesisKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleconversion"

    // $ANTLR start synpred16_InternalGo
    public final void synpred16_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


        // InternalGo.g:765:4: (otherlv_1= ',' ( (lv_expression_2_0= ruleexpression ) ) )
        // InternalGo.g:765:4: otherlv_1= ',' ( (lv_expression_2_0= ruleexpression ) )
        {
        otherlv_1=(Token)match(input,52,FOLLOW_14); if (state.failed) return ;
        // InternalGo.g:769:4: ( (lv_expression_2_0= ruleexpression ) )
        // InternalGo.g:770:5: (lv_expression_2_0= ruleexpression )
        {
        // InternalGo.g:770:5: (lv_expression_2_0= ruleexpression )
        // InternalGo.g:771:6: lv_expression_2_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_expression_2_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred16_InternalGo

    // $ANTLR start synpred19_InternalGo
    public final void synpred19_InternalGo_fragment() throws RecognitionException {   
        EObject lv_function_2_0 = null;


        // InternalGo.g:939:4: ( ( (lv_function_2_0= rulefunction ) ) )
        // InternalGo.g:939:4: ( (lv_function_2_0= rulefunction ) )
        {
        // InternalGo.g:939:4: ( (lv_function_2_0= rulefunction ) )
        // InternalGo.g:940:5: (lv_function_2_0= rulefunction )
        {
        // InternalGo.g:940:5: (lv_function_2_0= rulefunction )
        // InternalGo.g:941:6: lv_function_2_0= rulefunction
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFunctionDeclAccess().getFunctionFunctionParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_function_2_0=rulefunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred19_InternalGo

    // $ANTLR start synpred20_InternalGo
    public final void synpred20_InternalGo_fragment() throws RecognitionException {   
        EObject lv_function_3_0 = null;


        // InternalGo.g:1083:4: ( ( (lv_function_3_0= rulefunction ) ) )
        // InternalGo.g:1083:4: ( (lv_function_3_0= rulefunction ) )
        {
        // InternalGo.g:1083:4: ( (lv_function_3_0= rulefunction ) )
        // InternalGo.g:1084:5: (lv_function_3_0= rulefunction )
        {
        // InternalGo.g:1084:5: (lv_function_3_0= rulefunction )
        // InternalGo.g:1085:6: lv_function_3_0= rulefunction
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getMethodDeclAccess().getFunctionFunctionParserRuleCall_3_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_function_3_0=rulefunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred20_InternalGo

    // $ANTLR start synpred40_InternalGo
    public final void synpred40_InternalGo_fragment() throws RecognitionException {   
        EObject lv_sendStmt_0_0 = null;


        // InternalGo.g:1776:3: ( ( (lv_sendStmt_0_0= rulesendStmt ) ) )
        // InternalGo.g:1776:3: ( (lv_sendStmt_0_0= rulesendStmt ) )
        {
        // InternalGo.g:1776:3: ( (lv_sendStmt_0_0= rulesendStmt ) )
        // InternalGo.g:1777:4: (lv_sendStmt_0_0= rulesendStmt )
        {
        // InternalGo.g:1777:4: (lv_sendStmt_0_0= rulesendStmt )
        // InternalGo.g:1778:5: lv_sendStmt_0_0= rulesendStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSendStmtSendStmtParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_sendStmt_0_0=rulesendStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred40_InternalGo

    // $ANTLR start synpred41_InternalGo
    public final void synpred41_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expressionStmt_1_0 = null;


        // InternalGo.g:1796:3: ( ( (lv_expressionStmt_1_0= ruleexpressionStmt ) ) )
        // InternalGo.g:1796:3: ( (lv_expressionStmt_1_0= ruleexpressionStmt ) )
        {
        // InternalGo.g:1796:3: ( (lv_expressionStmt_1_0= ruleexpressionStmt ) )
        // InternalGo.g:1797:4: (lv_expressionStmt_1_0= ruleexpressionStmt )
        {
        // InternalGo.g:1797:4: (lv_expressionStmt_1_0= ruleexpressionStmt )
        // InternalGo.g:1798:5: lv_expressionStmt_1_0= ruleexpressionStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getExpressionStmtExpressionStmtParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_expressionStmt_1_0=ruleexpressionStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred41_InternalGo

    // $ANTLR start synpred42_InternalGo
    public final void synpred42_InternalGo_fragment() throws RecognitionException {   
        EObject lv_incDecStmt_2_0 = null;


        // InternalGo.g:1816:3: ( ( (lv_incDecStmt_2_0= ruleincDecStmt ) ) )
        // InternalGo.g:1816:3: ( (lv_incDecStmt_2_0= ruleincDecStmt ) )
        {
        // InternalGo.g:1816:3: ( (lv_incDecStmt_2_0= ruleincDecStmt ) )
        // InternalGo.g:1817:4: (lv_incDecStmt_2_0= ruleincDecStmt )
        {
        // InternalGo.g:1817:4: (lv_incDecStmt_2_0= ruleincDecStmt )
        // InternalGo.g:1818:5: lv_incDecStmt_2_0= ruleincDecStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getIncDecStmtIncDecStmtParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_incDecStmt_2_0=ruleincDecStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred42_InternalGo

    // $ANTLR start synpred43_InternalGo
    public final void synpred43_InternalGo_fragment() throws RecognitionException {   
        EObject lv_assignment_3_0 = null;


        // InternalGo.g:1836:3: ( ( (lv_assignment_3_0= ruleassignment ) ) )
        // InternalGo.g:1836:3: ( (lv_assignment_3_0= ruleassignment ) )
        {
        // InternalGo.g:1836:3: ( (lv_assignment_3_0= ruleassignment ) )
        // InternalGo.g:1837:4: (lv_assignment_3_0= ruleassignment )
        {
        // InternalGo.g:1837:4: (lv_assignment_3_0= ruleassignment )
        // InternalGo.g:1838:5: lv_assignment_3_0= ruleassignment
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getAssignmentAssignmentParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_assignment_3_0=ruleassignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred43_InternalGo

    // $ANTLR start synpred44_InternalGo
    public final void synpred44_InternalGo_fragment() throws RecognitionException {   
        EObject lv_shortVarDecl_4_0 = null;


        // InternalGo.g:1856:3: ( ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) ) )
        // InternalGo.g:1856:3: ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) )
        {
        // InternalGo.g:1856:3: ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) )
        // InternalGo.g:1857:4: (lv_shortVarDecl_4_0= ruleshortVarDecl )
        {
        // InternalGo.g:1857:4: (lv_shortVarDecl_4_0= ruleshortVarDecl )
        // InternalGo.g:1858:5: lv_shortVarDecl_4_0= ruleshortVarDecl
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_4_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_shortVarDecl_4_0=ruleshortVarDecl();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred44_InternalGo

    // $ANTLR start synpred57_InternalGo
    public final void synpred57_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expressionList_1_0 = null;


        // InternalGo.g:2363:4: ( (lv_expressionList_1_0= ruleexpressionList ) )
        // InternalGo.g:2363:4: (lv_expressionList_1_0= ruleexpressionList )
        {
        // InternalGo.g:2363:4: (lv_expressionList_1_0= ruleexpressionList )
        // InternalGo.g:2364:5: lv_expressionList_1_0= ruleexpressionList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getReturnStmtAccess().getExpressionListExpressionListParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_expressionList_1_0=ruleexpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred57_InternalGo

    // $ANTLR start synpred60_InternalGo
    public final void synpred60_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_simpleStmt_1_0 = null;


        // InternalGo.g:2566:4: ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )
        // InternalGo.g:2566:4: ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';'
        {
        // InternalGo.g:2566:4: ( (lv_simpleStmt_1_0= rulesimpleStmt ) )
        // InternalGo.g:2567:5: (lv_simpleStmt_1_0= rulesimpleStmt )
        {
        // InternalGo.g:2567:5: (lv_simpleStmt_1_0= rulesimpleStmt )
        // InternalGo.g:2568:6: lv_simpleStmt_1_0= rulesimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIfStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_simpleStmt_1_0=rulesimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,44,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred60_InternalGo

    // $ANTLR start synpred63_InternalGo
    public final void synpred63_InternalGo_fragment() throws RecognitionException {   
        EObject lv_exprSwitchStmt_0_0 = null;


        // InternalGo.g:2694:3: ( ( (lv_exprSwitchStmt_0_0= ruleexprSwitchStmt ) ) )
        // InternalGo.g:2694:3: ( (lv_exprSwitchStmt_0_0= ruleexprSwitchStmt ) )
        {
        // InternalGo.g:2694:3: ( (lv_exprSwitchStmt_0_0= ruleexprSwitchStmt ) )
        // InternalGo.g:2695:4: (lv_exprSwitchStmt_0_0= ruleexprSwitchStmt )
        {
        // InternalGo.g:2695:4: (lv_exprSwitchStmt_0_0= ruleexprSwitchStmt )
        // InternalGo.g:2696:5: lv_exprSwitchStmt_0_0= ruleexprSwitchStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSwitchStmtAccess().getExprSwitchStmtExprSwitchStmtParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_exprSwitchStmt_0_0=ruleexprSwitchStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred63_InternalGo

    // $ANTLR start synpred64_InternalGo
    public final void synpred64_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_simpleStmt_1_0 = null;


        // InternalGo.g:2757:4: ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )
        // InternalGo.g:2757:4: ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';'
        {
        // InternalGo.g:2757:4: ( (lv_simpleStmt_1_0= rulesimpleStmt ) )
        // InternalGo.g:2758:5: (lv_simpleStmt_1_0= rulesimpleStmt )
        {
        // InternalGo.g:2758:5: (lv_simpleStmt_1_0= rulesimpleStmt )
        // InternalGo.g:2759:6: lv_simpleStmt_1_0= rulesimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_simpleStmt_1_0=rulesimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,44,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred64_InternalGo

    // $ANTLR start synpred65_InternalGo
    public final void synpred65_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expression_3_0 = null;


        // InternalGo.g:2782:4: ( (lv_expression_3_0= ruleexpression ) )
        // InternalGo.g:2782:4: (lv_expression_3_0= ruleexpression )
        {
        // InternalGo.g:2782:4: (lv_expression_3_0= ruleexpression )
        // InternalGo.g:2783:5: lv_expression_3_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExpressionExpressionParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_expression_3_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred65_InternalGo

    // $ANTLR start synpred68_InternalGo
    public final void synpred68_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_simpleStmt_1_0 = null;


        // InternalGo.g:2961:4: ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )
        // InternalGo.g:2961:4: ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';'
        {
        // InternalGo.g:2961:4: ( (lv_simpleStmt_1_0= rulesimpleStmt ) )
        // InternalGo.g:2962:5: (lv_simpleStmt_1_0= rulesimpleStmt )
        {
        // InternalGo.g:2962:5: (lv_simpleStmt_1_0= rulesimpleStmt )
        // InternalGo.g:2963:6: lv_simpleStmt_1_0= rulesimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_simpleStmt_1_0=rulesimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,44,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred68_InternalGo

    // $ANTLR start synpred74_InternalGo
    public final void synpred74_InternalGo_fragment() throws RecognitionException {   
        EObject lv_sendStmt_1_0 = null;


        // InternalGo.g:3404:5: ( ( (lv_sendStmt_1_0= rulesendStmt ) ) )
        // InternalGo.g:3404:5: ( (lv_sendStmt_1_0= rulesendStmt ) )
        {
        // InternalGo.g:3404:5: ( (lv_sendStmt_1_0= rulesendStmt ) )
        // InternalGo.g:3405:6: (lv_sendStmt_1_0= rulesendStmt )
        {
        // InternalGo.g:3405:6: (lv_sendStmt_1_0= rulesendStmt )
        // InternalGo.g:3406:7: lv_sendStmt_1_0= rulesendStmt
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getCommCaseAccess().getSendStmtSendStmtParserRuleCall_0_1_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_sendStmt_1_0=rulesendStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred74_InternalGo

    // $ANTLR start synpred76_InternalGo
    public final void synpred76_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_expressionList_0_0 = null;


        // InternalGo.g:3470:4: ( ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) )
        // InternalGo.g:3470:4: ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' )
        {
        // InternalGo.g:3470:4: ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' )
        // InternalGo.g:3471:5: ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '='
        {
        // InternalGo.g:3471:5: ( (lv_expressionList_0_0= ruleexpressionList ) )
        // InternalGo.g:3472:6: (lv_expressionList_0_0= ruleexpressionList )
        {
        // InternalGo.g:3472:6: (lv_expressionList_0_0= ruleexpressionList )
        // InternalGo.g:3473:7: lv_expressionList_0_0= ruleexpressionList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getRecvStmtAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0());
          						
        }
        pushFollow(FOLLOW_13);
        lv_expressionList_0_0=ruleexpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,51,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred76_InternalGo

    // $ANTLR start synpred77_InternalGo
    public final void synpred77_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_identifierList_2_0 = null;


        // InternalGo.g:3496:4: ( ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )
        // InternalGo.g:3496:4: ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' )
        {
        // InternalGo.g:3496:4: ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' )
        // InternalGo.g:3497:5: ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':='
        {
        // InternalGo.g:3497:5: ( (lv_identifierList_2_0= ruleidentifierList ) )
        // InternalGo.g:3498:6: (lv_identifierList_2_0= ruleidentifierList )
        {
        // InternalGo.g:3498:6: (lv_identifierList_2_0= ruleidentifierList )
        // InternalGo.g:3499:7: lv_identifierList_2_0= ruleidentifierList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getRecvStmtAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0());
          						
        }
        pushFollow(FOLLOW_27);
        lv_identifierList_2_0=ruleidentifierList();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,72,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred77_InternalGo

    // $ANTLR start synpred78_InternalGo
    public final void synpred78_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expression_1_0 = null;


        // InternalGo.g:3565:4: ( ( (lv_expression_1_0= ruleexpression ) ) )
        // InternalGo.g:3565:4: ( (lv_expression_1_0= ruleexpression ) )
        {
        // InternalGo.g:3565:4: ( (lv_expression_1_0= ruleexpression ) )
        // InternalGo.g:3566:5: (lv_expression_1_0= ruleexpression )
        {
        // InternalGo.g:3566:5: (lv_expression_1_0= ruleexpression )
        // InternalGo.g:3567:6: lv_expression_1_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getExpressionExpressionParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_expression_1_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred78_InternalGo

    // $ANTLR start synpred79_InternalGo
    public final void synpred79_InternalGo_fragment() throws RecognitionException {   
        EObject lv_forClause_2_0 = null;


        // InternalGo.g:3585:4: ( ( (lv_forClause_2_0= ruleforClause ) ) )
        // InternalGo.g:3585:4: ( (lv_forClause_2_0= ruleforClause ) )
        {
        // InternalGo.g:3585:4: ( (lv_forClause_2_0= ruleforClause ) )
        // InternalGo.g:3586:5: (lv_forClause_2_0= ruleforClause )
        {
        // InternalGo.g:3586:5: (lv_forClause_2_0= ruleforClause )
        // InternalGo.g:3587:6: lv_forClause_2_0= ruleforClause
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getForClauseForClauseParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_forClause_2_0=ruleforClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred79_InternalGo

    // $ANTLR start synpred80_InternalGo
    public final void synpred80_InternalGo_fragment() throws RecognitionException {   
        EObject lv_rangeClause_3_0 = null;


        // InternalGo.g:3605:4: ( ( (lv_rangeClause_3_0= rulerangeClause ) ) )
        // InternalGo.g:3605:4: ( (lv_rangeClause_3_0= rulerangeClause ) )
        {
        // InternalGo.g:3605:4: ( (lv_rangeClause_3_0= rulerangeClause ) )
        // InternalGo.g:3606:5: (lv_rangeClause_3_0= rulerangeClause )
        {
        // InternalGo.g:3606:5: (lv_rangeClause_3_0= rulerangeClause )
        // InternalGo.g:3607:6: lv_rangeClause_3_0= rulerangeClause
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getRangeClauseRangeClauseParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_rangeClause_3_0=rulerangeClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred80_InternalGo

    // $ANTLR start synpred81_InternalGo
    public final void synpred81_InternalGo_fragment() throws RecognitionException {   
        EObject lv_simpleStmt_0_0 = null;


        // InternalGo.g:3664:4: ( (lv_simpleStmt_0_0= rulesimpleStmt ) )
        // InternalGo.g:3664:4: (lv_simpleStmt_0_0= rulesimpleStmt )
        {
        // InternalGo.g:3664:4: (lv_simpleStmt_0_0= rulesimpleStmt )
        // InternalGo.g:3665:5: lv_simpleStmt_0_0= rulesimpleStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getForClauseAccess().getSimpleStmtSimpleStmtParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_simpleStmt_0_0=rulesimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred81_InternalGo

    // $ANTLR start synpred82_InternalGo
    public final void synpred82_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expression_2_0 = null;


        // InternalGo.g:3687:4: ( (lv_expression_2_0= ruleexpression ) )
        // InternalGo.g:3687:4: (lv_expression_2_0= ruleexpression )
        {
        // InternalGo.g:3687:4: (lv_expression_2_0= ruleexpression )
        // InternalGo.g:3688:5: lv_expression_2_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getForClauseAccess().getExpressionExpressionParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_expression_2_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred82_InternalGo

    // $ANTLR start synpred83_InternalGo
    public final void synpred83_InternalGo_fragment() throws RecognitionException {   
        EObject lv_simpleStmt_4_0 = null;


        // InternalGo.g:3710:4: ( (lv_simpleStmt_4_0= rulesimpleStmt ) )
        // InternalGo.g:3710:4: (lv_simpleStmt_4_0= rulesimpleStmt )
        {
        // InternalGo.g:3710:4: (lv_simpleStmt_4_0= rulesimpleStmt )
        // InternalGo.g:3711:5: lv_simpleStmt_4_0= rulesimpleStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getForClauseAccess().getSimpleStmtSimpleStmtParserRuleCall_4_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_simpleStmt_4_0=rulesimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred83_InternalGo

    // $ANTLR start synpred88_InternalGo
    public final void synpred88_InternalGo_fragment() throws RecognitionException {   
        Token this_IDENTIFIER_0=null;

        // InternalGo.g:3972:3: (this_IDENTIFIER_0= RULE_IDENTIFIER )
        // InternalGo.g:3972:3: this_IDENTIFIER_0= RULE_IDENTIFIER
        {
        this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred88_InternalGo

    // $ANTLR start synpred89_InternalGo
    public final void synpred89_InternalGo_fragment() throws RecognitionException {   
        EObject lv_arrayType_0_0 = null;


        // InternalGo.g:4015:3: ( ( (lv_arrayType_0_0= rulearrayType ) ) )
        // InternalGo.g:4015:3: ( (lv_arrayType_0_0= rulearrayType ) )
        {
        // InternalGo.g:4015:3: ( (lv_arrayType_0_0= rulearrayType ) )
        // InternalGo.g:4016:4: (lv_arrayType_0_0= rulearrayType )
        {
        // InternalGo.g:4016:4: (lv_arrayType_0_0= rulearrayType )
        // InternalGo.g:4017:5: lv_arrayType_0_0= rulearrayType
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getTypeLitAccess().getArrayTypeArrayTypeParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_arrayType_0_0=rulearrayType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred89_InternalGo

    // $ANTLR start synpred94_InternalGo
    public final void synpred94_InternalGo_fragment() throws RecognitionException {   
        EObject lv_sliceType_5_0 = null;


        // InternalGo.g:4115:3: ( ( (lv_sliceType_5_0= rulesliceType ) ) )
        // InternalGo.g:4115:3: ( (lv_sliceType_5_0= rulesliceType ) )
        {
        // InternalGo.g:4115:3: ( (lv_sliceType_5_0= rulesliceType ) )
        // InternalGo.g:4116:4: (lv_sliceType_5_0= rulesliceType )
        {
        // InternalGo.g:4116:4: (lv_sliceType_5_0= rulesliceType )
        // InternalGo.g:4117:5: lv_sliceType_5_0= rulesliceType
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getTypeLitAccess().getSliceTypeSliceTypeParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_sliceType_5_0=rulesliceType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred94_InternalGo

    // $ANTLR start synpred97_InternalGo
    public final void synpred97_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalGo.g:4544:4: (otherlv_0= 'chan' )
        // InternalGo.g:4544:4: otherlv_0= 'chan'
        {
        otherlv_0=(Token)match(input,93,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred97_InternalGo

    // $ANTLR start synpred98_InternalGo
    public final void synpred98_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_2=null;

        // InternalGo.g:4549:4: ( (otherlv_1= 'chan' otherlv_2= '<-' ) )
        // InternalGo.g:4549:4: (otherlv_1= 'chan' otherlv_2= '<-' )
        {
        // InternalGo.g:4549:4: (otherlv_1= 'chan' otherlv_2= '<-' )
        // InternalGo.g:4550:5: otherlv_1= 'chan' otherlv_2= '<-'
        {
        otherlv_1=(Token)match(input,93,FOLLOW_24); if (state.failed) return ;
        otherlv_2=(Token)match(input,58,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred98_InternalGo

    // $ANTLR start synpred100_InternalGo
    public final void synpred100_InternalGo_fragment() throws RecognitionException {   
        EObject lv_result_1_0 = null;


        // InternalGo.g:4735:4: ( (lv_result_1_0= ruleresult ) )
        // InternalGo.g:4735:4: (lv_result_1_0= ruleresult )
        {
        // InternalGo.g:4735:4: (lv_result_1_0= ruleresult )
        // InternalGo.g:4736:5: lv_result_1_0= ruleresult
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_result_1_0=ruleresult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred100_InternalGo

    // $ANTLR start synpred101_InternalGo
    public final void synpred101_InternalGo_fragment() throws RecognitionException {   
        EObject lv_parameters_0_0 = null;


        // InternalGo.g:4772:3: ( ( (lv_parameters_0_0= ruleparameters ) ) )
        // InternalGo.g:4772:3: ( (lv_parameters_0_0= ruleparameters ) )
        {
        // InternalGo.g:4772:3: ( (lv_parameters_0_0= ruleparameters ) )
        // InternalGo.g:4773:4: (lv_parameters_0_0= ruleparameters )
        {
        // InternalGo.g:4773:4: (lv_parameters_0_0= ruleparameters )
        // InternalGo.g:4774:5: lv_parameters_0_0= ruleparameters
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getResultAccess().getParametersParametersParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_parameters_0_0=ruleparameters();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred101_InternalGo

    // $ANTLR start synpred105_InternalGo
    public final void synpred105_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_identifierList_0_0 = null;


        // InternalGo.g:4948:4: ( (lv_identifierList_0_0= ruleidentifierList ) )
        // InternalGo.g:4948:4: (lv_identifierList_0_0= ruleidentifierList )
        {
        // InternalGo.g:4948:4: (lv_identifierList_0_0= ruleidentifierList )
        // InternalGo.g:4949:5: lv_identifierList_0_0= ruleidentifierList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getParameterDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_identifierList_0_0=ruleidentifierList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred105_InternalGo

    // $ANTLR start synpred107_InternalGo
    public final void synpred107_InternalGo_fragment() throws RecognitionException {   
        EObject lv_literal_0_0 = null;


        // InternalGo.g:5010:3: ( ( (lv_literal_0_0= ruleliteral ) ) )
        // InternalGo.g:5010:3: ( (lv_literal_0_0= ruleliteral ) )
        {
        // InternalGo.g:5010:3: ( (lv_literal_0_0= ruleliteral ) )
        // InternalGo.g:5011:4: (lv_literal_0_0= ruleliteral )
        {
        // InternalGo.g:5011:4: (lv_literal_0_0= ruleliteral )
        // InternalGo.g:5012:5: lv_literal_0_0= ruleliteral
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_literal_0_0=ruleliteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred107_InternalGo

    // $ANTLR start synpred108_InternalGo
    public final void synpred108_InternalGo_fragment() throws RecognitionException {   
        EObject lv_operandName_1_0 = null;


        // InternalGo.g:5030:3: ( ( (lv_operandName_1_0= ruleoperandName ) ) )
        // InternalGo.g:5030:3: ( (lv_operandName_1_0= ruleoperandName ) )
        {
        // InternalGo.g:5030:3: ( (lv_operandName_1_0= ruleoperandName ) )
        // InternalGo.g:5031:4: (lv_operandName_1_0= ruleoperandName )
        {
        // InternalGo.g:5031:4: (lv_operandName_1_0= ruleoperandName )
        // InternalGo.g:5032:5: lv_operandName_1_0= ruleoperandName
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getOperandAccess().getOperandNameOperandNameParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_operandName_1_0=ruleoperandName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred108_InternalGo

    // $ANTLR start synpred109_InternalGo
    public final void synpred109_InternalGo_fragment() throws RecognitionException {   
        EObject lv_methodExpr_2_0 = null;


        // InternalGo.g:5050:3: ( ( (lv_methodExpr_2_0= rulemethodExpr ) ) )
        // InternalGo.g:5050:3: ( (lv_methodExpr_2_0= rulemethodExpr ) )
        {
        // InternalGo.g:5050:3: ( (lv_methodExpr_2_0= rulemethodExpr ) )
        // InternalGo.g:5051:4: (lv_methodExpr_2_0= rulemethodExpr )
        {
        // InternalGo.g:5051:4: (lv_methodExpr_2_0= rulemethodExpr )
        // InternalGo.g:5052:5: lv_methodExpr_2_0= rulemethodExpr
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getOperandAccess().getMethodExprMethodExprParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_methodExpr_2_0=rulemethodExpr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred109_InternalGo

    // $ANTLR start synpred118_InternalGo
    public final void synpred118_InternalGo_fragment() throws RecognitionException {   
        EObject lv_arrayType_1_0 = null;


        // InternalGo.g:5412:3: ( ( (lv_arrayType_1_0= rulearrayType ) ) )
        // InternalGo.g:5412:3: ( (lv_arrayType_1_0= rulearrayType ) )
        {
        // InternalGo.g:5412:3: ( (lv_arrayType_1_0= rulearrayType ) )
        // InternalGo.g:5413:4: (lv_arrayType_1_0= rulearrayType )
        {
        // InternalGo.g:5413:4: (lv_arrayType_1_0= rulearrayType )
        // InternalGo.g:5414:5: lv_arrayType_1_0= rulearrayType
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLiteralTypeAccess().getArrayTypeArrayTypeParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_arrayType_1_0=rulearrayType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred118_InternalGo

    // $ANTLR start synpred119_InternalGo
    public final void synpred119_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_elementType_5_0 = null;


        // InternalGo.g:5432:3: ( (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_elementType_5_0= ruleelementType ) ) ) )
        // InternalGo.g:5432:3: (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_elementType_5_0= ruleelementType ) ) )
        {
        // InternalGo.g:5432:3: (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_elementType_5_0= ruleelementType ) ) )
        // InternalGo.g:5433:4: otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_elementType_5_0= ruleelementType ) )
        {
        otherlv_2=(Token)match(input,89,FOLLOW_54); if (state.failed) return ;
        otherlv_3=(Token)match(input,94,FOLLOW_46); if (state.failed) return ;
        otherlv_4=(Token)match(input,90,FOLLOW_16); if (state.failed) return ;
        // InternalGo.g:5445:4: ( (lv_elementType_5_0= ruleelementType ) )
        // InternalGo.g:5446:5: (lv_elementType_5_0= ruleelementType )
        {
        // InternalGo.g:5446:5: (lv_elementType_5_0= ruleelementType )
        // InternalGo.g:5447:6: lv_elementType_5_0= ruleelementType
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getLiteralTypeAccess().getElementTypeElementTypeParserRuleCall_2_3_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_elementType_5_0=ruleelementType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred119_InternalGo

    // $ANTLR start synpred120_InternalGo
    public final void synpred120_InternalGo_fragment() throws RecognitionException {   
        EObject lv_sliceType_6_0 = null;


        // InternalGo.g:5466:3: ( ( (lv_sliceType_6_0= rulesliceType ) ) )
        // InternalGo.g:5466:3: ( (lv_sliceType_6_0= rulesliceType ) )
        {
        // InternalGo.g:5466:3: ( (lv_sliceType_6_0= rulesliceType ) )
        // InternalGo.g:5467:4: (lv_sliceType_6_0= rulesliceType )
        {
        // InternalGo.g:5467:4: (lv_sliceType_6_0= rulesliceType )
        // InternalGo.g:5468:5: lv_sliceType_6_0= rulesliceType
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLiteralTypeAccess().getSliceTypeSliceTypeParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_sliceType_6_0=rulesliceType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred120_InternalGo

    // $ANTLR start synpred123_InternalGo
    public final void synpred123_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_elementList_1_0 = null;


        // InternalGo.g:5549:4: ( ( (lv_elementList_1_0= ruleelementList ) ) (otherlv_2= ',' )? )
        // InternalGo.g:5549:4: ( (lv_elementList_1_0= ruleelementList ) ) (otherlv_2= ',' )?
        {
        // InternalGo.g:5549:4: ( (lv_elementList_1_0= ruleelementList ) )
        // InternalGo.g:5550:5: (lv_elementList_1_0= ruleelementList )
        {
        // InternalGo.g:5550:5: (lv_elementList_1_0= ruleelementList )
        // InternalGo.g:5551:6: lv_elementList_1_0= ruleelementList
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getLiteralValueAccess().getElementListElementListParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_15);
        lv_elementList_1_0=ruleelementList();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:5568:4: (otherlv_2= ',' )?
        int alt107=2;
        int LA107_0 = input.LA(1);

        if ( (LA107_0==52) ) {
            alt107=1;
        }
        switch (alt107) {
            case 1 :
                // InternalGo.g:5569:5: otherlv_2= ','
                {
                otherlv_2=(Token)match(input,52,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred123_InternalGo

    // $ANTLR start synpred124_InternalGo
    public final void synpred124_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_keyedElement_2_0 = null;


        // InternalGo.g:5618:4: (otherlv_1= ',' ( (lv_keyedElement_2_0= rulekeyedElement ) ) )
        // InternalGo.g:5618:4: otherlv_1= ',' ( (lv_keyedElement_2_0= rulekeyedElement ) )
        {
        otherlv_1=(Token)match(input,52,FOLLOW_36); if (state.failed) return ;
        // InternalGo.g:5622:4: ( (lv_keyedElement_2_0= rulekeyedElement ) )
        // InternalGo.g:5623:5: (lv_keyedElement_2_0= rulekeyedElement )
        {
        // InternalGo.g:5623:5: (lv_keyedElement_2_0= rulekeyedElement )
        // InternalGo.g:5624:6: lv_keyedElement_2_0= rulekeyedElement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_keyedElement_2_0=rulekeyedElement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred124_InternalGo

    // $ANTLR start synpred125_InternalGo
    public final void synpred125_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_key_0_0 = null;


        // InternalGo.g:5662:4: ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )
        // InternalGo.g:5662:4: ( (lv_key_0_0= rulekey ) ) otherlv_1= ':'
        {
        // InternalGo.g:5662:4: ( (lv_key_0_0= rulekey ) )
        // InternalGo.g:5663:5: (lv_key_0_0= rulekey )
        {
        // InternalGo.g:5663:5: (lv_key_0_0= rulekey )
        // InternalGo.g:5664:6: lv_key_0_0= rulekey
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getKeyedElementAccess().getKeyKeyParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_28);
        lv_key_0_0=rulekey();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,73,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred125_InternalGo

    // $ANTLR start synpred126_InternalGo
    public final void synpred126_InternalGo_fragment() throws RecognitionException {   
        Token this_IDENTIFIER_0=null;

        // InternalGo.g:5724:3: (this_IDENTIFIER_0= RULE_IDENTIFIER )
        // InternalGo.g:5724:3: this_IDENTIFIER_0= RULE_IDENTIFIER
        {
        this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred126_InternalGo

    // $ANTLR start synpred127_InternalGo
    public final void synpred127_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expression_1_0 = null;


        // InternalGo.g:5729:3: ( ( (lv_expression_1_0= ruleexpression ) ) )
        // InternalGo.g:5729:3: ( (lv_expression_1_0= ruleexpression ) )
        {
        // InternalGo.g:5729:3: ( (lv_expression_1_0= ruleexpression ) )
        // InternalGo.g:5730:4: (lv_expression_1_0= ruleexpression )
        {
        // InternalGo.g:5730:4: (lv_expression_1_0= ruleexpression )
        // InternalGo.g:5731:5: lv_expression_1_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getKeyAccess().getExpressionExpressionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_expression_1_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred127_InternalGo

    // $ANTLR start synpred133_InternalGo
    public final void synpred133_InternalGo_fragment() throws RecognitionException {   
        EObject lv_operand_0_0 = null;


        // InternalGo.g:6075:4: ( ( (lv_operand_0_0= ruleoperand ) ) )
        // InternalGo.g:6075:4: ( (lv_operand_0_0= ruleoperand ) )
        {
        // InternalGo.g:6075:4: ( (lv_operand_0_0= ruleoperand ) )
        // InternalGo.g:6076:5: (lv_operand_0_0= ruleoperand )
        {
        // InternalGo.g:6076:5: (lv_operand_0_0= ruleoperand )
        // InternalGo.g:6077:6: lv_operand_0_0= ruleoperand
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPrimaryExprAccess().getOperandOperandParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operand_0_0=ruleoperand();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred133_InternalGo

    // $ANTLR start synpred134_InternalGo
    public final void synpred134_InternalGo_fragment() throws RecognitionException {   
        EObject lv_operand_0_0 = null;

        EObject lv_conversion_1_0 = null;


        // InternalGo.g:6074:3: ( ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) ) )
        // InternalGo.g:6074:3: ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) )
        {
        // InternalGo.g:6074:3: ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) )
        int alt108=2;
        alt108 = dfa108.predict(input);
        switch (alt108) {
            case 1 :
                // InternalGo.g:6075:4: ( (lv_operand_0_0= ruleoperand ) )
                {
                // InternalGo.g:6075:4: ( (lv_operand_0_0= ruleoperand ) )
                // InternalGo.g:6076:5: (lv_operand_0_0= ruleoperand )
                {
                // InternalGo.g:6076:5: (lv_operand_0_0= ruleoperand )
                // InternalGo.g:6077:6: lv_operand_0_0= ruleoperand
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getPrimaryExprAccess().getOperandOperandParserRuleCall_0_0_0());
                  					
                }
                pushFollow(FOLLOW_2);
                lv_operand_0_0=ruleoperand();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalGo.g:6095:4: ( (lv_conversion_1_0= ruleconversion ) )
                {
                // InternalGo.g:6095:4: ( (lv_conversion_1_0= ruleconversion ) )
                // InternalGo.g:6096:5: (lv_conversion_1_0= ruleconversion )
                {
                // InternalGo.g:6096:5: (lv_conversion_1_0= ruleconversion )
                // InternalGo.g:6097:6: lv_conversion_1_0= ruleconversion
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getPrimaryExprAccess().getConversionConversionParserRuleCall_0_1_0());
                  					
                }
                pushFollow(FOLLOW_2);
                lv_conversion_1_0=ruleconversion();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }
    }
    // $ANTLR end synpred134_InternalGo

    // $ANTLR start synpred135_InternalGo
    public final void synpred135_InternalGo_fragment() throws RecognitionException {   
        EObject lv_primaryExprSelector_2_0 = null;


        // InternalGo.g:6116:3: ( ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) ) )
        // InternalGo.g:6116:3: ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) )
        {
        // InternalGo.g:6116:3: ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) )
        // InternalGo.g:6117:4: (lv_primaryExprSelector_2_0= ruleprimaryExprSelector )
        {
        // InternalGo.g:6117:4: (lv_primaryExprSelector_2_0= ruleprimaryExprSelector )
        // InternalGo.g:6118:5: lv_primaryExprSelector_2_0= ruleprimaryExprSelector
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprSelectorPrimaryExprSelectorParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_primaryExprSelector_2_0=ruleprimaryExprSelector();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred135_InternalGo

    // $ANTLR start synpred136_InternalGo
    public final void synpred136_InternalGo_fragment() throws RecognitionException {   
        EObject lv_primaryExprIndex_3_0 = null;


        // InternalGo.g:6136:3: ( ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) ) )
        // InternalGo.g:6136:3: ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) )
        {
        // InternalGo.g:6136:3: ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) )
        // InternalGo.g:6137:4: (lv_primaryExprIndex_3_0= ruleprimaryExprIndex )
        {
        // InternalGo.g:6137:4: (lv_primaryExprIndex_3_0= ruleprimaryExprIndex )
        // InternalGo.g:6138:5: lv_primaryExprIndex_3_0= ruleprimaryExprIndex
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprIndexPrimaryExprIndexParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_primaryExprIndex_3_0=ruleprimaryExprIndex();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred136_InternalGo

    // $ANTLR start synpred137_InternalGo
    public final void synpred137_InternalGo_fragment() throws RecognitionException {   
        EObject lv_primaryExprSlice_4_0 = null;


        // InternalGo.g:6156:3: ( ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) ) )
        // InternalGo.g:6156:3: ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) )
        {
        // InternalGo.g:6156:3: ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) )
        // InternalGo.g:6157:4: (lv_primaryExprSlice_4_0= ruleprimaryExprSlice )
        {
        // InternalGo.g:6157:4: (lv_primaryExprSlice_4_0= ruleprimaryExprSlice )
        // InternalGo.g:6158:5: lv_primaryExprSlice_4_0= ruleprimaryExprSlice
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprSlicePrimaryExprSliceParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_primaryExprSlice_4_0=ruleprimaryExprSlice();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred137_InternalGo

    // $ANTLR start synpred138_InternalGo
    public final void synpred138_InternalGo_fragment() throws RecognitionException {   
        EObject lv_primaryExprTypeAssertion_5_0 = null;


        // InternalGo.g:6176:3: ( ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) ) )
        // InternalGo.g:6176:3: ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) )
        {
        // InternalGo.g:6176:3: ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) )
        // InternalGo.g:6177:4: (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion )
        {
        // InternalGo.g:6177:4: (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion )
        // InternalGo.g:6178:5: lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprTypeAssertionPrimaryExprTypeAssertionParserRuleCall_4_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_primaryExprTypeAssertion_5_0=ruleprimaryExprTypeAssertion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred138_InternalGo

    // $ANTLR start synpred139_InternalGo
    public final void synpred139_InternalGo_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_selector_0_0 = null;


        // InternalGo.g:6234:3: ( ( (lv_selector_0_0= ruleselector ) ) )
        // InternalGo.g:6234:3: ( (lv_selector_0_0= ruleselector ) )
        {
        // InternalGo.g:6234:3: ( (lv_selector_0_0= ruleselector ) )
        // InternalGo.g:6235:4: (lv_selector_0_0= ruleselector )
        {
        // InternalGo.g:6235:4: (lv_selector_0_0= ruleselector )
        // InternalGo.g:6236:5: lv_selector_0_0= ruleselector
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getSelectorSelectorParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_selector_0_0=ruleselector();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred139_InternalGo

    // $ANTLR start synpred140_InternalGo
    public final void synpred140_InternalGo_fragment() throws RecognitionException {   
        EObject lv_index_1_0 = null;


        // InternalGo.g:6254:3: ( ( (lv_index_1_0= ruleindex ) ) )
        // InternalGo.g:6254:3: ( (lv_index_1_0= ruleindex ) )
        {
        // InternalGo.g:6254:3: ( (lv_index_1_0= ruleindex ) )
        // InternalGo.g:6255:4: (lv_index_1_0= ruleindex )
        {
        // InternalGo.g:6255:4: (lv_index_1_0= ruleindex )
        // InternalGo.g:6256:5: lv_index_1_0= ruleindex
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getIndexIndexParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_index_1_0=ruleindex();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred140_InternalGo

    // $ANTLR start synpred141_InternalGo
    public final void synpred141_InternalGo_fragment() throws RecognitionException {   
        EObject lv_slice_2_0 = null;


        // InternalGo.g:6274:3: ( ( (lv_slice_2_0= ruleslice ) ) )
        // InternalGo.g:6274:3: ( (lv_slice_2_0= ruleslice ) )
        {
        // InternalGo.g:6274:3: ( (lv_slice_2_0= ruleslice ) )
        // InternalGo.g:6275:4: (lv_slice_2_0= ruleslice )
        {
        // InternalGo.g:6275:4: (lv_slice_2_0= ruleslice )
        // InternalGo.g:6276:5: lv_slice_2_0= ruleslice
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getSliceSliceParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_slice_2_0=ruleslice();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred141_InternalGo

    // $ANTLR start synpred142_InternalGo
    public final void synpred142_InternalGo_fragment() throws RecognitionException {   
        EObject lv_typeAssertion_3_0 = null;


        // InternalGo.g:6294:3: ( ( (lv_typeAssertion_3_0= ruletypeAssertion ) ) )
        // InternalGo.g:6294:3: ( (lv_typeAssertion_3_0= ruletypeAssertion ) )
        {
        // InternalGo.g:6294:3: ( (lv_typeAssertion_3_0= ruletypeAssertion ) )
        // InternalGo.g:6295:4: (lv_typeAssertion_3_0= ruletypeAssertion )
        {
        // InternalGo.g:6295:4: (lv_typeAssertion_3_0= ruletypeAssertion )
        // InternalGo.g:6296:5: lv_typeAssertion_3_0= ruletypeAssertion
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getTypeAssertionTypeAssertionParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_typeAssertion_3_0=ruletypeAssertion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred142_InternalGo

    // $ANTLR start synpred148_InternalGo
    public final void synpred148_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expression_1_0 = null;


        // InternalGo.g:6713:6: ( (lv_expression_1_0= ruleexpression ) )
        // InternalGo.g:6713:6: (lv_expression_1_0= ruleexpression )
        {
        // InternalGo.g:6713:6: (lv_expression_1_0= ruleexpression )
        // InternalGo.g:6714:7: lv_expression_1_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_0_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_expression_1_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred148_InternalGo

    // $ANTLR start synpred149_InternalGo
    public final void synpred149_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expression_3_0 = null;


        // InternalGo.g:6736:6: ( (lv_expression_3_0= ruleexpression ) )
        // InternalGo.g:6736:6: (lv_expression_3_0= ruleexpression )
        {
        // InternalGo.g:6736:6: (lv_expression_3_0= ruleexpression )
        // InternalGo.g:6737:7: lv_expression_3_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_0_2_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_expression_3_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred149_InternalGo

    // $ANTLR start synpred150_InternalGo
    public final void synpred150_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;

        EObject lv_expression_3_0 = null;


        // InternalGo.g:6711:4: ( ( ( (lv_expression_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expression_3_0= ruleexpression ) )? ) )
        // InternalGo.g:6711:4: ( ( (lv_expression_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expression_3_0= ruleexpression ) )? )
        {
        // InternalGo.g:6711:4: ( ( (lv_expression_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expression_3_0= ruleexpression ) )? )
        // InternalGo.g:6712:5: ( (lv_expression_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expression_3_0= ruleexpression ) )?
        {
        // InternalGo.g:6712:5: ( (lv_expression_1_0= ruleexpression ) )?
        int alt109=2;
        int LA109_0 = input.LA(1);

        if ( ((LA109_0>=RULE_IDENTIFIER && LA109_0<=RULE_STRING_LIT)||(LA109_0>=RULE_INT_LIT && LA109_0<=RULE_BINARY_OP)||LA109_0==47||LA109_0==49||LA109_0==54||LA109_0==58||(LA109_0>=61 && LA109_0<=62)||(LA109_0>=64 && LA109_0<=65)||LA109_0==70||LA109_0==89||(LA109_0>=91 && LA109_0<=93)||(LA109_0>=95 && LA109_0<=96)) ) {
            alt109=1;
        }
        else if ( (LA109_0==73) ) {
            int LA109_2 = input.LA(2);

            if ( (synpred148_InternalGo()) ) {
                alt109=1;
            }
        }
        switch (alt109) {
            case 1 :
                // InternalGo.g:6713:6: (lv_expression_1_0= ruleexpression )
                {
                // InternalGo.g:6713:6: (lv_expression_1_0= ruleexpression )
                // InternalGo.g:6714:7: lv_expression_1_0= ruleexpression
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_0_0_0());
                  						
                }
                pushFollow(FOLLOW_28);
                lv_expression_1_0=ruleexpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_2=(Token)match(input,73,FOLLOW_30); if (state.failed) return ;
        // InternalGo.g:6735:5: ( (lv_expression_3_0= ruleexpression ) )?
        int alt110=2;
        int LA110_0 = input.LA(1);

        if ( ((LA110_0>=RULE_IDENTIFIER && LA110_0<=RULE_STRING_LIT)||(LA110_0>=RULE_INT_LIT && LA110_0<=RULE_BINARY_OP)||LA110_0==47||LA110_0==49||LA110_0==54||LA110_0==58||(LA110_0>=61 && LA110_0<=62)||(LA110_0>=64 && LA110_0<=65)||LA110_0==70||LA110_0==89||(LA110_0>=91 && LA110_0<=93)||(LA110_0>=95 && LA110_0<=96)) ) {
            alt110=1;
        }
        else if ( (LA110_0==EOF) ) {
            int LA110_2 = input.LA(2);

            if ( (synpred149_InternalGo()) ) {
                alt110=1;
            }
        }
        switch (alt110) {
            case 1 :
                // InternalGo.g:6736:6: (lv_expression_3_0= ruleexpression )
                {
                // InternalGo.g:6736:6: (lv_expression_3_0= ruleexpression )
                // InternalGo.g:6737:7: lv_expression_3_0= ruleexpression
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_0_2_0());
                  						
                }
                pushFollow(FOLLOW_2);
                lv_expression_3_0=ruleexpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred150_InternalGo

    // $ANTLR start synpred151_InternalGo
    public final void synpred151_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expression_4_0 = null;


        // InternalGo.g:6758:6: ( (lv_expression_4_0= ruleexpression ) )
        // InternalGo.g:6758:6: (lv_expression_4_0= ruleexpression )
        {
        // InternalGo.g:6758:6: (lv_expression_4_0= ruleexpression )
        // InternalGo.g:6759:7: lv_expression_4_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_1_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_expression_4_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred151_InternalGo

    // $ANTLR start synpred152_InternalGo
    public final void synpred152_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expressionList_1_0 = null;


        // InternalGo.g:6903:5: ( ( (lv_expressionList_1_0= ruleexpressionList ) ) )
        // InternalGo.g:6903:5: ( (lv_expressionList_1_0= ruleexpressionList ) )
        {
        // InternalGo.g:6903:5: ( (lv_expressionList_1_0= ruleexpressionList ) )
        // InternalGo.g:6904:6: (lv_expressionList_1_0= ruleexpressionList )
        {
        // InternalGo.g:6904:6: (lv_expressionList_1_0= ruleexpressionList )
        // InternalGo.g:6905:7: lv_expressionList_1_0= ruleexpressionList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_expressionList_1_0=ruleexpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred152_InternalGo

    // $ANTLR start synpred153_InternalGo
    public final void synpred153_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_expressionList_4_0 = null;


        // InternalGo.g:6944:7: (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )
        // InternalGo.g:6944:7: otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) )
        {
        otherlv_3=(Token)match(input,52,FOLLOW_14); if (state.failed) return ;
        // InternalGo.g:6948:7: ( (lv_expressionList_4_0= ruleexpressionList ) )
        // InternalGo.g:6949:8: (lv_expressionList_4_0= ruleexpressionList )
        {
        // InternalGo.g:6949:8: (lv_expressionList_4_0= ruleexpressionList )
        // InternalGo.g:6950:9: lv_expressionList_4_0= ruleexpressionList
        {
        if ( state.backtracking==0 ) {

          									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_1_0());
          								
        }
        pushFollow(FOLLOW_2);
        lv_expressionList_4_0=ruleexpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred153_InternalGo

    // $ANTLR start synpred156_InternalGo
    public final void synpred156_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_expressionList_1_0 = null;

        EObject lv_type_2_0 = null;

        EObject lv_expressionList_4_0 = null;


        // InternalGo.g:6902:4: ( ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) ) (otherlv_5= '...' )? (otherlv_6= ',' )? )
        // InternalGo.g:6902:4: ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) ) (otherlv_5= '...' )? (otherlv_6= ',' )?
        {
        // InternalGo.g:6902:4: ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) )
        int alt112=2;
        alt112 = dfa112.predict(input);
        switch (alt112) {
            case 1 :
                // InternalGo.g:6903:5: ( (lv_expressionList_1_0= ruleexpressionList ) )
                {
                // InternalGo.g:6903:5: ( (lv_expressionList_1_0= ruleexpressionList ) )
                // InternalGo.g:6904:6: (lv_expressionList_1_0= ruleexpressionList )
                {
                // InternalGo.g:6904:6: (lv_expressionList_1_0= ruleexpressionList )
                // InternalGo.g:6905:7: lv_expressionList_1_0= ruleexpressionList
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_0_0());
                  						
                }
                pushFollow(FOLLOW_66);
                lv_expressionList_1_0=ruleexpressionList();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalGo.g:6923:5: ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? )
                {
                // InternalGo.g:6923:5: ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? )
                // InternalGo.g:6924:6: ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )?
                {
                // InternalGo.g:6924:6: ( (lv_type_2_0= ruletype ) )
                // InternalGo.g:6925:7: (lv_type_2_0= ruletype )
                {
                // InternalGo.g:6925:7: (lv_type_2_0= ruletype )
                // InternalGo.g:6926:8: lv_type_2_0= ruletype
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_1_0_1_0_0());
                  							
                }
                pushFollow(FOLLOW_66);
                lv_type_2_0=ruletype();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalGo.g:6943:6: (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )?
                int alt111=2;
                int LA111_0 = input.LA(1);

                if ( (LA111_0==52) ) {
                    int LA111_1 = input.LA(2);

                    if ( (synpred153_InternalGo()) ) {
                        alt111=1;
                    }
                }
                switch (alt111) {
                    case 1 :
                        // InternalGo.g:6944:7: otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) )
                        {
                        otherlv_3=(Token)match(input,52,FOLLOW_14); if (state.failed) return ;
                        // InternalGo.g:6948:7: ( (lv_expressionList_4_0= ruleexpressionList ) )
                        // InternalGo.g:6949:8: (lv_expressionList_4_0= ruleexpressionList )
                        {
                        // InternalGo.g:6949:8: (lv_expressionList_4_0= ruleexpressionList )
                        // InternalGo.g:6950:9: lv_expressionList_4_0= ruleexpressionList
                        {
                        if ( state.backtracking==0 ) {

                          									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_1_0());
                          								
                        }
                        pushFollow(FOLLOW_66);
                        lv_expressionList_4_0=ruleexpressionList();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;

        }

        // InternalGo.g:6970:4: (otherlv_5= '...' )?
        int alt113=2;
        int LA113_0 = input.LA(1);

        if ( (LA113_0==94) ) {
            alt113=1;
        }
        switch (alt113) {
            case 1 :
                // InternalGo.g:6971:5: otherlv_5= '...'
                {
                otherlv_5=(Token)match(input,94,FOLLOW_15); if (state.failed) return ;

                }
                break;

        }

        // InternalGo.g:6976:4: (otherlv_6= ',' )?
        int alt114=2;
        int LA114_0 = input.LA(1);

        if ( (LA114_0==52) ) {
            alt114=1;
        }
        switch (alt114) {
            case 1 :
                // InternalGo.g:6977:5: otherlv_6= ','
                {
                otherlv_6=(Token)match(input,52,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred156_InternalGo

    // $ANTLR start synpred160_InternalGo
    public final void synpred160_InternalGo_fragment() throws RecognitionException {   
        EObject lv_primaryExpr_0_0 = null;


        // InternalGo.g:7253:3: ( ( (lv_primaryExpr_0_0= ruleprimaryExpr ) ) )
        // InternalGo.g:7253:3: ( (lv_primaryExpr_0_0= ruleprimaryExpr ) )
        {
        // InternalGo.g:7253:3: ( (lv_primaryExpr_0_0= ruleprimaryExpr ) )
        // InternalGo.g:7254:4: (lv_primaryExpr_0_0= ruleprimaryExpr )
        {
        // InternalGo.g:7254:4: (lv_primaryExpr_0_0= ruleprimaryExpr )
        // InternalGo.g:7255:5: lv_primaryExpr_0_0= ruleprimaryExpr
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_primaryExpr_0_0=ruleprimaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred160_InternalGo

    // Delegated rules

    public final boolean synpred150_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred160_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred160_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred156_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred156_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred119_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred119_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred148_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred148_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred118_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred118_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred78_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred78_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred152_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred152_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA23 dfa23 = new DFA23(this);
    protected DFA24 dfa24 = new DFA24(this);
    protected DFA30 dfa30 = new DFA30(this);
    protected DFA34 dfa34 = new DFA34(this);
    protected DFA38 dfa38 = new DFA38(this);
    protected DFA44 dfa44 = new DFA44(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA47 dfa47 = new DFA47(this);
    protected DFA51 dfa51 = new DFA51(this);
    protected DFA54 dfa54 = new DFA54(this);
    protected DFA58 dfa58 = new DFA58(this);
    protected DFA59 dfa59 = new DFA59(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA73 dfa73 = new DFA73(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA93 dfa93 = new DFA93(this);
    protected DFA108 dfa108 = new DFA108(this);
    protected DFA112 dfa112 = new DFA112(this);
    static final String dfa_1s = "\21\uffff";
    static final String dfa_2s = "\1\3\1\uffff\1\3\16\uffff";
    static final String dfa_3s = "\1\4\1\uffff\1\13\16\uffff";
    static final String dfa_4s = "\1\140\1\uffff\1\111\16\uffff";
    static final String dfa_5s = "\1\uffff\1\1\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\2";
    static final String dfa_6s = "\21\uffff}>";
    static final String[] dfa_7s = {
            "\1\2\7\3\40\uffff\1\3\2\uffff\1\3\1\uffff\1\3\1\1\2\3\1\1\1\3\1\1\1\12\1\uffff\16\3\2\uffff\1\5\1\6\1\7\1\10\1\11\1\17\1\13\1\uffff\1\14\2\uffff\1\15\1\16\1\uffff\1\4\1\3\1\uffff\3\3\1\uffff\2\3",
            "",
            "\1\3\40\uffff\1\3\2\uffff\1\3\1\uffff\1\3\1\uffff\2\3\3\uffff\1\3\1\uffff\17\3\1\20",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA23 extends DFA {

        public DFA23(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 23;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "1457:2: ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_labeledStmt_1_0= rulelabeledStmt ) ) | ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) | ( (lv_goStmt_3_0= rulegoStmt ) ) | ( (lv_returnStmt_4_0= rulereturnStmt ) ) | ( (lv_breakStmt_5_0= rulebreakStmt ) ) | ( (lv_continueStmt_6_0= rulecontinueStmt ) ) | ( (lv_gotoStmt_7_0= rulegotoStmt ) ) | ( (lv_fallthroughStmt_8_0= rulefallthroughStmt ) ) | ( (lv_block_9_0= ruleblock ) ) | ( (lv_ifStmt_10_0= ruleifStmt ) ) | ( (lv_switchStmt_11_0= ruleswitchStmt ) ) | ( (lv_selectStmt_12_0= ruleselectStmt ) ) | ( (lv_forStmt_13_0= ruleforStmt ) ) | ( (lv_deferStmt_14_0= ruledeferStmt ) ) )";
        }
    }
    static final String dfa_8s = "\47\uffff";
    static final String dfa_9s = "\1\27\46\uffff";
    static final String dfa_10s = "\1\4\26\0\20\uffff";
    static final String dfa_11s = "\1\140\26\0\20\uffff";
    static final String dfa_12s = "\27\uffff\1\2\2\uffff\1\3\1\uffff\1\4\7\uffff\1\6\1\1\1\5";
    static final String dfa_13s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\20\uffff}>";
    static final String[] dfa_14s = {
            "\1\11\1\5\1\44\1\1\1\2\1\3\1\4\1\21\40\uffff\1\27\2\uffff\1\13\1\uffff\1\20\1\uffff\2\34\1\uffff\1\12\1\uffff\1\27\1\uffff\1\17\2\32\1\22\1\23\1\34\1\25\1\14\4\34\1\26\1\34\21\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\1\24",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA24 extends DFA {

        public DFA24(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 24;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "1775:2: ( ( (lv_sendStmt_0_0= rulesendStmt ) ) | ( (lv_expressionStmt_1_0= ruleexpressionStmt ) ) | ( (lv_incDecStmt_2_0= ruleincDecStmt ) ) | ( (lv_assignment_3_0= ruleassignment ) ) | ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) ) | ( (lv_emptyStmt_5_0= ruleemptyStmt ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA24_1 = input.LA(1);

                         
                        int index24_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA24_2 = input.LA(1);

                         
                        int index24_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA24_3 = input.LA(1);

                         
                        int index24_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA24_4 = input.LA(1);

                         
                        int index24_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA24_5 = input.LA(1);

                         
                        int index24_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA24_6 = input.LA(1);

                         
                        int index24_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA24_7 = input.LA(1);

                         
                        int index24_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA24_8 = input.LA(1);

                         
                        int index24_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA24_9 = input.LA(1);

                         
                        int index24_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                        else if ( (synpred44_InternalGo()) ) {s = 38;}

                         
                        input.seek(index24_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA24_10 = input.LA(1);

                         
                        int index24_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA24_11 = input.LA(1);

                         
                        int index24_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA24_12 = input.LA(1);

                         
                        int index24_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA24_13 = input.LA(1);

                         
                        int index24_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA24_14 = input.LA(1);

                         
                        int index24_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA24_15 = input.LA(1);

                         
                        int index24_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA24_16 = input.LA(1);

                         
                        int index24_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA24_17 = input.LA(1);

                         
                        int index24_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA24_18 = input.LA(1);

                         
                        int index24_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA24_19 = input.LA(1);

                         
                        int index24_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA24_20 = input.LA(1);

                         
                        int index24_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA24_21 = input.LA(1);

                         
                        int index24_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA24_22 = input.LA(1);

                         
                        int index24_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred40_InternalGo()) ) {s = 37;}

                        else if ( (synpred41_InternalGo()) ) {s = 23;}

                        else if ( (synpred42_InternalGo()) ) {s = 26;}

                        else if ( (synpred43_InternalGo()) ) {s = 28;}

                         
                        input.seek(index24_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 24, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_15s = "\44\uffff";
    static final String dfa_16s = "\1\4\26\0\15\uffff";
    static final String dfa_17s = "\1\140\26\0\15\uffff";
    static final String dfa_18s = "\27\uffff\1\1\13\uffff\1\2";
    static final String dfa_19s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\15\uffff}>";
    static final String[] dfa_20s = {
            "\1\11\1\5\1\27\1\1\1\2\1\3\1\4\1\21\40\uffff\1\27\2\uffff\1\13\1\uffff\1\20\1\uffff\2\27\1\uffff\1\12\1\uffff\1\43\1\uffff\1\17\2\27\1\22\1\23\1\27\1\25\1\14\4\27\1\26\1\27\21\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\1\24",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA30 extends DFA {

        public DFA30(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 30;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "2565:3: ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA30_1 = input.LA(1);

                         
                        int index30_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA30_2 = input.LA(1);

                         
                        int index30_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA30_3 = input.LA(1);

                         
                        int index30_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA30_4 = input.LA(1);

                         
                        int index30_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA30_5 = input.LA(1);

                         
                        int index30_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA30_6 = input.LA(1);

                         
                        int index30_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA30_7 = input.LA(1);

                         
                        int index30_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA30_8 = input.LA(1);

                         
                        int index30_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA30_9 = input.LA(1);

                         
                        int index30_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA30_10 = input.LA(1);

                         
                        int index30_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA30_11 = input.LA(1);

                         
                        int index30_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA30_12 = input.LA(1);

                         
                        int index30_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA30_13 = input.LA(1);

                         
                        int index30_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA30_14 = input.LA(1);

                         
                        int index30_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA30_15 = input.LA(1);

                         
                        int index30_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA30_16 = input.LA(1);

                         
                        int index30_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA30_17 = input.LA(1);

                         
                        int index30_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA30_18 = input.LA(1);

                         
                        int index30_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA30_19 = input.LA(1);

                         
                        int index30_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA30_20 = input.LA(1);

                         
                        int index30_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA30_21 = input.LA(1);

                         
                        int index30_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA30_22 = input.LA(1);

                         
                        int index30_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index30_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 30, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA34 extends DFA {

        public DFA34(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 34;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "2756:3: ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA34_1 = input.LA(1);

                         
                        int index34_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA34_2 = input.LA(1);

                         
                        int index34_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA34_3 = input.LA(1);

                         
                        int index34_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA34_4 = input.LA(1);

                         
                        int index34_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA34_5 = input.LA(1);

                         
                        int index34_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA34_6 = input.LA(1);

                         
                        int index34_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA34_7 = input.LA(1);

                         
                        int index34_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA34_8 = input.LA(1);

                         
                        int index34_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA34_9 = input.LA(1);

                         
                        int index34_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA34_10 = input.LA(1);

                         
                        int index34_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA34_11 = input.LA(1);

                         
                        int index34_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA34_12 = input.LA(1);

                         
                        int index34_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA34_13 = input.LA(1);

                         
                        int index34_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA34_14 = input.LA(1);

                         
                        int index34_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA34_15 = input.LA(1);

                         
                        int index34_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA34_16 = input.LA(1);

                         
                        int index34_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA34_17 = input.LA(1);

                         
                        int index34_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA34_18 = input.LA(1);

                         
                        int index34_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA34_19 = input.LA(1);

                         
                        int index34_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA34_20 = input.LA(1);

                         
                        int index34_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA34_21 = input.LA(1);

                         
                        int index34_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA34_22 = input.LA(1);

                         
                        int index34_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred64_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index34_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 34, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_21s = "\1\4\20\0\23\uffff";
    static final String dfa_22s = "\1\140\20\0\23\uffff";
    static final String dfa_23s = "\21\uffff\1\1\21\uffff\1\2";
    static final String dfa_24s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\23\uffff}>";
    static final String[] dfa_25s = {
            "\1\11\1\5\1\21\1\1\1\2\1\3\1\4\1\21\40\uffff\1\21\2\uffff\1\13\1\uffff\1\20\1\uffff\2\21\1\uffff\1\12\3\uffff\1\17\6\21\1\14\6\21\21\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\1\21",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA38 extends DFA {

        public DFA38(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 38;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "2960:3: ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) otherlv_2= ';' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA38_1 = input.LA(1);

                         
                        int index38_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index38_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA38_2 = input.LA(1);

                         
                        int index38_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index38_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA38_3 = input.LA(1);

                         
                        int index38_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index38_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA38_4 = input.LA(1);

                         
                        int index38_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index38_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA38_5 = input.LA(1);

                         
                        int index38_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index38_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA38_6 = input.LA(1);

                         
                        int index38_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index38_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA38_7 = input.LA(1);

                         
                        int index38_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index38_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA38_8 = input.LA(1);

                         
                        int index38_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index38_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA38_9 = input.LA(1);

                         
                        int index38_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index38_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA38_10 = input.LA(1);

                         
                        int index38_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index38_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA38_11 = input.LA(1);

                         
                        int index38_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index38_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA38_12 = input.LA(1);

                         
                        int index38_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index38_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA38_13 = input.LA(1);

                         
                        int index38_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index38_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA38_14 = input.LA(1);

                         
                        int index38_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index38_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA38_15 = input.LA(1);

                         
                        int index38_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index38_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA38_16 = input.LA(1);

                         
                        int index38_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index38_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 38, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\34\uffff";
    static final String dfa_27s = "\1\27\33\uffff";
    static final String dfa_28s = "\1\4\26\0\5\uffff";
    static final String dfa_29s = "\1\140\26\0\5\uffff";
    static final String dfa_30s = "\27\uffff\1\2\3\uffff\1\1";
    static final String dfa_31s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\5\uffff}>";
    static final String[] dfa_32s = {
            "\1\11\1\5\1\uffff\1\1\1\2\1\3\1\4\1\21\43\uffff\1\13\1\uffff\1\20\1\uffff\2\27\1\uffff\1\12\3\uffff\1\17\2\uffff\1\22\1\23\1\uffff\1\25\1\14\4\uffff\1\26\2\uffff\1\27\17\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\1\24",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA44 extends DFA {

        public DFA44(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 44;
            this.eot = dfa_26;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "3403:4: ( ( (lv_sendStmt_1_0= rulesendStmt ) ) | ( (lv_recvStmt_2_0= rulerecvStmt ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA44_1 = input.LA(1);

                         
                        int index44_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA44_2 = input.LA(1);

                         
                        int index44_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA44_3 = input.LA(1);

                         
                        int index44_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA44_4 = input.LA(1);

                         
                        int index44_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA44_5 = input.LA(1);

                         
                        int index44_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA44_6 = input.LA(1);

                         
                        int index44_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA44_7 = input.LA(1);

                         
                        int index44_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA44_8 = input.LA(1);

                         
                        int index44_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA44_9 = input.LA(1);

                         
                        int index44_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA44_10 = input.LA(1);

                         
                        int index44_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA44_11 = input.LA(1);

                         
                        int index44_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA44_12 = input.LA(1);

                         
                        int index44_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA44_13 = input.LA(1);

                         
                        int index44_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA44_14 = input.LA(1);

                         
                        int index44_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA44_15 = input.LA(1);

                         
                        int index44_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA44_16 = input.LA(1);

                         
                        int index44_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA44_17 = input.LA(1);

                         
                        int index44_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA44_18 = input.LA(1);

                         
                        int index44_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA44_19 = input.LA(1);

                         
                        int index44_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA44_20 = input.LA(1);

                         
                        int index44_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA44_21 = input.LA(1);

                         
                        int index44_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA44_22 = input.LA(1);

                         
                        int index44_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index44_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 44, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_33s = "\1\31\33\uffff";
    static final String dfa_34s = "\1\4\21\0\2\uffff\5\0\3\uffff";
    static final String dfa_35s = "\1\140\21\0\2\uffff\5\0\3\uffff";
    static final String dfa_36s = "\22\uffff\1\1\6\uffff\1\3\1\uffff\1\2";
    static final String dfa_37s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\2\uffff\1\21\1\22\1\23\1\24\1\25\3\uffff}>";
    static final String[] dfa_38s = {
            "\1\11\1\5\1\uffff\1\1\1\2\1\3\1\4\1\21\43\uffff\1\13\1\uffff\1\20\1\uffff\2\22\1\uffff\1\12\3\uffff\1\17\2\uffff\1\24\1\25\1\uffff\1\27\1\14\4\uffff\1\30\2\uffff\1\31\17\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\1\26",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = dfa_26;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "3469:3: ( ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA46_1 = input.LA(1);

                         
                        int index46_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA46_2 = input.LA(1);

                         
                        int index46_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA46_3 = input.LA(1);

                         
                        int index46_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA46_4 = input.LA(1);

                         
                        int index46_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA46_5 = input.LA(1);

                         
                        int index46_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA46_6 = input.LA(1);

                         
                        int index46_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA46_7 = input.LA(1);

                         
                        int index46_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA46_8 = input.LA(1);

                         
                        int index46_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA46_9 = input.LA(1);

                         
                        int index46_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA46_10 = input.LA(1);

                         
                        int index46_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA46_11 = input.LA(1);

                         
                        int index46_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA46_12 = input.LA(1);

                         
                        int index46_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA46_13 = input.LA(1);

                         
                        int index46_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA46_14 = input.LA(1);

                         
                        int index46_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA46_15 = input.LA(1);

                         
                        int index46_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA46_16 = input.LA(1);

                         
                        int index46_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA46_17 = input.LA(1);

                         
                        int index46_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA46_20 = input.LA(1);

                         
                        int index46_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_20);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA46_21 = input.LA(1);

                         
                        int index46_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_21);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA46_22 = input.LA(1);

                         
                        int index46_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_22);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA46_23 = input.LA(1);

                         
                        int index46_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_23);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA46_24 = input.LA(1);

                         
                        int index46_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index46_24);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 46, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_39s = "\1\4\27\0\3\uffff\1\0\6\uffff\1\0\4\uffff";
    static final String dfa_40s = "\1\140\27\0\3\uffff\1\0\6\uffff\1\0\4\uffff";
    static final String dfa_41s = "\30\uffff\1\2\13\uffff\1\3\1\1\1\4";
    static final String dfa_42s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\3\uffff\1\27\6\uffff\1\30\4\uffff}>";
    static final String[] dfa_43s = {
            "\1\11\1\5\1\30\1\1\1\2\1\3\1\4\1\21\40\uffff\1\30\2\uffff\1\13\1\uffff\1\20\1\uffff\1\42\1\33\1\uffff\1\12\1\uffff\1\22\1\uffff\1\17\2\30\1\23\1\24\1\30\1\26\1\14\4\30\1\27\1\30\17\uffff\1\44\1\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\1\25",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[][] dfa_43 = unpackEncodedStringArray(dfa_43s);

    class DFA47 extends DFA {

        public DFA47(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 47;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "3564:3: ( ( (lv_expression_1_0= ruleexpression ) ) | ( (lv_forClause_2_0= ruleforClause ) ) | ( (lv_rangeClause_3_0= rulerangeClause ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA47_1 = input.LA(1);

                         
                        int index47_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA47_2 = input.LA(1);

                         
                        int index47_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA47_3 = input.LA(1);

                         
                        int index47_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA47_4 = input.LA(1);

                         
                        int index47_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA47_5 = input.LA(1);

                         
                        int index47_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA47_6 = input.LA(1);

                         
                        int index47_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA47_7 = input.LA(1);

                         
                        int index47_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA47_8 = input.LA(1);

                         
                        int index47_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA47_9 = input.LA(1);

                         
                        int index47_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA47_10 = input.LA(1);

                         
                        int index47_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA47_11 = input.LA(1);

                         
                        int index47_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA47_12 = input.LA(1);

                         
                        int index47_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA47_13 = input.LA(1);

                         
                        int index47_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA47_14 = input.LA(1);

                         
                        int index47_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA47_15 = input.LA(1);

                         
                        int index47_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA47_16 = input.LA(1);

                         
                        int index47_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA47_17 = input.LA(1);

                         
                        int index47_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA47_18 = input.LA(1);

                         
                        int index47_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index47_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA47_19 = input.LA(1);

                         
                        int index47_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA47_20 = input.LA(1);

                         
                        int index47_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA47_21 = input.LA(1);

                         
                        int index47_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA47_22 = input.LA(1);

                         
                        int index47_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA47_23 = input.LA(1);

                         
                        int index47_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 37;}

                        else if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA47_27 = input.LA(1);

                         
                        int index47_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_27);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA47_34 = input.LA(1);

                         
                        int index47_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 24;}

                        else if ( (synpred80_InternalGo()) ) {s = 36;}

                         
                        input.seek(index47_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 47, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_44s = "\7\uffff";
    static final String dfa_45s = "\1\4\1\uffff\1\13\1\uffff\1\4\1\uffff\1\13";
    static final String dfa_46s = "\1\140\1\uffff\1\110\1\uffff\1\140\1\uffff\1\110";
    static final String dfa_47s = "\1\uffff\1\1\1\uffff\1\3\1\uffff\1\2\1\uffff";
    static final String dfa_48s = "\7\uffff}>";
    static final String[] dfa_49s = {
            "\1\2\1\1\1\uffff\5\1\43\uffff\1\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\1\uffff\2\1\4\uffff\1\1\20\uffff\1\3\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1",
            "",
            "\1\1\43\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\4\3\uffff\1\1\17\uffff\1\5",
            "",
            "\1\6\1\1\1\uffff\5\1\43\uffff\1\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\1\uffff\2\1\4\uffff\1\1\22\uffff\1\1\1\uffff\3\1\1\uffff\2\1",
            "",
            "\1\1\43\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\4\3\uffff\1\1\17\uffff\1\5"
    };

    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[][] dfa_49 = unpackEncodedStringArray(dfa_49s);

    class DFA51 extends DFA {

        public DFA51(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 51;
            this.eot = dfa_44;
            this.eof = dfa_44;
            this.min = dfa_45;
            this.max = dfa_46;
            this.accept = dfa_47;
            this.special = dfa_48;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "3747:3: ( ( ( (lv_expressionList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_identifierList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )?";
        }
    }
    static final String dfa_50s = "\13\uffff";
    static final String dfa_51s = "\1\66\1\0\11\uffff";
    static final String dfa_52s = "\1\137\1\0\11\uffff";
    static final String dfa_53s = "\2\uffff\1\2\1\3\1\4\1\5\1\7\1\10\1\uffff\1\1\1\6";
    static final String dfa_54s = "\1\uffff\1\0\11\uffff}>";
    static final String[] dfa_55s = {
            "\1\4\3\uffff\1\7\6\uffff\1\3\27\uffff\1\1\1\uffff\1\5\1\6\1\7\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final char[] dfa_51 = DFA.unpackEncodedStringToUnsignedChars(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[][] dfa_55 = unpackEncodedStringArray(dfa_55s);

    class DFA54 extends DFA {

        public DFA54(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 54;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_51;
            this.max = dfa_52;
            this.accept = dfa_53;
            this.special = dfa_54;
            this.transition = dfa_55;
        }
        public String getDescription() {
            return "4014:2: ( ( (lv_arrayType_0_0= rulearrayType ) ) | ( (lv_structType_1_0= rulestructType ) ) | ( (lv_pointerType_2_0= rulepointerType ) ) | ( (lv_functionType_3_0= rulefunctionType ) ) | ( (lv_interfaceType_4_0= ruleinterfaceType ) ) | ( (lv_sliceType_5_0= rulesliceType ) ) | ( (lv_mapType_6_0= rulemapType ) ) | ( (lv_channelType_7_0= rulechannelType ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA54_1 = input.LA(1);

                         
                        int index54_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalGo()) ) {s = 9;}

                        else if ( (synpred94_InternalGo()) ) {s = 10;}

                         
                        input.seek(index54_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 54, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_56s = "\25\uffff";
    static final String dfa_57s = "\1\13\24\uffff";
    static final String dfa_58s = "\1\4\1\0\23\uffff";
    static final String dfa_59s = "\1\137\1\0\23\uffff";
    static final String dfa_60s = "\2\uffff\1\1\10\uffff\1\2\11\uffff";
    static final String dfa_61s = "\1\uffff\1\0\23\uffff}>";
    static final String[] dfa_62s = {
            "\1\2\1\13\46\uffff\1\13\2\uffff\1\1\1\13\2\uffff\2\13\1\uffff\1\2\1\uffff\1\13\1\uffff\1\2\6\uffff\1\2\7\uffff\1\13\17\uffff\1\2\1\13\3\2\1\13\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final char[] dfa_58 = DFA.unpackEncodedStringToUnsignedChars(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[][] dfa_62 = unpackEncodedStringArray(dfa_62s);

    class DFA58 extends DFA {

        public DFA58(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 58;
            this.eot = dfa_56;
            this.eof = dfa_57;
            this.min = dfa_58;
            this.max = dfa_59;
            this.accept = dfa_60;
            this.special = dfa_61;
            this.transition = dfa_62;
        }
        public String getDescription() {
            return "4734:3: ( (lv_result_1_0= ruleresult ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA58_1 = input.LA(1);

                         
                        int index58_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalGo()) ) {s = 2;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index58_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 58, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_63s = "\14\uffff";
    static final String dfa_64s = "\1\4\1\0\12\uffff";
    static final String dfa_65s = "\1\137\1\0\12\uffff";
    static final String dfa_66s = "\2\uffff\1\2\10\uffff\1\1";
    static final String dfa_67s = "\1\uffff\1\0\12\uffff}>";
    static final String[] dfa_68s = {
            "\1\2\52\uffff\1\1\6\uffff\1\2\3\uffff\1\2\6\uffff\1\2\27\uffff\1\2\1\uffff\3\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final char[] dfa_64 = DFA.unpackEncodedStringToUnsignedChars(dfa_64s);
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[][] dfa_68 = unpackEncodedStringArray(dfa_68s);

    class DFA59 extends DFA {

        public DFA59(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 59;
            this.eot = dfa_63;
            this.eof = dfa_63;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_68;
        }
        public String getDescription() {
            return "4771:2: ( ( (lv_parameters_0_0= ruleparameters ) ) | ( (lv_type_1_0= ruletype ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA59_1 = input.LA(1);

                         
                        int index59_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index59_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 59, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_69s = "\17\uffff";
    static final String dfa_70s = "\1\4\10\uffff\1\0\1\uffff\1\0\3\uffff";
    static final String dfa_71s = "\1\137\10\uffff\1\0\1\uffff\1\0\3\uffff";
    static final String dfa_72s = "\1\uffff\1\1\12\uffff\1\2\1\3\1\4";
    static final String dfa_73s = "\11\uffff\1\0\1\uffff\1\1\3\uffff}>";
    static final String[] dfa_74s = {
            "\1\11\1\1\1\uffff\4\1\44\uffff\1\13\6\uffff\1\1\42\uffff\1\1\2\uffff\1\1\2\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final char[] dfa_70 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[][] dfa_74 = unpackEncodedStringArray(dfa_74s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_69;
            this.eof = dfa_69;
            this.min = dfa_70;
            this.max = dfa_71;
            this.accept = dfa_72;
            this.special = dfa_73;
            this.transition = dfa_74;
        }
        public String getDescription() {
            return "5009:2: ( ( (lv_literal_0_0= ruleliteral ) ) | ( (lv_operandName_1_0= ruleoperandName ) ) | ( (lv_methodExpr_2_0= rulemethodExpr ) ) | (otherlv_3= '(' ( (lv_expression_4_0= ruleexpression ) ) otherlv_5= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_9 = input.LA(1);

                         
                        int index65_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalGo()) ) {s = 1;}

                        else if ( (synpred108_InternalGo()) ) {s = 12;}

                        else if ( (synpred109_InternalGo()) ) {s = 13;}

                         
                        input.seek(index65_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA65_11 = input.LA(1);

                         
                        int index65_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred109_InternalGo()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index65_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_75s = "\1\4\21\0\1\uffff\6\0\3\uffff";
    static final String dfa_76s = "\1\140\21\0\1\uffff\6\0\3\uffff";
    static final String dfa_77s = "\22\uffff\1\1\6\uffff\1\2\2\uffff";
    static final String dfa_78s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\uffff\1\21\1\22\1\23\1\24\1\25\1\26\3\uffff}>";
    static final String[] dfa_79s = {
            "\1\1\1\6\1\uffff\1\2\1\3\1\4\1\5\1\21\43\uffff\1\13\1\uffff\1\20\2\uffff\1\31\1\uffff\1\12\1\uffff\1\30\1\31\1\17\2\uffff\1\23\1\24\1\uffff\1\26\1\14\4\uffff\1\27\2\uffff\1\22\17\uffff\1\10\1\uffff\1\15\1\11\1\16\1\uffff\1\7\1\25",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[][] dfa_79 = unpackEncodedStringArray(dfa_79s);

    class DFA73 extends DFA {

        public DFA73(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 73;
            this.eot = dfa_26;
            this.eof = dfa_33;
            this.min = dfa_75;
            this.max = dfa_76;
            this.accept = dfa_77;
            this.special = dfa_78;
            this.transition = dfa_79;
        }
        public String getDescription() {
            return "5661:3: ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA73_1 = input.LA(1);

                         
                        int index73_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA73_2 = input.LA(1);

                         
                        int index73_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA73_3 = input.LA(1);

                         
                        int index73_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA73_4 = input.LA(1);

                         
                        int index73_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA73_5 = input.LA(1);

                         
                        int index73_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA73_6 = input.LA(1);

                         
                        int index73_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA73_7 = input.LA(1);

                         
                        int index73_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA73_8 = input.LA(1);

                         
                        int index73_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA73_9 = input.LA(1);

                         
                        int index73_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA73_10 = input.LA(1);

                         
                        int index73_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA73_11 = input.LA(1);

                         
                        int index73_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA73_12 = input.LA(1);

                         
                        int index73_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA73_13 = input.LA(1);

                         
                        int index73_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA73_14 = input.LA(1);

                         
                        int index73_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA73_15 = input.LA(1);

                         
                        int index73_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA73_16 = input.LA(1);

                         
                        int index73_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA73_17 = input.LA(1);

                         
                        int index73_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA73_19 = input.LA(1);

                         
                        int index73_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA73_20 = input.LA(1);

                         
                        int index73_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA73_21 = input.LA(1);

                         
                        int index73_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA73_22 = input.LA(1);

                         
                        int index73_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA73_23 = input.LA(1);

                         
                        int index73_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA73_24 = input.LA(1);

                         
                        int index73_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index73_24);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 73, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_80s = "\55\uffff";
    static final String dfa_81s = "\1\21\54\uffff";
    static final String dfa_82s = "\1\4\6\uffff\1\0\3\uffff\2\0\2\uffff\31\0\5\uffff";
    static final String dfa_83s = "\1\137\6\uffff\1\0\3\uffff\2\0\2\uffff\31\0\5\uffff";
    static final String dfa_84s = "\1\uffff\1\1\46\uffff\1\2\1\3\1\4\1\5\1\6";
    static final String dfa_85s = "\7\uffff\1\0\3\uffff\1\1\1\2\2\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\5\uffff}>";
    static final String[] dfa_86s = {
            "\2\1\1\uffff\4\1\1\22\40\uffff\1\24\2\uffff\1\13\1\43\1\20\1\uffff\1\37\1\23\1\uffff\1\1\1\uffff\1\40\1\47\1\17\1\44\1\45\1\25\1\26\1\27\1\30\1\14\1\31\1\32\1\33\1\34\1\35\1\36\1\uffff\1\41\17\uffff\1\7\1\46\3\1\1\42\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final char[] dfa_83 = DFA.unpackEncodedStringToUnsignedChars(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[][] dfa_86 = unpackEncodedStringArray(dfa_86s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_80;
            this.eof = dfa_81;
            this.min = dfa_82;
            this.max = dfa_83;
            this.accept = dfa_84;
            this.special = dfa_85;
            this.transition = dfa_86;
        }
        public String getDescription() {
            return "6073:2: ( ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) ) | ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) ) | ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) ) | ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) ) | ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) ) | ( (lv_primaryExprArguments_6_0= ruleprimaryExprArguments ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_7 = input.LA(1);

                         
                        int index81_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA81_11 = input.LA(1);

                         
                        int index81_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA81_12 = input.LA(1);

                         
                        int index81_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA81_15 = input.LA(1);

                         
                        int index81_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalGo()) ) {s = 1;}

                        else if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_15);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA81_16 = input.LA(1);

                         
                        int index81_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_16);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA81_17 = input.LA(1);

                         
                        int index81_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_17);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA81_18 = input.LA(1);

                         
                        int index81_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_18);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA81_19 = input.LA(1);

                         
                        int index81_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_19);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA81_20 = input.LA(1);

                         
                        int index81_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_20);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA81_21 = input.LA(1);

                         
                        int index81_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_21);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA81_22 = input.LA(1);

                         
                        int index81_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_22);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA81_23 = input.LA(1);

                         
                        int index81_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_23);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA81_24 = input.LA(1);

                         
                        int index81_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_24);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA81_25 = input.LA(1);

                         
                        int index81_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_25);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA81_26 = input.LA(1);

                         
                        int index81_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_26);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA81_27 = input.LA(1);

                         
                        int index81_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_27);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA81_28 = input.LA(1);

                         
                        int index81_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_28);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA81_29 = input.LA(1);

                         
                        int index81_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_29);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA81_30 = input.LA(1);

                         
                        int index81_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_30);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA81_31 = input.LA(1);

                         
                        int index81_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_31);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA81_32 = input.LA(1);

                         
                        int index81_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_32);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA81_33 = input.LA(1);

                         
                        int index81_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_33);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA81_34 = input.LA(1);

                         
                        int index81_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_34);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA81_35 = input.LA(1);

                         
                        int index81_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_35);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA81_36 = input.LA(1);

                         
                        int index81_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_36);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA81_37 = input.LA(1);

                         
                        int index81_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_37);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA81_38 = input.LA(1);

                         
                        int index81_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_38);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA81_39 = input.LA(1);

                         
                        int index81_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 40;}

                        else if ( (synpred136_InternalGo()) ) {s = 41;}

                        else if ( (synpred137_InternalGo()) ) {s = 42;}

                        else if ( (synpred138_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index81_39);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_87s = "\20\uffff";
    static final String dfa_88s = "\1\4\5\uffff\6\0\4\uffff";
    static final String dfa_89s = "\1\137\5\uffff\6\0\4\uffff";
    static final String dfa_90s = "\1\uffff\1\1\12\uffff\1\2\3\uffff";
    static final String dfa_91s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\4\uffff}>";
    static final String[] dfa_92s = {
            "\1\11\1\1\1\uffff\4\1\44\uffff\1\13\6\uffff\1\12\3\uffff\1\14\6\uffff\1\14\27\uffff\1\7\1\uffff\1\14\1\10\1\14\1\uffff\1\6",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final char[] dfa_89 = DFA.unpackEncodedStringToUnsignedChars(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[] dfa_91 = DFA.unpackEncodedString(dfa_91s);
    static final short[][] dfa_92 = unpackEncodedStringArray(dfa_92s);

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_87;
            this.eof = dfa_87;
            this.min = dfa_88;
            this.max = dfa_89;
            this.accept = dfa_90;
            this.special = dfa_91;
            this.transition = dfa_92;
        }
        public String getDescription() {
            return "6074:3: ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA80_6 = input.LA(1);

                         
                        int index80_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index80_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA80_7 = input.LA(1);

                         
                        int index80_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index80_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA80_8 = input.LA(1);

                         
                        int index80_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index80_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA80_9 = input.LA(1);

                         
                        int index80_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index80_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA80_10 = input.LA(1);

                         
                        int index80_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index80_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA80_11 = input.LA(1);

                         
                        int index80_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index80_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 80, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_93s = "\32\uffff";
    static final String dfa_94s = "\1\4\27\0\2\uffff";
    static final String dfa_95s = "\1\140\27\0\2\uffff";
    static final String dfa_96s = "\30\uffff\1\1\1\2";
    static final String dfa_97s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\2\uffff}>";
    static final String[] dfa_98s = {
            "\1\11\1\5\1\uffff\1\1\1\2\1\3\1\4\1\21\43\uffff\1\13\1\uffff\1\20\4\uffff\1\12\3\uffff\1\17\2\uffff\1\23\1\24\1\uffff\1\26\1\14\4\uffff\1\27\2\uffff\1\22\17\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\1\25",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final char[] dfa_94 = DFA.unpackEncodedStringToUnsignedChars(dfa_94s);
    static final char[] dfa_95 = DFA.unpackEncodedStringToUnsignedChars(dfa_95s);
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[] dfa_97 = DFA.unpackEncodedString(dfa_97s);
    static final short[][] dfa_98 = unpackEncodedStringArray(dfa_98s);

    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = dfa_93;
            this.eof = dfa_93;
            this.min = dfa_94;
            this.max = dfa_95;
            this.accept = dfa_96;
            this.special = dfa_97;
            this.transition = dfa_98;
        }
        public String getDescription() {
            return "6710:3: ( ( ( (lv_expression_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expression_3_0= ruleexpression ) )? ) | ( ( (lv_expression_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expression_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expression_8_0= ruleexpression ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA91_1 = input.LA(1);

                         
                        int index91_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA91_2 = input.LA(1);

                         
                        int index91_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA91_3 = input.LA(1);

                         
                        int index91_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA91_4 = input.LA(1);

                         
                        int index91_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA91_5 = input.LA(1);

                         
                        int index91_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA91_6 = input.LA(1);

                         
                        int index91_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA91_7 = input.LA(1);

                         
                        int index91_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA91_8 = input.LA(1);

                         
                        int index91_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA91_9 = input.LA(1);

                         
                        int index91_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA91_10 = input.LA(1);

                         
                        int index91_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA91_11 = input.LA(1);

                         
                        int index91_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA91_12 = input.LA(1);

                         
                        int index91_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA91_13 = input.LA(1);

                         
                        int index91_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA91_14 = input.LA(1);

                         
                        int index91_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA91_15 = input.LA(1);

                         
                        int index91_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA91_16 = input.LA(1);

                         
                        int index91_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA91_17 = input.LA(1);

                         
                        int index91_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA91_18 = input.LA(1);

                         
                        int index91_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA91_19 = input.LA(1);

                         
                        int index91_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA91_20 = input.LA(1);

                         
                        int index91_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA91_21 = input.LA(1);

                         
                        int index91_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA91_22 = input.LA(1);

                         
                        int index91_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA91_23 = input.LA(1);

                         
                        int index91_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index91_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 91, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_99s = "\33\uffff";
    static final String dfa_100s = "\1\4\5\uffff\12\0\13\uffff";
    static final String dfa_101s = "\1\140\5\uffff\12\0\13\uffff";
    static final String dfa_102s = "\1\uffff\1\1\30\uffff\1\2";
    static final String dfa_103s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\13\uffff}>";
    static final String[] dfa_104s = {
            "\1\11\1\1\1\uffff\5\1\43\uffff\1\13\2\1\2\uffff\1\1\1\uffff\1\12\3\uffff\1\17\2\uffff\2\1\1\uffff\1\1\1\14\4\uffff\1\1\22\uffff\1\7\1\uffff\1\15\1\10\1\16\1\1\1\6\1\1",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final char[] dfa_100 = DFA.unpackEncodedStringToUnsignedChars(dfa_100s);
    static final char[] dfa_101 = DFA.unpackEncodedStringToUnsignedChars(dfa_101s);
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final short[][] dfa_104 = unpackEncodedStringArray(dfa_104s);

    class DFA93 extends DFA {

        public DFA93(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 93;
            this.eot = dfa_99;
            this.eof = dfa_99;
            this.min = dfa_100;
            this.max = dfa_101;
            this.accept = dfa_102;
            this.special = dfa_103;
            this.transition = dfa_104;
        }
        public String getDescription() {
            return "6902:4: ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA93_6 = input.LA(1);

                         
                        int index93_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index93_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA93_7 = input.LA(1);

                         
                        int index93_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index93_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA93_8 = input.LA(1);

                         
                        int index93_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index93_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA93_9 = input.LA(1);

                         
                        int index93_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index93_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA93_10 = input.LA(1);

                         
                        int index93_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index93_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA93_11 = input.LA(1);

                         
                        int index93_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index93_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA93_12 = input.LA(1);

                         
                        int index93_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index93_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA93_13 = input.LA(1);

                         
                        int index93_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index93_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA93_14 = input.LA(1);

                         
                        int index93_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index93_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA93_15 = input.LA(1);

                         
                        int index93_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index93_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 93, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA108 extends DFA {

        public DFA108(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 108;
            this.eot = dfa_87;
            this.eof = dfa_87;
            this.min = dfa_88;
            this.max = dfa_89;
            this.accept = dfa_90;
            this.special = dfa_91;
            this.transition = dfa_92;
        }
        public String getDescription() {
            return "6074:3: ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA108_6 = input.LA(1);

                         
                        int index108_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index108_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA108_7 = input.LA(1);

                         
                        int index108_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index108_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA108_8 = input.LA(1);

                         
                        int index108_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index108_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA108_9 = input.LA(1);

                         
                        int index108_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index108_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA108_10 = input.LA(1);

                         
                        int index108_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index108_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA108_11 = input.LA(1);

                         
                        int index108_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index108_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 108, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_105s = "\1\1\32\uffff";
    static final String[] dfa_106s = {
            "\1\11\1\1\1\uffff\5\1\43\uffff\1\13\1\uffff\1\1\2\uffff\1\1\1\uffff\1\12\3\uffff\1\17\2\uffff\2\1\1\uffff\1\1\1\14\4\uffff\1\1\22\uffff\1\7\1\uffff\1\15\1\10\1\16\1\1\1\6\1\1",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final short[][] dfa_106 = unpackEncodedStringArray(dfa_106s);

    class DFA112 extends DFA {

        public DFA112(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 112;
            this.eot = dfa_99;
            this.eof = dfa_105;
            this.min = dfa_100;
            this.max = dfa_101;
            this.accept = dfa_102;
            this.special = dfa_103;
            this.transition = dfa_106;
        }
        public String getDescription() {
            return "6902:4: ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA112_6 = input.LA(1);

                         
                        int index112_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index112_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA112_7 = input.LA(1);

                         
                        int index112_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index112_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA112_8 = input.LA(1);

                         
                        int index112_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index112_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA112_9 = input.LA(1);

                         
                        int index112_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index112_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA112_10 = input.LA(1);

                         
                        int index112_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index112_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA112_11 = input.LA(1);

                         
                        int index112_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index112_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA112_12 = input.LA(1);

                         
                        int index112_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index112_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA112_13 = input.LA(1);

                         
                        int index112_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index112_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA112_14 = input.LA(1);

                         
                        int index112_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index112_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA112_15 = input.LA(1);

                         
                        int index112_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index112_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 112, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x00E4400000000002L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x00E4000000000002L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0002800000000030L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0003000000000030L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0002000000000030L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000800000000010L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0001000000000010L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0448800000000012L,0x00000000BA000002L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x64428000000007B0L,0x00000001BA000043L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0010000000000002L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0440800000000010L,0x00000000BA000002L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0448800000000010L,0x00000000BA000002L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0008000000000002L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x67E68000000007F0L,0x00000001BB65FC43L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x65E68000000007F2L,0x00000001BB65FC43L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x1800000000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0xE008000000000000L,0x00000000000000FFL});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x65E68000000007F0L,0x00000001BB65FC43L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x64428000000007B2L,0x00000001BA000043L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x64428000000007F0L,0x00000001BA000043L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000002L,0x0000000000020000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0100000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x65428000000007F0L,0x00000001BA000043L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x65428000000007B0L,0x00000001BA000043L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0200000000000000L,0x0000000000180000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x04428000000007B0L,0x00000000BA000002L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x65429000000007F0L,0x00000001BA800043L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x64429000000007B0L,0x00000001BA000043L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x64428000000007F2L,0x00000001BA000043L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0200000000000010L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0440800000000012L,0x00000000BA000002L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0441800000000010L,0x00000000FA000002L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0011000000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0440800000000010L,0x00000000FA000002L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x67428000000007B0L,0x00000001BA000043L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0210000000000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0200000000000010L,0x0000000000000002L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0002800000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x64428000000007B0L,0x00000001BA000243L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x64428000000007B0L,0x00000001BE000043L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x64438000000007B0L,0x00000001BA000043L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0011000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0010000000000002L,0x0000000040000000L});

}