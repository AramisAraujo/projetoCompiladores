package org.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.GoGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalGoParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_IDENTIFIER", "RULE_STRING_LIT", "RULE_WS", "RULE_INT_LIT", "RULE_FLOAT_LIT", "RULE_IMAGINARY_LIT", "RULE_RUNE_LIT", "RULE_BINARY_OP", "RULE_LETTER", "RULE_DECIMAL_DIGIT", "RULE_REL_OP", "RULE_ADD_OP", "RULE_MUL_OP", "RULE_UNARY_OP", "RULE_DECIMAL_LIT", "RULE_OCTAL_LIT", "RULE_HEX_LIT", "RULE_OCTAL_DIGIT", "RULE_HEX_DIGIT", "RULE_DECIMALS", "RULE_EXPONENT", "RULE_UNICODE_VALUE", "RULE_BYTE_VALUE", "RULE_UNICODE_CHAR", "RULE_LITTLE_U_VALUE", "RULE_BIG_U_VALUE", "RULE_ESCAPED_CHAR", "RULE_OCTAL_BYTE_VALUE", "RULE_HEX_BYTE_VALUE", "RULE_RAW_STRING_LIT", "RULE_INTERPRETED_STRING_LIT", "RULE_NEWLINE", "RULE_UNICODE_LETTER", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_ANY_OTHER", "'package'", "'import'", "'('", "')'", "'.'", "'const'", "'='", "','", "'type'", "'func'", "'var'", "'{'", "'}'", "'<-'", "'++'", "'--'", "'+'", "'-'", "'|'", "'^'", "'*'", "'/'", "'%'", "'<<'", "'>>'", "'&'", "'&^'", "':='", "':'", "'return'", "'break'", "'continue'", "'goto'", "'fallthrough'", "'defer'", "'if'", "'else'", "'switch'", "'case'", "'default'", "'select'", "'for'", "'range'", "'go'", "'['", "']'", "'interface'", "'map'", "'chan'", "'...'", "'struct'", "'!'", "';'"
    };
    public static final int T__50=50;
    public static final int RULE_DECIMAL_DIGIT=13;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=37;
    public static final int RULE_INT=38;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=40;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int RULE_DECIMALS=23;
    public static final int RULE_NEWLINE=35;
    public static final int RULE_BIG_U_VALUE=29;
    public static final int RULE_ESCAPED_CHAR=30;
    public static final int RULE_BYTE_VALUE=26;
    public static final int RULE_UNICODE_LETTER=36;
    public static final int RULE_UNICODE_CHAR=27;
    public static final int RULE_OCTAL_DIGIT=21;
    public static final int RULE_LETTER=12;
    public static final int RULE_EXPONENT=24;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_RAW_STRING_LIT=33;
    public static final int T__44=44;
    public static final int RULE_UNARY_OP=17;
    public static final int T__45=45;
    public static final int RULE_HEX_DIGIT=22;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int RULE_RUNE_LIT=10;
    public static final int RULE_DECIMAL_LIT=18;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__90=90;
    public static final int RULE_BINARY_OP=11;
    public static final int T__95=95;
    public static final int RULE_IMAGINARY_LIT=9;
    public static final int RULE_STRING_LIT=5;
    public static final int RULE_INTERPRETED_STRING_LIT=34;
    public static final int RULE_UNICODE_VALUE=25;
    public static final int RULE_LITTLE_U_VALUE=28;
    public static final int RULE_HEX_BYTE_VALUE=32;
    public static final int RULE_OCTAL_BYTE_VALUE=31;
    public static final int RULE_MUL_OP=16;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_IDENTIFIER=4;
    public static final int RULE_STRING=39;
    public static final int RULE_SL_COMMENT=41;
    public static final int T__77=77;
    public static final int RULE_HEX_LIT=20;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int RULE_ADD_OP=15;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_WS=6;
    public static final int RULE_ANY_OTHER=42;
    public static final int RULE_OCTAL_LIT=19;
    public static final int RULE_FLOAT_LIT=8;
    public static final int RULE_INT_LIT=7;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int RULE_REL_OP=14;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalGoParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalGoParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalGoParser.tokenNames; }
    public String getGrammarFileName() { return "InternalGo.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private GoGrammarAccess grammarAccess;

        public InternalGoParser(TokenStream input, GoGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected GoGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalGo.g:70:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalGo.g:70:46: (iv_ruleModel= ruleModel EOF )
            // InternalGo.g:71:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalGo.g:77:1: ruleModel returns [EObject current=null] : ( (lv_greetings_0_0= rulesourceFile ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_greetings_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:83:2: ( ( (lv_greetings_0_0= rulesourceFile ) ) )
            // InternalGo.g:84:2: ( (lv_greetings_0_0= rulesourceFile ) )
            {
            // InternalGo.g:84:2: ( (lv_greetings_0_0= rulesourceFile ) )
            // InternalGo.g:85:3: (lv_greetings_0_0= rulesourceFile )
            {
            // InternalGo.g:85:3: (lv_greetings_0_0= rulesourceFile )
            // InternalGo.g:86:4: lv_greetings_0_0= rulesourceFile
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getModelAccess().getGreetingsSourceFileParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_greetings_0_0=rulesourceFile();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getModelRule());
              				}
              				add(
              					current,
              					"greetings",
              					lv_greetings_0_0,
              					"org.xtext.Go.sourceFile");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRulesourceFile"
    // InternalGo.g:106:1: entryRulesourceFile returns [EObject current=null] : iv_rulesourceFile= rulesourceFile EOF ;
    public final EObject entryRulesourceFile() throws RecognitionException {
        EObject current = null;

        EObject iv_rulesourceFile = null;


        try {
            // InternalGo.g:106:51: (iv_rulesourceFile= rulesourceFile EOF )
            // InternalGo.g:107:2: iv_rulesourceFile= rulesourceFile EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSourceFileRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulesourceFile=rulesourceFile();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesourceFile; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulesourceFile"


    // $ANTLR start "rulesourceFile"
    // InternalGo.g:113:1: rulesourceFile returns [EObject current=null] : ( ( (lv_package_0_0= rulepackageClause ) ) ( ruleeos )? ( ( (lv_imports_2_0= ruleimportDecl ) ) ( ruleeos )? )* ( ( (lv_topLevelDecls_4_0= ruletopLevelDecl ) ) ruleeos )* ) ;
    public final EObject rulesourceFile() throws RecognitionException {
        EObject current = null;

        EObject lv_package_0_0 = null;

        EObject lv_imports_2_0 = null;

        EObject lv_topLevelDecls_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:119:2: ( ( ( (lv_package_0_0= rulepackageClause ) ) ( ruleeos )? ( ( (lv_imports_2_0= ruleimportDecl ) ) ( ruleeos )? )* ( ( (lv_topLevelDecls_4_0= ruletopLevelDecl ) ) ruleeos )* ) )
            // InternalGo.g:120:2: ( ( (lv_package_0_0= rulepackageClause ) ) ( ruleeos )? ( ( (lv_imports_2_0= ruleimportDecl ) ) ( ruleeos )? )* ( ( (lv_topLevelDecls_4_0= ruletopLevelDecl ) ) ruleeos )* )
            {
            // InternalGo.g:120:2: ( ( (lv_package_0_0= rulepackageClause ) ) ( ruleeos )? ( ( (lv_imports_2_0= ruleimportDecl ) ) ( ruleeos )? )* ( ( (lv_topLevelDecls_4_0= ruletopLevelDecl ) ) ruleeos )* )
            // InternalGo.g:121:3: ( (lv_package_0_0= rulepackageClause ) ) ( ruleeos )? ( ( (lv_imports_2_0= ruleimportDecl ) ) ( ruleeos )? )* ( ( (lv_topLevelDecls_4_0= ruletopLevelDecl ) ) ruleeos )*
            {
            // InternalGo.g:121:3: ( (lv_package_0_0= rulepackageClause ) )
            // InternalGo.g:122:4: (lv_package_0_0= rulepackageClause )
            {
            // InternalGo.g:122:4: (lv_package_0_0= rulepackageClause )
            // InternalGo.g:123:5: lv_package_0_0= rulepackageClause
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSourceFileAccess().getPackagePackageClauseParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_package_0_0=rulepackageClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSourceFileRule());
              					}
              					set(
              						current,
              						"package",
              						lv_package_0_0,
              						"org.xtext.Go.packageClause");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:140:3: ( ruleeos )?
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==95) ) {
                alt1=1;
            }
            switch (alt1) {
                case 1 :
                    // InternalGo.g:141:4: ruleeos
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSourceFileAccess().getEosParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_4);
                    ruleeos();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:152:3: ( ( (lv_imports_2_0= ruleimportDecl ) ) ( ruleeos )? )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==44) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalGo.g:153:4: ( (lv_imports_2_0= ruleimportDecl ) ) ( ruleeos )?
            	    {
            	    // InternalGo.g:153:4: ( (lv_imports_2_0= ruleimportDecl ) )
            	    // InternalGo.g:154:5: (lv_imports_2_0= ruleimportDecl )
            	    {
            	    // InternalGo.g:154:5: (lv_imports_2_0= ruleimportDecl )
            	    // InternalGo.g:155:6: lv_imports_2_0= ruleimportDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSourceFileAccess().getImportsImportDeclParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_imports_2_0=ruleimportDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSourceFileRule());
            	      						}
            	      						add(
            	      							current,
            	      							"imports",
            	      							lv_imports_2_0,
            	      							"org.xtext.Go.importDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalGo.g:172:4: ( ruleeos )?
            	    int alt2=2;
            	    int LA2_0 = input.LA(1);

            	    if ( (LA2_0==95) ) {
            	        alt2=1;
            	    }
            	    switch (alt2) {
            	        case 1 :
            	            // InternalGo.g:173:5: ruleeos
            	            {
            	            if ( state.backtracking==0 ) {

            	              					/* */
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newCompositeNode(grammarAccess.getSourceFileAccess().getEosParserRuleCall_2_1());
            	              				
            	            }
            	            pushFollow(FOLLOW_4);
            	            ruleeos();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					afterParserOrEnumRuleCall();
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            // InternalGo.g:185:3: ( ( (lv_topLevelDecls_4_0= ruletopLevelDecl ) ) ruleeos )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==48||(LA4_0>=51 && LA4_0<=53)) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // InternalGo.g:186:4: ( (lv_topLevelDecls_4_0= ruletopLevelDecl ) ) ruleeos
            	    {
            	    // InternalGo.g:186:4: ( (lv_topLevelDecls_4_0= ruletopLevelDecl ) )
            	    // InternalGo.g:187:5: (lv_topLevelDecls_4_0= ruletopLevelDecl )
            	    {
            	    // InternalGo.g:187:5: (lv_topLevelDecls_4_0= ruletopLevelDecl )
            	    // InternalGo.g:188:6: lv_topLevelDecls_4_0= ruletopLevelDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSourceFileAccess().getTopLevelDeclsTopLevelDeclParserRuleCall_3_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_topLevelDecls_4_0=ruletopLevelDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSourceFileRule());
            	      						}
            	      						add(
            	      							current,
            	      							"topLevelDecls",
            	      							lv_topLevelDecls_4_0,
            	      							"org.xtext.Go.topLevelDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      				/* */
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getSourceFileAccess().getEosParserRuleCall_3_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_6);
            	    ruleeos();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulesourceFile"


    // $ANTLR start "entryRulepackageClause"
    // InternalGo.g:220:1: entryRulepackageClause returns [EObject current=null] : iv_rulepackageClause= rulepackageClause EOF ;
    public final EObject entryRulepackageClause() throws RecognitionException {
        EObject current = null;

        EObject iv_rulepackageClause = null;


        try {
            // InternalGo.g:220:54: (iv_rulepackageClause= rulepackageClause EOF )
            // InternalGo.g:221:2: iv_rulepackageClause= rulepackageClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulepackageClause=rulepackageClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulepackageClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulepackageClause"


    // $ANTLR start "rulepackageClause"
    // InternalGo.g:227:1: rulepackageClause returns [EObject current=null] : (otherlv_0= 'package' ( (lv_packageName_1_0= RULE_IDENTIFIER ) ) ) ;
    public final EObject rulepackageClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_packageName_1_0=null;


        	enterRule();

        try {
            // InternalGo.g:233:2: ( (otherlv_0= 'package' ( (lv_packageName_1_0= RULE_IDENTIFIER ) ) ) )
            // InternalGo.g:234:2: (otherlv_0= 'package' ( (lv_packageName_1_0= RULE_IDENTIFIER ) ) )
            {
            // InternalGo.g:234:2: (otherlv_0= 'package' ( (lv_packageName_1_0= RULE_IDENTIFIER ) ) )
            // InternalGo.g:235:3: otherlv_0= 'package' ( (lv_packageName_1_0= RULE_IDENTIFIER ) )
            {
            otherlv_0=(Token)match(input,43,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPackageClauseAccess().getPackageKeyword_0());
              		
            }
            // InternalGo.g:239:3: ( (lv_packageName_1_0= RULE_IDENTIFIER ) )
            // InternalGo.g:240:4: (lv_packageName_1_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:240:4: (lv_packageName_1_0= RULE_IDENTIFIER )
            // InternalGo.g:241:5: lv_packageName_1_0= RULE_IDENTIFIER
            {
            lv_packageName_1_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_packageName_1_0, grammarAccess.getPackageClauseAccess().getPackageNameIDENTIFIERTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPackageClauseRule());
              					}
              					setWithLastConsumed(
              						current,
              						"packageName",
              						lv_packageName_1_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulepackageClause"


    // $ANTLR start "entryRuleimportDecl"
    // InternalGo.g:261:1: entryRuleimportDecl returns [EObject current=null] : iv_ruleimportDecl= ruleimportDecl EOF ;
    public final EObject entryRuleimportDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleimportDecl = null;


        try {
            // InternalGo.g:261:51: (iv_ruleimportDecl= ruleimportDecl EOF )
            // InternalGo.g:262:2: iv_ruleimportDecl= ruleimportDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleimportDecl=ruleimportDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleimportDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleimportDecl"


    // $ANTLR start "ruleimportDecl"
    // InternalGo.g:268:1: ruleimportDecl returns [EObject current=null] : (otherlv_0= 'import' ( ( (lv_specs_1_0= ruleimportSpec ) ) | (otherlv_2= '(' ( ( (lv_specs_3_0= ruleimportSpec ) ) ruleeos )* otherlv_5= ')' ) ) ) ;
    public final EObject ruleimportDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_specs_1_0 = null;

        EObject lv_specs_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:274:2: ( (otherlv_0= 'import' ( ( (lv_specs_1_0= ruleimportSpec ) ) | (otherlv_2= '(' ( ( (lv_specs_3_0= ruleimportSpec ) ) ruleeos )* otherlv_5= ')' ) ) ) )
            // InternalGo.g:275:2: (otherlv_0= 'import' ( ( (lv_specs_1_0= ruleimportSpec ) ) | (otherlv_2= '(' ( ( (lv_specs_3_0= ruleimportSpec ) ) ruleeos )* otherlv_5= ')' ) ) )
            {
            // InternalGo.g:275:2: (otherlv_0= 'import' ( ( (lv_specs_1_0= ruleimportSpec ) ) | (otherlv_2= '(' ( ( (lv_specs_3_0= ruleimportSpec ) ) ruleeos )* otherlv_5= ')' ) ) )
            // InternalGo.g:276:3: otherlv_0= 'import' ( ( (lv_specs_1_0= ruleimportSpec ) ) | (otherlv_2= '(' ( ( (lv_specs_3_0= ruleimportSpec ) ) ruleeos )* otherlv_5= ')' ) )
            {
            otherlv_0=(Token)match(input,44,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getImportDeclAccess().getImportKeyword_0());
              		
            }
            // InternalGo.g:280:3: ( ( (lv_specs_1_0= ruleimportSpec ) ) | (otherlv_2= '(' ( ( (lv_specs_3_0= ruleimportSpec ) ) ruleeos )* otherlv_5= ')' ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( ((LA6_0>=RULE_IDENTIFIER && LA6_0<=RULE_STRING_LIT)||LA6_0==47) ) {
                alt6=1;
            }
            else if ( (LA6_0==45) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalGo.g:281:4: ( (lv_specs_1_0= ruleimportSpec ) )
                    {
                    // InternalGo.g:281:4: ( (lv_specs_1_0= ruleimportSpec ) )
                    // InternalGo.g:282:5: (lv_specs_1_0= ruleimportSpec )
                    {
                    // InternalGo.g:282:5: (lv_specs_1_0= ruleimportSpec )
                    // InternalGo.g:283:6: lv_specs_1_0= ruleimportSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImportDeclAccess().getSpecsImportSpecParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_specs_1_0=ruleimportSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImportDeclRule());
                      						}
                      						add(
                      							current,
                      							"specs",
                      							lv_specs_1_0,
                      							"org.xtext.Go.importSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:301:4: (otherlv_2= '(' ( ( (lv_specs_3_0= ruleimportSpec ) ) ruleeos )* otherlv_5= ')' )
                    {
                    // InternalGo.g:301:4: (otherlv_2= '(' ( ( (lv_specs_3_0= ruleimportSpec ) ) ruleeos )* otherlv_5= ')' )
                    // InternalGo.g:302:5: otherlv_2= '(' ( ( (lv_specs_3_0= ruleimportSpec ) ) ruleeos )* otherlv_5= ')'
                    {
                    otherlv_2=(Token)match(input,45,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_1_1_0());
                      				
                    }
                    // InternalGo.g:306:5: ( ( (lv_specs_3_0= ruleimportSpec ) ) ruleeos )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( ((LA5_0>=RULE_IDENTIFIER && LA5_0<=RULE_STRING_LIT)||LA5_0==47) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalGo.g:307:6: ( (lv_specs_3_0= ruleimportSpec ) ) ruleeos
                    	    {
                    	    // InternalGo.g:307:6: ( (lv_specs_3_0= ruleimportSpec ) )
                    	    // InternalGo.g:308:7: (lv_specs_3_0= ruleimportSpec )
                    	    {
                    	    // InternalGo.g:308:7: (lv_specs_3_0= ruleimportSpec )
                    	    // InternalGo.g:309:8: lv_specs_3_0= ruleimportSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getImportDeclAccess().getSpecsImportSpecParserRuleCall_1_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_5);
                    	    lv_specs_3_0=ruleimportSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getImportDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"specs",
                    	      									lv_specs_3_0,
                    	      									"org.xtext.Go.importSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						/* */
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getImportDeclAccess().getEosParserRuleCall_1_1_1_1());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_9);
                    	    ruleeos();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_1_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleimportDecl"


    // $ANTLR start "entryRuleimportSpec"
    // InternalGo.g:347:1: entryRuleimportSpec returns [EObject current=null] : iv_ruleimportSpec= ruleimportSpec EOF ;
    public final EObject entryRuleimportSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleimportSpec = null;


        try {
            // InternalGo.g:347:51: (iv_ruleimportSpec= ruleimportSpec EOF )
            // InternalGo.g:348:2: iv_ruleimportSpec= ruleimportSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleimportSpec=ruleimportSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleimportSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleimportSpec"


    // $ANTLR start "ruleimportSpec"
    // InternalGo.g:354:1: ruleimportSpec returns [EObject current=null] : ( (otherlv_0= '.' | this_IDENTIFIER_1= RULE_IDENTIFIER )? ( (lv_path_2_0= ruleimportPath ) ) ) ;
    public final EObject ruleimportSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_IDENTIFIER_1=null;
        AntlrDatatypeRuleToken lv_path_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:360:2: ( ( (otherlv_0= '.' | this_IDENTIFIER_1= RULE_IDENTIFIER )? ( (lv_path_2_0= ruleimportPath ) ) ) )
            // InternalGo.g:361:2: ( (otherlv_0= '.' | this_IDENTIFIER_1= RULE_IDENTIFIER )? ( (lv_path_2_0= ruleimportPath ) ) )
            {
            // InternalGo.g:361:2: ( (otherlv_0= '.' | this_IDENTIFIER_1= RULE_IDENTIFIER )? ( (lv_path_2_0= ruleimportPath ) ) )
            // InternalGo.g:362:3: (otherlv_0= '.' | this_IDENTIFIER_1= RULE_IDENTIFIER )? ( (lv_path_2_0= ruleimportPath ) )
            {
            // InternalGo.g:362:3: (otherlv_0= '.' | this_IDENTIFIER_1= RULE_IDENTIFIER )?
            int alt7=3;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==47) ) {
                alt7=1;
            }
            else if ( (LA7_0==RULE_IDENTIFIER) ) {
                alt7=2;
            }
            switch (alt7) {
                case 1 :
                    // InternalGo.g:363:4: otherlv_0= '.'
                    {
                    otherlv_0=(Token)match(input,47,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:368:4: this_IDENTIFIER_1= RULE_IDENTIFIER
                    {
                    this_IDENTIFIER_1=(Token)match(input,RULE_IDENTIFIER,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_IDENTIFIER_1, grammarAccess.getImportSpecAccess().getIDENTIFIERTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:373:3: ( (lv_path_2_0= ruleimportPath ) )
            // InternalGo.g:374:4: (lv_path_2_0= ruleimportPath )
            {
            // InternalGo.g:374:4: (lv_path_2_0= ruleimportPath )
            // InternalGo.g:375:5: lv_path_2_0= ruleimportPath
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImportSpecAccess().getPathImportPathParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_path_2_0=ruleimportPath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImportSpecRule());
              					}
              					set(
              						current,
              						"path",
              						lv_path_2_0,
              						"org.xtext.Go.importPath");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleimportSpec"


    // $ANTLR start "entryRuleimportPath"
    // InternalGo.g:396:1: entryRuleimportPath returns [String current=null] : iv_ruleimportPath= ruleimportPath EOF ;
    public final String entryRuleimportPath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleimportPath = null;


        try {
            // InternalGo.g:396:50: (iv_ruleimportPath= ruleimportPath EOF )
            // InternalGo.g:397:2: iv_ruleimportPath= ruleimportPath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportPathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleimportPath=ruleimportPath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleimportPath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleimportPath"


    // $ANTLR start "ruleimportPath"
    // InternalGo.g:403:1: ruleimportPath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_LIT_0= RULE_STRING_LIT ;
    public final AntlrDatatypeRuleToken ruleimportPath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_LIT_0=null;


        	enterRule();

        try {
            // InternalGo.g:409:2: (this_STRING_LIT_0= RULE_STRING_LIT )
            // InternalGo.g:410:2: this_STRING_LIT_0= RULE_STRING_LIT
            {
            this_STRING_LIT_0=(Token)match(input,RULE_STRING_LIT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_STRING_LIT_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_STRING_LIT_0, grammarAccess.getImportPathAccess().getSTRING_LITTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleimportPath"


    // $ANTLR start "entryRuletopLevelDecl"
    // InternalGo.g:420:1: entryRuletopLevelDecl returns [EObject current=null] : iv_ruletopLevelDecl= ruletopLevelDecl EOF ;
    public final EObject entryRuletopLevelDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletopLevelDecl = null;


        try {
            // InternalGo.g:420:53: (iv_ruletopLevelDecl= ruletopLevelDecl EOF )
            // InternalGo.g:421:2: iv_ruletopLevelDecl= ruletopLevelDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTopLevelDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletopLevelDecl=ruletopLevelDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletopLevelDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletopLevelDecl"


    // $ANTLR start "ruletopLevelDecl"
    // InternalGo.g:427:1: ruletopLevelDecl returns [EObject current=null] : ( ( (lv_decl_0_0= ruledeclaration ) ) | ( (lv_decl_1_0= rulefunctionDecl ) ) | ( (lv_decl_2_0= rulemethodDecl ) ) ) ;
    public final EObject ruletopLevelDecl() throws RecognitionException {
        EObject current = null;

        EObject lv_decl_0_0 = null;

        EObject lv_decl_1_0 = null;

        EObject lv_decl_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:433:2: ( ( ( (lv_decl_0_0= ruledeclaration ) ) | ( (lv_decl_1_0= rulefunctionDecl ) ) | ( (lv_decl_2_0= rulemethodDecl ) ) ) )
            // InternalGo.g:434:2: ( ( (lv_decl_0_0= ruledeclaration ) ) | ( (lv_decl_1_0= rulefunctionDecl ) ) | ( (lv_decl_2_0= rulemethodDecl ) ) )
            {
            // InternalGo.g:434:2: ( ( (lv_decl_0_0= ruledeclaration ) ) | ( (lv_decl_1_0= rulefunctionDecl ) ) | ( (lv_decl_2_0= rulemethodDecl ) ) )
            int alt8=3;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==48||LA8_0==51||LA8_0==53) ) {
                alt8=1;
            }
            else if ( (LA8_0==52) ) {
                int LA8_2 = input.LA(2);

                if ( (LA8_2==RULE_IDENTIFIER) ) {
                    alt8=2;
                }
                else if ( (LA8_2==45) ) {
                    alt8=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalGo.g:435:3: ( (lv_decl_0_0= ruledeclaration ) )
                    {
                    // InternalGo.g:435:3: ( (lv_decl_0_0= ruledeclaration ) )
                    // InternalGo.g:436:4: (lv_decl_0_0= ruledeclaration )
                    {
                    // InternalGo.g:436:4: (lv_decl_0_0= ruledeclaration )
                    // InternalGo.g:437:5: lv_decl_0_0= ruledeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTopLevelDeclAccess().getDeclDeclarationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_decl_0_0=ruledeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTopLevelDeclRule());
                      					}
                      					set(
                      						current,
                      						"decl",
                      						lv_decl_0_0,
                      						"org.xtext.Go.declaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:455:3: ( (lv_decl_1_0= rulefunctionDecl ) )
                    {
                    // InternalGo.g:455:3: ( (lv_decl_1_0= rulefunctionDecl ) )
                    // InternalGo.g:456:4: (lv_decl_1_0= rulefunctionDecl )
                    {
                    // InternalGo.g:456:4: (lv_decl_1_0= rulefunctionDecl )
                    // InternalGo.g:457:5: lv_decl_1_0= rulefunctionDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTopLevelDeclAccess().getDeclFunctionDeclParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_decl_1_0=rulefunctionDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTopLevelDeclRule());
                      					}
                      					set(
                      						current,
                      						"decl",
                      						lv_decl_1_0,
                      						"org.xtext.Go.functionDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:475:3: ( (lv_decl_2_0= rulemethodDecl ) )
                    {
                    // InternalGo.g:475:3: ( (lv_decl_2_0= rulemethodDecl ) )
                    // InternalGo.g:476:4: (lv_decl_2_0= rulemethodDecl )
                    {
                    // InternalGo.g:476:4: (lv_decl_2_0= rulemethodDecl )
                    // InternalGo.g:477:5: lv_decl_2_0= rulemethodDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTopLevelDeclAccess().getDeclMethodDeclParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_decl_2_0=rulemethodDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTopLevelDeclRule());
                      					}
                      					set(
                      						current,
                      						"decl",
                      						lv_decl_2_0,
                      						"org.xtext.Go.methodDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletopLevelDecl"


    // $ANTLR start "entryRuledeclaration"
    // InternalGo.g:498:1: entryRuledeclaration returns [EObject current=null] : iv_ruledeclaration= ruledeclaration EOF ;
    public final EObject entryRuledeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledeclaration = null;


        try {
            // InternalGo.g:498:52: (iv_ruledeclaration= ruledeclaration EOF )
            // InternalGo.g:499:2: iv_ruledeclaration= ruledeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledeclaration=ruledeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledeclaration"


    // $ANTLR start "ruledeclaration"
    // InternalGo.g:505:1: ruledeclaration returns [EObject current=null] : ( ( (lv_decl_0_0= ruleconstDecl ) ) | ( (lv_decl_1_0= ruletypeDecl ) ) | ( (lv_decl_2_0= rulevarDecl ) ) ) ;
    public final EObject ruledeclaration() throws RecognitionException {
        EObject current = null;

        EObject lv_decl_0_0 = null;

        EObject lv_decl_1_0 = null;

        EObject lv_decl_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:511:2: ( ( ( (lv_decl_0_0= ruleconstDecl ) ) | ( (lv_decl_1_0= ruletypeDecl ) ) | ( (lv_decl_2_0= rulevarDecl ) ) ) )
            // InternalGo.g:512:2: ( ( (lv_decl_0_0= ruleconstDecl ) ) | ( (lv_decl_1_0= ruletypeDecl ) ) | ( (lv_decl_2_0= rulevarDecl ) ) )
            {
            // InternalGo.g:512:2: ( ( (lv_decl_0_0= ruleconstDecl ) ) | ( (lv_decl_1_0= ruletypeDecl ) ) | ( (lv_decl_2_0= rulevarDecl ) ) )
            int alt9=3;
            switch ( input.LA(1) ) {
            case 48:
                {
                alt9=1;
                }
                break;
            case 51:
                {
                alt9=2;
                }
                break;
            case 53:
                {
                alt9=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }

            switch (alt9) {
                case 1 :
                    // InternalGo.g:513:3: ( (lv_decl_0_0= ruleconstDecl ) )
                    {
                    // InternalGo.g:513:3: ( (lv_decl_0_0= ruleconstDecl ) )
                    // InternalGo.g:514:4: (lv_decl_0_0= ruleconstDecl )
                    {
                    // InternalGo.g:514:4: (lv_decl_0_0= ruleconstDecl )
                    // InternalGo.g:515:5: lv_decl_0_0= ruleconstDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclarationAccess().getDeclConstDeclParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_decl_0_0=ruleconstDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"decl",
                      						lv_decl_0_0,
                      						"org.xtext.Go.constDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:533:3: ( (lv_decl_1_0= ruletypeDecl ) )
                    {
                    // InternalGo.g:533:3: ( (lv_decl_1_0= ruletypeDecl ) )
                    // InternalGo.g:534:4: (lv_decl_1_0= ruletypeDecl )
                    {
                    // InternalGo.g:534:4: (lv_decl_1_0= ruletypeDecl )
                    // InternalGo.g:535:5: lv_decl_1_0= ruletypeDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclarationAccess().getDeclTypeDeclParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_decl_1_0=ruletypeDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"decl",
                      						lv_decl_1_0,
                      						"org.xtext.Go.typeDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:553:3: ( (lv_decl_2_0= rulevarDecl ) )
                    {
                    // InternalGo.g:553:3: ( (lv_decl_2_0= rulevarDecl ) )
                    // InternalGo.g:554:4: (lv_decl_2_0= rulevarDecl )
                    {
                    // InternalGo.g:554:4: (lv_decl_2_0= rulevarDecl )
                    // InternalGo.g:555:5: lv_decl_2_0= rulevarDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclarationAccess().getDeclVarDeclParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_decl_2_0=rulevarDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"decl",
                      						lv_decl_2_0,
                      						"org.xtext.Go.varDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledeclaration"


    // $ANTLR start "entryRuleconstDecl"
    // InternalGo.g:576:1: entryRuleconstDecl returns [EObject current=null] : iv_ruleconstDecl= ruleconstDecl EOF ;
    public final EObject entryRuleconstDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleconstDecl = null;


        try {
            // InternalGo.g:576:50: (iv_ruleconstDecl= ruleconstDecl EOF )
            // InternalGo.g:577:2: iv_ruleconstDecl= ruleconstDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleconstDecl=ruleconstDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleconstDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleconstDecl"


    // $ANTLR start "ruleconstDecl"
    // InternalGo.g:583:1: ruleconstDecl returns [EObject current=null] : (otherlv_0= 'const' ( ( (lv_spec_1_0= ruleconstSpec ) ) | (otherlv_2= '(' ( ( (lv_spec_3_0= ruleconstSpec ) ) ruleeos )* otherlv_5= ')' ) ) ) ;
    public final EObject ruleconstDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_spec_1_0 = null;

        EObject lv_spec_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:589:2: ( (otherlv_0= 'const' ( ( (lv_spec_1_0= ruleconstSpec ) ) | (otherlv_2= '(' ( ( (lv_spec_3_0= ruleconstSpec ) ) ruleeos )* otherlv_5= ')' ) ) ) )
            // InternalGo.g:590:2: (otherlv_0= 'const' ( ( (lv_spec_1_0= ruleconstSpec ) ) | (otherlv_2= '(' ( ( (lv_spec_3_0= ruleconstSpec ) ) ruleeos )* otherlv_5= ')' ) ) )
            {
            // InternalGo.g:590:2: (otherlv_0= 'const' ( ( (lv_spec_1_0= ruleconstSpec ) ) | (otherlv_2= '(' ( ( (lv_spec_3_0= ruleconstSpec ) ) ruleeos )* otherlv_5= ')' ) ) )
            // InternalGo.g:591:3: otherlv_0= 'const' ( ( (lv_spec_1_0= ruleconstSpec ) ) | (otherlv_2= '(' ( ( (lv_spec_3_0= ruleconstSpec ) ) ruleeos )* otherlv_5= ')' ) )
            {
            otherlv_0=(Token)match(input,48,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getConstDeclAccess().getConstKeyword_0());
              		
            }
            // InternalGo.g:595:3: ( ( (lv_spec_1_0= ruleconstSpec ) ) | (otherlv_2= '(' ( ( (lv_spec_3_0= ruleconstSpec ) ) ruleeos )* otherlv_5= ')' ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_IDENTIFIER) ) {
                alt11=1;
            }
            else if ( (LA11_0==45) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalGo.g:596:4: ( (lv_spec_1_0= ruleconstSpec ) )
                    {
                    // InternalGo.g:596:4: ( (lv_spec_1_0= ruleconstSpec ) )
                    // InternalGo.g:597:5: (lv_spec_1_0= ruleconstSpec )
                    {
                    // InternalGo.g:597:5: (lv_spec_1_0= ruleconstSpec )
                    // InternalGo.g:598:6: lv_spec_1_0= ruleconstSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstDeclAccess().getSpecConstSpecParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_spec_1_0=ruleconstSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstDeclRule());
                      						}
                      						add(
                      							current,
                      							"spec",
                      							lv_spec_1_0,
                      							"org.xtext.Go.constSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:616:4: (otherlv_2= '(' ( ( (lv_spec_3_0= ruleconstSpec ) ) ruleeos )* otherlv_5= ')' )
                    {
                    // InternalGo.g:616:4: (otherlv_2= '(' ( ( (lv_spec_3_0= ruleconstSpec ) ) ruleeos )* otherlv_5= ')' )
                    // InternalGo.g:617:5: otherlv_2= '(' ( ( (lv_spec_3_0= ruleconstSpec ) ) ruleeos )* otherlv_5= ')'
                    {
                    otherlv_2=(Token)match(input,45,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0());
                      				
                    }
                    // InternalGo.g:621:5: ( ( (lv_spec_3_0= ruleconstSpec ) ) ruleeos )*
                    loop10:
                    do {
                        int alt10=2;
                        int LA10_0 = input.LA(1);

                        if ( (LA10_0==RULE_IDENTIFIER) ) {
                            alt10=1;
                        }


                        switch (alt10) {
                    	case 1 :
                    	    // InternalGo.g:622:6: ( (lv_spec_3_0= ruleconstSpec ) ) ruleeos
                    	    {
                    	    // InternalGo.g:622:6: ( (lv_spec_3_0= ruleconstSpec ) )
                    	    // InternalGo.g:623:7: (lv_spec_3_0= ruleconstSpec )
                    	    {
                    	    // InternalGo.g:623:7: (lv_spec_3_0= ruleconstSpec )
                    	    // InternalGo.g:624:8: lv_spec_3_0= ruleconstSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getConstDeclAccess().getSpecConstSpecParserRuleCall_1_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_5);
                    	    lv_spec_3_0=ruleconstSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getConstDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"spec",
                    	      									lv_spec_3_0,
                    	      									"org.xtext.Go.constSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						/* */
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getConstDeclAccess().getEosParserRuleCall_1_1_1_1());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    ruleeos();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop10;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_1_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleconstDecl"


    // $ANTLR start "entryRuleconstSpec"
    // InternalGo.g:662:1: entryRuleconstSpec returns [EObject current=null] : iv_ruleconstSpec= ruleconstSpec EOF ;
    public final EObject entryRuleconstSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleconstSpec = null;


        try {
            // InternalGo.g:662:50: (iv_ruleconstSpec= ruleconstSpec EOF )
            // InternalGo.g:663:2: iv_ruleconstSpec= ruleconstSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleconstSpec=ruleconstSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleconstSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleconstSpec"


    // $ANTLR start "ruleconstSpec"
    // InternalGo.g:669:1: ruleconstSpec returns [EObject current=null] : ( ( (lv_identifiers_0_0= ruleidentifierList ) ) ( ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expression_3_0= ruleexpressionList ) ) )? ) ;
    public final EObject ruleconstSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_identifiers_0_0 = null;

        EObject lv_type_1_0 = null;

        EObject lv_expression_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:675:2: ( ( ( (lv_identifiers_0_0= ruleidentifierList ) ) ( ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expression_3_0= ruleexpressionList ) ) )? ) )
            // InternalGo.g:676:2: ( ( (lv_identifiers_0_0= ruleidentifierList ) ) ( ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expression_3_0= ruleexpressionList ) ) )? )
            {
            // InternalGo.g:676:2: ( ( (lv_identifiers_0_0= ruleidentifierList ) ) ( ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expression_3_0= ruleexpressionList ) ) )? )
            // InternalGo.g:677:3: ( (lv_identifiers_0_0= ruleidentifierList ) ) ( ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expression_3_0= ruleexpressionList ) ) )?
            {
            // InternalGo.g:677:3: ( (lv_identifiers_0_0= ruleidentifierList ) )
            // InternalGo.g:678:4: (lv_identifiers_0_0= ruleidentifierList )
            {
            // InternalGo.g:678:4: (lv_identifiers_0_0= ruleidentifierList )
            // InternalGo.g:679:5: lv_identifiers_0_0= ruleidentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstSpecAccess().getIdentifiersIdentifierListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_identifiers_0_0=ruleidentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstSpecRule());
              					}
              					set(
              						current,
              						"identifiers",
              						lv_identifiers_0_0,
              						"org.xtext.Go.identifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:696:3: ( ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expression_3_0= ruleexpressionList ) ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_IDENTIFIER||LA13_0==45||LA13_0==49||LA13_0==52||LA13_0==56||LA13_0==63||LA13_0==87||(LA13_0>=89 && LA13_0<=91)||LA13_0==93) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalGo.g:697:4: ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expression_3_0= ruleexpressionList ) )
                    {
                    // InternalGo.g:697:4: ( (lv_type_1_0= ruletype ) )?
                    int alt12=2;
                    int LA12_0 = input.LA(1);

                    if ( (LA12_0==RULE_IDENTIFIER||LA12_0==45||LA12_0==52||LA12_0==56||LA12_0==63||LA12_0==87||(LA12_0>=89 && LA12_0<=91)||LA12_0==93) ) {
                        alt12=1;
                    }
                    switch (alt12) {
                        case 1 :
                            // InternalGo.g:698:5: (lv_type_1_0= ruletype )
                            {
                            // InternalGo.g:698:5: (lv_type_1_0= ruletype )
                            // InternalGo.g:699:6: lv_type_1_0= ruletype
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getConstSpecAccess().getTypeTypeParserRuleCall_1_0_0());
                              					
                            }
                            pushFollow(FOLLOW_14);
                            lv_type_1_0=ruletype();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getConstSpecRule());
                              						}
                              						set(
                              							current,
                              							"type",
                              							lv_type_1_0,
                              							"org.xtext.Go.type");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,49,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1());
                      			
                    }
                    // InternalGo.g:720:4: ( (lv_expression_3_0= ruleexpressionList ) )
                    // InternalGo.g:721:5: (lv_expression_3_0= ruleexpressionList )
                    {
                    // InternalGo.g:721:5: (lv_expression_3_0= ruleexpressionList )
                    // InternalGo.g:722:6: lv_expression_3_0= ruleexpressionList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstSpecAccess().getExpressionExpressionListParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=ruleexpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstSpecRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_3_0,
                      							"org.xtext.Go.expressionList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleconstSpec"


    // $ANTLR start "entryRuleidentifierList"
    // InternalGo.g:744:1: entryRuleidentifierList returns [EObject current=null] : iv_ruleidentifierList= ruleidentifierList EOF ;
    public final EObject entryRuleidentifierList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleidentifierList = null;


        try {
            // InternalGo.g:744:55: (iv_ruleidentifierList= ruleidentifierList EOF )
            // InternalGo.g:745:2: iv_ruleidentifierList= ruleidentifierList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleidentifierList=ruleidentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleidentifierList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleidentifierList"


    // $ANTLR start "ruleidentifierList"
    // InternalGo.g:751:1: ruleidentifierList returns [EObject current=null] : ( ( (lv_ids_0_0= RULE_IDENTIFIER ) ) (otherlv_1= ',' ( (lv_ids_2_0= RULE_IDENTIFIER ) ) )* ) ;
    public final EObject ruleidentifierList() throws RecognitionException {
        EObject current = null;

        Token lv_ids_0_0=null;
        Token otherlv_1=null;
        Token lv_ids_2_0=null;


        	enterRule();

        try {
            // InternalGo.g:757:2: ( ( ( (lv_ids_0_0= RULE_IDENTIFIER ) ) (otherlv_1= ',' ( (lv_ids_2_0= RULE_IDENTIFIER ) ) )* ) )
            // InternalGo.g:758:2: ( ( (lv_ids_0_0= RULE_IDENTIFIER ) ) (otherlv_1= ',' ( (lv_ids_2_0= RULE_IDENTIFIER ) ) )* )
            {
            // InternalGo.g:758:2: ( ( (lv_ids_0_0= RULE_IDENTIFIER ) ) (otherlv_1= ',' ( (lv_ids_2_0= RULE_IDENTIFIER ) ) )* )
            // InternalGo.g:759:3: ( (lv_ids_0_0= RULE_IDENTIFIER ) ) (otherlv_1= ',' ( (lv_ids_2_0= RULE_IDENTIFIER ) ) )*
            {
            // InternalGo.g:759:3: ( (lv_ids_0_0= RULE_IDENTIFIER ) )
            // InternalGo.g:760:4: (lv_ids_0_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:760:4: (lv_ids_0_0= RULE_IDENTIFIER )
            // InternalGo.g:761:5: lv_ids_0_0= RULE_IDENTIFIER
            {
            lv_ids_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_ids_0_0, grammarAccess.getIdentifierListAccess().getIdsIDENTIFIERTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getIdentifierListRule());
              					}
              					addWithLastConsumed(
              						current,
              						"ids",
              						lv_ids_0_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }

            // InternalGo.g:777:3: (otherlv_1= ',' ( (lv_ids_2_0= RULE_IDENTIFIER ) ) )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==50) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalGo.g:778:4: otherlv_1= ',' ( (lv_ids_2_0= RULE_IDENTIFIER ) )
            	    {
            	    otherlv_1=(Token)match(input,50,FOLLOW_7); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:782:4: ( (lv_ids_2_0= RULE_IDENTIFIER ) )
            	    // InternalGo.g:783:5: (lv_ids_2_0= RULE_IDENTIFIER )
            	    {
            	    // InternalGo.g:783:5: (lv_ids_2_0= RULE_IDENTIFIER )
            	    // InternalGo.g:784:6: lv_ids_2_0= RULE_IDENTIFIER
            	    {
            	    lv_ids_2_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_ids_2_0, grammarAccess.getIdentifierListAccess().getIdsIDENTIFIERTerminalRuleCall_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getIdentifierListRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"ids",
            	      							lv_ids_2_0,
            	      							"org.xtext.Go.IDENTIFIER");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleidentifierList"


    // $ANTLR start "entryRuleexpressionList"
    // InternalGo.g:805:1: entryRuleexpressionList returns [EObject current=null] : iv_ruleexpressionList= ruleexpressionList EOF ;
    public final EObject entryRuleexpressionList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexpressionList = null;


        try {
            // InternalGo.g:805:55: (iv_ruleexpressionList= ruleexpressionList EOF )
            // InternalGo.g:806:2: iv_ruleexpressionList= ruleexpressionList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexpressionList=ruleexpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpressionList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexpressionList"


    // $ANTLR start "ruleexpressionList"
    // InternalGo.g:812:1: ruleexpressionList returns [EObject current=null] : ( ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= ',' ( (lv_expr_2_0= ruleexpression ) ) )* ) ;
    public final EObject ruleexpressionList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expr_0_0 = null;

        EObject lv_expr_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:818:2: ( ( ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= ',' ( (lv_expr_2_0= ruleexpression ) ) )* ) )
            // InternalGo.g:819:2: ( ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= ',' ( (lv_expr_2_0= ruleexpression ) ) )* )
            {
            // InternalGo.g:819:2: ( ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= ',' ( (lv_expr_2_0= ruleexpression ) ) )* )
            // InternalGo.g:820:3: ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= ',' ( (lv_expr_2_0= ruleexpression ) ) )*
            {
            // InternalGo.g:820:3: ( (lv_expr_0_0= ruleexpression ) )
            // InternalGo.g:821:4: (lv_expr_0_0= ruleexpression )
            {
            // InternalGo.g:821:4: (lv_expr_0_0= ruleexpression )
            // InternalGo.g:822:5: lv_expr_0_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionListAccess().getExprExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_expr_0_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionListRule());
              					}
              					add(
              						current,
              						"expr",
              						lv_expr_0_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:839:3: (otherlv_1= ',' ( (lv_expr_2_0= ruleexpression ) ) )*
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( (LA15_0==50) ) {
                    int LA15_2 = input.LA(2);

                    if ( (synpred18_InternalGo()) ) {
                        alt15=1;
                    }


                }


                switch (alt15) {
            	case 1 :
            	    // InternalGo.g:840:4: otherlv_1= ',' ( (lv_expr_2_0= ruleexpression ) )
            	    {
            	    otherlv_1=(Token)match(input,50,FOLLOW_15); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getExpressionListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:844:4: ( (lv_expr_2_0= ruleexpression ) )
            	    // InternalGo.g:845:5: (lv_expr_2_0= ruleexpression )
            	    {
            	    // InternalGo.g:845:5: (lv_expr_2_0= ruleexpression )
            	    // InternalGo.g:846:6: lv_expr_2_0= ruleexpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExpressionListAccess().getExprExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_expr_2_0=ruleexpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExpressionListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expr",
            	      							lv_expr_2_0,
            	      							"org.xtext.Go.expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexpressionList"


    // $ANTLR start "entryRuletypeDecl"
    // InternalGo.g:868:1: entryRuletypeDecl returns [EObject current=null] : iv_ruletypeDecl= ruletypeDecl EOF ;
    public final EObject entryRuletypeDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeDecl = null;


        try {
            // InternalGo.g:868:49: (iv_ruletypeDecl= ruletypeDecl EOF )
            // InternalGo.g:869:2: iv_ruletypeDecl= ruletypeDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeDecl=ruletypeDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeDecl"


    // $ANTLR start "ruletypeDecl"
    // InternalGo.g:875:1: ruletypeDecl returns [EObject current=null] : (otherlv_0= 'type' ( ( (lv_spec_1_0= ruletypeSpec ) ) | (otherlv_2= '(' ( ( (lv_spec_3_0= ruletypeSpec ) ) ruleeos )* otherlv_5= ')' ) ) ) ;
    public final EObject ruletypeDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_spec_1_0 = null;

        EObject lv_spec_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:881:2: ( (otherlv_0= 'type' ( ( (lv_spec_1_0= ruletypeSpec ) ) | (otherlv_2= '(' ( ( (lv_spec_3_0= ruletypeSpec ) ) ruleeos )* otherlv_5= ')' ) ) ) )
            // InternalGo.g:882:2: (otherlv_0= 'type' ( ( (lv_spec_1_0= ruletypeSpec ) ) | (otherlv_2= '(' ( ( (lv_spec_3_0= ruletypeSpec ) ) ruleeos )* otherlv_5= ')' ) ) )
            {
            // InternalGo.g:882:2: (otherlv_0= 'type' ( ( (lv_spec_1_0= ruletypeSpec ) ) | (otherlv_2= '(' ( ( (lv_spec_3_0= ruletypeSpec ) ) ruleeos )* otherlv_5= ')' ) ) )
            // InternalGo.g:883:3: otherlv_0= 'type' ( ( (lv_spec_1_0= ruletypeSpec ) ) | (otherlv_2= '(' ( ( (lv_spec_3_0= ruletypeSpec ) ) ruleeos )* otherlv_5= ')' ) )
            {
            otherlv_0=(Token)match(input,51,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeDeclAccess().getTypeKeyword_0());
              		
            }
            // InternalGo.g:887:3: ( ( (lv_spec_1_0= ruletypeSpec ) ) | (otherlv_2= '(' ( ( (lv_spec_3_0= ruletypeSpec ) ) ruleeos )* otherlv_5= ')' ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_IDENTIFIER) ) {
                alt17=1;
            }
            else if ( (LA17_0==45) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalGo.g:888:4: ( (lv_spec_1_0= ruletypeSpec ) )
                    {
                    // InternalGo.g:888:4: ( (lv_spec_1_0= ruletypeSpec ) )
                    // InternalGo.g:889:5: (lv_spec_1_0= ruletypeSpec )
                    {
                    // InternalGo.g:889:5: (lv_spec_1_0= ruletypeSpec )
                    // InternalGo.g:890:6: lv_spec_1_0= ruletypeSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeDeclAccess().getSpecTypeSpecParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_spec_1_0=ruletypeSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeDeclRule());
                      						}
                      						add(
                      							current,
                      							"spec",
                      							lv_spec_1_0,
                      							"org.xtext.Go.typeSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:908:4: (otherlv_2= '(' ( ( (lv_spec_3_0= ruletypeSpec ) ) ruleeos )* otherlv_5= ')' )
                    {
                    // InternalGo.g:908:4: (otherlv_2= '(' ( ( (lv_spec_3_0= ruletypeSpec ) ) ruleeos )* otherlv_5= ')' )
                    // InternalGo.g:909:5: otherlv_2= '(' ( ( (lv_spec_3_0= ruletypeSpec ) ) ruleeos )* otherlv_5= ')'
                    {
                    otherlv_2=(Token)match(input,45,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0());
                      				
                    }
                    // InternalGo.g:913:5: ( ( (lv_spec_3_0= ruletypeSpec ) ) ruleeos )*
                    loop16:
                    do {
                        int alt16=2;
                        int LA16_0 = input.LA(1);

                        if ( (LA16_0==RULE_IDENTIFIER) ) {
                            alt16=1;
                        }


                        switch (alt16) {
                    	case 1 :
                    	    // InternalGo.g:914:6: ( (lv_spec_3_0= ruletypeSpec ) ) ruleeos
                    	    {
                    	    // InternalGo.g:914:6: ( (lv_spec_3_0= ruletypeSpec ) )
                    	    // InternalGo.g:915:7: (lv_spec_3_0= ruletypeSpec )
                    	    {
                    	    // InternalGo.g:915:7: (lv_spec_3_0= ruletypeSpec )
                    	    // InternalGo.g:916:8: lv_spec_3_0= ruletypeSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getTypeDeclAccess().getSpecTypeSpecParserRuleCall_1_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_5);
                    	    lv_spec_3_0=ruletypeSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getTypeDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"spec",
                    	      									lv_spec_3_0,
                    	      									"org.xtext.Go.typeSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						/* */
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getTypeDeclAccess().getEosParserRuleCall_1_1_1_1());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    ruleeos();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop16;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_1_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeDecl"


    // $ANTLR start "entryRuletypeSpec"
    // InternalGo.g:954:1: entryRuletypeSpec returns [EObject current=null] : iv_ruletypeSpec= ruletypeSpec EOF ;
    public final EObject entryRuletypeSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeSpec = null;


        try {
            // InternalGo.g:954:49: (iv_ruletypeSpec= ruletypeSpec EOF )
            // InternalGo.g:955:2: iv_ruletypeSpec= ruletypeSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeSpec=ruletypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeSpec"


    // $ANTLR start "ruletypeSpec"
    // InternalGo.g:961:1: ruletypeSpec returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_type_1_0= ruletype ) ) ) ;
    public final EObject ruletypeSpec() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_type_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:967:2: ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_type_1_0= ruletype ) ) ) )
            // InternalGo.g:968:2: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_type_1_0= ruletype ) ) )
            {
            // InternalGo.g:968:2: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_type_1_0= ruletype ) ) )
            // InternalGo.g:969:3: ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_type_1_0= ruletype ) )
            {
            // InternalGo.g:969:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
            // InternalGo.g:970:4: (lv_name_0_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:970:4: (lv_name_0_0= RULE_IDENTIFIER )
            // InternalGo.g:971:5: lv_name_0_0= RULE_IDENTIFIER
            {
            lv_name_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getTypeSpecAccess().getNameIDENTIFIERTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTypeSpecRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }

            // InternalGo.g:987:3: ( (lv_type_1_0= ruletype ) )
            // InternalGo.g:988:4: (lv_type_1_0= ruletype )
            {
            // InternalGo.g:988:4: (lv_type_1_0= ruletype )
            // InternalGo.g:989:5: lv_type_1_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeSpecAccess().getTypeTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_type_1_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeSpecRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_1_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeSpec"


    // $ANTLR start "entryRulefunctionDecl"
    // InternalGo.g:1010:1: entryRulefunctionDecl returns [EObject current=null] : iv_rulefunctionDecl= rulefunctionDecl EOF ;
    public final EObject entryRulefunctionDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefunctionDecl = null;


        try {
            // InternalGo.g:1010:53: (iv_rulefunctionDecl= rulefunctionDecl EOF )
            // InternalGo.g:1011:2: iv_rulefunctionDecl= rulefunctionDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefunctionDecl=rulefunctionDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefunctionDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefunctionDecl"


    // $ANTLR start "rulefunctionDecl"
    // InternalGo.g:1017:1: rulefunctionDecl returns [EObject current=null] : (otherlv_0= 'func' ( (lv_name_1_0= RULE_IDENTIFIER ) ) ( ( (lv_func_2_0= rulefunction ) ) | ( (lv_sig_3_0= rulesignature ) ) ) ) ;
    public final EObject rulefunctionDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        EObject lv_func_2_0 = null;

        EObject lv_sig_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1023:2: ( (otherlv_0= 'func' ( (lv_name_1_0= RULE_IDENTIFIER ) ) ( ( (lv_func_2_0= rulefunction ) ) | ( (lv_sig_3_0= rulesignature ) ) ) ) )
            // InternalGo.g:1024:2: (otherlv_0= 'func' ( (lv_name_1_0= RULE_IDENTIFIER ) ) ( ( (lv_func_2_0= rulefunction ) ) | ( (lv_sig_3_0= rulesignature ) ) ) )
            {
            // InternalGo.g:1024:2: (otherlv_0= 'func' ( (lv_name_1_0= RULE_IDENTIFIER ) ) ( ( (lv_func_2_0= rulefunction ) ) | ( (lv_sig_3_0= rulesignature ) ) ) )
            // InternalGo.g:1025:3: otherlv_0= 'func' ( (lv_name_1_0= RULE_IDENTIFIER ) ) ( ( (lv_func_2_0= rulefunction ) ) | ( (lv_sig_3_0= rulesignature ) ) )
            {
            otherlv_0=(Token)match(input,52,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionDeclAccess().getFuncKeyword_0());
              		
            }
            // InternalGo.g:1029:3: ( (lv_name_1_0= RULE_IDENTIFIER ) )
            // InternalGo.g:1030:4: (lv_name_1_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:1030:4: (lv_name_1_0= RULE_IDENTIFIER )
            // InternalGo.g:1031:5: lv_name_1_0= RULE_IDENTIFIER
            {
            lv_name_1_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getFunctionDeclAccess().getNameIDENTIFIERTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFunctionDeclRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }

            // InternalGo.g:1047:3: ( ( (lv_func_2_0= rulefunction ) ) | ( (lv_sig_3_0= rulesignature ) ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==45) ) {
                int LA18_1 = input.LA(2);

                if ( (synpred21_InternalGo()) ) {
                    alt18=1;
                }
                else if ( (true) ) {
                    alt18=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 18, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalGo.g:1048:4: ( (lv_func_2_0= rulefunction ) )
                    {
                    // InternalGo.g:1048:4: ( (lv_func_2_0= rulefunction ) )
                    // InternalGo.g:1049:5: (lv_func_2_0= rulefunction )
                    {
                    // InternalGo.g:1049:5: (lv_func_2_0= rulefunction )
                    // InternalGo.g:1050:6: lv_func_2_0= rulefunction
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionDeclAccess().getFuncFunctionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_func_2_0=rulefunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
                      						}
                      						set(
                      							current,
                      							"func",
                      							lv_func_2_0,
                      							"org.xtext.Go.function");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1068:4: ( (lv_sig_3_0= rulesignature ) )
                    {
                    // InternalGo.g:1068:4: ( (lv_sig_3_0= rulesignature ) )
                    // InternalGo.g:1069:5: (lv_sig_3_0= rulesignature )
                    {
                    // InternalGo.g:1069:5: (lv_sig_3_0= rulesignature )
                    // InternalGo.g:1070:6: lv_sig_3_0= rulesignature
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionDeclAccess().getSigSignatureParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_sig_3_0=rulesignature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
                      						}
                      						set(
                      							current,
                      							"sig",
                      							lv_sig_3_0,
                      							"org.xtext.Go.signature");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefunctionDecl"


    // $ANTLR start "entryRulefunction"
    // InternalGo.g:1092:1: entryRulefunction returns [EObject current=null] : iv_rulefunction= rulefunction EOF ;
    public final EObject entryRulefunction() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefunction = null;


        try {
            // InternalGo.g:1092:49: (iv_rulefunction= rulefunction EOF )
            // InternalGo.g:1093:2: iv_rulefunction= rulefunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefunction=rulefunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefunction"


    // $ANTLR start "rulefunction"
    // InternalGo.g:1099:1: rulefunction returns [EObject current=null] : ( ( (lv_sig_0_0= rulesignature ) ) ( (lv_codeBlock_1_0= ruleblock ) ) ) ;
    public final EObject rulefunction() throws RecognitionException {
        EObject current = null;

        EObject lv_sig_0_0 = null;

        EObject lv_codeBlock_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1105:2: ( ( ( (lv_sig_0_0= rulesignature ) ) ( (lv_codeBlock_1_0= ruleblock ) ) ) )
            // InternalGo.g:1106:2: ( ( (lv_sig_0_0= rulesignature ) ) ( (lv_codeBlock_1_0= ruleblock ) ) )
            {
            // InternalGo.g:1106:2: ( ( (lv_sig_0_0= rulesignature ) ) ( (lv_codeBlock_1_0= ruleblock ) ) )
            // InternalGo.g:1107:3: ( (lv_sig_0_0= rulesignature ) ) ( (lv_codeBlock_1_0= ruleblock ) )
            {
            // InternalGo.g:1107:3: ( (lv_sig_0_0= rulesignature ) )
            // InternalGo.g:1108:4: (lv_sig_0_0= rulesignature )
            {
            // InternalGo.g:1108:4: (lv_sig_0_0= rulesignature )
            // InternalGo.g:1109:5: lv_sig_0_0= rulesignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionAccess().getSigSignatureParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_sig_0_0=rulesignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionRule());
              					}
              					set(
              						current,
              						"sig",
              						lv_sig_0_0,
              						"org.xtext.Go.signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:1126:3: ( (lv_codeBlock_1_0= ruleblock ) )
            // InternalGo.g:1127:4: (lv_codeBlock_1_0= ruleblock )
            {
            // InternalGo.g:1127:4: (lv_codeBlock_1_0= ruleblock )
            // InternalGo.g:1128:5: lv_codeBlock_1_0= ruleblock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionAccess().getCodeBlockBlockParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_codeBlock_1_0=ruleblock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionRule());
              					}
              					set(
              						current,
              						"codeBlock",
              						lv_codeBlock_1_0,
              						"org.xtext.Go.block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefunction"


    // $ANTLR start "entryRulemethodDecl"
    // InternalGo.g:1149:1: entryRulemethodDecl returns [EObject current=null] : iv_rulemethodDecl= rulemethodDecl EOF ;
    public final EObject entryRulemethodDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_rulemethodDecl = null;


        try {
            // InternalGo.g:1149:51: (iv_rulemethodDecl= rulemethodDecl EOF )
            // InternalGo.g:1150:2: iv_rulemethodDecl= rulemethodDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulemethodDecl=rulemethodDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulemethodDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulemethodDecl"


    // $ANTLR start "rulemethodDecl"
    // InternalGo.g:1156:1: rulemethodDecl returns [EObject current=null] : (otherlv_0= 'func' ( (lv_params_1_0= rulereceiver ) ) ( (lv_name_2_0= RULE_IDENTIFIER ) ) ( ( (lv_func_3_0= rulefunction ) ) | ( (lv_sig_4_0= rulesignature ) ) ) ) ;
    public final EObject rulemethodDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_2_0=null;
        EObject lv_params_1_0 = null;

        EObject lv_func_3_0 = null;

        EObject lv_sig_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1162:2: ( (otherlv_0= 'func' ( (lv_params_1_0= rulereceiver ) ) ( (lv_name_2_0= RULE_IDENTIFIER ) ) ( ( (lv_func_3_0= rulefunction ) ) | ( (lv_sig_4_0= rulesignature ) ) ) ) )
            // InternalGo.g:1163:2: (otherlv_0= 'func' ( (lv_params_1_0= rulereceiver ) ) ( (lv_name_2_0= RULE_IDENTIFIER ) ) ( ( (lv_func_3_0= rulefunction ) ) | ( (lv_sig_4_0= rulesignature ) ) ) )
            {
            // InternalGo.g:1163:2: (otherlv_0= 'func' ( (lv_params_1_0= rulereceiver ) ) ( (lv_name_2_0= RULE_IDENTIFIER ) ) ( ( (lv_func_3_0= rulefunction ) ) | ( (lv_sig_4_0= rulesignature ) ) ) )
            // InternalGo.g:1164:3: otherlv_0= 'func' ( (lv_params_1_0= rulereceiver ) ) ( (lv_name_2_0= RULE_IDENTIFIER ) ) ( ( (lv_func_3_0= rulefunction ) ) | ( (lv_sig_4_0= rulesignature ) ) )
            {
            otherlv_0=(Token)match(input,52,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMethodDeclAccess().getFuncKeyword_0());
              		
            }
            // InternalGo.g:1168:3: ( (lv_params_1_0= rulereceiver ) )
            // InternalGo.g:1169:4: (lv_params_1_0= rulereceiver )
            {
            // InternalGo.g:1169:4: (lv_params_1_0= rulereceiver )
            // InternalGo.g:1170:5: lv_params_1_0= rulereceiver
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclAccess().getParamsReceiverParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_7);
            lv_params_1_0=rulereceiver();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclRule());
              					}
              					set(
              						current,
              						"params",
              						lv_params_1_0,
              						"org.xtext.Go.receiver");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:1187:3: ( (lv_name_2_0= RULE_IDENTIFIER ) )
            // InternalGo.g:1188:4: (lv_name_2_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:1188:4: (lv_name_2_0= RULE_IDENTIFIER )
            // InternalGo.g:1189:5: lv_name_2_0= RULE_IDENTIFIER
            {
            lv_name_2_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getMethodDeclAccess().getNameIDENTIFIERTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getMethodDeclRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }

            // InternalGo.g:1205:3: ( ( (lv_func_3_0= rulefunction ) ) | ( (lv_sig_4_0= rulesignature ) ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==45) ) {
                int LA19_1 = input.LA(2);

                if ( (synpred22_InternalGo()) ) {
                    alt19=1;
                }
                else if ( (true) ) {
                    alt19=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalGo.g:1206:4: ( (lv_func_3_0= rulefunction ) )
                    {
                    // InternalGo.g:1206:4: ( (lv_func_3_0= rulefunction ) )
                    // InternalGo.g:1207:5: (lv_func_3_0= rulefunction )
                    {
                    // InternalGo.g:1207:5: (lv_func_3_0= rulefunction )
                    // InternalGo.g:1208:6: lv_func_3_0= rulefunction
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodDeclAccess().getFuncFunctionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_func_3_0=rulefunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodDeclRule());
                      						}
                      						set(
                      							current,
                      							"func",
                      							lv_func_3_0,
                      							"org.xtext.Go.function");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1226:4: ( (lv_sig_4_0= rulesignature ) )
                    {
                    // InternalGo.g:1226:4: ( (lv_sig_4_0= rulesignature ) )
                    // InternalGo.g:1227:5: (lv_sig_4_0= rulesignature )
                    {
                    // InternalGo.g:1227:5: (lv_sig_4_0= rulesignature )
                    // InternalGo.g:1228:6: lv_sig_4_0= rulesignature
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodDeclAccess().getSigSignatureParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_sig_4_0=rulesignature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodDeclRule());
                      						}
                      						set(
                      							current,
                      							"sig",
                      							lv_sig_4_0,
                      							"org.xtext.Go.signature");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulemethodDecl"


    // $ANTLR start "entryRulereceiver"
    // InternalGo.g:1250:1: entryRulereceiver returns [EObject current=null] : iv_rulereceiver= rulereceiver EOF ;
    public final EObject entryRulereceiver() throws RecognitionException {
        EObject current = null;

        EObject iv_rulereceiver = null;


        try {
            // InternalGo.g:1250:49: (iv_rulereceiver= rulereceiver EOF )
            // InternalGo.g:1251:2: iv_rulereceiver= rulereceiver EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReceiverRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulereceiver=rulereceiver();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulereceiver; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulereceiver"


    // $ANTLR start "rulereceiver"
    // InternalGo.g:1257:1: rulereceiver returns [EObject current=null] : ( (lv_params_0_0= ruleparameters ) ) ;
    public final EObject rulereceiver() throws RecognitionException {
        EObject current = null;

        EObject lv_params_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1263:2: ( ( (lv_params_0_0= ruleparameters ) ) )
            // InternalGo.g:1264:2: ( (lv_params_0_0= ruleparameters ) )
            {
            // InternalGo.g:1264:2: ( (lv_params_0_0= ruleparameters ) )
            // InternalGo.g:1265:3: (lv_params_0_0= ruleparameters )
            {
            // InternalGo.g:1265:3: (lv_params_0_0= ruleparameters )
            // InternalGo.g:1266:4: lv_params_0_0= ruleparameters
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getReceiverAccess().getParamsParametersParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_params_0_0=ruleparameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getReceiverRule());
              				}
              				set(
              					current,
              					"params",
              					lv_params_0_0,
              					"org.xtext.Go.parameters");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulereceiver"


    // $ANTLR start "entryRulevarDecl"
    // InternalGo.g:1286:1: entryRulevarDecl returns [EObject current=null] : iv_rulevarDecl= rulevarDecl EOF ;
    public final EObject entryRulevarDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_rulevarDecl = null;


        try {
            // InternalGo.g:1286:48: (iv_rulevarDecl= rulevarDecl EOF )
            // InternalGo.g:1287:2: iv_rulevarDecl= rulevarDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulevarDecl=rulevarDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulevarDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulevarDecl"


    // $ANTLR start "rulevarDecl"
    // InternalGo.g:1293:1: rulevarDecl returns [EObject current=null] : (otherlv_0= 'var' ( ( (lv_specs_1_0= rulevarSpec ) ) | (otherlv_2= '(' ( ( (lv_specs_3_0= rulevarSpec ) ) ruleeos )* otherlv_5= ')' ) ) ) ;
    public final EObject rulevarDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_specs_1_0 = null;

        EObject lv_specs_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1299:2: ( (otherlv_0= 'var' ( ( (lv_specs_1_0= rulevarSpec ) ) | (otherlv_2= '(' ( ( (lv_specs_3_0= rulevarSpec ) ) ruleeos )* otherlv_5= ')' ) ) ) )
            // InternalGo.g:1300:2: (otherlv_0= 'var' ( ( (lv_specs_1_0= rulevarSpec ) ) | (otherlv_2= '(' ( ( (lv_specs_3_0= rulevarSpec ) ) ruleeos )* otherlv_5= ')' ) ) )
            {
            // InternalGo.g:1300:2: (otherlv_0= 'var' ( ( (lv_specs_1_0= rulevarSpec ) ) | (otherlv_2= '(' ( ( (lv_specs_3_0= rulevarSpec ) ) ruleeos )* otherlv_5= ')' ) ) )
            // InternalGo.g:1301:3: otherlv_0= 'var' ( ( (lv_specs_1_0= rulevarSpec ) ) | (otherlv_2= '(' ( ( (lv_specs_3_0= rulevarSpec ) ) ruleeos )* otherlv_5= ')' ) )
            {
            otherlv_0=(Token)match(input,53,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getVarDeclAccess().getVarKeyword_0());
              		
            }
            // InternalGo.g:1305:3: ( ( (lv_specs_1_0= rulevarSpec ) ) | (otherlv_2= '(' ( ( (lv_specs_3_0= rulevarSpec ) ) ruleeos )* otherlv_5= ')' ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_IDENTIFIER) ) {
                alt21=1;
            }
            else if ( (LA21_0==45) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalGo.g:1306:4: ( (lv_specs_1_0= rulevarSpec ) )
                    {
                    // InternalGo.g:1306:4: ( (lv_specs_1_0= rulevarSpec ) )
                    // InternalGo.g:1307:5: (lv_specs_1_0= rulevarSpec )
                    {
                    // InternalGo.g:1307:5: (lv_specs_1_0= rulevarSpec )
                    // InternalGo.g:1308:6: lv_specs_1_0= rulevarSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getVarDeclAccess().getSpecsVarSpecParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_specs_1_0=rulevarSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getVarDeclRule());
                      						}
                      						add(
                      							current,
                      							"specs",
                      							lv_specs_1_0,
                      							"org.xtext.Go.varSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1326:4: (otherlv_2= '(' ( ( (lv_specs_3_0= rulevarSpec ) ) ruleeos )* otherlv_5= ')' )
                    {
                    // InternalGo.g:1326:4: (otherlv_2= '(' ( ( (lv_specs_3_0= rulevarSpec ) ) ruleeos )* otherlv_5= ')' )
                    // InternalGo.g:1327:5: otherlv_2= '(' ( ( (lv_specs_3_0= rulevarSpec ) ) ruleeos )* otherlv_5= ')'
                    {
                    otherlv_2=(Token)match(input,45,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0());
                      				
                    }
                    // InternalGo.g:1331:5: ( ( (lv_specs_3_0= rulevarSpec ) ) ruleeos )*
                    loop20:
                    do {
                        int alt20=2;
                        int LA20_0 = input.LA(1);

                        if ( (LA20_0==RULE_IDENTIFIER) ) {
                            alt20=1;
                        }


                        switch (alt20) {
                    	case 1 :
                    	    // InternalGo.g:1332:6: ( (lv_specs_3_0= rulevarSpec ) ) ruleeos
                    	    {
                    	    // InternalGo.g:1332:6: ( (lv_specs_3_0= rulevarSpec ) )
                    	    // InternalGo.g:1333:7: (lv_specs_3_0= rulevarSpec )
                    	    {
                    	    // InternalGo.g:1333:7: (lv_specs_3_0= rulevarSpec )
                    	    // InternalGo.g:1334:8: lv_specs_3_0= rulevarSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getVarDeclAccess().getSpecsVarSpecParserRuleCall_1_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_5);
                    	    lv_specs_3_0=rulevarSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getVarDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"specs",
                    	      									lv_specs_3_0,
                    	      									"org.xtext.Go.varSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						/* */
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getVarDeclAccess().getEosParserRuleCall_1_1_1_1());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    ruleeos();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop20;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_1_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulevarDecl"


    // $ANTLR start "entryRulevarSpec"
    // InternalGo.g:1372:1: entryRulevarSpec returns [EObject current=null] : iv_rulevarSpec= rulevarSpec EOF ;
    public final EObject entryRulevarSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_rulevarSpec = null;


        try {
            // InternalGo.g:1372:48: (iv_rulevarSpec= rulevarSpec EOF )
            // InternalGo.g:1373:2: iv_rulevarSpec= rulevarSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulevarSpec=rulevarSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulevarSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulevarSpec"


    // $ANTLR start "rulevarSpec"
    // InternalGo.g:1379:1: rulevarSpec returns [EObject current=null] : ( ( (lv_idList_0_0= ruleidentifierList ) ) ( ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_exprList_5_0= ruleexpressionList ) ) ) ) ) ;
    public final EObject rulevarSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_idList_0_0 = null;

        EObject lv_type_1_0 = null;

        EObject lv_exprList_3_0 = null;

        EObject lv_exprList_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1385:2: ( ( ( (lv_idList_0_0= ruleidentifierList ) ) ( ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_exprList_5_0= ruleexpressionList ) ) ) ) ) )
            // InternalGo.g:1386:2: ( ( (lv_idList_0_0= ruleidentifierList ) ) ( ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_exprList_5_0= ruleexpressionList ) ) ) ) )
            {
            // InternalGo.g:1386:2: ( ( (lv_idList_0_0= ruleidentifierList ) ) ( ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_exprList_5_0= ruleexpressionList ) ) ) ) )
            // InternalGo.g:1387:3: ( (lv_idList_0_0= ruleidentifierList ) ) ( ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_exprList_5_0= ruleexpressionList ) ) ) )
            {
            // InternalGo.g:1387:3: ( (lv_idList_0_0= ruleidentifierList ) )
            // InternalGo.g:1388:4: (lv_idList_0_0= ruleidentifierList )
            {
            // InternalGo.g:1388:4: (lv_idList_0_0= ruleidentifierList )
            // InternalGo.g:1389:5: lv_idList_0_0= ruleidentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVarSpecAccess().getIdListIdentifierListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_idList_0_0=ruleidentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVarSpecRule());
              					}
              					set(
              						current,
              						"idList",
              						lv_idList_0_0,
              						"org.xtext.Go.identifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:1406:3: ( ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_exprList_5_0= ruleexpressionList ) ) ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_IDENTIFIER||LA23_0==45||LA23_0==52||LA23_0==56||LA23_0==63||LA23_0==87||(LA23_0>=89 && LA23_0<=91)||LA23_0==93) ) {
                alt23=1;
            }
            else if ( (LA23_0==49) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalGo.g:1407:4: ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )? )
                    {
                    // InternalGo.g:1407:4: ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )? )
                    // InternalGo.g:1408:5: ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )?
                    {
                    // InternalGo.g:1408:5: ( (lv_type_1_0= ruletype ) )
                    // InternalGo.g:1409:6: (lv_type_1_0= ruletype )
                    {
                    // InternalGo.g:1409:6: (lv_type_1_0= ruletype )
                    // InternalGo.g:1410:7: lv_type_1_0= ruletype
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVarSpecAccess().getTypeTypeParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_21);
                    lv_type_1_0=ruletype();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVarSpecRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_1_0,
                      								"org.xtext.Go.type");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:1427:5: (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )?
                    int alt22=2;
                    int LA22_0 = input.LA(1);

                    if ( (LA22_0==49) ) {
                        alt22=1;
                    }
                    switch (alt22) {
                        case 1 :
                            // InternalGo.g:1428:6: otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) )
                            {
                            otherlv_2=(Token)match(input,49,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0());
                              					
                            }
                            // InternalGo.g:1432:6: ( (lv_exprList_3_0= ruleexpressionList ) )
                            // InternalGo.g:1433:7: (lv_exprList_3_0= ruleexpressionList )
                            {
                            // InternalGo.g:1433:7: (lv_exprList_3_0= ruleexpressionList )
                            // InternalGo.g:1434:8: lv_exprList_3_0= ruleexpressionList
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getVarSpecAccess().getExprListExpressionListParserRuleCall_1_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_exprList_3_0=ruleexpressionList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getVarSpecRule());
                              								}
                              								add(
                              									current,
                              									"exprList",
                              									lv_exprList_3_0,
                              									"org.xtext.Go.expressionList");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1454:4: (otherlv_4= '=' ( (lv_exprList_5_0= ruleexpressionList ) ) )
                    {
                    // InternalGo.g:1454:4: (otherlv_4= '=' ( (lv_exprList_5_0= ruleexpressionList ) ) )
                    // InternalGo.g:1455:5: otherlv_4= '=' ( (lv_exprList_5_0= ruleexpressionList ) )
                    {
                    otherlv_4=(Token)match(input,49,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0());
                      				
                    }
                    // InternalGo.g:1459:5: ( (lv_exprList_5_0= ruleexpressionList ) )
                    // InternalGo.g:1460:6: (lv_exprList_5_0= ruleexpressionList )
                    {
                    // InternalGo.g:1460:6: (lv_exprList_5_0= ruleexpressionList )
                    // InternalGo.g:1461:7: lv_exprList_5_0= ruleexpressionList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVarSpecAccess().getExprListExpressionListParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_exprList_5_0=ruleexpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVarSpecRule());
                      							}
                      							add(
                      								current,
                      								"exprList",
                      								lv_exprList_5_0,
                      								"org.xtext.Go.expressionList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulevarSpec"


    // $ANTLR start "entryRuleblock"
    // InternalGo.g:1484:1: entryRuleblock returns [EObject current=null] : iv_ruleblock= ruleblock EOF ;
    public final EObject entryRuleblock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleblock = null;


        try {
            // InternalGo.g:1484:46: (iv_ruleblock= ruleblock EOF )
            // InternalGo.g:1485:2: iv_ruleblock= ruleblock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleblock=ruleblock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleblock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleblock"


    // $ANTLR start "ruleblock"
    // InternalGo.g:1491:1: ruleblock returns [EObject current=null] : (otherlv_0= '{' ( (lv_statements_1_0= rulestatementList ) ) otherlv_2= '}' ) ;
    public final EObject ruleblock() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_statements_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1497:2: ( (otherlv_0= '{' ( (lv_statements_1_0= rulestatementList ) ) otherlv_2= '}' ) )
            // InternalGo.g:1498:2: (otherlv_0= '{' ( (lv_statements_1_0= rulestatementList ) ) otherlv_2= '}' )
            {
            // InternalGo.g:1498:2: (otherlv_0= '{' ( (lv_statements_1_0= rulestatementList ) ) otherlv_2= '}' )
            // InternalGo.g:1499:3: otherlv_0= '{' ( (lv_statements_1_0= rulestatementList ) ) otherlv_2= '}'
            {
            otherlv_0=(Token)match(input,54,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalGo.g:1503:3: ( (lv_statements_1_0= rulestatementList ) )
            // InternalGo.g:1504:4: (lv_statements_1_0= rulestatementList )
            {
            // InternalGo.g:1504:4: (lv_statements_1_0= rulestatementList )
            // InternalGo.g:1505:5: lv_statements_1_0= rulestatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBlockAccess().getStatementsStatementListParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_23);
            lv_statements_1_0=rulestatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBlockRule());
              					}
              					set(
              						current,
              						"statements",
              						lv_statements_1_0,
              						"org.xtext.Go.statementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleblock"


    // $ANTLR start "entryRulestatementList"
    // InternalGo.g:1530:1: entryRulestatementList returns [EObject current=null] : iv_rulestatementList= rulestatementList EOF ;
    public final EObject entryRulestatementList() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestatementList = null;


        try {
            // InternalGo.g:1530:54: (iv_rulestatementList= rulestatementList EOF )
            // InternalGo.g:1531:2: iv_rulestatementList= rulestatementList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestatementList=rulestatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestatementList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestatementList"


    // $ANTLR start "rulestatementList"
    // InternalGo.g:1537:1: rulestatementList returns [EObject current=null] : ( ( (lv_statements_0_0= rulestatement ) ) ruleeos )* ;
    public final EObject rulestatementList() throws RecognitionException {
        EObject current = null;

        EObject lv_statements_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1543:2: ( ( ( (lv_statements_0_0= rulestatement ) ) ruleeos )* )
            // InternalGo.g:1544:2: ( ( (lv_statements_0_0= rulestatement ) ) ruleeos )*
            {
            // InternalGo.g:1544:2: ( ( (lv_statements_0_0= rulestatement ) ) ruleeos )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( ((LA24_0>=RULE_IDENTIFIER && LA24_0<=RULE_BINARY_OP)||LA24_0==45||(LA24_0>=47 && LA24_0<=54)||(LA24_0>=56 && LA24_0<=69)||(LA24_0>=72 && LA24_0<=78)||LA24_0==80||(LA24_0>=83 && LA24_0<=84)||(LA24_0>=86 && LA24_0<=87)||(LA24_0>=89 && LA24_0<=91)||(LA24_0>=93 && LA24_0<=95)) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // InternalGo.g:1545:3: ( (lv_statements_0_0= rulestatement ) ) ruleeos
            	    {
            	    // InternalGo.g:1545:3: ( (lv_statements_0_0= rulestatement ) )
            	    // InternalGo.g:1546:4: (lv_statements_0_0= rulestatement )
            	    {
            	    // InternalGo.g:1546:4: (lv_statements_0_0= rulestatement )
            	    // InternalGo.g:1547:5: lv_statements_0_0= rulestatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStatementListAccess().getStatementsStatementParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_statements_0_0=rulestatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStatementListRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_0_0,
            	      						"org.xtext.Go.statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      			/* */
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			newCompositeNode(grammarAccess.getStatementListAccess().getEosParserRuleCall_1());
            	      		
            	    }
            	    pushFollow(FOLLOW_24);
            	    ruleeos();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			afterParserOrEnumRuleCall();
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestatementList"


    // $ANTLR start "entryRulestatement"
    // InternalGo.g:1578:1: entryRulestatement returns [EObject current=null] : iv_rulestatement= rulestatement EOF ;
    public final EObject entryRulestatement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestatement = null;


        try {
            // InternalGo.g:1578:50: (iv_rulestatement= rulestatement EOF )
            // InternalGo.g:1579:2: iv_rulestatement= rulestatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestatement=rulestatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestatement"


    // $ANTLR start "rulestatement"
    // InternalGo.g:1585:1: rulestatement returns [EObject current=null] : ( ( (lv_content_0_0= ruledeclaration ) ) | ( (lv_content_1_0= rulelabeledStmt ) ) | ( (lv_content_2_0= rulesimpleStmt ) ) | ( (lv_content_3_0= rulegoStmt ) ) | ( (lv_content_4_0= rulereturnStmt ) ) | ( (lv_content_5_0= rulebreakStmt ) ) | ( (lv_content_6_0= rulecontinueStmt ) ) | ( (lv_content_7_0= rulegotoStmt ) ) | ( (lv_content_8_0= rulefallthroughStmt ) ) | ( (lv_content_9_0= ruleblock ) ) | ( (lv_content_10_0= ruleifStmt ) ) | ( (lv_content_11_0= ruleswitchStmt ) ) | ( (lv_content_12_0= ruleselectStmt ) ) | ( (lv_content_13_0= ruleforStmt ) ) | ( (lv_content_14_0= ruledeferStmt ) ) ) ;
    public final EObject rulestatement() throws RecognitionException {
        EObject current = null;

        EObject lv_content_0_0 = null;

        EObject lv_content_1_0 = null;

        EObject lv_content_2_0 = null;

        EObject lv_content_3_0 = null;

        EObject lv_content_4_0 = null;

        EObject lv_content_5_0 = null;

        EObject lv_content_6_0 = null;

        EObject lv_content_7_0 = null;

        EObject lv_content_8_0 = null;

        EObject lv_content_9_0 = null;

        EObject lv_content_10_0 = null;

        EObject lv_content_11_0 = null;

        EObject lv_content_12_0 = null;

        EObject lv_content_13_0 = null;

        EObject lv_content_14_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1591:2: ( ( ( (lv_content_0_0= ruledeclaration ) ) | ( (lv_content_1_0= rulelabeledStmt ) ) | ( (lv_content_2_0= rulesimpleStmt ) ) | ( (lv_content_3_0= rulegoStmt ) ) | ( (lv_content_4_0= rulereturnStmt ) ) | ( (lv_content_5_0= rulebreakStmt ) ) | ( (lv_content_6_0= rulecontinueStmt ) ) | ( (lv_content_7_0= rulegotoStmt ) ) | ( (lv_content_8_0= rulefallthroughStmt ) ) | ( (lv_content_9_0= ruleblock ) ) | ( (lv_content_10_0= ruleifStmt ) ) | ( (lv_content_11_0= ruleswitchStmt ) ) | ( (lv_content_12_0= ruleselectStmt ) ) | ( (lv_content_13_0= ruleforStmt ) ) | ( (lv_content_14_0= ruledeferStmt ) ) ) )
            // InternalGo.g:1592:2: ( ( (lv_content_0_0= ruledeclaration ) ) | ( (lv_content_1_0= rulelabeledStmt ) ) | ( (lv_content_2_0= rulesimpleStmt ) ) | ( (lv_content_3_0= rulegoStmt ) ) | ( (lv_content_4_0= rulereturnStmt ) ) | ( (lv_content_5_0= rulebreakStmt ) ) | ( (lv_content_6_0= rulecontinueStmt ) ) | ( (lv_content_7_0= rulegotoStmt ) ) | ( (lv_content_8_0= rulefallthroughStmt ) ) | ( (lv_content_9_0= ruleblock ) ) | ( (lv_content_10_0= ruleifStmt ) ) | ( (lv_content_11_0= ruleswitchStmt ) ) | ( (lv_content_12_0= ruleselectStmt ) ) | ( (lv_content_13_0= ruleforStmt ) ) | ( (lv_content_14_0= ruledeferStmt ) ) )
            {
            // InternalGo.g:1592:2: ( ( (lv_content_0_0= ruledeclaration ) ) | ( (lv_content_1_0= rulelabeledStmt ) ) | ( (lv_content_2_0= rulesimpleStmt ) ) | ( (lv_content_3_0= rulegoStmt ) ) | ( (lv_content_4_0= rulereturnStmt ) ) | ( (lv_content_5_0= rulebreakStmt ) ) | ( (lv_content_6_0= rulecontinueStmt ) ) | ( (lv_content_7_0= rulegotoStmt ) ) | ( (lv_content_8_0= rulefallthroughStmt ) ) | ( (lv_content_9_0= ruleblock ) ) | ( (lv_content_10_0= ruleifStmt ) ) | ( (lv_content_11_0= ruleswitchStmt ) ) | ( (lv_content_12_0= ruleselectStmt ) ) | ( (lv_content_13_0= ruleforStmt ) ) | ( (lv_content_14_0= ruledeferStmt ) ) )
            int alt25=15;
            alt25 = dfa25.predict(input);
            switch (alt25) {
                case 1 :
                    // InternalGo.g:1593:3: ( (lv_content_0_0= ruledeclaration ) )
                    {
                    // InternalGo.g:1593:3: ( (lv_content_0_0= ruledeclaration ) )
                    // InternalGo.g:1594:4: (lv_content_0_0= ruledeclaration )
                    {
                    // InternalGo.g:1594:4: (lv_content_0_0= ruledeclaration )
                    // InternalGo.g:1595:5: lv_content_0_0= ruledeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContentDeclarationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_0_0=ruledeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_0_0,
                      						"org.xtext.Go.declaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1613:3: ( (lv_content_1_0= rulelabeledStmt ) )
                    {
                    // InternalGo.g:1613:3: ( (lv_content_1_0= rulelabeledStmt ) )
                    // InternalGo.g:1614:4: (lv_content_1_0= rulelabeledStmt )
                    {
                    // InternalGo.g:1614:4: (lv_content_1_0= rulelabeledStmt )
                    // InternalGo.g:1615:5: lv_content_1_0= rulelabeledStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContentLabeledStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_1_0=rulelabeledStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_1_0,
                      						"org.xtext.Go.labeledStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:1633:3: ( (lv_content_2_0= rulesimpleStmt ) )
                    {
                    // InternalGo.g:1633:3: ( (lv_content_2_0= rulesimpleStmt ) )
                    // InternalGo.g:1634:4: (lv_content_2_0= rulesimpleStmt )
                    {
                    // InternalGo.g:1634:4: (lv_content_2_0= rulesimpleStmt )
                    // InternalGo.g:1635:5: lv_content_2_0= rulesimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContentSimpleStmtParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_2_0=rulesimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_2_0,
                      						"org.xtext.Go.simpleStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:1653:3: ( (lv_content_3_0= rulegoStmt ) )
                    {
                    // InternalGo.g:1653:3: ( (lv_content_3_0= rulegoStmt ) )
                    // InternalGo.g:1654:4: (lv_content_3_0= rulegoStmt )
                    {
                    // InternalGo.g:1654:4: (lv_content_3_0= rulegoStmt )
                    // InternalGo.g:1655:5: lv_content_3_0= rulegoStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContentGoStmtParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_3_0=rulegoStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_3_0,
                      						"org.xtext.Go.goStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:1673:3: ( (lv_content_4_0= rulereturnStmt ) )
                    {
                    // InternalGo.g:1673:3: ( (lv_content_4_0= rulereturnStmt ) )
                    // InternalGo.g:1674:4: (lv_content_4_0= rulereturnStmt )
                    {
                    // InternalGo.g:1674:4: (lv_content_4_0= rulereturnStmt )
                    // InternalGo.g:1675:5: lv_content_4_0= rulereturnStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContentReturnStmtParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_4_0=rulereturnStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_4_0,
                      						"org.xtext.Go.returnStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:1693:3: ( (lv_content_5_0= rulebreakStmt ) )
                    {
                    // InternalGo.g:1693:3: ( (lv_content_5_0= rulebreakStmt ) )
                    // InternalGo.g:1694:4: (lv_content_5_0= rulebreakStmt )
                    {
                    // InternalGo.g:1694:4: (lv_content_5_0= rulebreakStmt )
                    // InternalGo.g:1695:5: lv_content_5_0= rulebreakStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContentBreakStmtParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_5_0=rulebreakStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_5_0,
                      						"org.xtext.Go.breakStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalGo.g:1713:3: ( (lv_content_6_0= rulecontinueStmt ) )
                    {
                    // InternalGo.g:1713:3: ( (lv_content_6_0= rulecontinueStmt ) )
                    // InternalGo.g:1714:4: (lv_content_6_0= rulecontinueStmt )
                    {
                    // InternalGo.g:1714:4: (lv_content_6_0= rulecontinueStmt )
                    // InternalGo.g:1715:5: lv_content_6_0= rulecontinueStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContentContinueStmtParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_6_0=rulecontinueStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_6_0,
                      						"org.xtext.Go.continueStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalGo.g:1733:3: ( (lv_content_7_0= rulegotoStmt ) )
                    {
                    // InternalGo.g:1733:3: ( (lv_content_7_0= rulegotoStmt ) )
                    // InternalGo.g:1734:4: (lv_content_7_0= rulegotoStmt )
                    {
                    // InternalGo.g:1734:4: (lv_content_7_0= rulegotoStmt )
                    // InternalGo.g:1735:5: lv_content_7_0= rulegotoStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContentGotoStmtParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_7_0=rulegotoStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_7_0,
                      						"org.xtext.Go.gotoStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalGo.g:1753:3: ( (lv_content_8_0= rulefallthroughStmt ) )
                    {
                    // InternalGo.g:1753:3: ( (lv_content_8_0= rulefallthroughStmt ) )
                    // InternalGo.g:1754:4: (lv_content_8_0= rulefallthroughStmt )
                    {
                    // InternalGo.g:1754:4: (lv_content_8_0= rulefallthroughStmt )
                    // InternalGo.g:1755:5: lv_content_8_0= rulefallthroughStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContentFallthroughStmtParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_8_0=rulefallthroughStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_8_0,
                      						"org.xtext.Go.fallthroughStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalGo.g:1773:3: ( (lv_content_9_0= ruleblock ) )
                    {
                    // InternalGo.g:1773:3: ( (lv_content_9_0= ruleblock ) )
                    // InternalGo.g:1774:4: (lv_content_9_0= ruleblock )
                    {
                    // InternalGo.g:1774:4: (lv_content_9_0= ruleblock )
                    // InternalGo.g:1775:5: lv_content_9_0= ruleblock
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContentBlockParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_9_0=ruleblock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_9_0,
                      						"org.xtext.Go.block");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalGo.g:1793:3: ( (lv_content_10_0= ruleifStmt ) )
                    {
                    // InternalGo.g:1793:3: ( (lv_content_10_0= ruleifStmt ) )
                    // InternalGo.g:1794:4: (lv_content_10_0= ruleifStmt )
                    {
                    // InternalGo.g:1794:4: (lv_content_10_0= ruleifStmt )
                    // InternalGo.g:1795:5: lv_content_10_0= ruleifStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContentIfStmtParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_10_0=ruleifStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_10_0,
                      						"org.xtext.Go.ifStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalGo.g:1813:3: ( (lv_content_11_0= ruleswitchStmt ) )
                    {
                    // InternalGo.g:1813:3: ( (lv_content_11_0= ruleswitchStmt ) )
                    // InternalGo.g:1814:4: (lv_content_11_0= ruleswitchStmt )
                    {
                    // InternalGo.g:1814:4: (lv_content_11_0= ruleswitchStmt )
                    // InternalGo.g:1815:5: lv_content_11_0= ruleswitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContentSwitchStmtParserRuleCall_11_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_11_0=ruleswitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_11_0,
                      						"org.xtext.Go.switchStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalGo.g:1833:3: ( (lv_content_12_0= ruleselectStmt ) )
                    {
                    // InternalGo.g:1833:3: ( (lv_content_12_0= ruleselectStmt ) )
                    // InternalGo.g:1834:4: (lv_content_12_0= ruleselectStmt )
                    {
                    // InternalGo.g:1834:4: (lv_content_12_0= ruleselectStmt )
                    // InternalGo.g:1835:5: lv_content_12_0= ruleselectStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContentSelectStmtParserRuleCall_12_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_12_0=ruleselectStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_12_0,
                      						"org.xtext.Go.selectStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalGo.g:1853:3: ( (lv_content_13_0= ruleforStmt ) )
                    {
                    // InternalGo.g:1853:3: ( (lv_content_13_0= ruleforStmt ) )
                    // InternalGo.g:1854:4: (lv_content_13_0= ruleforStmt )
                    {
                    // InternalGo.g:1854:4: (lv_content_13_0= ruleforStmt )
                    // InternalGo.g:1855:5: lv_content_13_0= ruleforStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContentForStmtParserRuleCall_13_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_13_0=ruleforStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_13_0,
                      						"org.xtext.Go.forStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalGo.g:1873:3: ( (lv_content_14_0= ruledeferStmt ) )
                    {
                    // InternalGo.g:1873:3: ( (lv_content_14_0= ruledeferStmt ) )
                    // InternalGo.g:1874:4: (lv_content_14_0= ruledeferStmt )
                    {
                    // InternalGo.g:1874:4: (lv_content_14_0= ruledeferStmt )
                    // InternalGo.g:1875:5: lv_content_14_0= ruledeferStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContentDeferStmtParserRuleCall_14_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_14_0=ruledeferStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_14_0,
                      						"org.xtext.Go.deferStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestatement"


    // $ANTLR start "entryRulesimpleStmt"
    // InternalGo.g:1896:1: entryRulesimpleStmt returns [EObject current=null] : iv_rulesimpleStmt= rulesimpleStmt EOF ;
    public final EObject entryRulesimpleStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulesimpleStmt = null;


        try {
            // InternalGo.g:1896:51: (iv_rulesimpleStmt= rulesimpleStmt EOF )
            // InternalGo.g:1897:2: iv_rulesimpleStmt= rulesimpleStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulesimpleStmt=rulesimpleStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesimpleStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulesimpleStmt"


    // $ANTLR start "rulesimpleStmt"
    // InternalGo.g:1903:1: rulesimpleStmt returns [EObject current=null] : ( ( (lv_content_0_0= rulesendStmt ) ) | ( (lv_content_1_0= ruleexpressionStmt ) ) | ( (lv_content_2_0= ruleincDecStmt ) ) | ( (lv_content_3_0= ruleassignment ) ) | ( (lv_content_4_0= ruleshortVarDecl ) ) | ( (lv_content_5_0= ruleemptyStmt ) ) ) ;
    public final EObject rulesimpleStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_content_0_0 = null;

        EObject lv_content_1_0 = null;

        EObject lv_content_2_0 = null;

        EObject lv_content_3_0 = null;

        EObject lv_content_4_0 = null;

        EObject lv_content_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1909:2: ( ( ( (lv_content_0_0= rulesendStmt ) ) | ( (lv_content_1_0= ruleexpressionStmt ) ) | ( (lv_content_2_0= ruleincDecStmt ) ) | ( (lv_content_3_0= ruleassignment ) ) | ( (lv_content_4_0= ruleshortVarDecl ) ) | ( (lv_content_5_0= ruleemptyStmt ) ) ) )
            // InternalGo.g:1910:2: ( ( (lv_content_0_0= rulesendStmt ) ) | ( (lv_content_1_0= ruleexpressionStmt ) ) | ( (lv_content_2_0= ruleincDecStmt ) ) | ( (lv_content_3_0= ruleassignment ) ) | ( (lv_content_4_0= ruleshortVarDecl ) ) | ( (lv_content_5_0= ruleemptyStmt ) ) )
            {
            // InternalGo.g:1910:2: ( ( (lv_content_0_0= rulesendStmt ) ) | ( (lv_content_1_0= ruleexpressionStmt ) ) | ( (lv_content_2_0= ruleincDecStmt ) ) | ( (lv_content_3_0= ruleassignment ) ) | ( (lv_content_4_0= ruleshortVarDecl ) ) | ( (lv_content_5_0= ruleemptyStmt ) ) )
            int alt26=6;
            alt26 = dfa26.predict(input);
            switch (alt26) {
                case 1 :
                    // InternalGo.g:1911:3: ( (lv_content_0_0= rulesendStmt ) )
                    {
                    // InternalGo.g:1911:3: ( (lv_content_0_0= rulesendStmt ) )
                    // InternalGo.g:1912:4: (lv_content_0_0= rulesendStmt )
                    {
                    // InternalGo.g:1912:4: (lv_content_0_0= rulesendStmt )
                    // InternalGo.g:1913:5: lv_content_0_0= rulesendStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getContentSendStmtParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_0_0=rulesendStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_0_0,
                      						"org.xtext.Go.sendStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1931:3: ( (lv_content_1_0= ruleexpressionStmt ) )
                    {
                    // InternalGo.g:1931:3: ( (lv_content_1_0= ruleexpressionStmt ) )
                    // InternalGo.g:1932:4: (lv_content_1_0= ruleexpressionStmt )
                    {
                    // InternalGo.g:1932:4: (lv_content_1_0= ruleexpressionStmt )
                    // InternalGo.g:1933:5: lv_content_1_0= ruleexpressionStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getContentExpressionStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_1_0=ruleexpressionStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_1_0,
                      						"org.xtext.Go.expressionStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:1951:3: ( (lv_content_2_0= ruleincDecStmt ) )
                    {
                    // InternalGo.g:1951:3: ( (lv_content_2_0= ruleincDecStmt ) )
                    // InternalGo.g:1952:4: (lv_content_2_0= ruleincDecStmt )
                    {
                    // InternalGo.g:1952:4: (lv_content_2_0= ruleincDecStmt )
                    // InternalGo.g:1953:5: lv_content_2_0= ruleincDecStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getContentIncDecStmtParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_2_0=ruleincDecStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_2_0,
                      						"org.xtext.Go.incDecStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:1971:3: ( (lv_content_3_0= ruleassignment ) )
                    {
                    // InternalGo.g:1971:3: ( (lv_content_3_0= ruleassignment ) )
                    // InternalGo.g:1972:4: (lv_content_3_0= ruleassignment )
                    {
                    // InternalGo.g:1972:4: (lv_content_3_0= ruleassignment )
                    // InternalGo.g:1973:5: lv_content_3_0= ruleassignment
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getContentAssignmentParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_3_0=ruleassignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_3_0,
                      						"org.xtext.Go.assignment");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:1991:3: ( (lv_content_4_0= ruleshortVarDecl ) )
                    {
                    // InternalGo.g:1991:3: ( (lv_content_4_0= ruleshortVarDecl ) )
                    // InternalGo.g:1992:4: (lv_content_4_0= ruleshortVarDecl )
                    {
                    // InternalGo.g:1992:4: (lv_content_4_0= ruleshortVarDecl )
                    // InternalGo.g:1993:5: lv_content_4_0= ruleshortVarDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getContentShortVarDeclParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_4_0=ruleshortVarDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_4_0,
                      						"org.xtext.Go.shortVarDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:2011:3: ( (lv_content_5_0= ruleemptyStmt ) )
                    {
                    // InternalGo.g:2011:3: ( (lv_content_5_0= ruleemptyStmt ) )
                    // InternalGo.g:2012:4: (lv_content_5_0= ruleemptyStmt )
                    {
                    // InternalGo.g:2012:4: (lv_content_5_0= ruleemptyStmt )
                    // InternalGo.g:2013:5: lv_content_5_0= ruleemptyStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getContentEmptyStmtParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_5_0=ruleemptyStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_5_0,
                      						"org.xtext.Go.emptyStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulesimpleStmt"


    // $ANTLR start "entryRuleexpressionStmt"
    // InternalGo.g:2034:1: entryRuleexpressionStmt returns [EObject current=null] : iv_ruleexpressionStmt= ruleexpressionStmt EOF ;
    public final EObject entryRuleexpressionStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexpressionStmt = null;


        try {
            // InternalGo.g:2034:55: (iv_ruleexpressionStmt= ruleexpressionStmt EOF )
            // InternalGo.g:2035:2: iv_ruleexpressionStmt= ruleexpressionStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexpressionStmt=ruleexpressionStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpressionStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexpressionStmt"


    // $ANTLR start "ruleexpressionStmt"
    // InternalGo.g:2041:1: ruleexpressionStmt returns [EObject current=null] : ( (lv_expr_0_0= ruleexpression ) ) ;
    public final EObject ruleexpressionStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_expr_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2047:2: ( ( (lv_expr_0_0= ruleexpression ) ) )
            // InternalGo.g:2048:2: ( (lv_expr_0_0= ruleexpression ) )
            {
            // InternalGo.g:2048:2: ( (lv_expr_0_0= ruleexpression ) )
            // InternalGo.g:2049:3: (lv_expr_0_0= ruleexpression )
            {
            // InternalGo.g:2049:3: (lv_expr_0_0= ruleexpression )
            // InternalGo.g:2050:4: lv_expr_0_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getExpressionStmtAccess().getExprExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_expr_0_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getExpressionStmtRule());
              				}
              				set(
              					current,
              					"expr",
              					lv_expr_0_0,
              					"org.xtext.Go.expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexpressionStmt"


    // $ANTLR start "entryRulesendStmt"
    // InternalGo.g:2070:1: entryRulesendStmt returns [EObject current=null] : iv_rulesendStmt= rulesendStmt EOF ;
    public final EObject entryRulesendStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulesendStmt = null;


        try {
            // InternalGo.g:2070:49: (iv_rulesendStmt= rulesendStmt EOF )
            // InternalGo.g:2071:2: iv_rulesendStmt= rulesendStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSendStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulesendStmt=rulesendStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesendStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulesendStmt"


    // $ANTLR start "rulesendStmt"
    // InternalGo.g:2077:1: rulesendStmt returns [EObject current=null] : ( ( (lv_expr1_0_0= ruleexpression ) ) otherlv_1= '<-' ( (lv_expr2_2_0= ruleexpression ) ) ) ;
    public final EObject rulesendStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expr1_0_0 = null;

        EObject lv_expr2_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2083:2: ( ( ( (lv_expr1_0_0= ruleexpression ) ) otherlv_1= '<-' ( (lv_expr2_2_0= ruleexpression ) ) ) )
            // InternalGo.g:2084:2: ( ( (lv_expr1_0_0= ruleexpression ) ) otherlv_1= '<-' ( (lv_expr2_2_0= ruleexpression ) ) )
            {
            // InternalGo.g:2084:2: ( ( (lv_expr1_0_0= ruleexpression ) ) otherlv_1= '<-' ( (lv_expr2_2_0= ruleexpression ) ) )
            // InternalGo.g:2085:3: ( (lv_expr1_0_0= ruleexpression ) ) otherlv_1= '<-' ( (lv_expr2_2_0= ruleexpression ) )
            {
            // InternalGo.g:2085:3: ( (lv_expr1_0_0= ruleexpression ) )
            // InternalGo.g:2086:4: (lv_expr1_0_0= ruleexpression )
            {
            // InternalGo.g:2086:4: (lv_expr1_0_0= ruleexpression )
            // InternalGo.g:2087:5: lv_expr1_0_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSendStmtAccess().getExpr1ExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_expr1_0_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSendStmtRule());
              					}
              					set(
              						current,
              						"expr1",
              						lv_expr1_0_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,56,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSendStmtAccess().getLessThanSignHyphenMinusKeyword_1());
              		
            }
            // InternalGo.g:2108:3: ( (lv_expr2_2_0= ruleexpression ) )
            // InternalGo.g:2109:4: (lv_expr2_2_0= ruleexpression )
            {
            // InternalGo.g:2109:4: (lv_expr2_2_0= ruleexpression )
            // InternalGo.g:2110:5: lv_expr2_2_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSendStmtAccess().getExpr2ExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr2_2_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSendStmtRule());
              					}
              					set(
              						current,
              						"expr2",
              						lv_expr2_2_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulesendStmt"


    // $ANTLR start "entryRuleincDecStmt"
    // InternalGo.g:2131:1: entryRuleincDecStmt returns [EObject current=null] : iv_ruleincDecStmt= ruleincDecStmt EOF ;
    public final EObject entryRuleincDecStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleincDecStmt = null;


        try {
            // InternalGo.g:2131:51: (iv_ruleincDecStmt= ruleincDecStmt EOF )
            // InternalGo.g:2132:2: iv_ruleincDecStmt= ruleincDecStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIncDecStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleincDecStmt=ruleincDecStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleincDecStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleincDecStmt"


    // $ANTLR start "ruleincDecStmt"
    // InternalGo.g:2138:1: ruleincDecStmt returns [EObject current=null] : ( ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= '++' | otherlv_2= '--' ) ) ;
    public final EObject ruleincDecStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_expr_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2144:2: ( ( ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= '++' | otherlv_2= '--' ) ) )
            // InternalGo.g:2145:2: ( ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= '++' | otherlv_2= '--' ) )
            {
            // InternalGo.g:2145:2: ( ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= '++' | otherlv_2= '--' ) )
            // InternalGo.g:2146:3: ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= '++' | otherlv_2= '--' )
            {
            // InternalGo.g:2146:3: ( (lv_expr_0_0= ruleexpression ) )
            // InternalGo.g:2147:4: (lv_expr_0_0= ruleexpression )
            {
            // InternalGo.g:2147:4: (lv_expr_0_0= ruleexpression )
            // InternalGo.g:2148:5: lv_expr_0_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIncDecStmtAccess().getExprExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_expr_0_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIncDecStmtRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_0_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2165:3: (otherlv_1= '++' | otherlv_2= '--' )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==57) ) {
                alt27=1;
            }
            else if ( (LA27_0==58) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalGo.g:2166:4: otherlv_1= '++'
                    {
                    otherlv_1=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getIncDecStmtAccess().getPlusSignPlusSignKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:2171:4: otherlv_2= '--'
                    {
                    otherlv_2=(Token)match(input,58,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getIncDecStmtAccess().getHyphenMinusHyphenMinusKeyword_1_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleincDecStmt"


    // $ANTLR start "entryRuleassignment"
    // InternalGo.g:2180:1: entryRuleassignment returns [EObject current=null] : iv_ruleassignment= ruleassignment EOF ;
    public final EObject entryRuleassignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleassignment = null;


        try {
            // InternalGo.g:2180:51: (iv_ruleassignment= ruleassignment EOF )
            // InternalGo.g:2181:2: iv_ruleassignment= ruleassignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleassignment=ruleassignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleassignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleassignment"


    // $ANTLR start "ruleassignment"
    // InternalGo.g:2187:1: ruleassignment returns [EObject current=null] : ( ( (lv_exprList1_0_0= ruleexpressionList ) ) ( (lv_operation_1_0= ruleassign_op ) ) ( (lv_exprList2_2_0= ruleexpressionList ) ) ) ;
    public final EObject ruleassignment() throws RecognitionException {
        EObject current = null;

        EObject lv_exprList1_0_0 = null;

        AntlrDatatypeRuleToken lv_operation_1_0 = null;

        EObject lv_exprList2_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2193:2: ( ( ( (lv_exprList1_0_0= ruleexpressionList ) ) ( (lv_operation_1_0= ruleassign_op ) ) ( (lv_exprList2_2_0= ruleexpressionList ) ) ) )
            // InternalGo.g:2194:2: ( ( (lv_exprList1_0_0= ruleexpressionList ) ) ( (lv_operation_1_0= ruleassign_op ) ) ( (lv_exprList2_2_0= ruleexpressionList ) ) )
            {
            // InternalGo.g:2194:2: ( ( (lv_exprList1_0_0= ruleexpressionList ) ) ( (lv_operation_1_0= ruleassign_op ) ) ( (lv_exprList2_2_0= ruleexpressionList ) ) )
            // InternalGo.g:2195:3: ( (lv_exprList1_0_0= ruleexpressionList ) ) ( (lv_operation_1_0= ruleassign_op ) ) ( (lv_exprList2_2_0= ruleexpressionList ) )
            {
            // InternalGo.g:2195:3: ( (lv_exprList1_0_0= ruleexpressionList ) )
            // InternalGo.g:2196:4: (lv_exprList1_0_0= ruleexpressionList )
            {
            // InternalGo.g:2196:4: (lv_exprList1_0_0= ruleexpressionList )
            // InternalGo.g:2197:5: lv_exprList1_0_0= ruleexpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExprList1ExpressionListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_27);
            lv_exprList1_0_0=ruleexpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"exprList1",
              						lv_exprList1_0_0,
              						"org.xtext.Go.expressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2214:3: ( (lv_operation_1_0= ruleassign_op ) )
            // InternalGo.g:2215:4: (lv_operation_1_0= ruleassign_op )
            {
            // InternalGo.g:2215:4: (lv_operation_1_0= ruleassign_op )
            // InternalGo.g:2216:5: lv_operation_1_0= ruleassign_op
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getOperationAssign_opParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_operation_1_0=ruleassign_op();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"operation",
              						lv_operation_1_0,
              						"org.xtext.Go.assign_op");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2233:3: ( (lv_exprList2_2_0= ruleexpressionList ) )
            // InternalGo.g:2234:4: (lv_exprList2_2_0= ruleexpressionList )
            {
            // InternalGo.g:2234:4: (lv_exprList2_2_0= ruleexpressionList )
            // InternalGo.g:2235:5: lv_exprList2_2_0= ruleexpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExprList2ExpressionListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_exprList2_2_0=ruleexpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"exprList2",
              						lv_exprList2_2_0,
              						"org.xtext.Go.expressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleassignment"


    // $ANTLR start "entryRuleassign_op"
    // InternalGo.g:2256:1: entryRuleassign_op returns [String current=null] : iv_ruleassign_op= ruleassign_op EOF ;
    public final String entryRuleassign_op() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleassign_op = null;


        try {
            // InternalGo.g:2256:49: (iv_ruleassign_op= ruleassign_op EOF )
            // InternalGo.g:2257:2: iv_ruleassign_op= ruleassign_op EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssign_opRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleassign_op=ruleassign_op();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleassign_op.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleassign_op"


    // $ANTLR start "ruleassign_op"
    // InternalGo.g:2263:1: ruleassign_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '+' | kw= '-' | kw= '|' | kw= '^' | kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )? kw= '=' ) ;
    public final AntlrDatatypeRuleToken ruleassign_op() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:2269:2: ( ( (kw= '+' | kw= '-' | kw= '|' | kw= '^' | kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )? kw= '=' ) )
            // InternalGo.g:2270:2: ( (kw= '+' | kw= '-' | kw= '|' | kw= '^' | kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )? kw= '=' )
            {
            // InternalGo.g:2270:2: ( (kw= '+' | kw= '-' | kw= '|' | kw= '^' | kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )? kw= '=' )
            // InternalGo.g:2271:3: (kw= '+' | kw= '-' | kw= '|' | kw= '^' | kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )? kw= '='
            {
            // InternalGo.g:2271:3: (kw= '+' | kw= '-' | kw= '|' | kw= '^' | kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )?
            int alt28=12;
            switch ( input.LA(1) ) {
                case 59:
                    {
                    alt28=1;
                    }
                    break;
                case 60:
                    {
                    alt28=2;
                    }
                    break;
                case 61:
                    {
                    alt28=3;
                    }
                    break;
                case 62:
                    {
                    alt28=4;
                    }
                    break;
                case 63:
                    {
                    alt28=5;
                    }
                    break;
                case 64:
                    {
                    alt28=6;
                    }
                    break;
                case 65:
                    {
                    alt28=7;
                    }
                    break;
                case 66:
                    {
                    alt28=8;
                    }
                    break;
                case 67:
                    {
                    alt28=9;
                    }
                    break;
                case 68:
                    {
                    alt28=10;
                    }
                    break;
                case 69:
                    {
                    alt28=11;
                    }
                    break;
            }

            switch (alt28) {
                case 1 :
                    // InternalGo.g:2272:4: kw= '+'
                    {
                    kw=(Token)match(input,59,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getPlusSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:2278:4: kw= '-'
                    {
                    kw=(Token)match(input,60,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getHyphenMinusKeyword_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:2284:4: kw= '|'
                    {
                    kw=(Token)match(input,61,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getVerticalLineKeyword_0_2());
                      			
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:2290:4: kw= '^'
                    {
                    kw=(Token)match(input,62,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getCircumflexAccentKeyword_0_3());
                      			
                    }

                    }
                    break;
                case 5 :
                    // InternalGo.g:2296:4: kw= '*'
                    {
                    kw=(Token)match(input,63,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getAsteriskKeyword_0_4());
                      			
                    }

                    }
                    break;
                case 6 :
                    // InternalGo.g:2302:4: kw= '/'
                    {
                    kw=(Token)match(input,64,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getSolidusKeyword_0_5());
                      			
                    }

                    }
                    break;
                case 7 :
                    // InternalGo.g:2308:4: kw= '%'
                    {
                    kw=(Token)match(input,65,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getPercentSignKeyword_0_6());
                      			
                    }

                    }
                    break;
                case 8 :
                    // InternalGo.g:2314:4: kw= '<<'
                    {
                    kw=(Token)match(input,66,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getLessThanSignLessThanSignKeyword_0_7());
                      			
                    }

                    }
                    break;
                case 9 :
                    // InternalGo.g:2320:4: kw= '>>'
                    {
                    kw=(Token)match(input,67,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getGreaterThanSignGreaterThanSignKeyword_0_8());
                      			
                    }

                    }
                    break;
                case 10 :
                    // InternalGo.g:2326:4: kw= '&'
                    {
                    kw=(Token)match(input,68,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getAmpersandKeyword_0_9());
                      			
                    }

                    }
                    break;
                case 11 :
                    // InternalGo.g:2332:4: kw= '&^'
                    {
                    kw=(Token)match(input,69,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getAmpersandCircumflexAccentKeyword_0_10());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getAssign_opAccess().getEqualsSignKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleassign_op"


    // $ANTLR start "entryRuleshortVarDecl"
    // InternalGo.g:2347:1: entryRuleshortVarDecl returns [EObject current=null] : iv_ruleshortVarDecl= ruleshortVarDecl EOF ;
    public final EObject entryRuleshortVarDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleshortVarDecl = null;


        try {
            // InternalGo.g:2347:53: (iv_ruleshortVarDecl= ruleshortVarDecl EOF )
            // InternalGo.g:2348:2: iv_ruleshortVarDecl= ruleshortVarDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShortVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleshortVarDecl=ruleshortVarDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleshortVarDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleshortVarDecl"


    // $ANTLR start "ruleshortVarDecl"
    // InternalGo.g:2354:1: ruleshortVarDecl returns [EObject current=null] : ( ( (lv_idList_0_0= ruleidentifierList ) ) otherlv_1= ':=' ( (lv_exprList_2_0= ruleexpressionList ) ) ) ;
    public final EObject ruleshortVarDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_idList_0_0 = null;

        EObject lv_exprList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2360:2: ( ( ( (lv_idList_0_0= ruleidentifierList ) ) otherlv_1= ':=' ( (lv_exprList_2_0= ruleexpressionList ) ) ) )
            // InternalGo.g:2361:2: ( ( (lv_idList_0_0= ruleidentifierList ) ) otherlv_1= ':=' ( (lv_exprList_2_0= ruleexpressionList ) ) )
            {
            // InternalGo.g:2361:2: ( ( (lv_idList_0_0= ruleidentifierList ) ) otherlv_1= ':=' ( (lv_exprList_2_0= ruleexpressionList ) ) )
            // InternalGo.g:2362:3: ( (lv_idList_0_0= ruleidentifierList ) ) otherlv_1= ':=' ( (lv_exprList_2_0= ruleexpressionList ) )
            {
            // InternalGo.g:2362:3: ( (lv_idList_0_0= ruleidentifierList ) )
            // InternalGo.g:2363:4: (lv_idList_0_0= ruleidentifierList )
            {
            // InternalGo.g:2363:4: (lv_idList_0_0= ruleidentifierList )
            // InternalGo.g:2364:5: lv_idList_0_0= ruleidentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getShortVarDeclAccess().getIdListIdentifierListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_28);
            lv_idList_0_0=ruleidentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
              					}
              					set(
              						current,
              						"idList",
              						lv_idList_0_0,
              						"org.xtext.Go.identifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,70,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1());
              		
            }
            // InternalGo.g:2385:3: ( (lv_exprList_2_0= ruleexpressionList ) )
            // InternalGo.g:2386:4: (lv_exprList_2_0= ruleexpressionList )
            {
            // InternalGo.g:2386:4: (lv_exprList_2_0= ruleexpressionList )
            // InternalGo.g:2387:5: lv_exprList_2_0= ruleexpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getShortVarDeclAccess().getExprListExpressionListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_exprList_2_0=ruleexpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
              					}
              					set(
              						current,
              						"exprList",
              						lv_exprList_2_0,
              						"org.xtext.Go.expressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleshortVarDecl"


    // $ANTLR start "entryRuleemptyStmt"
    // InternalGo.g:2408:1: entryRuleemptyStmt returns [EObject current=null] : iv_ruleemptyStmt= ruleemptyStmt EOF ;
    public final EObject entryRuleemptyStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleemptyStmt = null;


        try {
            // InternalGo.g:2408:50: (iv_ruleemptyStmt= ruleemptyStmt EOF )
            // InternalGo.g:2409:2: iv_ruleemptyStmt= ruleemptyStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleemptyStmt=ruleemptyStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleemptyStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleemptyStmt"


    // $ANTLR start "ruleemptyStmt"
    // InternalGo.g:2415:1: ruleemptyStmt returns [EObject current=null] : ( (lv_content_0_0= RULE_WS ) ) ;
    public final EObject ruleemptyStmt() throws RecognitionException {
        EObject current = null;

        Token lv_content_0_0=null;


        	enterRule();

        try {
            // InternalGo.g:2421:2: ( ( (lv_content_0_0= RULE_WS ) ) )
            // InternalGo.g:2422:2: ( (lv_content_0_0= RULE_WS ) )
            {
            // InternalGo.g:2422:2: ( (lv_content_0_0= RULE_WS ) )
            // InternalGo.g:2423:3: (lv_content_0_0= RULE_WS )
            {
            // InternalGo.g:2423:3: (lv_content_0_0= RULE_WS )
            // InternalGo.g:2424:4: lv_content_0_0= RULE_WS
            {
            lv_content_0_0=(Token)match(input,RULE_WS,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_content_0_0, grammarAccess.getEmptyStmtAccess().getContentWSTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getEmptyStmtRule());
              				}
              				setWithLastConsumed(
              					current,
              					"content",
              					lv_content_0_0,
              					"org.eclipse.xtext.common.Terminals.WS");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleemptyStmt"


    // $ANTLR start "entryRulelabeledStmt"
    // InternalGo.g:2443:1: entryRulelabeledStmt returns [EObject current=null] : iv_rulelabeledStmt= rulelabeledStmt EOF ;
    public final EObject entryRulelabeledStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulelabeledStmt = null;


        try {
            // InternalGo.g:2443:52: (iv_rulelabeledStmt= rulelabeledStmt EOF )
            // InternalGo.g:2444:2: iv_rulelabeledStmt= rulelabeledStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabeledStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulelabeledStmt=rulelabeledStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelabeledStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulelabeledStmt"


    // $ANTLR start "rulelabeledStmt"
    // InternalGo.g:2450:1: rulelabeledStmt returns [EObject current=null] : ( ( (lv_label_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':' ( (lv_stmt_2_0= rulestatement ) ) ) ;
    public final EObject rulelabeledStmt() throws RecognitionException {
        EObject current = null;

        Token lv_label_0_0=null;
        Token otherlv_1=null;
        EObject lv_stmt_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2456:2: ( ( ( (lv_label_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':' ( (lv_stmt_2_0= rulestatement ) ) ) )
            // InternalGo.g:2457:2: ( ( (lv_label_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':' ( (lv_stmt_2_0= rulestatement ) ) )
            {
            // InternalGo.g:2457:2: ( ( (lv_label_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':' ( (lv_stmt_2_0= rulestatement ) ) )
            // InternalGo.g:2458:3: ( (lv_label_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':' ( (lv_stmt_2_0= rulestatement ) )
            {
            // InternalGo.g:2458:3: ( (lv_label_0_0= RULE_IDENTIFIER ) )
            // InternalGo.g:2459:4: (lv_label_0_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:2459:4: (lv_label_0_0= RULE_IDENTIFIER )
            // InternalGo.g:2460:5: lv_label_0_0= RULE_IDENTIFIER
            {
            lv_label_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_label_0_0, grammarAccess.getLabeledStmtAccess().getLabelIDENTIFIERTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLabeledStmtRule());
              					}
              					setWithLastConsumed(
              						current,
              						"label",
              						lv_label_0_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,71,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLabeledStmtAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:2480:3: ( (lv_stmt_2_0= rulestatement ) )
            // InternalGo.g:2481:4: (lv_stmt_2_0= rulestatement )
            {
            // InternalGo.g:2481:4: (lv_stmt_2_0= rulestatement )
            // InternalGo.g:2482:5: lv_stmt_2_0= rulestatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLabeledStmtAccess().getStmtStatementParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_stmt_2_0=rulestatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLabeledStmtRule());
              					}
              					set(
              						current,
              						"stmt",
              						lv_stmt_2_0,
              						"org.xtext.Go.statement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulelabeledStmt"


    // $ANTLR start "entryRulereturnStmt"
    // InternalGo.g:2503:1: entryRulereturnStmt returns [EObject current=null] : iv_rulereturnStmt= rulereturnStmt EOF ;
    public final EObject entryRulereturnStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulereturnStmt = null;


        try {
            // InternalGo.g:2503:51: (iv_rulereturnStmt= rulereturnStmt EOF )
            // InternalGo.g:2504:2: iv_rulereturnStmt= rulereturnStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulereturnStmt=rulereturnStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulereturnStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulereturnStmt"


    // $ANTLR start "rulereturnStmt"
    // InternalGo.g:2510:1: rulereturnStmt returns [EObject current=null] : (otherlv_0= 'return' ( (lv_exprList_1_0= ruleexpressionList ) )? ) ;
    public final EObject rulereturnStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_exprList_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2516:2: ( (otherlv_0= 'return' ( (lv_exprList_1_0= ruleexpressionList ) )? ) )
            // InternalGo.g:2517:2: (otherlv_0= 'return' ( (lv_exprList_1_0= ruleexpressionList ) )? )
            {
            // InternalGo.g:2517:2: (otherlv_0= 'return' ( (lv_exprList_1_0= ruleexpressionList ) )? )
            // InternalGo.g:2518:3: otherlv_0= 'return' ( (lv_exprList_1_0= ruleexpressionList ) )?
            {
            otherlv_0=(Token)match(input,72,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getReturnStmtAccess().getReturnKeyword_0());
              		
            }
            // InternalGo.g:2522:3: ( (lv_exprList_1_0= ruleexpressionList ) )?
            int alt29=2;
            switch ( input.LA(1) ) {
                case RULE_IDENTIFIER:
                case RULE_STRING_LIT:
                case RULE_INT_LIT:
                case RULE_FLOAT_LIT:
                case RULE_IMAGINARY_LIT:
                case RULE_RUNE_LIT:
                case RULE_BINARY_OP:
                case 45:
                case 47:
                case 50:
                case 52:
                case 56:
                case 59:
                case 60:
                case 62:
                case 63:
                case 68:
                case 87:
                case 89:
                case 90:
                case 91:
                case 93:
                case 94:
                    {
                    alt29=1;
                    }
                    break;
                case 95:
                    {
                    int LA29_2 = input.LA(2);

                    if ( (synpred59_InternalGo()) ) {
                        alt29=1;
                    }
                    }
                    break;
                case EOF:
                    {
                    int LA29_3 = input.LA(2);

                    if ( (synpred59_InternalGo()) ) {
                        alt29=1;
                    }
                    }
                    break;
            }

            switch (alt29) {
                case 1 :
                    // InternalGo.g:2523:4: (lv_exprList_1_0= ruleexpressionList )
                    {
                    // InternalGo.g:2523:4: (lv_exprList_1_0= ruleexpressionList )
                    // InternalGo.g:2524:5: lv_exprList_1_0= ruleexpressionList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReturnStmtAccess().getExprListExpressionListParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_exprList_1_0=ruleexpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReturnStmtRule());
                      					}
                      					set(
                      						current,
                      						"exprList",
                      						lv_exprList_1_0,
                      						"org.xtext.Go.expressionList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulereturnStmt"


    // $ANTLR start "entryRulebreakStmt"
    // InternalGo.g:2545:1: entryRulebreakStmt returns [EObject current=null] : iv_rulebreakStmt= rulebreakStmt EOF ;
    public final EObject entryRulebreakStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulebreakStmt = null;


        try {
            // InternalGo.g:2545:50: (iv_rulebreakStmt= rulebreakStmt EOF )
            // InternalGo.g:2546:2: iv_rulebreakStmt= rulebreakStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBreakStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulebreakStmt=rulebreakStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulebreakStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulebreakStmt"


    // $ANTLR start "rulebreakStmt"
    // InternalGo.g:2552:1: rulebreakStmt returns [EObject current=null] : (otherlv_0= 'break' ( (lv_label_1_0= RULE_IDENTIFIER ) )? ) ;
    public final EObject rulebreakStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_label_1_0=null;


        	enterRule();

        try {
            // InternalGo.g:2558:2: ( (otherlv_0= 'break' ( (lv_label_1_0= RULE_IDENTIFIER ) )? ) )
            // InternalGo.g:2559:2: (otherlv_0= 'break' ( (lv_label_1_0= RULE_IDENTIFIER ) )? )
            {
            // InternalGo.g:2559:2: (otherlv_0= 'break' ( (lv_label_1_0= RULE_IDENTIFIER ) )? )
            // InternalGo.g:2560:3: otherlv_0= 'break' ( (lv_label_1_0= RULE_IDENTIFIER ) )?
            {
            otherlv_0=(Token)match(input,73,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBreakStmtAccess().getBreakKeyword_0());
              		
            }
            // InternalGo.g:2564:3: ( (lv_label_1_0= RULE_IDENTIFIER ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==RULE_IDENTIFIER) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalGo.g:2565:4: (lv_label_1_0= RULE_IDENTIFIER )
                    {
                    // InternalGo.g:2565:4: (lv_label_1_0= RULE_IDENTIFIER )
                    // InternalGo.g:2566:5: lv_label_1_0= RULE_IDENTIFIER
                    {
                    lv_label_1_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_1_0, grammarAccess.getBreakStmtAccess().getLabelIDENTIFIERTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getBreakStmtRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_1_0,
                      						"org.xtext.Go.IDENTIFIER");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulebreakStmt"


    // $ANTLR start "entryRulecontinueStmt"
    // InternalGo.g:2586:1: entryRulecontinueStmt returns [EObject current=null] : iv_rulecontinueStmt= rulecontinueStmt EOF ;
    public final EObject entryRulecontinueStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulecontinueStmt = null;


        try {
            // InternalGo.g:2586:53: (iv_rulecontinueStmt= rulecontinueStmt EOF )
            // InternalGo.g:2587:2: iv_rulecontinueStmt= rulecontinueStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContinueStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecontinueStmt=rulecontinueStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecontinueStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecontinueStmt"


    // $ANTLR start "rulecontinueStmt"
    // InternalGo.g:2593:1: rulecontinueStmt returns [EObject current=null] : (otherlv_0= 'continue' ( (lv_label_1_0= RULE_IDENTIFIER ) )? ) ;
    public final EObject rulecontinueStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_label_1_0=null;


        	enterRule();

        try {
            // InternalGo.g:2599:2: ( (otherlv_0= 'continue' ( (lv_label_1_0= RULE_IDENTIFIER ) )? ) )
            // InternalGo.g:2600:2: (otherlv_0= 'continue' ( (lv_label_1_0= RULE_IDENTIFIER ) )? )
            {
            // InternalGo.g:2600:2: (otherlv_0= 'continue' ( (lv_label_1_0= RULE_IDENTIFIER ) )? )
            // InternalGo.g:2601:3: otherlv_0= 'continue' ( (lv_label_1_0= RULE_IDENTIFIER ) )?
            {
            otherlv_0=(Token)match(input,74,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getContinueStmtAccess().getContinueKeyword_0());
              		
            }
            // InternalGo.g:2605:3: ( (lv_label_1_0= RULE_IDENTIFIER ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==RULE_IDENTIFIER) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalGo.g:2606:4: (lv_label_1_0= RULE_IDENTIFIER )
                    {
                    // InternalGo.g:2606:4: (lv_label_1_0= RULE_IDENTIFIER )
                    // InternalGo.g:2607:5: lv_label_1_0= RULE_IDENTIFIER
                    {
                    lv_label_1_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_1_0, grammarAccess.getContinueStmtAccess().getLabelIDENTIFIERTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getContinueStmtRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_1_0,
                      						"org.xtext.Go.IDENTIFIER");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecontinueStmt"


    // $ANTLR start "entryRulegotoStmt"
    // InternalGo.g:2627:1: entryRulegotoStmt returns [EObject current=null] : iv_rulegotoStmt= rulegotoStmt EOF ;
    public final EObject entryRulegotoStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulegotoStmt = null;


        try {
            // InternalGo.g:2627:49: (iv_rulegotoStmt= rulegotoStmt EOF )
            // InternalGo.g:2628:2: iv_rulegotoStmt= rulegotoStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGotoStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulegotoStmt=rulegotoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulegotoStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulegotoStmt"


    // $ANTLR start "rulegotoStmt"
    // InternalGo.g:2634:1: rulegotoStmt returns [EObject current=null] : (otherlv_0= 'goto' ( (lv_label_1_0= RULE_IDENTIFIER ) ) ) ;
    public final EObject rulegotoStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_label_1_0=null;


        	enterRule();

        try {
            // InternalGo.g:2640:2: ( (otherlv_0= 'goto' ( (lv_label_1_0= RULE_IDENTIFIER ) ) ) )
            // InternalGo.g:2641:2: (otherlv_0= 'goto' ( (lv_label_1_0= RULE_IDENTIFIER ) ) )
            {
            // InternalGo.g:2641:2: (otherlv_0= 'goto' ( (lv_label_1_0= RULE_IDENTIFIER ) ) )
            // InternalGo.g:2642:3: otherlv_0= 'goto' ( (lv_label_1_0= RULE_IDENTIFIER ) )
            {
            otherlv_0=(Token)match(input,75,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getGotoStmtAccess().getGotoKeyword_0());
              		
            }
            // InternalGo.g:2646:3: ( (lv_label_1_0= RULE_IDENTIFIER ) )
            // InternalGo.g:2647:4: (lv_label_1_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:2647:4: (lv_label_1_0= RULE_IDENTIFIER )
            // InternalGo.g:2648:5: lv_label_1_0= RULE_IDENTIFIER
            {
            lv_label_1_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_label_1_0, grammarAccess.getGotoStmtAccess().getLabelIDENTIFIERTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGotoStmtRule());
              					}
              					setWithLastConsumed(
              						current,
              						"label",
              						lv_label_1_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulegotoStmt"


    // $ANTLR start "entryRulefallthroughStmt"
    // InternalGo.g:2668:1: entryRulefallthroughStmt returns [EObject current=null] : iv_rulefallthroughStmt= rulefallthroughStmt EOF ;
    public final EObject entryRulefallthroughStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefallthroughStmt = null;


        try {
            // InternalGo.g:2668:56: (iv_rulefallthroughStmt= rulefallthroughStmt EOF )
            // InternalGo.g:2669:2: iv_rulefallthroughStmt= rulefallthroughStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFallthroughStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefallthroughStmt=rulefallthroughStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefallthroughStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefallthroughStmt"


    // $ANTLR start "rulefallthroughStmt"
    // InternalGo.g:2675:1: rulefallthroughStmt returns [EObject current=null] : ( (lv_content_0_0= 'fallthrough' ) ) ;
    public final EObject rulefallthroughStmt() throws RecognitionException {
        EObject current = null;

        Token lv_content_0_0=null;


        	enterRule();

        try {
            // InternalGo.g:2681:2: ( ( (lv_content_0_0= 'fallthrough' ) ) )
            // InternalGo.g:2682:2: ( (lv_content_0_0= 'fallthrough' ) )
            {
            // InternalGo.g:2682:2: ( (lv_content_0_0= 'fallthrough' ) )
            // InternalGo.g:2683:3: (lv_content_0_0= 'fallthrough' )
            {
            // InternalGo.g:2683:3: (lv_content_0_0= 'fallthrough' )
            // InternalGo.g:2684:4: lv_content_0_0= 'fallthrough'
            {
            lv_content_0_0=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_content_0_0, grammarAccess.getFallthroughStmtAccess().getContentFallthroughKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFallthroughStmtRule());
              				}
              				setWithLastConsumed(current, "content", lv_content_0_0, "fallthrough");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefallthroughStmt"


    // $ANTLR start "entryRuledeferStmt"
    // InternalGo.g:2699:1: entryRuledeferStmt returns [EObject current=null] : iv_ruledeferStmt= ruledeferStmt EOF ;
    public final EObject entryRuledeferStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledeferStmt = null;


        try {
            // InternalGo.g:2699:50: (iv_ruledeferStmt= ruledeferStmt EOF )
            // InternalGo.g:2700:2: iv_ruledeferStmt= ruledeferStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeferStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledeferStmt=ruledeferStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledeferStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledeferStmt"


    // $ANTLR start "ruledeferStmt"
    // InternalGo.g:2706:1: ruledeferStmt returns [EObject current=null] : (otherlv_0= 'defer' ( (lv_expr_1_0= ruleexpression ) ) ) ;
    public final EObject ruledeferStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_expr_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2712:2: ( (otherlv_0= 'defer' ( (lv_expr_1_0= ruleexpression ) ) ) )
            // InternalGo.g:2713:2: (otherlv_0= 'defer' ( (lv_expr_1_0= ruleexpression ) ) )
            {
            // InternalGo.g:2713:2: (otherlv_0= 'defer' ( (lv_expr_1_0= ruleexpression ) ) )
            // InternalGo.g:2714:3: otherlv_0= 'defer' ( (lv_expr_1_0= ruleexpression ) )
            {
            otherlv_0=(Token)match(input,77,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDeferStmtAccess().getDeferKeyword_0());
              		
            }
            // InternalGo.g:2718:3: ( (lv_expr_1_0= ruleexpression ) )
            // InternalGo.g:2719:4: (lv_expr_1_0= ruleexpression )
            {
            // InternalGo.g:2719:4: (lv_expr_1_0= ruleexpression )
            // InternalGo.g:2720:5: lv_expr_1_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDeferStmtAccess().getExprExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_1_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDeferStmtRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_1_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledeferStmt"


    // $ANTLR start "entryRuleifStmt"
    // InternalGo.g:2741:1: entryRuleifStmt returns [EObject current=null] : iv_ruleifStmt= ruleifStmt EOF ;
    public final EObject entryRuleifStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleifStmt = null;


        try {
            // InternalGo.g:2741:47: (iv_ruleifStmt= ruleifStmt EOF )
            // InternalGo.g:2742:2: iv_ruleifStmt= ruleifStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleifStmt=ruleifStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleifStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleifStmt"


    // $ANTLR start "ruleifStmt"
    // InternalGo.g:2748:1: ruleifStmt returns [EObject current=null] : (otherlv_0= 'if' ( ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_3_0= ruleexpression ) ) ( (lv_codeBlock_4_0= ruleblock ) ) (otherlv_5= 'else' ( ( (lv_ifStatement_6_0= ruleifStmt ) ) | ( (lv_codeBlockIf_7_0= ruleblock ) ) ) )? ) ;
    public final EObject ruleifStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_5=null;
        EObject lv_simplStatement_1_0 = null;

        EObject lv_expr_3_0 = null;

        EObject lv_codeBlock_4_0 = null;

        EObject lv_ifStatement_6_0 = null;

        EObject lv_codeBlockIf_7_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2754:2: ( (otherlv_0= 'if' ( ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_3_0= ruleexpression ) ) ( (lv_codeBlock_4_0= ruleblock ) ) (otherlv_5= 'else' ( ( (lv_ifStatement_6_0= ruleifStmt ) ) | ( (lv_codeBlockIf_7_0= ruleblock ) ) ) )? ) )
            // InternalGo.g:2755:2: (otherlv_0= 'if' ( ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_3_0= ruleexpression ) ) ( (lv_codeBlock_4_0= ruleblock ) ) (otherlv_5= 'else' ( ( (lv_ifStatement_6_0= ruleifStmt ) ) | ( (lv_codeBlockIf_7_0= ruleblock ) ) ) )? )
            {
            // InternalGo.g:2755:2: (otherlv_0= 'if' ( ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_3_0= ruleexpression ) ) ( (lv_codeBlock_4_0= ruleblock ) ) (otherlv_5= 'else' ( ( (lv_ifStatement_6_0= ruleifStmt ) ) | ( (lv_codeBlockIf_7_0= ruleblock ) ) ) )? )
            // InternalGo.g:2756:3: otherlv_0= 'if' ( ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_3_0= ruleexpression ) ) ( (lv_codeBlock_4_0= ruleblock ) ) (otherlv_5= 'else' ( ( (lv_ifStatement_6_0= ruleifStmt ) ) | ( (lv_codeBlockIf_7_0= ruleblock ) ) ) )?
            {
            otherlv_0=(Token)match(input,78,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIfStmtAccess().getIfKeyword_0());
              		
            }
            // InternalGo.g:2760:3: ( ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos )?
            int alt32=2;
            alt32 = dfa32.predict(input);
            switch (alt32) {
                case 1 :
                    // InternalGo.g:2761:4: ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos
                    {
                    // InternalGo.g:2761:4: ( (lv_simplStatement_1_0= rulesimpleStmt ) )
                    // InternalGo.g:2762:5: (lv_simplStatement_1_0= rulesimpleStmt )
                    {
                    // InternalGo.g:2762:5: (lv_simplStatement_1_0= rulesimpleStmt )
                    // InternalGo.g:2763:6: lv_simplStatement_1_0= rulesimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIfStmtAccess().getSimplStatementSimpleStmtParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_simplStatement_1_0=rulesimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIfStmtRule());
                      						}
                      						set(
                      							current,
                      							"simplStatement",
                      							lv_simplStatement_1_0,
                      							"org.xtext.Go.simpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getIfStmtAccess().getEosParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_15);
                    ruleeos();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:2791:3: ( (lv_expr_3_0= ruleexpression ) )
            // InternalGo.g:2792:4: (lv_expr_3_0= ruleexpression )
            {
            // InternalGo.g:2792:4: (lv_expr_3_0= ruleexpression )
            // InternalGo.g:2793:5: lv_expr_3_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStmtAccess().getExprExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_expr_3_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStmtRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_3_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2810:3: ( (lv_codeBlock_4_0= ruleblock ) )
            // InternalGo.g:2811:4: (lv_codeBlock_4_0= ruleblock )
            {
            // InternalGo.g:2811:4: (lv_codeBlock_4_0= ruleblock )
            // InternalGo.g:2812:5: lv_codeBlock_4_0= ruleblock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStmtAccess().getCodeBlockBlockParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_34);
            lv_codeBlock_4_0=ruleblock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStmtRule());
              					}
              					set(
              						current,
              						"codeBlock",
              						lv_codeBlock_4_0,
              						"org.xtext.Go.block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2829:3: (otherlv_5= 'else' ( ( (lv_ifStatement_6_0= ruleifStmt ) ) | ( (lv_codeBlockIf_7_0= ruleblock ) ) ) )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==79) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalGo.g:2830:4: otherlv_5= 'else' ( ( (lv_ifStatement_6_0= ruleifStmt ) ) | ( (lv_codeBlockIf_7_0= ruleblock ) ) )
                    {
                    otherlv_5=(Token)match(input,79,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getIfStmtAccess().getElseKeyword_4_0());
                      			
                    }
                    // InternalGo.g:2834:4: ( ( (lv_ifStatement_6_0= ruleifStmt ) ) | ( (lv_codeBlockIf_7_0= ruleblock ) ) )
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==78) ) {
                        alt33=1;
                    }
                    else if ( (LA33_0==54) ) {
                        alt33=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 33, 0, input);

                        throw nvae;
                    }
                    switch (alt33) {
                        case 1 :
                            // InternalGo.g:2835:5: ( (lv_ifStatement_6_0= ruleifStmt ) )
                            {
                            // InternalGo.g:2835:5: ( (lv_ifStatement_6_0= ruleifStmt ) )
                            // InternalGo.g:2836:6: (lv_ifStatement_6_0= ruleifStmt )
                            {
                            // InternalGo.g:2836:6: (lv_ifStatement_6_0= ruleifStmt )
                            // InternalGo.g:2837:7: lv_ifStatement_6_0= ruleifStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getIfStmtAccess().getIfStatementIfStmtParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_ifStatement_6_0=ruleifStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getIfStmtRule());
                              							}
                              							set(
                              								current,
                              								"ifStatement",
                              								lv_ifStatement_6_0,
                              								"org.xtext.Go.ifStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:2855:5: ( (lv_codeBlockIf_7_0= ruleblock ) )
                            {
                            // InternalGo.g:2855:5: ( (lv_codeBlockIf_7_0= ruleblock ) )
                            // InternalGo.g:2856:6: (lv_codeBlockIf_7_0= ruleblock )
                            {
                            // InternalGo.g:2856:6: (lv_codeBlockIf_7_0= ruleblock )
                            // InternalGo.g:2857:7: lv_codeBlockIf_7_0= ruleblock
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getIfStmtAccess().getCodeBlockIfBlockParserRuleCall_4_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_codeBlockIf_7_0=ruleblock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getIfStmtRule());
                              							}
                              							set(
                              								current,
                              								"codeBlockIf",
                              								lv_codeBlockIf_7_0,
                              								"org.xtext.Go.block");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleifStmt"


    // $ANTLR start "entryRuleswitchStmt"
    // InternalGo.g:2880:1: entryRuleswitchStmt returns [EObject current=null] : iv_ruleswitchStmt= ruleswitchStmt EOF ;
    public final EObject entryRuleswitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleswitchStmt = null;


        try {
            // InternalGo.g:2880:51: (iv_ruleswitchStmt= ruleswitchStmt EOF )
            // InternalGo.g:2881:2: iv_ruleswitchStmt= ruleswitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleswitchStmt=ruleswitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleswitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleswitchStmt"


    // $ANTLR start "ruleswitchStmt"
    // InternalGo.g:2887:1: ruleswitchStmt returns [EObject current=null] : ( ( (lv_statement_0_0= ruleexprSwitchStmt ) ) | ( (lv_statement_1_0= ruletypeSwitchStmt ) ) ) ;
    public final EObject ruleswitchStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_statement_0_0 = null;

        EObject lv_statement_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2893:2: ( ( ( (lv_statement_0_0= ruleexprSwitchStmt ) ) | ( (lv_statement_1_0= ruletypeSwitchStmt ) ) ) )
            // InternalGo.g:2894:2: ( ( (lv_statement_0_0= ruleexprSwitchStmt ) ) | ( (lv_statement_1_0= ruletypeSwitchStmt ) ) )
            {
            // InternalGo.g:2894:2: ( ( (lv_statement_0_0= ruleexprSwitchStmt ) ) | ( (lv_statement_1_0= ruletypeSwitchStmt ) ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==80) ) {
                int LA35_1 = input.LA(2);

                if ( (synpred65_InternalGo()) ) {
                    alt35=1;
                }
                else if ( (true) ) {
                    alt35=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 35, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalGo.g:2895:3: ( (lv_statement_0_0= ruleexprSwitchStmt ) )
                    {
                    // InternalGo.g:2895:3: ( (lv_statement_0_0= ruleexprSwitchStmt ) )
                    // InternalGo.g:2896:4: (lv_statement_0_0= ruleexprSwitchStmt )
                    {
                    // InternalGo.g:2896:4: (lv_statement_0_0= ruleexprSwitchStmt )
                    // InternalGo.g:2897:5: lv_statement_0_0= ruleexprSwitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSwitchStmtAccess().getStatementExprSwitchStmtParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_0_0=ruleexprSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSwitchStmtRule());
                      					}
                      					set(
                      						current,
                      						"statement",
                      						lv_statement_0_0,
                      						"org.xtext.Go.exprSwitchStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2915:3: ( (lv_statement_1_0= ruletypeSwitchStmt ) )
                    {
                    // InternalGo.g:2915:3: ( (lv_statement_1_0= ruletypeSwitchStmt ) )
                    // InternalGo.g:2916:4: (lv_statement_1_0= ruletypeSwitchStmt )
                    {
                    // InternalGo.g:2916:4: (lv_statement_1_0= ruletypeSwitchStmt )
                    // InternalGo.g:2917:5: lv_statement_1_0= ruletypeSwitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSwitchStmtAccess().getStatementTypeSwitchStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_1_0=ruletypeSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSwitchStmtRule());
                      					}
                      					set(
                      						current,
                      						"statement",
                      						lv_statement_1_0,
                      						"org.xtext.Go.typeSwitchStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleswitchStmt"


    // $ANTLR start "entryRuleexprSwitchStmt"
    // InternalGo.g:2938:1: entryRuleexprSwitchStmt returns [EObject current=null] : iv_ruleexprSwitchStmt= ruleexprSwitchStmt EOF ;
    public final EObject entryRuleexprSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexprSwitchStmt = null;


        try {
            // InternalGo.g:2938:55: (iv_ruleexprSwitchStmt= ruleexprSwitchStmt EOF )
            // InternalGo.g:2939:2: iv_ruleexprSwitchStmt= ruleexprSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexprSwitchStmt=ruleexprSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexprSwitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexprSwitchStmt"


    // $ANTLR start "ruleexprSwitchStmt"
    // InternalGo.g:2945:1: ruleexprSwitchStmt returns [EObject current=null] : (otherlv_0= 'switch' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_3_0= ruleexpression ) )? otherlv_4= '{' ( (lv_exprCaseClauses_5_0= ruleexprCaseClause ) )* otherlv_6= '}' ) ;
    public final EObject ruleexprSwitchStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_simpleStmt_1_0 = null;

        EObject lv_expr_3_0 = null;

        EObject lv_exprCaseClauses_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2951:2: ( (otherlv_0= 'switch' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_3_0= ruleexpression ) )? otherlv_4= '{' ( (lv_exprCaseClauses_5_0= ruleexprCaseClause ) )* otherlv_6= '}' ) )
            // InternalGo.g:2952:2: (otherlv_0= 'switch' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_3_0= ruleexpression ) )? otherlv_4= '{' ( (lv_exprCaseClauses_5_0= ruleexprCaseClause ) )* otherlv_6= '}' )
            {
            // InternalGo.g:2952:2: (otherlv_0= 'switch' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_3_0= ruleexpression ) )? otherlv_4= '{' ( (lv_exprCaseClauses_5_0= ruleexprCaseClause ) )* otherlv_6= '}' )
            // InternalGo.g:2953:3: otherlv_0= 'switch' ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_3_0= ruleexpression ) )? otherlv_4= '{' ( (lv_exprCaseClauses_5_0= ruleexprCaseClause ) )* otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,80,FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getExprSwitchStmtAccess().getSwitchKeyword_0());
              		
            }
            // InternalGo.g:2957:3: ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) ruleeos )?
            int alt36=2;
            alt36 = dfa36.predict(input);
            switch (alt36) {
                case 1 :
                    // InternalGo.g:2958:4: ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) ruleeos
                    {
                    // InternalGo.g:2958:4: ( (lv_simpleStmt_1_0= rulesimpleStmt ) )
                    // InternalGo.g:2959:5: (lv_simpleStmt_1_0= rulesimpleStmt )
                    {
                    // InternalGo.g:2959:5: (lv_simpleStmt_1_0= rulesimpleStmt )
                    // InternalGo.g:2960:6: lv_simpleStmt_1_0= rulesimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_simpleStmt_1_0=rulesimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
                      						}
                      						set(
                      							current,
                      							"simpleStmt",
                      							lv_simpleStmt_1_0,
                      							"org.xtext.Go.simpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getEosParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_37);
                    ruleeos();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:2988:3: ( (lv_expr_3_0= ruleexpression ) )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( ((LA37_0>=RULE_IDENTIFIER && LA37_0<=RULE_STRING_LIT)||(LA37_0>=RULE_INT_LIT && LA37_0<=RULE_BINARY_OP)||LA37_0==45||LA37_0==47||LA37_0==52||LA37_0==56||(LA37_0>=59 && LA37_0<=60)||(LA37_0>=62 && LA37_0<=63)||LA37_0==68||LA37_0==87||(LA37_0>=89 && LA37_0<=91)||(LA37_0>=93 && LA37_0<=94)) ) {
                alt37=1;
            }
            else if ( (LA37_0==54) ) {
                int LA37_2 = input.LA(2);

                if ( (synpred67_InternalGo()) ) {
                    alt37=1;
                }
            }
            switch (alt37) {
                case 1 :
                    // InternalGo.g:2989:4: (lv_expr_3_0= ruleexpression )
                    {
                    // InternalGo.g:2989:4: (lv_expr_3_0= ruleexpression )
                    // InternalGo.g:2990:5: lv_expr_3_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExprExpressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_19);
                    lv_expr_3_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
                      					}
                      					set(
                      						current,
                      						"expr",
                      						lv_expr_3_0,
                      						"org.xtext.Go.expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,54,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getExprSwitchStmtAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalGo.g:3011:3: ( (lv_exprCaseClauses_5_0= ruleexprCaseClause ) )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( ((LA38_0>=81 && LA38_0<=82)) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalGo.g:3012:4: (lv_exprCaseClauses_5_0= ruleexprCaseClause )
            	    {
            	    // InternalGo.g:3012:4: (lv_exprCaseClauses_5_0= ruleexprCaseClause )
            	    // InternalGo.g:3013:5: lv_exprCaseClauses_5_0= ruleexprCaseClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExprCaseClausesExprCaseClauseParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_exprCaseClauses_5_0=ruleexprCaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
            	      					}
            	      					add(
            	      						current,
            	      						"exprCaseClauses",
            	      						lv_exprCaseClauses_5_0,
            	      						"org.xtext.Go.exprCaseClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            otherlv_6=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getExprSwitchStmtAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexprSwitchStmt"


    // $ANTLR start "entryRuleexprCaseClause"
    // InternalGo.g:3038:1: entryRuleexprCaseClause returns [EObject current=null] : iv_ruleexprCaseClause= ruleexprCaseClause EOF ;
    public final EObject entryRuleexprCaseClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexprCaseClause = null;


        try {
            // InternalGo.g:3038:55: (iv_ruleexprCaseClause= ruleexprCaseClause EOF )
            // InternalGo.g:3039:2: iv_ruleexprCaseClause= ruleexprCaseClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexprCaseClause=ruleexprCaseClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexprCaseClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexprCaseClause"


    // $ANTLR start "ruleexprCaseClause"
    // InternalGo.g:3045:1: ruleexprCaseClause returns [EObject current=null] : ( ( (lv_exprSwitchCase_0_0= ruleexprSwitchCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) ) ) ;
    public final EObject ruleexprCaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_exprSwitchCase_0_0 = null;

        EObject lv_stmtList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3051:2: ( ( ( (lv_exprSwitchCase_0_0= ruleexprSwitchCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) ) ) )
            // InternalGo.g:3052:2: ( ( (lv_exprSwitchCase_0_0= ruleexprSwitchCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) ) )
            {
            // InternalGo.g:3052:2: ( ( (lv_exprSwitchCase_0_0= ruleexprSwitchCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) ) )
            // InternalGo.g:3053:3: ( (lv_exprSwitchCase_0_0= ruleexprSwitchCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) )
            {
            // InternalGo.g:3053:3: ( (lv_exprSwitchCase_0_0= ruleexprSwitchCase ) )
            // InternalGo.g:3054:4: (lv_exprSwitchCase_0_0= ruleexprSwitchCase )
            {
            // InternalGo.g:3054:4: (lv_exprSwitchCase_0_0= ruleexprSwitchCase )
            // InternalGo.g:3055:5: lv_exprSwitchCase_0_0= ruleexprSwitchCase
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseExprSwitchCaseParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_29);
            lv_exprSwitchCase_0_0=ruleexprSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExprCaseClauseRule());
              					}
              					set(
              						current,
              						"exprSwitchCase",
              						lv_exprSwitchCase_0_0,
              						"org.xtext.Go.exprSwitchCase");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,71,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExprCaseClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:3076:3: ( (lv_stmtList_2_0= rulestatementList ) )
            // InternalGo.g:3077:4: (lv_stmtList_2_0= rulestatementList )
            {
            // InternalGo.g:3077:4: (lv_stmtList_2_0= rulestatementList )
            // InternalGo.g:3078:5: lv_stmtList_2_0= rulestatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExprCaseClauseAccess().getStmtListStatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_stmtList_2_0=rulestatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExprCaseClauseRule());
              					}
              					set(
              						current,
              						"stmtList",
              						lv_stmtList_2_0,
              						"org.xtext.Go.statementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexprCaseClause"


    // $ANTLR start "entryRuleexprSwitchCase"
    // InternalGo.g:3099:1: entryRuleexprSwitchCase returns [EObject current=null] : iv_ruleexprSwitchCase= ruleexprSwitchCase EOF ;
    public final EObject entryRuleexprSwitchCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexprSwitchCase = null;


        try {
            // InternalGo.g:3099:55: (iv_ruleexprSwitchCase= ruleexprSwitchCase EOF )
            // InternalGo.g:3100:2: iv_ruleexprSwitchCase= ruleexprSwitchCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprSwitchCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexprSwitchCase=ruleexprSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexprSwitchCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexprSwitchCase"


    // $ANTLR start "ruleexprSwitchCase"
    // InternalGo.g:3106:1: ruleexprSwitchCase returns [EObject current=null] : ( (otherlv_0= 'case' ( (lv_exprList_1_0= ruleexpressionList ) ) ) | otherlv_2= 'default' ) ;
    public final EObject ruleexprSwitchCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_exprList_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3112:2: ( ( (otherlv_0= 'case' ( (lv_exprList_1_0= ruleexpressionList ) ) ) | otherlv_2= 'default' ) )
            // InternalGo.g:3113:2: ( (otherlv_0= 'case' ( (lv_exprList_1_0= ruleexpressionList ) ) ) | otherlv_2= 'default' )
            {
            // InternalGo.g:3113:2: ( (otherlv_0= 'case' ( (lv_exprList_1_0= ruleexpressionList ) ) ) | otherlv_2= 'default' )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==81) ) {
                alt39=1;
            }
            else if ( (LA39_0==82) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // InternalGo.g:3114:3: (otherlv_0= 'case' ( (lv_exprList_1_0= ruleexpressionList ) ) )
                    {
                    // InternalGo.g:3114:3: (otherlv_0= 'case' ( (lv_exprList_1_0= ruleexpressionList ) ) )
                    // InternalGo.g:3115:4: otherlv_0= 'case' ( (lv_exprList_1_0= ruleexpressionList ) )
                    {
                    otherlv_0=(Token)match(input,81,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getExprSwitchCaseAccess().getCaseKeyword_0_0());
                      			
                    }
                    // InternalGo.g:3119:4: ( (lv_exprList_1_0= ruleexpressionList ) )
                    // InternalGo.g:3120:5: (lv_exprList_1_0= ruleexpressionList )
                    {
                    // InternalGo.g:3120:5: (lv_exprList_1_0= ruleexpressionList )
                    // InternalGo.g:3121:6: lv_exprList_1_0= ruleexpressionList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExprSwitchCaseAccess().getExprListExpressionListParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_exprList_1_0=ruleexpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExprSwitchCaseRule());
                      						}
                      						set(
                      							current,
                      							"exprList",
                      							lv_exprList_1_0,
                      							"org.xtext.Go.expressionList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3140:3: otherlv_2= 'default'
                    {
                    otherlv_2=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_2, grammarAccess.getExprSwitchCaseAccess().getDefaultKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexprSwitchCase"


    // $ANTLR start "entryRuletypeSwitchStmt"
    // InternalGo.g:3148:1: entryRuletypeSwitchStmt returns [EObject current=null] : iv_ruletypeSwitchStmt= ruletypeSwitchStmt EOF ;
    public final EObject entryRuletypeSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeSwitchStmt = null;


        try {
            // InternalGo.g:3148:55: (iv_ruletypeSwitchStmt= ruletypeSwitchStmt EOF )
            // InternalGo.g:3149:2: iv_ruletypeSwitchStmt= ruletypeSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeSwitchStmt=ruletypeSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeSwitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeSwitchStmt"


    // $ANTLR start "ruletypeSwitchStmt"
    // InternalGo.g:3155:1: ruletypeSwitchStmt returns [EObject current=null] : (otherlv_0= 'switch' ( ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typeCaseClauses_5_0= ruletypeCaseClause ) )* otherlv_6= '}' ) ;
    public final EObject ruletypeSwitchStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_simpleStatement_1_0 = null;

        EObject lv_typeSwitchGuard_3_0 = null;

        EObject lv_typeCaseClauses_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3161:2: ( (otherlv_0= 'switch' ( ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typeCaseClauses_5_0= ruletypeCaseClause ) )* otherlv_6= '}' ) )
            // InternalGo.g:3162:2: (otherlv_0= 'switch' ( ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typeCaseClauses_5_0= ruletypeCaseClause ) )* otherlv_6= '}' )
            {
            // InternalGo.g:3162:2: (otherlv_0= 'switch' ( ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typeCaseClauses_5_0= ruletypeCaseClause ) )* otherlv_6= '}' )
            // InternalGo.g:3163:3: otherlv_0= 'switch' ( ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typeCaseClauses_5_0= ruletypeCaseClause ) )* otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,80,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeSwitchStmtAccess().getSwitchKeyword_0());
              		
            }
            // InternalGo.g:3167:3: ( ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos )?
            int alt40=2;
            alt40 = dfa40.predict(input);
            switch (alt40) {
                case 1 :
                    // InternalGo.g:3168:4: ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos
                    {
                    // InternalGo.g:3168:4: ( (lv_simpleStatement_1_0= rulesimpleStmt ) )
                    // InternalGo.g:3169:5: (lv_simpleStatement_1_0= rulesimpleStmt )
                    {
                    // InternalGo.g:3169:5: (lv_simpleStatement_1_0= rulesimpleStmt )
                    // InternalGo.g:3170:6: lv_simpleStatement_1_0= rulesimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getSimpleStatementSimpleStmtParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_simpleStatement_1_0=rulesimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
                      						}
                      						set(
                      							current,
                      							"simpleStatement",
                      							lv_simpleStatement_1_0,
                      							"org.xtext.Go.simpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getEosParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_33);
                    ruleeos();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:3198:3: ( (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard ) )
            // InternalGo.g:3199:4: (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard )
            {
            // InternalGo.g:3199:4: (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard )
            // InternalGo.g:3200:5: lv_typeSwitchGuard_3_0= ruletypeSwitchGuard
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getTypeSwitchGuardTypeSwitchGuardParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_typeSwitchGuard_3_0=ruletypeSwitchGuard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
              					}
              					set(
              						current,
              						"typeSwitchGuard",
              						lv_typeSwitchGuard_3_0,
              						"org.xtext.Go.typeSwitchGuard");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,54,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchStmtAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalGo.g:3221:3: ( (lv_typeCaseClauses_5_0= ruletypeCaseClause ) )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( ((LA41_0>=81 && LA41_0<=82)) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalGo.g:3222:4: (lv_typeCaseClauses_5_0= ruletypeCaseClause )
            	    {
            	    // InternalGo.g:3222:4: (lv_typeCaseClauses_5_0= ruletypeCaseClause )
            	    // InternalGo.g:3223:5: lv_typeCaseClauses_5_0= ruletypeCaseClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getTypeCaseClausesTypeCaseClauseParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_typeCaseClauses_5_0=ruletypeCaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
            	      					}
            	      					add(
            	      						current,
            	      						"typeCaseClauses",
            	      						lv_typeCaseClauses_5_0,
            	      						"org.xtext.Go.typeCaseClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            otherlv_6=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchStmtAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeSwitchStmt"


    // $ANTLR start "entryRuletypeSwitchGuard"
    // InternalGo.g:3248:1: entryRuletypeSwitchGuard returns [EObject current=null] : iv_ruletypeSwitchGuard= ruletypeSwitchGuard EOF ;
    public final EObject entryRuletypeSwitchGuard() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeSwitchGuard = null;


        try {
            // InternalGo.g:3248:56: (iv_ruletypeSwitchGuard= ruletypeSwitchGuard EOF )
            // InternalGo.g:3249:2: iv_ruletypeSwitchGuard= ruletypeSwitchGuard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchGuardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeSwitchGuard=ruletypeSwitchGuard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeSwitchGuard; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeSwitchGuard"


    // $ANTLR start "ruletypeSwitchGuard"
    // InternalGo.g:3255:1: ruletypeSwitchGuard returns [EObject current=null] : ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_primaryExpression_2_0= ruleprimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' ) ;
    public final EObject ruletypeSwitchGuard() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_primaryExpression_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3261:2: ( ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_primaryExpression_2_0= ruleprimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' ) )
            // InternalGo.g:3262:2: ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_primaryExpression_2_0= ruleprimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' )
            {
            // InternalGo.g:3262:2: ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_primaryExpression_2_0= ruleprimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' )
            // InternalGo.g:3263:3: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_primaryExpression_2_0= ruleprimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')'
            {
            // InternalGo.g:3263:3: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':=' )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==RULE_IDENTIFIER) ) {
                int LA42_1 = input.LA(2);

                if ( (LA42_1==70) ) {
                    alt42=1;
                }
            }
            switch (alt42) {
                case 1 :
                    // InternalGo.g:3264:4: ( (lv_name_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':='
                    {
                    // InternalGo.g:3264:4: ( (lv_name_0_0= RULE_IDENTIFIER ) )
                    // InternalGo.g:3265:5: (lv_name_0_0= RULE_IDENTIFIER )
                    {
                    // InternalGo.g:3265:5: (lv_name_0_0= RULE_IDENTIFIER )
                    // InternalGo.g:3266:6: lv_name_0_0= RULE_IDENTIFIER
                    {
                    lv_name_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_0, grammarAccess.getTypeSwitchGuardAccess().getNameIDENTIFIERTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTypeSwitchGuardRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_0_0,
                      							"org.xtext.Go.IDENTIFIER");
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,70,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:3287:3: ( (lv_primaryExpression_2_0= ruleprimaryExpr ) )
            // InternalGo.g:3288:4: (lv_primaryExpression_2_0= ruleprimaryExpr )
            {
            // InternalGo.g:3288:4: (lv_primaryExpression_2_0= ruleprimaryExpr )
            // InternalGo.g:3289:5: lv_primaryExpression_2_0= ruleprimaryExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExpressionPrimaryExprParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_40);
            lv_primaryExpression_2_0=ruleprimaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeSwitchGuardRule());
              					}
              					set(
              						current,
              						"primaryExpression",
              						lv_primaryExpression_2_0,
              						"org.xtext.Go.primaryExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,47,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getTypeSwitchGuardAccess().getFullStopKeyword_2());
              		
            }
            otherlv_4=(Token)match(input,45,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchGuardAccess().getLeftParenthesisKeyword_3());
              		
            }
            otherlv_5=(Token)match(input,51,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getTypeSwitchGuardAccess().getTypeKeyword_4());
              		
            }
            otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchGuardAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeSwitchGuard"


    // $ANTLR start "entryRuletypeCaseClause"
    // InternalGo.g:3326:1: entryRuletypeCaseClause returns [EObject current=null] : iv_ruletypeCaseClause= ruletypeCaseClause EOF ;
    public final EObject entryRuletypeCaseClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeCaseClause = null;


        try {
            // InternalGo.g:3326:55: (iv_ruletypeCaseClause= ruletypeCaseClause EOF )
            // InternalGo.g:3327:2: iv_ruletypeCaseClause= ruletypeCaseClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeCaseClause=ruletypeCaseClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeCaseClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeCaseClause"


    // $ANTLR start "ruletypeCaseClause"
    // InternalGo.g:3333:1: ruletypeCaseClause returns [EObject current=null] : ( ( (lv_typeSwitchCase_0_0= ruletypeSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) ) ;
    public final EObject ruletypeCaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_typeSwitchCase_0_0 = null;

        EObject lv_statementList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3339:2: ( ( ( (lv_typeSwitchCase_0_0= ruletypeSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) ) )
            // InternalGo.g:3340:2: ( ( (lv_typeSwitchCase_0_0= ruletypeSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) )
            {
            // InternalGo.g:3340:2: ( ( (lv_typeSwitchCase_0_0= ruletypeSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) )
            // InternalGo.g:3341:3: ( (lv_typeSwitchCase_0_0= ruletypeSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) )
            {
            // InternalGo.g:3341:3: ( (lv_typeSwitchCase_0_0= ruletypeSwitchCase ) )
            // InternalGo.g:3342:4: (lv_typeSwitchCase_0_0= ruletypeSwitchCase )
            {
            // InternalGo.g:3342:4: (lv_typeSwitchCase_0_0= ruletypeSwitchCase )
            // InternalGo.g:3343:5: lv_typeSwitchCase_0_0= ruletypeSwitchCase
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseTypeSwitchCaseParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_29);
            lv_typeSwitchCase_0_0=ruletypeSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeCaseClauseRule());
              					}
              					set(
              						current,
              						"typeSwitchCase",
              						lv_typeSwitchCase_0_0,
              						"org.xtext.Go.typeSwitchCase");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,71,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:3364:3: ( (lv_statementList_2_0= rulestatementList ) )
            // InternalGo.g:3365:4: (lv_statementList_2_0= rulestatementList )
            {
            // InternalGo.g:3365:4: (lv_statementList_2_0= rulestatementList )
            // InternalGo.g:3366:5: lv_statementList_2_0= rulestatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statementList_2_0=rulestatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeCaseClauseRule());
              					}
              					set(
              						current,
              						"statementList",
              						lv_statementList_2_0,
              						"org.xtext.Go.statementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeCaseClause"


    // $ANTLR start "entryRuletypeSwitchCase"
    // InternalGo.g:3387:1: entryRuletypeSwitchCase returns [EObject current=null] : iv_ruletypeSwitchCase= ruletypeSwitchCase EOF ;
    public final EObject entryRuletypeSwitchCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeSwitchCase = null;


        try {
            // InternalGo.g:3387:55: (iv_ruletypeSwitchCase= ruletypeSwitchCase EOF )
            // InternalGo.g:3388:2: iv_ruletypeSwitchCase= ruletypeSwitchCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeSwitchCase=ruletypeSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeSwitchCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeSwitchCase"


    // $ANTLR start "ruletypeSwitchCase"
    // InternalGo.g:3394:1: ruletypeSwitchCase returns [EObject current=null] : ( (otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) ) ) | otherlv_2= 'default' ) ;
    public final EObject ruletypeSwitchCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_typeList_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3400:2: ( ( (otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) ) ) | otherlv_2= 'default' ) )
            // InternalGo.g:3401:2: ( (otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) ) ) | otherlv_2= 'default' )
            {
            // InternalGo.g:3401:2: ( (otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) ) ) | otherlv_2= 'default' )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==81) ) {
                alt43=1;
            }
            else if ( (LA43_0==82) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalGo.g:3402:3: (otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) ) )
                    {
                    // InternalGo.g:3402:3: (otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) ) )
                    // InternalGo.g:3403:4: otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) )
                    {
                    otherlv_0=(Token)match(input,81,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getTypeSwitchCaseAccess().getCaseKeyword_0_0());
                      			
                    }
                    // InternalGo.g:3407:4: ( (lv_typeList_1_0= ruletypeList ) )
                    // InternalGo.g:3408:5: (lv_typeList_1_0= ruletypeList )
                    {
                    // InternalGo.g:3408:5: (lv_typeList_1_0= ruletypeList )
                    // InternalGo.g:3409:6: lv_typeList_1_0= ruletypeList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeSwitchCaseAccess().getTypeListTypeListParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeList_1_0=ruletypeList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeSwitchCaseRule());
                      						}
                      						set(
                      							current,
                      							"typeList",
                      							lv_typeList_1_0,
                      							"org.xtext.Go.typeList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3428:3: otherlv_2= 'default'
                    {
                    otherlv_2=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_2, grammarAccess.getTypeSwitchCaseAccess().getDefaultKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeSwitchCase"


    // $ANTLR start "entryRuletypeList"
    // InternalGo.g:3436:1: entryRuletypeList returns [EObject current=null] : iv_ruletypeList= ruletypeList EOF ;
    public final EObject entryRuletypeList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeList = null;


        try {
            // InternalGo.g:3436:49: (iv_ruletypeList= ruletypeList EOF )
            // InternalGo.g:3437:2: iv_ruletypeList= ruletypeList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeList=ruletypeList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeList"


    // $ANTLR start "ruletypeList"
    // InternalGo.g:3443:1: ruletypeList returns [EObject current=null] : ( ( (lv_types_0_0= ruletype ) ) (otherlv_1= ',' ( (lv_types_2_0= ruletype ) ) )* ) ;
    public final EObject ruletypeList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_types_0_0 = null;

        EObject lv_types_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3449:2: ( ( ( (lv_types_0_0= ruletype ) ) (otherlv_1= ',' ( (lv_types_2_0= ruletype ) ) )* ) )
            // InternalGo.g:3450:2: ( ( (lv_types_0_0= ruletype ) ) (otherlv_1= ',' ( (lv_types_2_0= ruletype ) ) )* )
            {
            // InternalGo.g:3450:2: ( ( (lv_types_0_0= ruletype ) ) (otherlv_1= ',' ( (lv_types_2_0= ruletype ) ) )* )
            // InternalGo.g:3451:3: ( (lv_types_0_0= ruletype ) ) (otherlv_1= ',' ( (lv_types_2_0= ruletype ) ) )*
            {
            // InternalGo.g:3451:3: ( (lv_types_0_0= ruletype ) )
            // InternalGo.g:3452:4: (lv_types_0_0= ruletype )
            {
            // InternalGo.g:3452:4: (lv_types_0_0= ruletype )
            // InternalGo.g:3453:5: lv_types_0_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeListAccess().getTypesTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_types_0_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeListRule());
              					}
              					add(
              						current,
              						"types",
              						lv_types_0_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:3470:3: (otherlv_1= ',' ( (lv_types_2_0= ruletype ) ) )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==50) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalGo.g:3471:4: otherlv_1= ',' ( (lv_types_2_0= ruletype ) )
            	    {
            	    otherlv_1=(Token)match(input,50,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getTypeListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:3475:4: ( (lv_types_2_0= ruletype ) )
            	    // InternalGo.g:3476:5: (lv_types_2_0= ruletype )
            	    {
            	    // InternalGo.g:3476:5: (lv_types_2_0= ruletype )
            	    // InternalGo.g:3477:6: lv_types_2_0= ruletype
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypeListAccess().getTypesTypeParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_types_2_0=ruletype();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypeListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"types",
            	      							lv_types_2_0,
            	      							"org.xtext.Go.type");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeList"


    // $ANTLR start "entryRuleselectStmt"
    // InternalGo.g:3499:1: entryRuleselectStmt returns [EObject current=null] : iv_ruleselectStmt= ruleselectStmt EOF ;
    public final EObject entryRuleselectStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleselectStmt = null;


        try {
            // InternalGo.g:3499:51: (iv_ruleselectStmt= ruleselectStmt EOF )
            // InternalGo.g:3500:2: iv_ruleselectStmt= ruleselectStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleselectStmt=ruleselectStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleselectStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleselectStmt"


    // $ANTLR start "ruleselectStmt"
    // InternalGo.g:3506:1: ruleselectStmt returns [EObject current=null] : (otherlv_0= 'select' otherlv_1= '{' ( (lv_commClauses_2_0= rulecommClause ) )* otherlv_3= '}' ) ;
    public final EObject ruleselectStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_commClauses_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3512:2: ( (otherlv_0= 'select' otherlv_1= '{' ( (lv_commClauses_2_0= rulecommClause ) )* otherlv_3= '}' ) )
            // InternalGo.g:3513:2: (otherlv_0= 'select' otherlv_1= '{' ( (lv_commClauses_2_0= rulecommClause ) )* otherlv_3= '}' )
            {
            // InternalGo.g:3513:2: (otherlv_0= 'select' otherlv_1= '{' ( (lv_commClauses_2_0= rulecommClause ) )* otherlv_3= '}' )
            // InternalGo.g:3514:3: otherlv_0= 'select' otherlv_1= '{' ( (lv_commClauses_2_0= rulecommClause ) )* otherlv_3= '}'
            {
            otherlv_0=(Token)match(input,83,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSelectStmtAccess().getSelectKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,54,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalGo.g:3522:3: ( (lv_commClauses_2_0= rulecommClause ) )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( ((LA45_0>=81 && LA45_0<=82)) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalGo.g:3523:4: (lv_commClauses_2_0= rulecommClause )
            	    {
            	    // InternalGo.g:3523:4: (lv_commClauses_2_0= rulecommClause )
            	    // InternalGo.g:3524:5: lv_commClauses_2_0= rulecommClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSelectStmtAccess().getCommClausesCommClauseParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_commClauses_2_0=rulecommClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSelectStmtRule());
            	      					}
            	      					add(
            	      						current,
            	      						"commClauses",
            	      						lv_commClauses_2_0,
            	      						"org.xtext.Go.commClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            otherlv_3=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleselectStmt"


    // $ANTLR start "entryRulecommClause"
    // InternalGo.g:3549:1: entryRulecommClause returns [EObject current=null] : iv_rulecommClause= rulecommClause EOF ;
    public final EObject entryRulecommClause() throws RecognitionException {
        EObject current = null;

        EObject iv_rulecommClause = null;


        try {
            // InternalGo.g:3549:51: (iv_rulecommClause= rulecommClause EOF )
            // InternalGo.g:3550:2: iv_rulecommClause= rulecommClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecommClause=rulecommClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecommClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecommClause"


    // $ANTLR start "rulecommClause"
    // InternalGo.g:3556:1: rulecommClause returns [EObject current=null] : ( ( (lv_case_0_0= rulecommCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) ) ) ;
    public final EObject rulecommClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_case_0_0 = null;

        EObject lv_stmtList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3562:2: ( ( ( (lv_case_0_0= rulecommCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) ) ) )
            // InternalGo.g:3563:2: ( ( (lv_case_0_0= rulecommCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) ) )
            {
            // InternalGo.g:3563:2: ( ( (lv_case_0_0= rulecommCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) ) )
            // InternalGo.g:3564:3: ( (lv_case_0_0= rulecommCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) )
            {
            // InternalGo.g:3564:3: ( (lv_case_0_0= rulecommCase ) )
            // InternalGo.g:3565:4: (lv_case_0_0= rulecommCase )
            {
            // InternalGo.g:3565:4: (lv_case_0_0= rulecommCase )
            // InternalGo.g:3566:5: lv_case_0_0= rulecommCase
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCommClauseAccess().getCaseCommCaseParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_29);
            lv_case_0_0=rulecommCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCommClauseRule());
              					}
              					set(
              						current,
              						"case",
              						lv_case_0_0,
              						"org.xtext.Go.commCase");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,71,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getCommClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:3587:3: ( (lv_stmtList_2_0= rulestatementList ) )
            // InternalGo.g:3588:4: (lv_stmtList_2_0= rulestatementList )
            {
            // InternalGo.g:3588:4: (lv_stmtList_2_0= rulestatementList )
            // InternalGo.g:3589:5: lv_stmtList_2_0= rulestatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCommClauseAccess().getStmtListStatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_stmtList_2_0=rulestatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCommClauseRule());
              					}
              					set(
              						current,
              						"stmtList",
              						lv_stmtList_2_0,
              						"org.xtext.Go.statementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecommClause"


    // $ANTLR start "entryRulecommCase"
    // InternalGo.g:3610:1: entryRulecommCase returns [EObject current=null] : iv_rulecommCase= rulecommCase EOF ;
    public final EObject entryRulecommCase() throws RecognitionException {
        EObject current = null;

        EObject iv_rulecommCase = null;


        try {
            // InternalGo.g:3610:49: (iv_rulecommCase= rulecommCase EOF )
            // InternalGo.g:3611:2: iv_rulecommCase= rulecommCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecommCase=rulecommCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecommCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecommCase"


    // $ANTLR start "rulecommCase"
    // InternalGo.g:3617:1: rulecommCase returns [EObject current=null] : ( (otherlv_0= 'case' ( ( (lv_statement_1_0= rulesendStmt ) ) | ( (lv_statement_2_0= rulerecvStmt ) ) ) ) | otherlv_3= 'default' ) ;
    public final EObject rulecommCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_statement_1_0 = null;

        EObject lv_statement_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3623:2: ( ( (otherlv_0= 'case' ( ( (lv_statement_1_0= rulesendStmt ) ) | ( (lv_statement_2_0= rulerecvStmt ) ) ) ) | otherlv_3= 'default' ) )
            // InternalGo.g:3624:2: ( (otherlv_0= 'case' ( ( (lv_statement_1_0= rulesendStmt ) ) | ( (lv_statement_2_0= rulerecvStmt ) ) ) ) | otherlv_3= 'default' )
            {
            // InternalGo.g:3624:2: ( (otherlv_0= 'case' ( ( (lv_statement_1_0= rulesendStmt ) ) | ( (lv_statement_2_0= rulerecvStmt ) ) ) ) | otherlv_3= 'default' )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==81) ) {
                alt47=1;
            }
            else if ( (LA47_0==82) ) {
                alt47=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }
            switch (alt47) {
                case 1 :
                    // InternalGo.g:3625:3: (otherlv_0= 'case' ( ( (lv_statement_1_0= rulesendStmt ) ) | ( (lv_statement_2_0= rulerecvStmt ) ) ) )
                    {
                    // InternalGo.g:3625:3: (otherlv_0= 'case' ( ( (lv_statement_1_0= rulesendStmt ) ) | ( (lv_statement_2_0= rulerecvStmt ) ) ) )
                    // InternalGo.g:3626:4: otherlv_0= 'case' ( ( (lv_statement_1_0= rulesendStmt ) ) | ( (lv_statement_2_0= rulerecvStmt ) ) )
                    {
                    otherlv_0=(Token)match(input,81,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getCommCaseAccess().getCaseKeyword_0_0());
                      			
                    }
                    // InternalGo.g:3630:4: ( ( (lv_statement_1_0= rulesendStmt ) ) | ( (lv_statement_2_0= rulerecvStmt ) ) )
                    int alt46=2;
                    alt46 = dfa46.predict(input);
                    switch (alt46) {
                        case 1 :
                            // InternalGo.g:3631:5: ( (lv_statement_1_0= rulesendStmt ) )
                            {
                            // InternalGo.g:3631:5: ( (lv_statement_1_0= rulesendStmt ) )
                            // InternalGo.g:3632:6: (lv_statement_1_0= rulesendStmt )
                            {
                            // InternalGo.g:3632:6: (lv_statement_1_0= rulesendStmt )
                            // InternalGo.g:3633:7: lv_statement_1_0= rulesendStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCommCaseAccess().getStatementSendStmtParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_statement_1_0=rulesendStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCommCaseRule());
                              							}
                              							set(
                              								current,
                              								"statement",
                              								lv_statement_1_0,
                              								"org.xtext.Go.sendStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:3651:5: ( (lv_statement_2_0= rulerecvStmt ) )
                            {
                            // InternalGo.g:3651:5: ( (lv_statement_2_0= rulerecvStmt ) )
                            // InternalGo.g:3652:6: (lv_statement_2_0= rulerecvStmt )
                            {
                            // InternalGo.g:3652:6: (lv_statement_2_0= rulerecvStmt )
                            // InternalGo.g:3653:7: lv_statement_2_0= rulerecvStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCommCaseAccess().getStatementRecvStmtParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_statement_2_0=rulerecvStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCommCaseRule());
                              							}
                              							set(
                              								current,
                              								"statement",
                              								lv_statement_2_0,
                              								"org.xtext.Go.recvStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3673:3: otherlv_3= 'default'
                    {
                    otherlv_3=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(otherlv_3, grammarAccess.getCommCaseAccess().getDefaultKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecommCase"


    // $ANTLR start "entryRulerecvStmt"
    // InternalGo.g:3681:1: entryRulerecvStmt returns [EObject current=null] : iv_rulerecvStmt= rulerecvStmt EOF ;
    public final EObject entryRulerecvStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerecvStmt = null;


        try {
            // InternalGo.g:3681:49: (iv_rulerecvStmt= rulerecvStmt EOF )
            // InternalGo.g:3682:2: iv_rulerecvStmt= rulerecvStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRecvStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerecvStmt=rulerecvStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerecvStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerecvStmt"


    // $ANTLR start "rulerecvStmt"
    // InternalGo.g:3688:1: rulerecvStmt returns [EObject current=null] : ( ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? ( (lv_expr_4_0= ruleexpression ) ) ) ;
    public final EObject rulerecvStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_exprList_0_0 = null;

        EObject lv_idList_2_0 = null;

        EObject lv_expr_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3694:2: ( ( ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? ( (lv_expr_4_0= ruleexpression ) ) ) )
            // InternalGo.g:3695:2: ( ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? ( (lv_expr_4_0= ruleexpression ) ) )
            {
            // InternalGo.g:3695:2: ( ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? ( (lv_expr_4_0= ruleexpression ) ) )
            // InternalGo.g:3696:3: ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? ( (lv_expr_4_0= ruleexpression ) )
            {
            // InternalGo.g:3696:3: ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )?
            int alt48=3;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // InternalGo.g:3697:4: ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' )
                    {
                    // InternalGo.g:3697:4: ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' )
                    // InternalGo.g:3698:5: ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '='
                    {
                    // InternalGo.g:3698:5: ( (lv_exprList_0_0= ruleexpressionList ) )
                    // InternalGo.g:3699:6: (lv_exprList_0_0= ruleexpressionList )
                    {
                    // InternalGo.g:3699:6: (lv_exprList_0_0= ruleexpressionList )
                    // InternalGo.g:3700:7: lv_exprList_0_0= ruleexpressionList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRecvStmtAccess().getExprListExpressionListParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_14);
                    lv_exprList_0_0=ruleexpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRecvStmtRule());
                      							}
                      							set(
                      								current,
                      								"exprList",
                      								lv_exprList_0_0,
                      								"org.xtext.Go.expressionList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,49,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getRecvStmtAccess().getEqualsSignKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3723:4: ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' )
                    {
                    // InternalGo.g:3723:4: ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' )
                    // InternalGo.g:3724:5: ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':='
                    {
                    // InternalGo.g:3724:5: ( (lv_idList_2_0= ruleidentifierList ) )
                    // InternalGo.g:3725:6: (lv_idList_2_0= ruleidentifierList )
                    {
                    // InternalGo.g:3725:6: (lv_idList_2_0= ruleidentifierList )
                    // InternalGo.g:3726:7: lv_idList_2_0= ruleidentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRecvStmtAccess().getIdListIdentifierListParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_28);
                    lv_idList_2_0=ruleidentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRecvStmtRule());
                      							}
                      							set(
                      								current,
                      								"idList",
                      								lv_idList_2_0,
                      								"org.xtext.Go.identifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,70,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRecvStmtAccess().getColonEqualsSignKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:3749:3: ( (lv_expr_4_0= ruleexpression ) )
            // InternalGo.g:3750:4: (lv_expr_4_0= ruleexpression )
            {
            // InternalGo.g:3750:4: (lv_expr_4_0= ruleexpression )
            // InternalGo.g:3751:5: lv_expr_4_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRecvStmtAccess().getExprExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_4_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRecvStmtRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_4_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerecvStmt"


    // $ANTLR start "entryRuleforStmt"
    // InternalGo.g:3772:1: entryRuleforStmt returns [EObject current=null] : iv_ruleforStmt= ruleforStmt EOF ;
    public final EObject entryRuleforStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleforStmt = null;


        try {
            // InternalGo.g:3772:48: (iv_ruleforStmt= ruleforStmt EOF )
            // InternalGo.g:3773:2: iv_ruleforStmt= ruleforStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleforStmt=ruleforStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleforStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleforStmt"


    // $ANTLR start "ruleforStmt"
    // InternalGo.g:3779:1: ruleforStmt returns [EObject current=null] : (otherlv_0= 'for' ( ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_clause_2_0= ruleforClause ) ) | ( (lv_clause_3_0= rulerangeClause ) ) )? ( (lv_codeBlock_4_0= ruleblock ) ) ) ;
    public final EObject ruleforStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_expr_1_0 = null;

        EObject lv_clause_2_0 = null;

        EObject lv_clause_3_0 = null;

        EObject lv_codeBlock_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3785:2: ( (otherlv_0= 'for' ( ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_clause_2_0= ruleforClause ) ) | ( (lv_clause_3_0= rulerangeClause ) ) )? ( (lv_codeBlock_4_0= ruleblock ) ) ) )
            // InternalGo.g:3786:2: (otherlv_0= 'for' ( ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_clause_2_0= ruleforClause ) ) | ( (lv_clause_3_0= rulerangeClause ) ) )? ( (lv_codeBlock_4_0= ruleblock ) ) )
            {
            // InternalGo.g:3786:2: (otherlv_0= 'for' ( ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_clause_2_0= ruleforClause ) ) | ( (lv_clause_3_0= rulerangeClause ) ) )? ( (lv_codeBlock_4_0= ruleblock ) ) )
            // InternalGo.g:3787:3: otherlv_0= 'for' ( ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_clause_2_0= ruleforClause ) ) | ( (lv_clause_3_0= rulerangeClause ) ) )? ( (lv_codeBlock_4_0= ruleblock ) )
            {
            otherlv_0=(Token)match(input,84,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getForStmtAccess().getForKeyword_0());
              		
            }
            // InternalGo.g:3791:3: ( ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_clause_2_0= ruleforClause ) ) | ( (lv_clause_3_0= rulerangeClause ) ) )?
            int alt49=4;
            alt49 = dfa49.predict(input);
            switch (alt49) {
                case 1 :
                    // InternalGo.g:3792:4: ( (lv_expr_1_0= ruleexpression ) )
                    {
                    // InternalGo.g:3792:4: ( (lv_expr_1_0= ruleexpression ) )
                    // InternalGo.g:3793:5: (lv_expr_1_0= ruleexpression )
                    {
                    // InternalGo.g:3793:5: (lv_expr_1_0= ruleexpression )
                    // InternalGo.g:3794:6: lv_expr_1_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForStmtAccess().getExprExpressionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_expr_1_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForStmtRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_1_0,
                      							"org.xtext.Go.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3812:4: ( (lv_clause_2_0= ruleforClause ) )
                    {
                    // InternalGo.g:3812:4: ( (lv_clause_2_0= ruleforClause ) )
                    // InternalGo.g:3813:5: (lv_clause_2_0= ruleforClause )
                    {
                    // InternalGo.g:3813:5: (lv_clause_2_0= ruleforClause )
                    // InternalGo.g:3814:6: lv_clause_2_0= ruleforClause
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForStmtAccess().getClauseForClauseParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_clause_2_0=ruleforClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForStmtRule());
                      						}
                      						set(
                      							current,
                      							"clause",
                      							lv_clause_2_0,
                      							"org.xtext.Go.forClause");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3832:4: ( (lv_clause_3_0= rulerangeClause ) )
                    {
                    // InternalGo.g:3832:4: ( (lv_clause_3_0= rulerangeClause ) )
                    // InternalGo.g:3833:5: (lv_clause_3_0= rulerangeClause )
                    {
                    // InternalGo.g:3833:5: (lv_clause_3_0= rulerangeClause )
                    // InternalGo.g:3834:6: lv_clause_3_0= rulerangeClause
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForStmtAccess().getClauseRangeClauseParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_clause_3_0=rulerangeClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForStmtRule());
                      						}
                      						set(
                      							current,
                      							"clause",
                      							lv_clause_3_0,
                      							"org.xtext.Go.rangeClause");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGo.g:3852:3: ( (lv_codeBlock_4_0= ruleblock ) )
            // InternalGo.g:3853:4: (lv_codeBlock_4_0= ruleblock )
            {
            // InternalGo.g:3853:4: (lv_codeBlock_4_0= ruleblock )
            // InternalGo.g:3854:5: lv_codeBlock_4_0= ruleblock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForStmtAccess().getCodeBlockBlockParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_codeBlock_4_0=ruleblock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForStmtRule());
              					}
              					set(
              						current,
              						"codeBlock",
              						lv_codeBlock_4_0,
              						"org.xtext.Go.block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleforStmt"


    // $ANTLR start "entryRuleforClause"
    // InternalGo.g:3875:1: entryRuleforClause returns [EObject current=null] : iv_ruleforClause= ruleforClause EOF ;
    public final EObject entryRuleforClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleforClause = null;


        try {
            // InternalGo.g:3875:50: (iv_ruleforClause= ruleforClause EOF )
            // InternalGo.g:3876:2: iv_ruleforClause= ruleforClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleforClause=ruleforClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleforClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleforClause"


    // $ANTLR start "ruleforClause"
    // InternalGo.g:3882:1: ruleforClause returns [EObject current=null] : ( ( (lv_statement1_0_0= rulesimpleStmt ) )? ruleeos ( (lv_expr_2_0= ruleexpression ) )? ruleeos ( (lv_statement2_4_0= rulesimpleStmt ) )? ) ;
    public final EObject ruleforClause() throws RecognitionException {
        EObject current = null;

        EObject lv_statement1_0_0 = null;

        EObject lv_expr_2_0 = null;

        EObject lv_statement2_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3888:2: ( ( ( (lv_statement1_0_0= rulesimpleStmt ) )? ruleeos ( (lv_expr_2_0= ruleexpression ) )? ruleeos ( (lv_statement2_4_0= rulesimpleStmt ) )? ) )
            // InternalGo.g:3889:2: ( ( (lv_statement1_0_0= rulesimpleStmt ) )? ruleeos ( (lv_expr_2_0= ruleexpression ) )? ruleeos ( (lv_statement2_4_0= rulesimpleStmt ) )? )
            {
            // InternalGo.g:3889:2: ( ( (lv_statement1_0_0= rulesimpleStmt ) )? ruleeos ( (lv_expr_2_0= ruleexpression ) )? ruleeos ( (lv_statement2_4_0= rulesimpleStmt ) )? )
            // InternalGo.g:3890:3: ( (lv_statement1_0_0= rulesimpleStmt ) )? ruleeos ( (lv_expr_2_0= ruleexpression ) )? ruleeos ( (lv_statement2_4_0= rulesimpleStmt ) )?
            {
            // InternalGo.g:3890:3: ( (lv_statement1_0_0= rulesimpleStmt ) )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( ((LA50_0>=RULE_IDENTIFIER && LA50_0<=RULE_BINARY_OP)||LA50_0==45||LA50_0==47||(LA50_0>=49 && LA50_0<=50)||LA50_0==52||(LA50_0>=56 && LA50_0<=69)||LA50_0==87||(LA50_0>=89 && LA50_0<=91)||(LA50_0>=93 && LA50_0<=94)) ) {
                alt50=1;
            }
            else if ( (LA50_0==95) ) {
                int LA50_2 = input.LA(2);

                if ( (synpred83_InternalGo()) ) {
                    alt50=1;
                }
            }
            switch (alt50) {
                case 1 :
                    // InternalGo.g:3891:4: (lv_statement1_0_0= rulesimpleStmt )
                    {
                    // InternalGo.g:3891:4: (lv_statement1_0_0= rulesimpleStmt )
                    // InternalGo.g:3892:5: lv_statement1_0_0= rulesimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getStatement1SimpleStmtParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_5);
                    lv_statement1_0_0=rulesimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"statement1",
                      						lv_statement1_0_0,
                      						"org.xtext.Go.simpleStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getForClauseAccess().getEosParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_44);
            ruleeos();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:3919:3: ( (lv_expr_2_0= ruleexpression ) )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( ((LA51_0>=RULE_IDENTIFIER && LA51_0<=RULE_STRING_LIT)||(LA51_0>=RULE_INT_LIT && LA51_0<=RULE_BINARY_OP)||LA51_0==45||LA51_0==47||LA51_0==52||LA51_0==56||(LA51_0>=59 && LA51_0<=60)||(LA51_0>=62 && LA51_0<=63)||LA51_0==68||LA51_0==87||(LA51_0>=89 && LA51_0<=91)||(LA51_0>=93 && LA51_0<=94)) ) {
                alt51=1;
            }
            else if ( (LA51_0==95) ) {
                int LA51_2 = input.LA(2);

                if ( (synpred84_InternalGo()) ) {
                    alt51=1;
                }
            }
            switch (alt51) {
                case 1 :
                    // InternalGo.g:3920:4: (lv_expr_2_0= ruleexpression )
                    {
                    // InternalGo.g:3920:4: (lv_expr_2_0= ruleexpression )
                    // InternalGo.g:3921:5: lv_expr_2_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getExprExpressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_5);
                    lv_expr_2_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"expr",
                      						lv_expr_2_0,
                      						"org.xtext.Go.expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getForClauseAccess().getEosParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_45);
            ruleeos();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:3948:3: ( (lv_statement2_4_0= rulesimpleStmt ) )?
            int alt52=2;
            switch ( input.LA(1) ) {
                case RULE_IDENTIFIER:
                case RULE_STRING_LIT:
                case RULE_WS:
                case RULE_INT_LIT:
                case RULE_FLOAT_LIT:
                case RULE_IMAGINARY_LIT:
                case RULE_RUNE_LIT:
                case RULE_BINARY_OP:
                case 45:
                case 47:
                case 49:
                case 50:
                case 52:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 65:
                case 66:
                case 67:
                case 68:
                case 69:
                case 87:
                case 89:
                case 90:
                case 91:
                case 93:
                case 94:
                    {
                    alt52=1;
                    }
                    break;
                case 54:
                    {
                    int LA52_2 = input.LA(2);

                    if ( (synpred85_InternalGo()) ) {
                        alt52=1;
                    }
                    }
                    break;
                case EOF:
                    {
                    int LA52_3 = input.LA(2);

                    if ( (synpred85_InternalGo()) ) {
                        alt52=1;
                    }
                    }
                    break;
            }

            switch (alt52) {
                case 1 :
                    // InternalGo.g:3949:4: (lv_statement2_4_0= rulesimpleStmt )
                    {
                    // InternalGo.g:3949:4: (lv_statement2_4_0= rulesimpleStmt )
                    // InternalGo.g:3950:5: lv_statement2_4_0= rulesimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getStatement2SimpleStmtParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement2_4_0=rulesimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"statement2",
                      						lv_statement2_4_0,
                      						"org.xtext.Go.simpleStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleforClause"


    // $ANTLR start "entryRulerangeClause"
    // InternalGo.g:3971:1: entryRulerangeClause returns [EObject current=null] : iv_rulerangeClause= rulerangeClause EOF ;
    public final EObject entryRulerangeClause() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerangeClause = null;


        try {
            // InternalGo.g:3971:52: (iv_rulerangeClause= rulerangeClause EOF )
            // InternalGo.g:3972:2: iv_rulerangeClause= rulerangeClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRangeClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerangeClause=rulerangeClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerangeClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerangeClause"


    // $ANTLR start "rulerangeClause"
    // InternalGo.g:3978:1: rulerangeClause returns [EObject current=null] : ( ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expr_5_0= ruleexpression ) ) ) ;
    public final EObject rulerangeClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_exprList_0_0 = null;

        EObject lv_idList_2_0 = null;

        EObject lv_expr_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3984:2: ( ( ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expr_5_0= ruleexpression ) ) ) )
            // InternalGo.g:3985:2: ( ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expr_5_0= ruleexpression ) ) )
            {
            // InternalGo.g:3985:2: ( ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expr_5_0= ruleexpression ) ) )
            // InternalGo.g:3986:3: ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expr_5_0= ruleexpression ) )
            {
            // InternalGo.g:3986:3: ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )?
            int alt53=3;
            alt53 = dfa53.predict(input);
            switch (alt53) {
                case 1 :
                    // InternalGo.g:3987:4: ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' )
                    {
                    // InternalGo.g:3987:4: ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' )
                    // InternalGo.g:3988:5: ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '='
                    {
                    // InternalGo.g:3988:5: ( (lv_exprList_0_0= ruleexpressionList ) )
                    // InternalGo.g:3989:6: (lv_exprList_0_0= ruleexpressionList )
                    {
                    // InternalGo.g:3989:6: (lv_exprList_0_0= ruleexpressionList )
                    // InternalGo.g:3990:7: lv_exprList_0_0= ruleexpressionList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRangeClauseAccess().getExprListExpressionListParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_14);
                    lv_exprList_0_0=ruleexpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRangeClauseRule());
                      							}
                      							set(
                      								current,
                      								"exprList",
                      								lv_exprList_0_0,
                      								"org.xtext.Go.expressionList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,49,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getRangeClauseAccess().getEqualsSignKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4013:4: ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' )
                    {
                    // InternalGo.g:4013:4: ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' )
                    // InternalGo.g:4014:5: ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':='
                    {
                    // InternalGo.g:4014:5: ( (lv_idList_2_0= ruleidentifierList ) )
                    // InternalGo.g:4015:6: (lv_idList_2_0= ruleidentifierList )
                    {
                    // InternalGo.g:4015:6: (lv_idList_2_0= ruleidentifierList )
                    // InternalGo.g:4016:7: lv_idList_2_0= ruleidentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRangeClauseAccess().getIdListIdentifierListParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_28);
                    lv_idList_2_0=ruleidentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRangeClauseRule());
                      							}
                      							set(
                      								current,
                      								"idList",
                      								lv_idList_2_0,
                      								"org.xtext.Go.identifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,70,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,85,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRangeClauseAccess().getRangeKeyword_1());
              		
            }
            // InternalGo.g:4043:3: ( (lv_expr_5_0= ruleexpression ) )
            // InternalGo.g:4044:4: (lv_expr_5_0= ruleexpression )
            {
            // InternalGo.g:4044:4: (lv_expr_5_0= ruleexpression )
            // InternalGo.g:4045:5: lv_expr_5_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRangeClauseAccess().getExprExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_5_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRangeClauseRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_5_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerangeClause"


    // $ANTLR start "entryRulegoStmt"
    // InternalGo.g:4066:1: entryRulegoStmt returns [EObject current=null] : iv_rulegoStmt= rulegoStmt EOF ;
    public final EObject entryRulegoStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulegoStmt = null;


        try {
            // InternalGo.g:4066:47: (iv_rulegoStmt= rulegoStmt EOF )
            // InternalGo.g:4067:2: iv_rulegoStmt= rulegoStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGoStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulegoStmt=rulegoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulegoStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulegoStmt"


    // $ANTLR start "rulegoStmt"
    // InternalGo.g:4073:1: rulegoStmt returns [EObject current=null] : (otherlv_0= 'go' ( (lv_expr_1_0= ruleexpression ) ) ) ;
    public final EObject rulegoStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_expr_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4079:2: ( (otherlv_0= 'go' ( (lv_expr_1_0= ruleexpression ) ) ) )
            // InternalGo.g:4080:2: (otherlv_0= 'go' ( (lv_expr_1_0= ruleexpression ) ) )
            {
            // InternalGo.g:4080:2: (otherlv_0= 'go' ( (lv_expr_1_0= ruleexpression ) ) )
            // InternalGo.g:4081:3: otherlv_0= 'go' ( (lv_expr_1_0= ruleexpression ) )
            {
            otherlv_0=(Token)match(input,86,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getGoStmtAccess().getGoKeyword_0());
              		
            }
            // InternalGo.g:4085:3: ( (lv_expr_1_0= ruleexpression ) )
            // InternalGo.g:4086:4: (lv_expr_1_0= ruleexpression )
            {
            // InternalGo.g:4086:4: (lv_expr_1_0= ruleexpression )
            // InternalGo.g:4087:5: lv_expr_1_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGoStmtAccess().getExprExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_1_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGoStmtRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_1_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulegoStmt"


    // $ANTLR start "entryRuletype"
    // InternalGo.g:4108:1: entryRuletype returns [EObject current=null] : iv_ruletype= ruletype EOF ;
    public final EObject entryRuletype() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletype = null;


        try {
            // InternalGo.g:4108:45: (iv_ruletype= ruletype EOF )
            // InternalGo.g:4109:2: iv_ruletype= ruletype EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletype=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletype; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletype"


    // $ANTLR start "ruletype"
    // InternalGo.g:4115:1: ruletype returns [EObject current=null] : ( ( (lv_content_0_0= ruletypeName ) ) | ( (lv_content_1_0= ruletypeLit ) ) | (otherlv_2= '(' ( (lv_content_3_0= ruletype ) ) otherlv_4= ')' ) ) ;
    public final EObject ruletype() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_content_0_0 = null;

        EObject lv_content_1_0 = null;

        EObject lv_content_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4121:2: ( ( ( (lv_content_0_0= ruletypeName ) ) | ( (lv_content_1_0= ruletypeLit ) ) | (otherlv_2= '(' ( (lv_content_3_0= ruletype ) ) otherlv_4= ')' ) ) )
            // InternalGo.g:4122:2: ( ( (lv_content_0_0= ruletypeName ) ) | ( (lv_content_1_0= ruletypeLit ) ) | (otherlv_2= '(' ( (lv_content_3_0= ruletype ) ) otherlv_4= ')' ) )
            {
            // InternalGo.g:4122:2: ( ( (lv_content_0_0= ruletypeName ) ) | ( (lv_content_1_0= ruletypeLit ) ) | (otherlv_2= '(' ( (lv_content_3_0= ruletype ) ) otherlv_4= ')' ) )
            int alt54=3;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                alt54=1;
                }
                break;
            case 52:
            case 56:
            case 63:
            case 87:
            case 89:
            case 90:
            case 91:
            case 93:
                {
                alt54=2;
                }
                break;
            case 45:
                {
                alt54=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }

            switch (alt54) {
                case 1 :
                    // InternalGo.g:4123:3: ( (lv_content_0_0= ruletypeName ) )
                    {
                    // InternalGo.g:4123:3: ( (lv_content_0_0= ruletypeName ) )
                    // InternalGo.g:4124:4: (lv_content_0_0= ruletypeName )
                    {
                    // InternalGo.g:4124:4: (lv_content_0_0= ruletypeName )
                    // InternalGo.g:4125:5: lv_content_0_0= ruletypeName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeAccess().getContentTypeNameParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_0_0=ruletypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_0_0,
                      						"org.xtext.Go.typeName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4143:3: ( (lv_content_1_0= ruletypeLit ) )
                    {
                    // InternalGo.g:4143:3: ( (lv_content_1_0= ruletypeLit ) )
                    // InternalGo.g:4144:4: (lv_content_1_0= ruletypeLit )
                    {
                    // InternalGo.g:4144:4: (lv_content_1_0= ruletypeLit )
                    // InternalGo.g:4145:5: lv_content_1_0= ruletypeLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeAccess().getContentTypeLitParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_1_0=ruletypeLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_1_0,
                      						"org.xtext.Go.typeLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:4163:3: (otherlv_2= '(' ( (lv_content_3_0= ruletype ) ) otherlv_4= ')' )
                    {
                    // InternalGo.g:4163:3: (otherlv_2= '(' ( (lv_content_3_0= ruletype ) ) otherlv_4= ')' )
                    // InternalGo.g:4164:4: otherlv_2= '(' ( (lv_content_3_0= ruletype ) ) otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,45,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalGo.g:4168:4: ( (lv_content_3_0= ruletype ) )
                    // InternalGo.g:4169:5: (lv_content_3_0= ruletype )
                    {
                    // InternalGo.g:4169:5: (lv_content_3_0= ruletype )
                    // InternalGo.g:4170:6: lv_content_3_0= ruletype
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeAccess().getContentTypeParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_42);
                    lv_content_3_0=ruletype();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeRule());
                      						}
                      						set(
                      							current,
                      							"content",
                      							lv_content_3_0,
                      							"org.xtext.Go.type");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletype"


    // $ANTLR start "entryRuletypeName"
    // InternalGo.g:4196:1: entryRuletypeName returns [EObject current=null] : iv_ruletypeName= ruletypeName EOF ;
    public final EObject entryRuletypeName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeName = null;


        try {
            // InternalGo.g:4196:49: (iv_ruletypeName= ruletypeName EOF )
            // InternalGo.g:4197:2: iv_ruletypeName= ruletypeName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeName=ruletypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeName"


    // $ANTLR start "ruletypeName"
    // InternalGo.g:4203:1: ruletypeName returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_qualIdent_1_0= rulequalifiedIdent ) ) ) ;
    public final EObject ruletypeName() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_qualIdent_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4209:2: ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_qualIdent_1_0= rulequalifiedIdent ) ) ) )
            // InternalGo.g:4210:2: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_qualIdent_1_0= rulequalifiedIdent ) ) )
            {
            // InternalGo.g:4210:2: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_qualIdent_1_0= rulequalifiedIdent ) ) )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==RULE_IDENTIFIER) ) {
                int LA55_1 = input.LA(2);

                if ( (LA55_1==47) ) {
                    int LA55_2 = input.LA(3);

                    if ( (LA55_2==RULE_IDENTIFIER) ) {
                        int LA55_4 = input.LA(4);

                        if ( (synpred90_InternalGo()) ) {
                            alt55=1;
                        }
                        else if ( (true) ) {
                            alt55=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 55, 4, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 55, 2, input);

                        throw nvae;
                    }
                }
                else if ( (LA55_1==EOF||LA55_1==RULE_STRING_LIT||(LA55_1>=45 && LA55_1<=46)||(LA55_1>=49 && LA55_1<=50)||LA55_1==54||LA55_1==71||LA55_1==88||LA55_1==92||LA55_1==95) ) {
                    alt55=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // InternalGo.g:4211:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
                    {
                    // InternalGo.g:4211:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
                    // InternalGo.g:4212:4: (lv_name_0_0= RULE_IDENTIFIER )
                    {
                    // InternalGo.g:4212:4: (lv_name_0_0= RULE_IDENTIFIER )
                    // InternalGo.g:4213:5: lv_name_0_0= RULE_IDENTIFIER
                    {
                    lv_name_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getTypeNameAccess().getNameIDENTIFIERTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTypeNameRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.xtext.Go.IDENTIFIER");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4230:3: ( (lv_qualIdent_1_0= rulequalifiedIdent ) )
                    {
                    // InternalGo.g:4230:3: ( (lv_qualIdent_1_0= rulequalifiedIdent ) )
                    // InternalGo.g:4231:4: (lv_qualIdent_1_0= rulequalifiedIdent )
                    {
                    // InternalGo.g:4231:4: (lv_qualIdent_1_0= rulequalifiedIdent )
                    // InternalGo.g:4232:5: lv_qualIdent_1_0= rulequalifiedIdent
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeNameAccess().getQualIdentQualifiedIdentParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_qualIdent_1_0=rulequalifiedIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeNameRule());
                      					}
                      					set(
                      						current,
                      						"qualIdent",
                      						lv_qualIdent_1_0,
                      						"org.xtext.Go.qualifiedIdent");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeName"


    // $ANTLR start "entryRuletypeLit"
    // InternalGo.g:4253:1: entryRuletypeLit returns [EObject current=null] : iv_ruletypeLit= ruletypeLit EOF ;
    public final EObject entryRuletypeLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeLit = null;


        try {
            // InternalGo.g:4253:48: (iv_ruletypeLit= ruletypeLit EOF )
            // InternalGo.g:4254:2: iv_ruletypeLit= ruletypeLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeLit=ruletypeLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeLit"


    // $ANTLR start "ruletypeLit"
    // InternalGo.g:4260:1: ruletypeLit returns [EObject current=null] : ( ( (lv_lit_0_0= rulearrayType ) ) | ( (lv_lit_1_0= rulestructType ) ) | ( (lv_lit_2_0= rulepointerType ) ) | ( (lv_lit_3_0= rulefunctionType ) ) | ( (lv_lit_4_0= ruleinterfaceType ) ) | ( (lv_lit_5_0= rulesliceType ) ) | ( (lv_lit_6_0= rulemapType ) ) | ( (lv_lit_7_0= rulechannelType ) ) ) ;
    public final EObject ruletypeLit() throws RecognitionException {
        EObject current = null;

        EObject lv_lit_0_0 = null;

        EObject lv_lit_1_0 = null;

        EObject lv_lit_2_0 = null;

        EObject lv_lit_3_0 = null;

        EObject lv_lit_4_0 = null;

        EObject lv_lit_5_0 = null;

        EObject lv_lit_6_0 = null;

        EObject lv_lit_7_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4266:2: ( ( ( (lv_lit_0_0= rulearrayType ) ) | ( (lv_lit_1_0= rulestructType ) ) | ( (lv_lit_2_0= rulepointerType ) ) | ( (lv_lit_3_0= rulefunctionType ) ) | ( (lv_lit_4_0= ruleinterfaceType ) ) | ( (lv_lit_5_0= rulesliceType ) ) | ( (lv_lit_6_0= rulemapType ) ) | ( (lv_lit_7_0= rulechannelType ) ) ) )
            // InternalGo.g:4267:2: ( ( (lv_lit_0_0= rulearrayType ) ) | ( (lv_lit_1_0= rulestructType ) ) | ( (lv_lit_2_0= rulepointerType ) ) | ( (lv_lit_3_0= rulefunctionType ) ) | ( (lv_lit_4_0= ruleinterfaceType ) ) | ( (lv_lit_5_0= rulesliceType ) ) | ( (lv_lit_6_0= rulemapType ) ) | ( (lv_lit_7_0= rulechannelType ) ) )
            {
            // InternalGo.g:4267:2: ( ( (lv_lit_0_0= rulearrayType ) ) | ( (lv_lit_1_0= rulestructType ) ) | ( (lv_lit_2_0= rulepointerType ) ) | ( (lv_lit_3_0= rulefunctionType ) ) | ( (lv_lit_4_0= ruleinterfaceType ) ) | ( (lv_lit_5_0= rulesliceType ) ) | ( (lv_lit_6_0= rulemapType ) ) | ( (lv_lit_7_0= rulechannelType ) ) )
            int alt56=8;
            alt56 = dfa56.predict(input);
            switch (alt56) {
                case 1 :
                    // InternalGo.g:4268:3: ( (lv_lit_0_0= rulearrayType ) )
                    {
                    // InternalGo.g:4268:3: ( (lv_lit_0_0= rulearrayType ) )
                    // InternalGo.g:4269:4: (lv_lit_0_0= rulearrayType )
                    {
                    // InternalGo.g:4269:4: (lv_lit_0_0= rulearrayType )
                    // InternalGo.g:4270:5: lv_lit_0_0= rulearrayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getLitArrayTypeParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_lit_0_0=rulearrayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"lit",
                      						lv_lit_0_0,
                      						"org.xtext.Go.arrayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4288:3: ( (lv_lit_1_0= rulestructType ) )
                    {
                    // InternalGo.g:4288:3: ( (lv_lit_1_0= rulestructType ) )
                    // InternalGo.g:4289:4: (lv_lit_1_0= rulestructType )
                    {
                    // InternalGo.g:4289:4: (lv_lit_1_0= rulestructType )
                    // InternalGo.g:4290:5: lv_lit_1_0= rulestructType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getLitStructTypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_lit_1_0=rulestructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"lit",
                      						lv_lit_1_0,
                      						"org.xtext.Go.structType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:4308:3: ( (lv_lit_2_0= rulepointerType ) )
                    {
                    // InternalGo.g:4308:3: ( (lv_lit_2_0= rulepointerType ) )
                    // InternalGo.g:4309:4: (lv_lit_2_0= rulepointerType )
                    {
                    // InternalGo.g:4309:4: (lv_lit_2_0= rulepointerType )
                    // InternalGo.g:4310:5: lv_lit_2_0= rulepointerType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getLitPointerTypeParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_lit_2_0=rulepointerType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"lit",
                      						lv_lit_2_0,
                      						"org.xtext.Go.pointerType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:4328:3: ( (lv_lit_3_0= rulefunctionType ) )
                    {
                    // InternalGo.g:4328:3: ( (lv_lit_3_0= rulefunctionType ) )
                    // InternalGo.g:4329:4: (lv_lit_3_0= rulefunctionType )
                    {
                    // InternalGo.g:4329:4: (lv_lit_3_0= rulefunctionType )
                    // InternalGo.g:4330:5: lv_lit_3_0= rulefunctionType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getLitFunctionTypeParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_lit_3_0=rulefunctionType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"lit",
                      						lv_lit_3_0,
                      						"org.xtext.Go.functionType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:4348:3: ( (lv_lit_4_0= ruleinterfaceType ) )
                    {
                    // InternalGo.g:4348:3: ( (lv_lit_4_0= ruleinterfaceType ) )
                    // InternalGo.g:4349:4: (lv_lit_4_0= ruleinterfaceType )
                    {
                    // InternalGo.g:4349:4: (lv_lit_4_0= ruleinterfaceType )
                    // InternalGo.g:4350:5: lv_lit_4_0= ruleinterfaceType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getLitInterfaceTypeParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_lit_4_0=ruleinterfaceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"lit",
                      						lv_lit_4_0,
                      						"org.xtext.Go.interfaceType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:4368:3: ( (lv_lit_5_0= rulesliceType ) )
                    {
                    // InternalGo.g:4368:3: ( (lv_lit_5_0= rulesliceType ) )
                    // InternalGo.g:4369:4: (lv_lit_5_0= rulesliceType )
                    {
                    // InternalGo.g:4369:4: (lv_lit_5_0= rulesliceType )
                    // InternalGo.g:4370:5: lv_lit_5_0= rulesliceType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getLitSliceTypeParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_lit_5_0=rulesliceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"lit",
                      						lv_lit_5_0,
                      						"org.xtext.Go.sliceType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalGo.g:4388:3: ( (lv_lit_6_0= rulemapType ) )
                    {
                    // InternalGo.g:4388:3: ( (lv_lit_6_0= rulemapType ) )
                    // InternalGo.g:4389:4: (lv_lit_6_0= rulemapType )
                    {
                    // InternalGo.g:4389:4: (lv_lit_6_0= rulemapType )
                    // InternalGo.g:4390:5: lv_lit_6_0= rulemapType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getLitMapTypeParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_lit_6_0=rulemapType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"lit",
                      						lv_lit_6_0,
                      						"org.xtext.Go.mapType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalGo.g:4408:3: ( (lv_lit_7_0= rulechannelType ) )
                    {
                    // InternalGo.g:4408:3: ( (lv_lit_7_0= rulechannelType ) )
                    // InternalGo.g:4409:4: (lv_lit_7_0= rulechannelType )
                    {
                    // InternalGo.g:4409:4: (lv_lit_7_0= rulechannelType )
                    // InternalGo.g:4410:5: lv_lit_7_0= rulechannelType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeLitAccess().getLitChannelTypeParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_lit_7_0=rulechannelType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      					}
                      					set(
                      						current,
                      						"lit",
                      						lv_lit_7_0,
                      						"org.xtext.Go.channelType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeLit"


    // $ANTLR start "entryRulearrayType"
    // InternalGo.g:4431:1: entryRulearrayType returns [EObject current=null] : iv_rulearrayType= rulearrayType EOF ;
    public final EObject entryRulearrayType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulearrayType = null;


        try {
            // InternalGo.g:4431:50: (iv_rulearrayType= rulearrayType EOF )
            // InternalGo.g:4432:2: iv_rulearrayType= rulearrayType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulearrayType=rulearrayType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulearrayType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulearrayType"


    // $ANTLR start "rulearrayType"
    // InternalGo.g:4438:1: rulearrayType returns [EObject current=null] : (otherlv_0= '[' ( (lv_arrayLength_1_0= rulearrayLength ) ) otherlv_2= ']' ( (lv_elemType_3_0= ruleelementType ) ) ) ;
    public final EObject rulearrayType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_arrayLength_1_0 = null;

        EObject lv_elemType_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4444:2: ( (otherlv_0= '[' ( (lv_arrayLength_1_0= rulearrayLength ) ) otherlv_2= ']' ( (lv_elemType_3_0= ruleelementType ) ) ) )
            // InternalGo.g:4445:2: (otherlv_0= '[' ( (lv_arrayLength_1_0= rulearrayLength ) ) otherlv_2= ']' ( (lv_elemType_3_0= ruleelementType ) ) )
            {
            // InternalGo.g:4445:2: (otherlv_0= '[' ( (lv_arrayLength_1_0= rulearrayLength ) ) otherlv_2= ']' ( (lv_elemType_3_0= ruleelementType ) ) )
            // InternalGo.g:4446:3: otherlv_0= '[' ( (lv_arrayLength_1_0= rulearrayLength ) ) otherlv_2= ']' ( (lv_elemType_3_0= ruleelementType ) )
            {
            otherlv_0=(Token)match(input,87,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalGo.g:4450:3: ( (lv_arrayLength_1_0= rulearrayLength ) )
            // InternalGo.g:4451:4: (lv_arrayLength_1_0= rulearrayLength )
            {
            // InternalGo.g:4451:4: (lv_arrayLength_1_0= rulearrayLength )
            // InternalGo.g:4452:5: lv_arrayLength_1_0= rulearrayLength
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArrayTypeAccess().getArrayLengthArrayLengthParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_47);
            lv_arrayLength_1_0=rulearrayLength();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArrayTypeRule());
              					}
              					set(
              						current,
              						"arrayLength",
              						lv_arrayLength_1_0,
              						"org.xtext.Go.arrayLength");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,88,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2());
              		
            }
            // InternalGo.g:4473:3: ( (lv_elemType_3_0= ruleelementType ) )
            // InternalGo.g:4474:4: (lv_elemType_3_0= ruleelementType )
            {
            // InternalGo.g:4474:4: (lv_elemType_3_0= ruleelementType )
            // InternalGo.g:4475:5: lv_elemType_3_0= ruleelementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArrayTypeAccess().getElemTypeElementTypeParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemType_3_0=ruleelementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArrayTypeRule());
              					}
              					set(
              						current,
              						"elemType",
              						lv_elemType_3_0,
              						"org.xtext.Go.elementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulearrayType"


    // $ANTLR start "entryRulearrayLength"
    // InternalGo.g:4496:1: entryRulearrayLength returns [EObject current=null] : iv_rulearrayLength= rulearrayLength EOF ;
    public final EObject entryRulearrayLength() throws RecognitionException {
        EObject current = null;

        EObject iv_rulearrayLength = null;


        try {
            // InternalGo.g:4496:52: (iv_rulearrayLength= rulearrayLength EOF )
            // InternalGo.g:4497:2: iv_rulearrayLength= rulearrayLength EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayLengthRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulearrayLength=rulearrayLength();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulearrayLength; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulearrayLength"


    // $ANTLR start "rulearrayLength"
    // InternalGo.g:4503:1: rulearrayLength returns [EObject current=null] : ( (lv_expr_0_0= ruleexpression ) ) ;
    public final EObject rulearrayLength() throws RecognitionException {
        EObject current = null;

        EObject lv_expr_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4509:2: ( ( (lv_expr_0_0= ruleexpression ) ) )
            // InternalGo.g:4510:2: ( (lv_expr_0_0= ruleexpression ) )
            {
            // InternalGo.g:4510:2: ( (lv_expr_0_0= ruleexpression ) )
            // InternalGo.g:4511:3: (lv_expr_0_0= ruleexpression )
            {
            // InternalGo.g:4511:3: (lv_expr_0_0= ruleexpression )
            // InternalGo.g:4512:4: lv_expr_0_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getArrayLengthAccess().getExprExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_expr_0_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getArrayLengthRule());
              				}
              				set(
              					current,
              					"expr",
              					lv_expr_0_0,
              					"org.xtext.Go.expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulearrayLength"


    // $ANTLR start "entryRuleelementType"
    // InternalGo.g:4532:1: entryRuleelementType returns [EObject current=null] : iv_ruleelementType= ruleelementType EOF ;
    public final EObject entryRuleelementType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleelementType = null;


        try {
            // InternalGo.g:4532:52: (iv_ruleelementType= ruleelementType EOF )
            // InternalGo.g:4533:2: iv_ruleelementType= ruleelementType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleelementType=ruleelementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleelementType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleelementType"


    // $ANTLR start "ruleelementType"
    // InternalGo.g:4539:1: ruleelementType returns [EObject current=null] : ( (lv_type_0_0= ruletype ) ) ;
    public final EObject ruleelementType() throws RecognitionException {
        EObject current = null;

        EObject lv_type_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4545:2: ( ( (lv_type_0_0= ruletype ) ) )
            // InternalGo.g:4546:2: ( (lv_type_0_0= ruletype ) )
            {
            // InternalGo.g:4546:2: ( (lv_type_0_0= ruletype ) )
            // InternalGo.g:4547:3: (lv_type_0_0= ruletype )
            {
            // InternalGo.g:4547:3: (lv_type_0_0= ruletype )
            // InternalGo.g:4548:4: lv_type_0_0= ruletype
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getElementTypeAccess().getTypeTypeParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_type_0_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getElementTypeRule());
              				}
              				set(
              					current,
              					"type",
              					lv_type_0_0,
              					"org.xtext.Go.type");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleelementType"


    // $ANTLR start "entryRulepointerType"
    // InternalGo.g:4568:1: entryRulepointerType returns [EObject current=null] : iv_rulepointerType= rulepointerType EOF ;
    public final EObject entryRulepointerType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulepointerType = null;


        try {
            // InternalGo.g:4568:52: (iv_rulepointerType= rulepointerType EOF )
            // InternalGo.g:4569:2: iv_rulepointerType= rulepointerType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPointerTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulepointerType=rulepointerType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulepointerType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulepointerType"


    // $ANTLR start "rulepointerType"
    // InternalGo.g:4575:1: rulepointerType returns [EObject current=null] : (otherlv_0= '*' ( (lv_type_1_0= ruletype ) ) ) ;
    public final EObject rulepointerType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_type_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4581:2: ( (otherlv_0= '*' ( (lv_type_1_0= ruletype ) ) ) )
            // InternalGo.g:4582:2: (otherlv_0= '*' ( (lv_type_1_0= ruletype ) ) )
            {
            // InternalGo.g:4582:2: (otherlv_0= '*' ( (lv_type_1_0= ruletype ) ) )
            // InternalGo.g:4583:3: otherlv_0= '*' ( (lv_type_1_0= ruletype ) )
            {
            otherlv_0=(Token)match(input,63,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0());
              		
            }
            // InternalGo.g:4587:3: ( (lv_type_1_0= ruletype ) )
            // InternalGo.g:4588:4: (lv_type_1_0= ruletype )
            {
            // InternalGo.g:4588:4: (lv_type_1_0= ruletype )
            // InternalGo.g:4589:5: lv_type_1_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPointerTypeAccess().getTypeTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_type_1_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPointerTypeRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_1_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulepointerType"


    // $ANTLR start "entryRuleinterfaceType"
    // InternalGo.g:4610:1: entryRuleinterfaceType returns [EObject current=null] : iv_ruleinterfaceType= ruleinterfaceType EOF ;
    public final EObject entryRuleinterfaceType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleinterfaceType = null;


        try {
            // InternalGo.g:4610:54: (iv_ruleinterfaceType= ruleinterfaceType EOF )
            // InternalGo.g:4611:2: iv_ruleinterfaceType= ruleinterfaceType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterfaceTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinterfaceType=ruleinterfaceType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinterfaceType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinterfaceType"


    // $ANTLR start "ruleinterfaceType"
    // InternalGo.g:4617:1: ruleinterfaceType returns [EObject current=null] : (otherlv_0= 'interface' otherlv_1= '{' ( ( (lv_methodSpecs_2_0= rulemethodSpec ) ) ruleeos )* otherlv_4= '}' ) ;
    public final EObject ruleinterfaceType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_methodSpecs_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4623:2: ( (otherlv_0= 'interface' otherlv_1= '{' ( ( (lv_methodSpecs_2_0= rulemethodSpec ) ) ruleeos )* otherlv_4= '}' ) )
            // InternalGo.g:4624:2: (otherlv_0= 'interface' otherlv_1= '{' ( ( (lv_methodSpecs_2_0= rulemethodSpec ) ) ruleeos )* otherlv_4= '}' )
            {
            // InternalGo.g:4624:2: (otherlv_0= 'interface' otherlv_1= '{' ( ( (lv_methodSpecs_2_0= rulemethodSpec ) ) ruleeos )* otherlv_4= '}' )
            // InternalGo.g:4625:3: otherlv_0= 'interface' otherlv_1= '{' ( ( (lv_methodSpecs_2_0= rulemethodSpec ) ) ruleeos )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,89,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,54,FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalGo.g:4633:3: ( ( (lv_methodSpecs_2_0= rulemethodSpec ) ) ruleeos )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==RULE_IDENTIFIER) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalGo.g:4634:4: ( (lv_methodSpecs_2_0= rulemethodSpec ) ) ruleeos
            	    {
            	    // InternalGo.g:4634:4: ( (lv_methodSpecs_2_0= rulemethodSpec ) )
            	    // InternalGo.g:4635:5: (lv_methodSpecs_2_0= rulemethodSpec )
            	    {
            	    // InternalGo.g:4635:5: (lv_methodSpecs_2_0= rulemethodSpec )
            	    // InternalGo.g:4636:6: lv_methodSpecs_2_0= rulemethodSpec
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getInterfaceTypeAccess().getMethodSpecsMethodSpecParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_methodSpecs_2_0=rulemethodSpec();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getInterfaceTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"methodSpecs",
            	      							lv_methodSpecs_2_0,
            	      							"org.xtext.Go.methodSpec");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      				/* */
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getInterfaceTypeAccess().getEosParserRuleCall_2_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_48);
            	    ruleeos();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            otherlv_4=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinterfaceType"


    // $ANTLR start "entryRulesliceType"
    // InternalGo.g:4672:1: entryRulesliceType returns [EObject current=null] : iv_rulesliceType= rulesliceType EOF ;
    public final EObject entryRulesliceType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulesliceType = null;


        try {
            // InternalGo.g:4672:50: (iv_rulesliceType= rulesliceType EOF )
            // InternalGo.g:4673:2: iv_rulesliceType= rulesliceType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSliceTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulesliceType=rulesliceType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesliceType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulesliceType"


    // $ANTLR start "rulesliceType"
    // InternalGo.g:4679:1: rulesliceType returns [EObject current=null] : (otherlv_0= '[' otherlv_1= ']' ( (lv_elemType_2_0= ruleelementType ) ) ) ;
    public final EObject rulesliceType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_elemType_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4685:2: ( (otherlv_0= '[' otherlv_1= ']' ( (lv_elemType_2_0= ruleelementType ) ) ) )
            // InternalGo.g:4686:2: (otherlv_0= '[' otherlv_1= ']' ( (lv_elemType_2_0= ruleelementType ) ) )
            {
            // InternalGo.g:4686:2: (otherlv_0= '[' otherlv_1= ']' ( (lv_elemType_2_0= ruleelementType ) ) )
            // InternalGo.g:4687:3: otherlv_0= '[' otherlv_1= ']' ( (lv_elemType_2_0= ruleelementType ) )
            {
            otherlv_0=(Token)match(input,87,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSliceTypeAccess().getLeftSquareBracketKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,88,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSliceTypeAccess().getRightSquareBracketKeyword_1());
              		
            }
            // InternalGo.g:4695:3: ( (lv_elemType_2_0= ruleelementType ) )
            // InternalGo.g:4696:4: (lv_elemType_2_0= ruleelementType )
            {
            // InternalGo.g:4696:4: (lv_elemType_2_0= ruleelementType )
            // InternalGo.g:4697:5: lv_elemType_2_0= ruleelementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSliceTypeAccess().getElemTypeElementTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemType_2_0=ruleelementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSliceTypeRule());
              					}
              					set(
              						current,
              						"elemType",
              						lv_elemType_2_0,
              						"org.xtext.Go.elementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulesliceType"


    // $ANTLR start "entryRulemapType"
    // InternalGo.g:4718:1: entryRulemapType returns [EObject current=null] : iv_rulemapType= rulemapType EOF ;
    public final EObject entryRulemapType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulemapType = null;


        try {
            // InternalGo.g:4718:48: (iv_rulemapType= rulemapType EOF )
            // InternalGo.g:4719:2: iv_rulemapType= rulemapType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulemapType=rulemapType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulemapType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulemapType"


    // $ANTLR start "rulemapType"
    // InternalGo.g:4725:1: rulemapType returns [EObject current=null] : (otherlv_0= 'map' otherlv_1= '[' ( (lv_type_2_0= ruletype ) ) otherlv_3= ']' ( (lv_elemType_4_0= ruleelementType ) ) ) ;
    public final EObject rulemapType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_type_2_0 = null;

        EObject lv_elemType_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4731:2: ( (otherlv_0= 'map' otherlv_1= '[' ( (lv_type_2_0= ruletype ) ) otherlv_3= ']' ( (lv_elemType_4_0= ruleelementType ) ) ) )
            // InternalGo.g:4732:2: (otherlv_0= 'map' otherlv_1= '[' ( (lv_type_2_0= ruletype ) ) otherlv_3= ']' ( (lv_elemType_4_0= ruleelementType ) ) )
            {
            // InternalGo.g:4732:2: (otherlv_0= 'map' otherlv_1= '[' ( (lv_type_2_0= ruletype ) ) otherlv_3= ']' ( (lv_elemType_4_0= ruleelementType ) ) )
            // InternalGo.g:4733:3: otherlv_0= 'map' otherlv_1= '[' ( (lv_type_2_0= ruletype ) ) otherlv_3= ']' ( (lv_elemType_4_0= ruleelementType ) )
            {
            otherlv_0=(Token)match(input,90,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMapTypeAccess().getMapKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,87,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalGo.g:4741:3: ( (lv_type_2_0= ruletype ) )
            // InternalGo.g:4742:4: (lv_type_2_0= ruletype )
            {
            // InternalGo.g:4742:4: (lv_type_2_0= ruletype )
            // InternalGo.g:4743:5: lv_type_2_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapTypeAccess().getTypeTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_47);
            lv_type_2_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapTypeRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,88,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3());
              		
            }
            // InternalGo.g:4764:3: ( (lv_elemType_4_0= ruleelementType ) )
            // InternalGo.g:4765:4: (lv_elemType_4_0= ruleelementType )
            {
            // InternalGo.g:4765:4: (lv_elemType_4_0= ruleelementType )
            // InternalGo.g:4766:5: lv_elemType_4_0= ruleelementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapTypeAccess().getElemTypeElementTypeParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemType_4_0=ruleelementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapTypeRule());
              					}
              					set(
              						current,
              						"elemType",
              						lv_elemType_4_0,
              						"org.xtext.Go.elementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulemapType"


    // $ANTLR start "entryRulechannelType"
    // InternalGo.g:4787:1: entryRulechannelType returns [EObject current=null] : iv_rulechannelType= rulechannelType EOF ;
    public final EObject entryRulechannelType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulechannelType = null;


        try {
            // InternalGo.g:4787:52: (iv_rulechannelType= rulechannelType EOF )
            // InternalGo.g:4788:2: iv_rulechannelType= rulechannelType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChannelTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulechannelType=rulechannelType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulechannelType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulechannelType"


    // $ANTLR start "rulechannelType"
    // InternalGo.g:4794:1: rulechannelType returns [EObject current=null] : ( (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_elemType_5_0= ruleelementType ) ) ) ;
    public final EObject rulechannelType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_elemType_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4800:2: ( ( (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_elemType_5_0= ruleelementType ) ) ) )
            // InternalGo.g:4801:2: ( (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_elemType_5_0= ruleelementType ) ) )
            {
            // InternalGo.g:4801:2: ( (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_elemType_5_0= ruleelementType ) ) )
            // InternalGo.g:4802:3: (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_elemType_5_0= ruleelementType ) )
            {
            // InternalGo.g:4802:3: (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) )
            int alt58=3;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==91) ) {
                int LA58_1 = input.LA(2);

                if ( (synpred99_InternalGo()) ) {
                    alt58=1;
                }
                else if ( (synpred100_InternalGo()) ) {
                    alt58=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 58, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA58_0==56) ) {
                alt58=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }
            switch (alt58) {
                case 1 :
                    // InternalGo.g:4803:4: otherlv_0= 'chan'
                    {
                    otherlv_0=(Token)match(input,91,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getChannelTypeAccess().getChanKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:4808:4: (otherlv_1= 'chan' otherlv_2= '<-' )
                    {
                    // InternalGo.g:4808:4: (otherlv_1= 'chan' otherlv_2= '<-' )
                    // InternalGo.g:4809:5: otherlv_1= 'chan' otherlv_2= '<-'
                    {
                    otherlv_1=(Token)match(input,91,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_0());
                      				
                    }
                    otherlv_2=(Token)match(input,56,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:4819:4: (otherlv_3= '<-' otherlv_4= 'chan' )
                    {
                    // InternalGo.g:4819:4: (otherlv_3= '<-' otherlv_4= 'chan' )
                    // InternalGo.g:4820:5: otherlv_3= '<-' otherlv_4= 'chan'
                    {
                    otherlv_3=(Token)match(input,56,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_2_0());
                      				
                    }
                    otherlv_4=(Token)match(input,91,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getChannelTypeAccess().getChanKeyword_0_2_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:4830:3: ( (lv_elemType_5_0= ruleelementType ) )
            // InternalGo.g:4831:4: (lv_elemType_5_0= ruleelementType )
            {
            // InternalGo.g:4831:4: (lv_elemType_5_0= ruleelementType )
            // InternalGo.g:4832:5: lv_elemType_5_0= ruleelementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChannelTypeAccess().getElemTypeElementTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemType_5_0=ruleelementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChannelTypeRule());
              					}
              					set(
              						current,
              						"elemType",
              						lv_elemType_5_0,
              						"org.xtext.Go.elementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulechannelType"


    // $ANTLR start "entryRulemethodSpec"
    // InternalGo.g:4853:1: entryRulemethodSpec returns [EObject current=null] : iv_rulemethodSpec= rulemethodSpec EOF ;
    public final EObject entryRulemethodSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_rulemethodSpec = null;


        try {
            // InternalGo.g:4853:51: (iv_rulemethodSpec= rulemethodSpec EOF )
            // InternalGo.g:4854:2: iv_rulemethodSpec= rulemethodSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulemethodSpec=rulemethodSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulemethodSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulemethodSpec"


    // $ANTLR start "rulemethodSpec"
    // InternalGo.g:4860:1: rulemethodSpec returns [EObject current=null] : ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_sig_1_0= rulesignature ) ) ) | ( (lv_typeName_2_0= ruletypeName ) ) ) ;
    public final EObject rulemethodSpec() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_sig_1_0 = null;

        EObject lv_typeName_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4866:2: ( ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_sig_1_0= rulesignature ) ) ) | ( (lv_typeName_2_0= ruletypeName ) ) ) )
            // InternalGo.g:4867:2: ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_sig_1_0= rulesignature ) ) ) | ( (lv_typeName_2_0= ruletypeName ) ) )
            {
            // InternalGo.g:4867:2: ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_sig_1_0= rulesignature ) ) ) | ( (lv_typeName_2_0= ruletypeName ) ) )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==RULE_IDENTIFIER) ) {
                int LA59_1 = input.LA(2);

                if ( (LA59_1==45) ) {
                    alt59=1;
                }
                else if ( (LA59_1==EOF||LA59_1==47||LA59_1==95) ) {
                    alt59=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 59, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }
            switch (alt59) {
                case 1 :
                    // InternalGo.g:4868:3: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_sig_1_0= rulesignature ) ) )
                    {
                    // InternalGo.g:4868:3: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_sig_1_0= rulesignature ) ) )
                    // InternalGo.g:4869:4: ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_sig_1_0= rulesignature ) )
                    {
                    // InternalGo.g:4869:4: ( (lv_name_0_0= RULE_IDENTIFIER ) )
                    // InternalGo.g:4870:5: (lv_name_0_0= RULE_IDENTIFIER )
                    {
                    // InternalGo.g:4870:5: (lv_name_0_0= RULE_IDENTIFIER )
                    // InternalGo.g:4871:6: lv_name_0_0= RULE_IDENTIFIER
                    {
                    lv_name_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_0, grammarAccess.getMethodSpecAccess().getNameIDENTIFIERTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getMethodSpecRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_0_0,
                      							"org.xtext.Go.IDENTIFIER");
                      					
                    }

                    }


                    }

                    // InternalGo.g:4887:4: ( (lv_sig_1_0= rulesignature ) )
                    // InternalGo.g:4888:5: (lv_sig_1_0= rulesignature )
                    {
                    // InternalGo.g:4888:5: (lv_sig_1_0= rulesignature )
                    // InternalGo.g:4889:6: lv_sig_1_0= rulesignature
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodSpecAccess().getSigSignatureParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_sig_1_0=rulesignature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodSpecRule());
                      						}
                      						set(
                      							current,
                      							"sig",
                      							lv_sig_1_0,
                      							"org.xtext.Go.signature");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4908:3: ( (lv_typeName_2_0= ruletypeName ) )
                    {
                    // InternalGo.g:4908:3: ( (lv_typeName_2_0= ruletypeName ) )
                    // InternalGo.g:4909:4: (lv_typeName_2_0= ruletypeName )
                    {
                    // InternalGo.g:4909:4: (lv_typeName_2_0= ruletypeName )
                    // InternalGo.g:4910:5: lv_typeName_2_0= ruletypeName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodSpecAccess().getTypeNameTypeNameParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeName_2_0=ruletypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodSpecRule());
                      					}
                      					set(
                      						current,
                      						"typeName",
                      						lv_typeName_2_0,
                      						"org.xtext.Go.typeName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulemethodSpec"


    // $ANTLR start "entryRulefunctionType"
    // InternalGo.g:4931:1: entryRulefunctionType returns [EObject current=null] : iv_rulefunctionType= rulefunctionType EOF ;
    public final EObject entryRulefunctionType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefunctionType = null;


        try {
            // InternalGo.g:4931:53: (iv_rulefunctionType= rulefunctionType EOF )
            // InternalGo.g:4932:2: iv_rulefunctionType= rulefunctionType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefunctionType=rulefunctionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefunctionType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefunctionType"


    // $ANTLR start "rulefunctionType"
    // InternalGo.g:4938:1: rulefunctionType returns [EObject current=null] : (otherlv_0= 'func' ( (lv_sig_1_0= rulesignature ) ) ) ;
    public final EObject rulefunctionType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_sig_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4944:2: ( (otherlv_0= 'func' ( (lv_sig_1_0= rulesignature ) ) ) )
            // InternalGo.g:4945:2: (otherlv_0= 'func' ( (lv_sig_1_0= rulesignature ) ) )
            {
            // InternalGo.g:4945:2: (otherlv_0= 'func' ( (lv_sig_1_0= rulesignature ) ) )
            // InternalGo.g:4946:3: otherlv_0= 'func' ( (lv_sig_1_0= rulesignature ) )
            {
            otherlv_0=(Token)match(input,52,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionTypeAccess().getFuncKeyword_0());
              		
            }
            // InternalGo.g:4950:3: ( (lv_sig_1_0= rulesignature ) )
            // InternalGo.g:4951:4: (lv_sig_1_0= rulesignature )
            {
            // InternalGo.g:4951:4: (lv_sig_1_0= rulesignature )
            // InternalGo.g:4952:5: lv_sig_1_0= rulesignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionTypeAccess().getSigSignatureParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_sig_1_0=rulesignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionTypeRule());
              					}
              					set(
              						current,
              						"sig",
              						lv_sig_1_0,
              						"org.xtext.Go.signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefunctionType"


    // $ANTLR start "entryRulesignature"
    // InternalGo.g:4973:1: entryRulesignature returns [EObject current=null] : iv_rulesignature= rulesignature EOF ;
    public final EObject entryRulesignature() throws RecognitionException {
        EObject current = null;

        EObject iv_rulesignature = null;


        try {
            // InternalGo.g:4973:50: (iv_rulesignature= rulesignature EOF )
            // InternalGo.g:4974:2: iv_rulesignature= rulesignature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulesignature=rulesignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesignature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulesignature"


    // $ANTLR start "rulesignature"
    // InternalGo.g:4980:1: rulesignature returns [EObject current=null] : ( ( (lv_params_0_0= ruleparameters ) ) ( (lv_result_1_0= ruleresult ) )? ) ;
    public final EObject rulesignature() throws RecognitionException {
        EObject current = null;

        EObject lv_params_0_0 = null;

        EObject lv_result_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4986:2: ( ( ( (lv_params_0_0= ruleparameters ) ) ( (lv_result_1_0= ruleresult ) )? ) )
            // InternalGo.g:4987:2: ( ( (lv_params_0_0= ruleparameters ) ) ( (lv_result_1_0= ruleresult ) )? )
            {
            // InternalGo.g:4987:2: ( ( (lv_params_0_0= ruleparameters ) ) ( (lv_result_1_0= ruleresult ) )? )
            // InternalGo.g:4988:3: ( (lv_params_0_0= ruleparameters ) ) ( (lv_result_1_0= ruleresult ) )?
            {
            // InternalGo.g:4988:3: ( (lv_params_0_0= ruleparameters ) )
            // InternalGo.g:4989:4: (lv_params_0_0= ruleparameters )
            {
            // InternalGo.g:4989:4: (lv_params_0_0= ruleparameters )
            // InternalGo.g:4990:5: lv_params_0_0= ruleparameters
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSignatureAccess().getParamsParametersParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_51);
            lv_params_0_0=ruleparameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSignatureRule());
              					}
              					set(
              						current,
              						"params",
              						lv_params_0_0,
              						"org.xtext.Go.parameters");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:5007:3: ( (lv_result_1_0= ruleresult ) )?
            int alt60=2;
            alt60 = dfa60.predict(input);
            switch (alt60) {
                case 1 :
                    // InternalGo.g:5008:4: (lv_result_1_0= ruleresult )
                    {
                    // InternalGo.g:5008:4: (lv_result_1_0= ruleresult )
                    // InternalGo.g:5009:5: lv_result_1_0= ruleresult
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_result_1_0=ruleresult();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSignatureRule());
                      					}
                      					set(
                      						current,
                      						"result",
                      						lv_result_1_0,
                      						"org.xtext.Go.result");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulesignature"


    // $ANTLR start "entryRuleresult"
    // InternalGo.g:5030:1: entryRuleresult returns [EObject current=null] : iv_ruleresult= ruleresult EOF ;
    public final EObject entryRuleresult() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleresult = null;


        try {
            // InternalGo.g:5030:47: (iv_ruleresult= ruleresult EOF )
            // InternalGo.g:5031:2: iv_ruleresult= ruleresult EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getResultRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleresult=ruleresult();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleresult; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleresult"


    // $ANTLR start "ruleresult"
    // InternalGo.g:5037:1: ruleresult returns [EObject current=null] : ( ( (lv_params_0_0= ruleparameters ) ) | ( (lv_type_1_0= ruletype ) ) ) ;
    public final EObject ruleresult() throws RecognitionException {
        EObject current = null;

        EObject lv_params_0_0 = null;

        EObject lv_type_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5043:2: ( ( ( (lv_params_0_0= ruleparameters ) ) | ( (lv_type_1_0= ruletype ) ) ) )
            // InternalGo.g:5044:2: ( ( (lv_params_0_0= ruleparameters ) ) | ( (lv_type_1_0= ruletype ) ) )
            {
            // InternalGo.g:5044:2: ( ( (lv_params_0_0= ruleparameters ) ) | ( (lv_type_1_0= ruletype ) ) )
            int alt61=2;
            alt61 = dfa61.predict(input);
            switch (alt61) {
                case 1 :
                    // InternalGo.g:5045:3: ( (lv_params_0_0= ruleparameters ) )
                    {
                    // InternalGo.g:5045:3: ( (lv_params_0_0= ruleparameters ) )
                    // InternalGo.g:5046:4: (lv_params_0_0= ruleparameters )
                    {
                    // InternalGo.g:5046:4: (lv_params_0_0= ruleparameters )
                    // InternalGo.g:5047:5: lv_params_0_0= ruleparameters
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getResultAccess().getParamsParametersParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_params_0_0=ruleparameters();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getResultRule());
                      					}
                      					set(
                      						current,
                      						"params",
                      						lv_params_0_0,
                      						"org.xtext.Go.parameters");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5065:3: ( (lv_type_1_0= ruletype ) )
                    {
                    // InternalGo.g:5065:3: ( (lv_type_1_0= ruletype ) )
                    // InternalGo.g:5066:4: (lv_type_1_0= ruletype )
                    {
                    // InternalGo.g:5066:4: (lv_type_1_0= ruletype )
                    // InternalGo.g:5067:5: lv_type_1_0= ruletype
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getResultAccess().getTypeTypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_1_0=ruletype();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getResultRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_1_0,
                      						"org.xtext.Go.type");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleresult"


    // $ANTLR start "entryRuleparameters"
    // InternalGo.g:5088:1: entryRuleparameters returns [EObject current=null] : iv_ruleparameters= ruleparameters EOF ;
    public final EObject entryRuleparameters() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleparameters = null;


        try {
            // InternalGo.g:5088:51: (iv_ruleparameters= ruleparameters EOF )
            // InternalGo.g:5089:2: iv_ruleparameters= ruleparameters EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParametersRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleparameters=ruleparameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleparameters; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleparameters"


    // $ANTLR start "ruleparameters"
    // InternalGo.g:5095:1: ruleparameters returns [EObject current=null] : (otherlv_0= '(' ( ( (lv_paramList_1_0= ruleparameterList ) ) (otherlv_2= ',' )? )? otherlv_3= ')' ) ;
    public final EObject ruleparameters() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject lv_paramList_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5101:2: ( (otherlv_0= '(' ( ( (lv_paramList_1_0= ruleparameterList ) ) (otherlv_2= ',' )? )? otherlv_3= ')' ) )
            // InternalGo.g:5102:2: (otherlv_0= '(' ( ( (lv_paramList_1_0= ruleparameterList ) ) (otherlv_2= ',' )? )? otherlv_3= ')' )
            {
            // InternalGo.g:5102:2: (otherlv_0= '(' ( ( (lv_paramList_1_0= ruleparameterList ) ) (otherlv_2= ',' )? )? otherlv_3= ')' )
            // InternalGo.g:5103:3: otherlv_0= '(' ( ( (lv_paramList_1_0= ruleparameterList ) ) (otherlv_2= ',' )? )? otherlv_3= ')'
            {
            otherlv_0=(Token)match(input,45,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalGo.g:5107:3: ( ( (lv_paramList_1_0= ruleparameterList ) ) (otherlv_2= ',' )? )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==RULE_IDENTIFIER||LA63_0==45||LA63_0==52||LA63_0==56||LA63_0==63||LA63_0==87||(LA63_0>=89 && LA63_0<=93)) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalGo.g:5108:4: ( (lv_paramList_1_0= ruleparameterList ) ) (otherlv_2= ',' )?
                    {
                    // InternalGo.g:5108:4: ( (lv_paramList_1_0= ruleparameterList ) )
                    // InternalGo.g:5109:5: (lv_paramList_1_0= ruleparameterList )
                    {
                    // InternalGo.g:5109:5: (lv_paramList_1_0= ruleparameterList )
                    // InternalGo.g:5110:6: lv_paramList_1_0= ruleparameterList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParametersAccess().getParamListParameterListParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_53);
                    lv_paramList_1_0=ruleparameterList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParametersRule());
                      						}
                      						add(
                      							current,
                      							"paramList",
                      							lv_paramList_1_0,
                      							"org.xtext.Go.parameterList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:5127:4: (otherlv_2= ',' )?
                    int alt62=2;
                    int LA62_0 = input.LA(1);

                    if ( (LA62_0==50) ) {
                        alt62=1;
                    }
                    switch (alt62) {
                        case 1 :
                            // InternalGo.g:5128:5: otherlv_2= ','
                            {
                            otherlv_2=(Token)match(input,50,FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getParametersAccess().getCommaKeyword_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getParametersAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleparameters"


    // $ANTLR start "entryRuleparameterList"
    // InternalGo.g:5142:1: entryRuleparameterList returns [EObject current=null] : iv_ruleparameterList= ruleparameterList EOF ;
    public final EObject entryRuleparameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleparameterList = null;


        try {
            // InternalGo.g:5142:54: (iv_ruleparameterList= ruleparameterList EOF )
            // InternalGo.g:5143:2: iv_ruleparameterList= ruleparameterList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleparameterList=ruleparameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleparameterList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleparameterList"


    // $ANTLR start "ruleparameterList"
    // InternalGo.g:5149:1: ruleparameterList returns [EObject current=null] : ( ( (lv_paramsDecl_0_0= ruleparameterDecl ) ) (otherlv_1= ',' ( (lv_paramsDecl_2_0= ruleparameterDecl ) ) )* ) ;
    public final EObject ruleparameterList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_paramsDecl_0_0 = null;

        EObject lv_paramsDecl_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5155:2: ( ( ( (lv_paramsDecl_0_0= ruleparameterDecl ) ) (otherlv_1= ',' ( (lv_paramsDecl_2_0= ruleparameterDecl ) ) )* ) )
            // InternalGo.g:5156:2: ( ( (lv_paramsDecl_0_0= ruleparameterDecl ) ) (otherlv_1= ',' ( (lv_paramsDecl_2_0= ruleparameterDecl ) ) )* )
            {
            // InternalGo.g:5156:2: ( ( (lv_paramsDecl_0_0= ruleparameterDecl ) ) (otherlv_1= ',' ( (lv_paramsDecl_2_0= ruleparameterDecl ) ) )* )
            // InternalGo.g:5157:3: ( (lv_paramsDecl_0_0= ruleparameterDecl ) ) (otherlv_1= ',' ( (lv_paramsDecl_2_0= ruleparameterDecl ) ) )*
            {
            // InternalGo.g:5157:3: ( (lv_paramsDecl_0_0= ruleparameterDecl ) )
            // InternalGo.g:5158:4: (lv_paramsDecl_0_0= ruleparameterDecl )
            {
            // InternalGo.g:5158:4: (lv_paramsDecl_0_0= ruleparameterDecl )
            // InternalGo.g:5159:5: lv_paramsDecl_0_0= ruleparameterDecl
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterListAccess().getParamsDeclParameterDeclParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_paramsDecl_0_0=ruleparameterDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterListRule());
              					}
              					add(
              						current,
              						"paramsDecl",
              						lv_paramsDecl_0_0,
              						"org.xtext.Go.parameterDecl");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:5176:3: (otherlv_1= ',' ( (lv_paramsDecl_2_0= ruleparameterDecl ) ) )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==50) ) {
                    int LA64_1 = input.LA(2);

                    if ( (LA64_1==RULE_IDENTIFIER||LA64_1==45||LA64_1==52||LA64_1==56||LA64_1==63||LA64_1==87||(LA64_1>=89 && LA64_1<=93)) ) {
                        alt64=1;
                    }


                }


                switch (alt64) {
            	case 1 :
            	    // InternalGo.g:5177:4: otherlv_1= ',' ( (lv_paramsDecl_2_0= ruleparameterDecl ) )
            	    {
            	    otherlv_1=(Token)match(input,50,FOLLOW_54); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:5181:4: ( (lv_paramsDecl_2_0= ruleparameterDecl ) )
            	    // InternalGo.g:5182:5: (lv_paramsDecl_2_0= ruleparameterDecl )
            	    {
            	    // InternalGo.g:5182:5: (lv_paramsDecl_2_0= ruleparameterDecl )
            	    // InternalGo.g:5183:6: lv_paramsDecl_2_0= ruleparameterDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getParameterListAccess().getParamsDeclParameterDeclParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_paramsDecl_2_0=ruleparameterDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getParameterListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"paramsDecl",
            	      							lv_paramsDecl_2_0,
            	      							"org.xtext.Go.parameterDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleparameterList"


    // $ANTLR start "entryRuleparameterDecl"
    // InternalGo.g:5205:1: entryRuleparameterDecl returns [EObject current=null] : iv_ruleparameterDecl= ruleparameterDecl EOF ;
    public final EObject entryRuleparameterDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleparameterDecl = null;


        try {
            // InternalGo.g:5205:54: (iv_ruleparameterDecl= ruleparameterDecl EOF )
            // InternalGo.g:5206:2: iv_ruleparameterDecl= ruleparameterDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleparameterDecl=ruleparameterDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleparameterDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleparameterDecl"


    // $ANTLR start "ruleparameterDecl"
    // InternalGo.g:5212:1: ruleparameterDecl returns [EObject current=null] : ( ( (lv_identifierList_0_0= ruleidentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruletype ) ) ) ;
    public final EObject ruleparameterDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_identifierList_0_0 = null;

        EObject lv_type_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5218:2: ( ( ( (lv_identifierList_0_0= ruleidentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruletype ) ) ) )
            // InternalGo.g:5219:2: ( ( (lv_identifierList_0_0= ruleidentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruletype ) ) )
            {
            // InternalGo.g:5219:2: ( ( (lv_identifierList_0_0= ruleidentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruletype ) ) )
            // InternalGo.g:5220:3: ( (lv_identifierList_0_0= ruleidentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruletype ) )
            {
            // InternalGo.g:5220:3: ( (lv_identifierList_0_0= ruleidentifierList ) )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==RULE_IDENTIFIER) ) {
                int LA65_1 = input.LA(2);

                if ( (LA65_1==50) ) {
                    int LA65_3 = input.LA(3);

                    if ( (LA65_3==RULE_IDENTIFIER) ) {
                        int LA65_5 = input.LA(4);

                        if ( (synpred107_InternalGo()) ) {
                            alt65=1;
                        }
                    }
                }
                else if ( (LA65_1==RULE_IDENTIFIER||LA65_1==45||LA65_1==52||LA65_1==56||LA65_1==63||LA65_1==87||(LA65_1>=89 && LA65_1<=93)) ) {
                    alt65=1;
                }
            }
            switch (alt65) {
                case 1 :
                    // InternalGo.g:5221:4: (lv_identifierList_0_0= ruleidentifierList )
                    {
                    // InternalGo.g:5221:4: (lv_identifierList_0_0= ruleidentifierList )
                    // InternalGo.g:5222:5: lv_identifierList_0_0= ruleidentifierList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameterDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_54);
                    lv_identifierList_0_0=ruleidentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameterDeclRule());
                      					}
                      					set(
                      						current,
                      						"identifierList",
                      						lv_identifierList_0_0,
                      						"org.xtext.Go.identifierList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:5239:3: (otherlv_1= '...' )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==92) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalGo.g:5240:4: otherlv_1= '...'
                    {
                    otherlv_1=(Token)match(input,92,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:5245:3: ( (lv_type_2_0= ruletype ) )
            // InternalGo.g:5246:4: (lv_type_2_0= ruletype )
            {
            // InternalGo.g:5246:4: (lv_type_2_0= ruletype )
            // InternalGo.g:5247:5: lv_type_2_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_type_2_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterDeclRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleparameterDecl"


    // $ANTLR start "entryRuleoperand"
    // InternalGo.g:5268:1: entryRuleoperand returns [EObject current=null] : iv_ruleoperand= ruleoperand EOF ;
    public final EObject entryRuleoperand() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleoperand = null;


        try {
            // InternalGo.g:5268:48: (iv_ruleoperand= ruleoperand EOF )
            // InternalGo.g:5269:2: iv_ruleoperand= ruleoperand EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleoperand=ruleoperand();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleoperand; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleoperand"


    // $ANTLR start "ruleoperand"
    // InternalGo.g:5275:1: ruleoperand returns [EObject current=null] : ( ( (lv_content_0_0= ruleliteral ) ) | ( (lv_content_1_0= ruleoperandName ) ) | ( (lv_content_2_0= rulemethodExpr ) ) | (otherlv_3= '(' ( (lv_content_4_0= ruleexpression ) ) otherlv_5= ')' ) ) ;
    public final EObject ruleoperand() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_content_0_0 = null;

        EObject lv_content_1_0 = null;

        EObject lv_content_2_0 = null;

        EObject lv_content_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5281:2: ( ( ( (lv_content_0_0= ruleliteral ) ) | ( (lv_content_1_0= ruleoperandName ) ) | ( (lv_content_2_0= rulemethodExpr ) ) | (otherlv_3= '(' ( (lv_content_4_0= ruleexpression ) ) otherlv_5= ')' ) ) )
            // InternalGo.g:5282:2: ( ( (lv_content_0_0= ruleliteral ) ) | ( (lv_content_1_0= ruleoperandName ) ) | ( (lv_content_2_0= rulemethodExpr ) ) | (otherlv_3= '(' ( (lv_content_4_0= ruleexpression ) ) otherlv_5= ')' ) )
            {
            // InternalGo.g:5282:2: ( ( (lv_content_0_0= ruleliteral ) ) | ( (lv_content_1_0= ruleoperandName ) ) | ( (lv_content_2_0= rulemethodExpr ) ) | (otherlv_3= '(' ( (lv_content_4_0= ruleexpression ) ) otherlv_5= ')' ) )
            int alt67=4;
            alt67 = dfa67.predict(input);
            switch (alt67) {
                case 1 :
                    // InternalGo.g:5283:3: ( (lv_content_0_0= ruleliteral ) )
                    {
                    // InternalGo.g:5283:3: ( (lv_content_0_0= ruleliteral ) )
                    // InternalGo.g:5284:4: (lv_content_0_0= ruleliteral )
                    {
                    // InternalGo.g:5284:4: (lv_content_0_0= ruleliteral )
                    // InternalGo.g:5285:5: lv_content_0_0= ruleliteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOperandAccess().getContentLiteralParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_0_0=ruleliteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOperandRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_0_0,
                      						"org.xtext.Go.literal");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5303:3: ( (lv_content_1_0= ruleoperandName ) )
                    {
                    // InternalGo.g:5303:3: ( (lv_content_1_0= ruleoperandName ) )
                    // InternalGo.g:5304:4: (lv_content_1_0= ruleoperandName )
                    {
                    // InternalGo.g:5304:4: (lv_content_1_0= ruleoperandName )
                    // InternalGo.g:5305:5: lv_content_1_0= ruleoperandName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOperandAccess().getContentOperandNameParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_1_0=ruleoperandName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOperandRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_1_0,
                      						"org.xtext.Go.operandName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:5323:3: ( (lv_content_2_0= rulemethodExpr ) )
                    {
                    // InternalGo.g:5323:3: ( (lv_content_2_0= rulemethodExpr ) )
                    // InternalGo.g:5324:4: (lv_content_2_0= rulemethodExpr )
                    {
                    // InternalGo.g:5324:4: (lv_content_2_0= rulemethodExpr )
                    // InternalGo.g:5325:5: lv_content_2_0= rulemethodExpr
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOperandAccess().getContentMethodExprParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_2_0=rulemethodExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOperandRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_2_0,
                      						"org.xtext.Go.methodExpr");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:5343:3: (otherlv_3= '(' ( (lv_content_4_0= ruleexpression ) ) otherlv_5= ')' )
                    {
                    // InternalGo.g:5343:3: (otherlv_3= '(' ( (lv_content_4_0= ruleexpression ) ) otherlv_5= ')' )
                    // InternalGo.g:5344:4: otherlv_3= '(' ( (lv_content_4_0= ruleexpression ) ) otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getOperandAccess().getLeftParenthesisKeyword_3_0());
                      			
                    }
                    // InternalGo.g:5348:4: ( (lv_content_4_0= ruleexpression ) )
                    // InternalGo.g:5349:5: (lv_content_4_0= ruleexpression )
                    {
                    // InternalGo.g:5349:5: (lv_content_4_0= ruleexpression )
                    // InternalGo.g:5350:6: lv_content_4_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperandAccess().getContentExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_42);
                    lv_content_4_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperandRule());
                      						}
                      						set(
                      							current,
                      							"content",
                      							lv_content_4_0,
                      							"org.xtext.Go.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getOperandAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleoperand"


    // $ANTLR start "entryRuleliteral"
    // InternalGo.g:5376:1: entryRuleliteral returns [EObject current=null] : iv_ruleliteral= ruleliteral EOF ;
    public final EObject entryRuleliteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleliteral = null;


        try {
            // InternalGo.g:5376:48: (iv_ruleliteral= ruleliteral EOF )
            // InternalGo.g:5377:2: iv_ruleliteral= ruleliteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleliteral=ruleliteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleliteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleliteral"


    // $ANTLR start "ruleliteral"
    // InternalGo.g:5383:1: ruleliteral returns [EObject current=null] : ( ( (lv_litBasic_0_0= rulebasicLit ) ) | ( (lv_litComposite_1_0= rulecompositeLit ) ) | ( (lv_litFunc_2_0= rulefunctionLit ) ) ) ;
    public final EObject ruleliteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_litBasic_0_0 = null;

        EObject lv_litComposite_1_0 = null;

        EObject lv_litFunc_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5389:2: ( ( ( (lv_litBasic_0_0= rulebasicLit ) ) | ( (lv_litComposite_1_0= rulecompositeLit ) ) | ( (lv_litFunc_2_0= rulefunctionLit ) ) ) )
            // InternalGo.g:5390:2: ( ( (lv_litBasic_0_0= rulebasicLit ) ) | ( (lv_litComposite_1_0= rulecompositeLit ) ) | ( (lv_litFunc_2_0= rulefunctionLit ) ) )
            {
            // InternalGo.g:5390:2: ( ( (lv_litBasic_0_0= rulebasicLit ) ) | ( (lv_litComposite_1_0= rulecompositeLit ) ) | ( (lv_litFunc_2_0= rulefunctionLit ) ) )
            int alt68=3;
            switch ( input.LA(1) ) {
            case RULE_STRING_LIT:
            case RULE_INT_LIT:
            case RULE_FLOAT_LIT:
            case RULE_IMAGINARY_LIT:
            case RULE_RUNE_LIT:
                {
                alt68=1;
                }
                break;
            case RULE_IDENTIFIER:
            case 87:
            case 90:
            case 93:
                {
                alt68=2;
                }
                break;
            case 52:
                {
                alt68=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }

            switch (alt68) {
                case 1 :
                    // InternalGo.g:5391:3: ( (lv_litBasic_0_0= rulebasicLit ) )
                    {
                    // InternalGo.g:5391:3: ( (lv_litBasic_0_0= rulebasicLit ) )
                    // InternalGo.g:5392:4: (lv_litBasic_0_0= rulebasicLit )
                    {
                    // InternalGo.g:5392:4: (lv_litBasic_0_0= rulebasicLit )
                    // InternalGo.g:5393:5: lv_litBasic_0_0= rulebasicLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getLitBasicBasicLitParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_litBasic_0_0=rulebasicLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"litBasic",
                      						lv_litBasic_0_0,
                      						"org.xtext.Go.basicLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5411:3: ( (lv_litComposite_1_0= rulecompositeLit ) )
                    {
                    // InternalGo.g:5411:3: ( (lv_litComposite_1_0= rulecompositeLit ) )
                    // InternalGo.g:5412:4: (lv_litComposite_1_0= rulecompositeLit )
                    {
                    // InternalGo.g:5412:4: (lv_litComposite_1_0= rulecompositeLit )
                    // InternalGo.g:5413:5: lv_litComposite_1_0= rulecompositeLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getLitCompositeCompositeLitParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_litComposite_1_0=rulecompositeLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"litComposite",
                      						lv_litComposite_1_0,
                      						"org.xtext.Go.compositeLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:5431:3: ( (lv_litFunc_2_0= rulefunctionLit ) )
                    {
                    // InternalGo.g:5431:3: ( (lv_litFunc_2_0= rulefunctionLit ) )
                    // InternalGo.g:5432:4: (lv_litFunc_2_0= rulefunctionLit )
                    {
                    // InternalGo.g:5432:4: (lv_litFunc_2_0= rulefunctionLit )
                    // InternalGo.g:5433:5: lv_litFunc_2_0= rulefunctionLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getLitFuncFunctionLitParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_litFunc_2_0=rulefunctionLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"litFunc",
                      						lv_litFunc_2_0,
                      						"org.xtext.Go.functionLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleliteral"


    // $ANTLR start "entryRulebasicLit"
    // InternalGo.g:5454:1: entryRulebasicLit returns [String current=null] : iv_rulebasicLit= rulebasicLit EOF ;
    public final String entryRulebasicLit() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulebasicLit = null;


        try {
            // InternalGo.g:5454:48: (iv_rulebasicLit= rulebasicLit EOF )
            // InternalGo.g:5455:2: iv_rulebasicLit= rulebasicLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulebasicLit=rulebasicLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulebasicLit.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulebasicLit"


    // $ANTLR start "rulebasicLit"
    // InternalGo.g:5461:1: rulebasicLit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_LIT_0= RULE_INT_LIT | this_FLOAT_LIT_1= RULE_FLOAT_LIT | this_IMAGINARY_LIT_2= RULE_IMAGINARY_LIT | this_RUNE_LIT_3= RULE_RUNE_LIT | this_STRING_LIT_4= RULE_STRING_LIT ) ;
    public final AntlrDatatypeRuleToken rulebasicLit() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_LIT_0=null;
        Token this_FLOAT_LIT_1=null;
        Token this_IMAGINARY_LIT_2=null;
        Token this_RUNE_LIT_3=null;
        Token this_STRING_LIT_4=null;


        	enterRule();

        try {
            // InternalGo.g:5467:2: ( (this_INT_LIT_0= RULE_INT_LIT | this_FLOAT_LIT_1= RULE_FLOAT_LIT | this_IMAGINARY_LIT_2= RULE_IMAGINARY_LIT | this_RUNE_LIT_3= RULE_RUNE_LIT | this_STRING_LIT_4= RULE_STRING_LIT ) )
            // InternalGo.g:5468:2: (this_INT_LIT_0= RULE_INT_LIT | this_FLOAT_LIT_1= RULE_FLOAT_LIT | this_IMAGINARY_LIT_2= RULE_IMAGINARY_LIT | this_RUNE_LIT_3= RULE_RUNE_LIT | this_STRING_LIT_4= RULE_STRING_LIT )
            {
            // InternalGo.g:5468:2: (this_INT_LIT_0= RULE_INT_LIT | this_FLOAT_LIT_1= RULE_FLOAT_LIT | this_IMAGINARY_LIT_2= RULE_IMAGINARY_LIT | this_RUNE_LIT_3= RULE_RUNE_LIT | this_STRING_LIT_4= RULE_STRING_LIT )
            int alt69=5;
            switch ( input.LA(1) ) {
            case RULE_INT_LIT:
                {
                alt69=1;
                }
                break;
            case RULE_FLOAT_LIT:
                {
                alt69=2;
                }
                break;
            case RULE_IMAGINARY_LIT:
                {
                alt69=3;
                }
                break;
            case RULE_RUNE_LIT:
                {
                alt69=4;
                }
                break;
            case RULE_STRING_LIT:
                {
                alt69=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }

            switch (alt69) {
                case 1 :
                    // InternalGo.g:5469:3: this_INT_LIT_0= RULE_INT_LIT
                    {
                    this_INT_LIT_0=(Token)match(input,RULE_INT_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INT_LIT_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_INT_LIT_0, grammarAccess.getBasicLitAccess().getINT_LITTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:5477:3: this_FLOAT_LIT_1= RULE_FLOAT_LIT
                    {
                    this_FLOAT_LIT_1=(Token)match(input,RULE_FLOAT_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FLOAT_LIT_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_FLOAT_LIT_1, grammarAccess.getBasicLitAccess().getFLOAT_LITTerminalRuleCall_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:5485:3: this_IMAGINARY_LIT_2= RULE_IMAGINARY_LIT
                    {
                    this_IMAGINARY_LIT_2=(Token)match(input,RULE_IMAGINARY_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_IMAGINARY_LIT_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_IMAGINARY_LIT_2, grammarAccess.getBasicLitAccess().getIMAGINARY_LITTerminalRuleCall_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:5493:3: this_RUNE_LIT_3= RULE_RUNE_LIT
                    {
                    this_RUNE_LIT_3=(Token)match(input,RULE_RUNE_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_RUNE_LIT_3);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_RUNE_LIT_3, grammarAccess.getBasicLitAccess().getRUNE_LITTerminalRuleCall_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalGo.g:5501:3: this_STRING_LIT_4= RULE_STRING_LIT
                    {
                    this_STRING_LIT_4=(Token)match(input,RULE_STRING_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_LIT_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_LIT_4, grammarAccess.getBasicLitAccess().getSTRING_LITTerminalRuleCall_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulebasicLit"


    // $ANTLR start "entryRuleoperandName"
    // InternalGo.g:5512:1: entryRuleoperandName returns [EObject current=null] : iv_ruleoperandName= ruleoperandName EOF ;
    public final EObject entryRuleoperandName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleoperandName = null;


        try {
            // InternalGo.g:5512:52: (iv_ruleoperandName= ruleoperandName EOF )
            // InternalGo.g:5513:2: iv_ruleoperandName= ruleoperandName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperandNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleoperandName=ruleoperandName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleoperandName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleoperandName"


    // $ANTLR start "ruleoperandName"
    // InternalGo.g:5519:1: ruleoperandName returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_qualIdent_1_0= rulequalifiedIdent ) ) ) ;
    public final EObject ruleoperandName() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_qualIdent_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5525:2: ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_qualIdent_1_0= rulequalifiedIdent ) ) ) )
            // InternalGo.g:5526:2: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_qualIdent_1_0= rulequalifiedIdent ) ) )
            {
            // InternalGo.g:5526:2: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_qualIdent_1_0= rulequalifiedIdent ) ) )
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==RULE_IDENTIFIER) ) {
                int LA70_1 = input.LA(2);

                if ( (LA70_1==47) ) {
                    int LA70_2 = input.LA(3);

                    if ( (LA70_2==45) ) {
                        alt70=1;
                    }
                    else if ( (LA70_2==RULE_IDENTIFIER) ) {
                        alt70=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 70, 2, input);

                        throw nvae;
                    }
                }
                else if ( (LA70_1==EOF||LA70_1==RULE_BINARY_OP||LA70_1==46||(LA70_1>=49 && LA70_1<=50)||(LA70_1>=54 && LA70_1<=69)||LA70_1==71||LA70_1==88||LA70_1==92||LA70_1==95) ) {
                    alt70=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }
            switch (alt70) {
                case 1 :
                    // InternalGo.g:5527:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
                    {
                    // InternalGo.g:5527:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
                    // InternalGo.g:5528:4: (lv_name_0_0= RULE_IDENTIFIER )
                    {
                    // InternalGo.g:5528:4: (lv_name_0_0= RULE_IDENTIFIER )
                    // InternalGo.g:5529:5: lv_name_0_0= RULE_IDENTIFIER
                    {
                    lv_name_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getOperandNameAccess().getNameIDENTIFIERTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOperandNameRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.xtext.Go.IDENTIFIER");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5546:3: ( (lv_qualIdent_1_0= rulequalifiedIdent ) )
                    {
                    // InternalGo.g:5546:3: ( (lv_qualIdent_1_0= rulequalifiedIdent ) )
                    // InternalGo.g:5547:4: (lv_qualIdent_1_0= rulequalifiedIdent )
                    {
                    // InternalGo.g:5547:4: (lv_qualIdent_1_0= rulequalifiedIdent )
                    // InternalGo.g:5548:5: lv_qualIdent_1_0= rulequalifiedIdent
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOperandNameAccess().getQualIdentQualifiedIdentParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_qualIdent_1_0=rulequalifiedIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOperandNameRule());
                      					}
                      					set(
                      						current,
                      						"qualIdent",
                      						lv_qualIdent_1_0,
                      						"org.xtext.Go.qualifiedIdent");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleoperandName"


    // $ANTLR start "entryRulequalifiedIdent"
    // InternalGo.g:5569:1: entryRulequalifiedIdent returns [EObject current=null] : iv_rulequalifiedIdent= rulequalifiedIdent EOF ;
    public final EObject entryRulequalifiedIdent() throws RecognitionException {
        EObject current = null;

        EObject iv_rulequalifiedIdent = null;


        try {
            // InternalGo.g:5569:55: (iv_rulequalifiedIdent= rulequalifiedIdent EOF )
            // InternalGo.g:5570:2: iv_rulequalifiedIdent= rulequalifiedIdent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedIdentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulequalifiedIdent=rulequalifiedIdent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulequalifiedIdent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulequalifiedIdent"


    // $ANTLR start "rulequalifiedIdent"
    // InternalGo.g:5576:1: rulequalifiedIdent returns [EObject current=null] : ( ( (lv_packageName_0_0= RULE_IDENTIFIER ) ) otherlv_1= '.' ( (lv_name_2_0= RULE_IDENTIFIER ) ) ) ;
    public final EObject rulequalifiedIdent() throws RecognitionException {
        EObject current = null;

        Token lv_packageName_0_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;


        	enterRule();

        try {
            // InternalGo.g:5582:2: ( ( ( (lv_packageName_0_0= RULE_IDENTIFIER ) ) otherlv_1= '.' ( (lv_name_2_0= RULE_IDENTIFIER ) ) ) )
            // InternalGo.g:5583:2: ( ( (lv_packageName_0_0= RULE_IDENTIFIER ) ) otherlv_1= '.' ( (lv_name_2_0= RULE_IDENTIFIER ) ) )
            {
            // InternalGo.g:5583:2: ( ( (lv_packageName_0_0= RULE_IDENTIFIER ) ) otherlv_1= '.' ( (lv_name_2_0= RULE_IDENTIFIER ) ) )
            // InternalGo.g:5584:3: ( (lv_packageName_0_0= RULE_IDENTIFIER ) ) otherlv_1= '.' ( (lv_name_2_0= RULE_IDENTIFIER ) )
            {
            // InternalGo.g:5584:3: ( (lv_packageName_0_0= RULE_IDENTIFIER ) )
            // InternalGo.g:5585:4: (lv_packageName_0_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:5585:4: (lv_packageName_0_0= RULE_IDENTIFIER )
            // InternalGo.g:5586:5: lv_packageName_0_0= RULE_IDENTIFIER
            {
            lv_packageName_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_packageName_0_0, grammarAccess.getQualifiedIdentAccess().getPackageNameIDENTIFIERTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQualifiedIdentRule());
              					}
              					setWithLastConsumed(
              						current,
              						"packageName",
              						lv_packageName_0_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,47,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1());
              		
            }
            // InternalGo.g:5606:3: ( (lv_name_2_0= RULE_IDENTIFIER ) )
            // InternalGo.g:5607:4: (lv_name_2_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:5607:4: (lv_name_2_0= RULE_IDENTIFIER )
            // InternalGo.g:5608:5: lv_name_2_0= RULE_IDENTIFIER
            {
            lv_name_2_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getQualifiedIdentAccess().getNameIDENTIFIERTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQualifiedIdentRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulequalifiedIdent"


    // $ANTLR start "entryRulecompositeLit"
    // InternalGo.g:5628:1: entryRulecompositeLit returns [EObject current=null] : iv_rulecompositeLit= rulecompositeLit EOF ;
    public final EObject entryRulecompositeLit() throws RecognitionException {
        EObject current = null;

        EObject iv_rulecompositeLit = null;


        try {
            // InternalGo.g:5628:53: (iv_rulecompositeLit= rulecompositeLit EOF )
            // InternalGo.g:5629:2: iv_rulecompositeLit= rulecompositeLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompositeLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecompositeLit=rulecompositeLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecompositeLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecompositeLit"


    // $ANTLR start "rulecompositeLit"
    // InternalGo.g:5635:1: rulecompositeLit returns [EObject current=null] : ( ( (lv_literalType_0_0= ruleliteralType ) ) ( (lv_literalValue_1_0= ruleliteralValue ) ) ) ;
    public final EObject rulecompositeLit() throws RecognitionException {
        EObject current = null;

        EObject lv_literalType_0_0 = null;

        EObject lv_literalValue_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5641:2: ( ( ( (lv_literalType_0_0= ruleliteralType ) ) ( (lv_literalValue_1_0= ruleliteralValue ) ) ) )
            // InternalGo.g:5642:2: ( ( (lv_literalType_0_0= ruleliteralType ) ) ( (lv_literalValue_1_0= ruleliteralValue ) ) )
            {
            // InternalGo.g:5642:2: ( ( (lv_literalType_0_0= ruleliteralType ) ) ( (lv_literalValue_1_0= ruleliteralValue ) ) )
            // InternalGo.g:5643:3: ( (lv_literalType_0_0= ruleliteralType ) ) ( (lv_literalValue_1_0= ruleliteralValue ) )
            {
            // InternalGo.g:5643:3: ( (lv_literalType_0_0= ruleliteralType ) )
            // InternalGo.g:5644:4: (lv_literalType_0_0= ruleliteralType )
            {
            // InternalGo.g:5644:4: (lv_literalType_0_0= ruleliteralType )
            // InternalGo.g:5645:5: lv_literalType_0_0= ruleliteralType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteralTypeLiteralTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_literalType_0_0=ruleliteralType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompositeLitRule());
              					}
              					set(
              						current,
              						"literalType",
              						lv_literalType_0_0,
              						"org.xtext.Go.literalType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:5662:3: ( (lv_literalValue_1_0= ruleliteralValue ) )
            // InternalGo.g:5663:4: (lv_literalValue_1_0= ruleliteralValue )
            {
            // InternalGo.g:5663:4: (lv_literalValue_1_0= ruleliteralValue )
            // InternalGo.g:5664:5: lv_literalValue_1_0= ruleliteralValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteralValueLiteralValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_literalValue_1_0=ruleliteralValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompositeLitRule());
              					}
              					set(
              						current,
              						"literalValue",
              						lv_literalValue_1_0,
              						"org.xtext.Go.literalValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecompositeLit"


    // $ANTLR start "entryRuleliteralType"
    // InternalGo.g:5685:1: entryRuleliteralType returns [EObject current=null] : iv_ruleliteralType= ruleliteralType EOF ;
    public final EObject entryRuleliteralType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleliteralType = null;


        try {
            // InternalGo.g:5685:52: (iv_ruleliteralType= ruleliteralType EOF )
            // InternalGo.g:5686:2: iv_ruleliteralType= ruleliteralType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleliteralType=ruleliteralType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleliteralType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleliteralType"


    // $ANTLR start "ruleliteralType"
    // InternalGo.g:5692:1: ruleliteralType returns [EObject current=null] : ( ( (lv_type_0_0= rulestructType ) ) | ( (lv_type_1_0= rulearrayType ) ) | (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) ) ) | ( (lv_type_6_0= rulesliceType ) ) | ( (lv_type_7_0= rulemapType ) ) | ( (lv_type_8_0= ruletypeName ) ) ) ;
    public final EObject ruleliteralType() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_type_0_0 = null;

        EObject lv_type_1_0 = null;

        EObject lv_type_5_0 = null;

        EObject lv_type_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_type_8_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5698:2: ( ( ( (lv_type_0_0= rulestructType ) ) | ( (lv_type_1_0= rulearrayType ) ) | (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) ) ) | ( (lv_type_6_0= rulesliceType ) ) | ( (lv_type_7_0= rulemapType ) ) | ( (lv_type_8_0= ruletypeName ) ) ) )
            // InternalGo.g:5699:2: ( ( (lv_type_0_0= rulestructType ) ) | ( (lv_type_1_0= rulearrayType ) ) | (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) ) ) | ( (lv_type_6_0= rulesliceType ) ) | ( (lv_type_7_0= rulemapType ) ) | ( (lv_type_8_0= ruletypeName ) ) )
            {
            // InternalGo.g:5699:2: ( ( (lv_type_0_0= rulestructType ) ) | ( (lv_type_1_0= rulearrayType ) ) | (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) ) ) | ( (lv_type_6_0= rulesliceType ) ) | ( (lv_type_7_0= rulemapType ) ) | ( (lv_type_8_0= ruletypeName ) ) )
            int alt71=6;
            switch ( input.LA(1) ) {
            case 93:
                {
                alt71=1;
                }
                break;
            case 87:
                {
                int LA71_2 = input.LA(2);

                if ( (synpred120_InternalGo()) ) {
                    alt71=2;
                }
                else if ( (synpred121_InternalGo()) ) {
                    alt71=3;
                }
                else if ( (synpred122_InternalGo()) ) {
                    alt71=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 71, 2, input);

                    throw nvae;
                }
                }
                break;
            case 90:
                {
                alt71=5;
                }
                break;
            case RULE_IDENTIFIER:
                {
                alt71=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;
            }

            switch (alt71) {
                case 1 :
                    // InternalGo.g:5700:3: ( (lv_type_0_0= rulestructType ) )
                    {
                    // InternalGo.g:5700:3: ( (lv_type_0_0= rulestructType ) )
                    // InternalGo.g:5701:4: (lv_type_0_0= rulestructType )
                    {
                    // InternalGo.g:5701:4: (lv_type_0_0= rulestructType )
                    // InternalGo.g:5702:5: lv_type_0_0= rulestructType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeStructTypeParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_0_0=rulestructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_0_0,
                      						"org.xtext.Go.structType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5720:3: ( (lv_type_1_0= rulearrayType ) )
                    {
                    // InternalGo.g:5720:3: ( (lv_type_1_0= rulearrayType ) )
                    // InternalGo.g:5721:4: (lv_type_1_0= rulearrayType )
                    {
                    // InternalGo.g:5721:4: (lv_type_1_0= rulearrayType )
                    // InternalGo.g:5722:5: lv_type_1_0= rulearrayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeArrayTypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_1_0=rulearrayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_1_0,
                      						"org.xtext.Go.arrayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:5740:3: (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) ) )
                    {
                    // InternalGo.g:5740:3: (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) ) )
                    // InternalGo.g:5741:4: otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) )
                    {
                    otherlv_2=(Token)match(input,87,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_2_0());
                      			
                    }
                    otherlv_3=(Token)match(input,92,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getLiteralTypeAccess().getFullStopFullStopFullStopKeyword_2_1());
                      			
                    }
                    otherlv_4=(Token)match(input,88,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getLiteralTypeAccess().getRightSquareBracketKeyword_2_2());
                      			
                    }
                    // InternalGo.g:5753:4: ( (lv_type_5_0= ruleelementType ) )
                    // InternalGo.g:5754:5: (lv_type_5_0= ruleelementType )
                    {
                    // InternalGo.g:5754:5: (lv_type_5_0= ruleelementType )
                    // InternalGo.g:5755:6: lv_type_5_0= ruleelementType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeElementTypeParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_5_0=ruleelementType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_5_0,
                      							"org.xtext.Go.elementType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:5774:3: ( (lv_type_6_0= rulesliceType ) )
                    {
                    // InternalGo.g:5774:3: ( (lv_type_6_0= rulesliceType ) )
                    // InternalGo.g:5775:4: (lv_type_6_0= rulesliceType )
                    {
                    // InternalGo.g:5775:4: (lv_type_6_0= rulesliceType )
                    // InternalGo.g:5776:5: lv_type_6_0= rulesliceType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeSliceTypeParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_6_0=rulesliceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_6_0,
                      						"org.xtext.Go.sliceType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:5794:3: ( (lv_type_7_0= rulemapType ) )
                    {
                    // InternalGo.g:5794:3: ( (lv_type_7_0= rulemapType ) )
                    // InternalGo.g:5795:4: (lv_type_7_0= rulemapType )
                    {
                    // InternalGo.g:5795:4: (lv_type_7_0= rulemapType )
                    // InternalGo.g:5796:5: lv_type_7_0= rulemapType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeMapTypeParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_7_0=rulemapType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_7_0,
                      						"org.xtext.Go.mapType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:5814:3: ( (lv_type_8_0= ruletypeName ) )
                    {
                    // InternalGo.g:5814:3: ( (lv_type_8_0= ruletypeName ) )
                    // InternalGo.g:5815:4: (lv_type_8_0= ruletypeName )
                    {
                    // InternalGo.g:5815:4: (lv_type_8_0= ruletypeName )
                    // InternalGo.g:5816:5: lv_type_8_0= ruletypeName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeTypeNameParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_8_0=ruletypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_8_0,
                      						"org.xtext.Go.typeName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleliteralType"


    // $ANTLR start "entryRuleliteralValue"
    // InternalGo.g:5837:1: entryRuleliteralValue returns [EObject current=null] : iv_ruleliteralValue= ruleliteralValue EOF ;
    public final EObject entryRuleliteralValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleliteralValue = null;


        try {
            // InternalGo.g:5837:53: (iv_ruleliteralValue= ruleliteralValue EOF )
            // InternalGo.g:5838:2: iv_ruleliteralValue= ruleliteralValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleliteralValue=ruleliteralValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleliteralValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleliteralValue"


    // $ANTLR start "ruleliteralValue"
    // InternalGo.g:5844:1: ruleliteralValue returns [EObject current=null] : (otherlv_0= '{' ( ( (lv_elementList_1_0= ruleelementList ) ) (otherlv_2= ',' )? )? otherlv_3= '}' ) ;
    public final EObject ruleliteralValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject lv_elementList_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5850:2: ( (otherlv_0= '{' ( ( (lv_elementList_1_0= ruleelementList ) ) (otherlv_2= ',' )? )? otherlv_3= '}' ) )
            // InternalGo.g:5851:2: (otherlv_0= '{' ( ( (lv_elementList_1_0= ruleelementList ) ) (otherlv_2= ',' )? )? otherlv_3= '}' )
            {
            // InternalGo.g:5851:2: (otherlv_0= '{' ( ( (lv_elementList_1_0= ruleelementList ) ) (otherlv_2= ',' )? )? otherlv_3= '}' )
            // InternalGo.g:5852:3: otherlv_0= '{' ( ( (lv_elementList_1_0= ruleelementList ) ) (otherlv_2= ',' )? )? otherlv_3= '}'
            {
            otherlv_0=(Token)match(input,54,FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalGo.g:5856:3: ( ( (lv_elementList_1_0= ruleelementList ) ) (otherlv_2= ',' )? )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( ((LA73_0>=RULE_IDENTIFIER && LA73_0<=RULE_STRING_LIT)||(LA73_0>=RULE_INT_LIT && LA73_0<=RULE_BINARY_OP)||LA73_0==45||LA73_0==47||LA73_0==50||LA73_0==52||LA73_0==54||LA73_0==56||(LA73_0>=59 && LA73_0<=60)||(LA73_0>=62 && LA73_0<=63)||LA73_0==68||LA73_0==71||LA73_0==87||(LA73_0>=89 && LA73_0<=91)||(LA73_0>=93 && LA73_0<=94)) ) {
                alt73=1;
            }
            else if ( (LA73_0==55) ) {
                int LA73_2 = input.LA(2);

                if ( (synpred125_InternalGo()) ) {
                    alt73=1;
                }
            }
            switch (alt73) {
                case 1 :
                    // InternalGo.g:5857:4: ( (lv_elementList_1_0= ruleelementList ) ) (otherlv_2= ',' )?
                    {
                    // InternalGo.g:5857:4: ( (lv_elementList_1_0= ruleelementList ) )
                    // InternalGo.g:5858:5: (lv_elementList_1_0= ruleelementList )
                    {
                    // InternalGo.g:5858:5: (lv_elementList_1_0= ruleelementList )
                    // InternalGo.g:5859:6: lv_elementList_1_0= ruleelementList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralValueAccess().getElementListElementListParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_57);
                    lv_elementList_1_0=ruleelementList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralValueRule());
                      						}
                      						set(
                      							current,
                      							"elementList",
                      							lv_elementList_1_0,
                      							"org.xtext.Go.elementList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:5876:4: (otherlv_2= ',' )?
                    int alt72=2;
                    int LA72_0 = input.LA(1);

                    if ( (LA72_0==50) ) {
                        alt72=1;
                    }
                    switch (alt72) {
                        case 1 :
                            // InternalGo.g:5877:5: otherlv_2= ','
                            {
                            otherlv_2=(Token)match(input,50,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getLiteralValueAccess().getCommaKeyword_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleliteralValue"


    // $ANTLR start "entryRuleelementList"
    // InternalGo.g:5891:1: entryRuleelementList returns [EObject current=null] : iv_ruleelementList= ruleelementList EOF ;
    public final EObject entryRuleelementList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleelementList = null;


        try {
            // InternalGo.g:5891:52: (iv_ruleelementList= ruleelementList EOF )
            // InternalGo.g:5892:2: iv_ruleelementList= ruleelementList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleelementList=ruleelementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleelementList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleelementList"


    // $ANTLR start "ruleelementList"
    // InternalGo.g:5898:1: ruleelementList returns [EObject current=null] : ( ( (lv_keyedElements_0_0= rulekeyedElement ) ) (otherlv_1= ',' ( (lv_keyedElements_2_0= rulekeyedElement ) ) )* ) ;
    public final EObject ruleelementList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_keyedElements_0_0 = null;

        EObject lv_keyedElements_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5904:2: ( ( ( (lv_keyedElements_0_0= rulekeyedElement ) ) (otherlv_1= ',' ( (lv_keyedElements_2_0= rulekeyedElement ) ) )* ) )
            // InternalGo.g:5905:2: ( ( (lv_keyedElements_0_0= rulekeyedElement ) ) (otherlv_1= ',' ( (lv_keyedElements_2_0= rulekeyedElement ) ) )* )
            {
            // InternalGo.g:5905:2: ( ( (lv_keyedElements_0_0= rulekeyedElement ) ) (otherlv_1= ',' ( (lv_keyedElements_2_0= rulekeyedElement ) ) )* )
            // InternalGo.g:5906:3: ( (lv_keyedElements_0_0= rulekeyedElement ) ) (otherlv_1= ',' ( (lv_keyedElements_2_0= rulekeyedElement ) ) )*
            {
            // InternalGo.g:5906:3: ( (lv_keyedElements_0_0= rulekeyedElement ) )
            // InternalGo.g:5907:4: (lv_keyedElements_0_0= rulekeyedElement )
            {
            // InternalGo.g:5907:4: (lv_keyedElements_0_0= rulekeyedElement )
            // InternalGo.g:5908:5: lv_keyedElements_0_0= rulekeyedElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementsKeyedElementParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_keyedElements_0_0=rulekeyedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getElementListRule());
              					}
              					add(
              						current,
              						"keyedElements",
              						lv_keyedElements_0_0,
              						"org.xtext.Go.keyedElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:5925:3: (otherlv_1= ',' ( (lv_keyedElements_2_0= rulekeyedElement ) ) )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==50) ) {
                    int LA74_1 = input.LA(2);

                    if ( (synpred126_InternalGo()) ) {
                        alt74=1;
                    }


                }


                switch (alt74) {
            	case 1 :
            	    // InternalGo.g:5926:4: otherlv_1= ',' ( (lv_keyedElements_2_0= rulekeyedElement ) )
            	    {
            	    otherlv_1=(Token)match(input,50,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getElementListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:5930:4: ( (lv_keyedElements_2_0= rulekeyedElement ) )
            	    // InternalGo.g:5931:5: (lv_keyedElements_2_0= rulekeyedElement )
            	    {
            	    // InternalGo.g:5931:5: (lv_keyedElements_2_0= rulekeyedElement )
            	    // InternalGo.g:5932:6: lv_keyedElements_2_0= rulekeyedElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementsKeyedElementParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_keyedElements_2_0=rulekeyedElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getElementListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"keyedElements",
            	      							lv_keyedElements_2_0,
            	      							"org.xtext.Go.keyedElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleelementList"


    // $ANTLR start "entryRulekeyedElement"
    // InternalGo.g:5954:1: entryRulekeyedElement returns [EObject current=null] : iv_rulekeyedElement= rulekeyedElement EOF ;
    public final EObject entryRulekeyedElement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulekeyedElement = null;


        try {
            // InternalGo.g:5954:53: (iv_rulekeyedElement= rulekeyedElement EOF )
            // InternalGo.g:5955:2: iv_rulekeyedElement= rulekeyedElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyedElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulekeyedElement=rulekeyedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulekeyedElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulekeyedElement"


    // $ANTLR start "rulekeyedElement"
    // InternalGo.g:5961:1: rulekeyedElement returns [EObject current=null] : ( ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )? ( (lv_element_2_0= ruleelement ) ) ) ;
    public final EObject rulekeyedElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_key_0_0 = null;

        EObject lv_element_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5967:2: ( ( ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )? ( (lv_element_2_0= ruleelement ) ) ) )
            // InternalGo.g:5968:2: ( ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )? ( (lv_element_2_0= ruleelement ) ) )
            {
            // InternalGo.g:5968:2: ( ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )? ( (lv_element_2_0= ruleelement ) ) )
            // InternalGo.g:5969:3: ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )? ( (lv_element_2_0= ruleelement ) )
            {
            // InternalGo.g:5969:3: ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )?
            int alt75=2;
            alt75 = dfa75.predict(input);
            switch (alt75) {
                case 1 :
                    // InternalGo.g:5970:4: ( (lv_key_0_0= rulekey ) ) otherlv_1= ':'
                    {
                    // InternalGo.g:5970:4: ( (lv_key_0_0= rulekey ) )
                    // InternalGo.g:5971:5: (lv_key_0_0= rulekey )
                    {
                    // InternalGo.g:5971:5: (lv_key_0_0= rulekey )
                    // InternalGo.g:5972:6: lv_key_0_0= rulekey
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeyedElementAccess().getKeyKeyParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_29);
                    lv_key_0_0=rulekey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeyedElementRule());
                      						}
                      						set(
                      							current,
                      							"key",
                      							lv_key_0_0,
                      							"org.xtext.Go.key");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,71,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getKeyedElementAccess().getColonKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:5994:3: ( (lv_element_2_0= ruleelement ) )
            // InternalGo.g:5995:4: (lv_element_2_0= ruleelement )
            {
            // InternalGo.g:5995:4: (lv_element_2_0= ruleelement )
            // InternalGo.g:5996:5: lv_element_2_0= ruleelement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_element_2_0=ruleelement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyedElementRule());
              					}
              					set(
              						current,
              						"element",
              						lv_element_2_0,
              						"org.xtext.Go.element");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulekeyedElement"


    // $ANTLR start "entryRulekey"
    // InternalGo.g:6017:1: entryRulekey returns [EObject current=null] : iv_rulekey= rulekey EOF ;
    public final EObject entryRulekey() throws RecognitionException {
        EObject current = null;

        EObject iv_rulekey = null;


        try {
            // InternalGo.g:6017:44: (iv_rulekey= rulekey EOF )
            // InternalGo.g:6018:2: iv_rulekey= rulekey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulekey=rulekey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulekey; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulekey"


    // $ANTLR start "rulekey"
    // InternalGo.g:6024:1: rulekey returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_lit_2_0= ruleliteralValue ) ) ) ;
    public final EObject rulekey() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_expr_1_0 = null;

        EObject lv_lit_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6030:2: ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_lit_2_0= ruleliteralValue ) ) ) )
            // InternalGo.g:6031:2: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_lit_2_0= ruleliteralValue ) ) )
            {
            // InternalGo.g:6031:2: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_lit_2_0= ruleliteralValue ) ) )
            int alt76=3;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                int LA76_1 = input.LA(2);

                if ( (synpred128_InternalGo()) ) {
                    alt76=1;
                }
                else if ( (synpred129_InternalGo()) ) {
                    alt76=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 1, input);

                    throw nvae;
                }
                }
                break;
            case EOF:
            case RULE_STRING_LIT:
            case RULE_INT_LIT:
            case RULE_FLOAT_LIT:
            case RULE_IMAGINARY_LIT:
            case RULE_RUNE_LIT:
            case RULE_BINARY_OP:
            case 45:
            case 47:
            case 52:
            case 56:
            case 59:
            case 60:
            case 62:
            case 63:
            case 68:
            case 71:
            case 87:
            case 89:
            case 90:
            case 91:
            case 93:
            case 94:
                {
                alt76=2;
                }
                break;
            case 54:
                {
                alt76=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }

            switch (alt76) {
                case 1 :
                    // InternalGo.g:6032:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
                    {
                    // InternalGo.g:6032:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
                    // InternalGo.g:6033:4: (lv_name_0_0= RULE_IDENTIFIER )
                    {
                    // InternalGo.g:6033:4: (lv_name_0_0= RULE_IDENTIFIER )
                    // InternalGo.g:6034:5: lv_name_0_0= RULE_IDENTIFIER
                    {
                    lv_name_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getKeyAccess().getNameIDENTIFIERTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getKeyRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.xtext.Go.IDENTIFIER");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6051:3: ( (lv_expr_1_0= ruleexpression ) )
                    {
                    // InternalGo.g:6051:3: ( (lv_expr_1_0= ruleexpression ) )
                    // InternalGo.g:6052:4: (lv_expr_1_0= ruleexpression )
                    {
                    // InternalGo.g:6052:4: (lv_expr_1_0= ruleexpression )
                    // InternalGo.g:6053:5: lv_expr_1_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getKeyAccess().getExprExpressionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_1_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getKeyRule());
                      					}
                      					set(
                      						current,
                      						"expr",
                      						lv_expr_1_0,
                      						"org.xtext.Go.expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6071:3: ( (lv_lit_2_0= ruleliteralValue ) )
                    {
                    // InternalGo.g:6071:3: ( (lv_lit_2_0= ruleliteralValue ) )
                    // InternalGo.g:6072:4: (lv_lit_2_0= ruleliteralValue )
                    {
                    // InternalGo.g:6072:4: (lv_lit_2_0= ruleliteralValue )
                    // InternalGo.g:6073:5: lv_lit_2_0= ruleliteralValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getKeyAccess().getLitLiteralValueParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_lit_2_0=ruleliteralValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getKeyRule());
                      					}
                      					set(
                      						current,
                      						"lit",
                      						lv_lit_2_0,
                      						"org.xtext.Go.literalValue");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulekey"


    // $ANTLR start "entryRuleelement"
    // InternalGo.g:6094:1: entryRuleelement returns [EObject current=null] : iv_ruleelement= ruleelement EOF ;
    public final EObject entryRuleelement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleelement = null;


        try {
            // InternalGo.g:6094:48: (iv_ruleelement= ruleelement EOF )
            // InternalGo.g:6095:2: iv_ruleelement= ruleelement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleelement=ruleelement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleelement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleelement"


    // $ANTLR start "ruleelement"
    // InternalGo.g:6101:1: ruleelement returns [EObject current=null] : ( ( (lv_content_0_0= ruleexpression ) ) | ( (lv_content_1_0= ruleliteralValue ) ) ) ;
    public final EObject ruleelement() throws RecognitionException {
        EObject current = null;

        EObject lv_content_0_0 = null;

        EObject lv_content_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6107:2: ( ( ( (lv_content_0_0= ruleexpression ) ) | ( (lv_content_1_0= ruleliteralValue ) ) ) )
            // InternalGo.g:6108:2: ( ( (lv_content_0_0= ruleexpression ) ) | ( (lv_content_1_0= ruleliteralValue ) ) )
            {
            // InternalGo.g:6108:2: ( ( (lv_content_0_0= ruleexpression ) ) | ( (lv_content_1_0= ruleliteralValue ) ) )
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==EOF||(LA77_0>=RULE_IDENTIFIER && LA77_0<=RULE_STRING_LIT)||(LA77_0>=RULE_INT_LIT && LA77_0<=RULE_BINARY_OP)||LA77_0==45||LA77_0==47||LA77_0==50||LA77_0==52||(LA77_0>=55 && LA77_0<=56)||(LA77_0>=59 && LA77_0<=60)||(LA77_0>=62 && LA77_0<=63)||LA77_0==68||LA77_0==87||(LA77_0>=89 && LA77_0<=91)||(LA77_0>=93 && LA77_0<=94)) ) {
                alt77=1;
            }
            else if ( (LA77_0==54) ) {
                alt77=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;
            }
            switch (alt77) {
                case 1 :
                    // InternalGo.g:6109:3: ( (lv_content_0_0= ruleexpression ) )
                    {
                    // InternalGo.g:6109:3: ( (lv_content_0_0= ruleexpression ) )
                    // InternalGo.g:6110:4: (lv_content_0_0= ruleexpression )
                    {
                    // InternalGo.g:6110:4: (lv_content_0_0= ruleexpression )
                    // InternalGo.g:6111:5: lv_content_0_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getElementAccess().getContentExpressionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_0_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getElementRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_0_0,
                      						"org.xtext.Go.expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6129:3: ( (lv_content_1_0= ruleliteralValue ) )
                    {
                    // InternalGo.g:6129:3: ( (lv_content_1_0= ruleliteralValue ) )
                    // InternalGo.g:6130:4: (lv_content_1_0= ruleliteralValue )
                    {
                    // InternalGo.g:6130:4: (lv_content_1_0= ruleliteralValue )
                    // InternalGo.g:6131:5: lv_content_1_0= ruleliteralValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getElementAccess().getContentLiteralValueParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_1_0=ruleliteralValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getElementRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_1_0,
                      						"org.xtext.Go.literalValue");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleelement"


    // $ANTLR start "entryRulestructType"
    // InternalGo.g:6152:1: entryRulestructType returns [EObject current=null] : iv_rulestructType= rulestructType EOF ;
    public final EObject entryRulestructType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestructType = null;


        try {
            // InternalGo.g:6152:51: (iv_rulestructType= rulestructType EOF )
            // InternalGo.g:6153:2: iv_rulestructType= rulestructType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestructType=rulestructType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestructType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestructType"


    // $ANTLR start "rulestructType"
    // InternalGo.g:6159:1: rulestructType returns [EObject current=null] : (otherlv_0= 'struct' otherlv_1= '{' ( ( (lv_fieldsDecl_2_0= rulefieldDecl ) ) ruleeos )* otherlv_4= '}' ) ;
    public final EObject rulestructType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_fieldsDecl_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6165:2: ( (otherlv_0= 'struct' otherlv_1= '{' ( ( (lv_fieldsDecl_2_0= rulefieldDecl ) ) ruleeos )* otherlv_4= '}' ) )
            // InternalGo.g:6166:2: (otherlv_0= 'struct' otherlv_1= '{' ( ( (lv_fieldsDecl_2_0= rulefieldDecl ) ) ruleeos )* otherlv_4= '}' )
            {
            // InternalGo.g:6166:2: (otherlv_0= 'struct' otherlv_1= '{' ( ( (lv_fieldsDecl_2_0= rulefieldDecl ) ) ruleeos )* otherlv_4= '}' )
            // InternalGo.g:6167:3: otherlv_0= 'struct' otherlv_1= '{' ( ( (lv_fieldsDecl_2_0= rulefieldDecl ) ) ruleeos )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,93,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStructTypeAccess().getStructKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,54,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalGo.g:6175:3: ( ( (lv_fieldsDecl_2_0= rulefieldDecl ) ) ruleeos )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==RULE_IDENTIFIER||LA78_0==63) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // InternalGo.g:6176:4: ( (lv_fieldsDecl_2_0= rulefieldDecl ) ) ruleeos
            	    {
            	    // InternalGo.g:6176:4: ( (lv_fieldsDecl_2_0= rulefieldDecl ) )
            	    // InternalGo.g:6177:5: (lv_fieldsDecl_2_0= rulefieldDecl )
            	    {
            	    // InternalGo.g:6177:5: (lv_fieldsDecl_2_0= rulefieldDecl )
            	    // InternalGo.g:6178:6: lv_fieldsDecl_2_0= rulefieldDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStructTypeAccess().getFieldsDeclFieldDeclParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_fieldsDecl_2_0=rulefieldDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStructTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"fieldsDecl",
            	      							lv_fieldsDecl_2_0,
            	      							"org.xtext.Go.fieldDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      				/* */
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getStructTypeAccess().getEosParserRuleCall_2_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_58);
            	    ruleeos();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            otherlv_4=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestructType"


    // $ANTLR start "entryRulefieldDecl"
    // InternalGo.g:6214:1: entryRulefieldDecl returns [EObject current=null] : iv_rulefieldDecl= rulefieldDecl EOF ;
    public final EObject entryRulefieldDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefieldDecl = null;


        try {
            // InternalGo.g:6214:50: (iv_rulefieldDecl= rulefieldDecl EOF )
            // InternalGo.g:6215:2: iv_rulefieldDecl= rulefieldDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefieldDecl=rulefieldDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefieldDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefieldDecl"


    // $ANTLR start "rulefieldDecl"
    // InternalGo.g:6221:1: rulefieldDecl returns [EObject current=null] : ( ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) ) | ( (lv_anonymousField_2_0= ruleanonymousField ) ) ) (this_STRING_LIT_3= RULE_STRING_LIT )? ) ;
    public final EObject rulefieldDecl() throws RecognitionException {
        EObject current = null;

        Token this_STRING_LIT_3=null;
        EObject lv_identifierList_0_0 = null;

        EObject lv_type_1_0 = null;

        EObject lv_anonymousField_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6227:2: ( ( ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) ) | ( (lv_anonymousField_2_0= ruleanonymousField ) ) ) (this_STRING_LIT_3= RULE_STRING_LIT )? ) )
            // InternalGo.g:6228:2: ( ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) ) | ( (lv_anonymousField_2_0= ruleanonymousField ) ) ) (this_STRING_LIT_3= RULE_STRING_LIT )? )
            {
            // InternalGo.g:6228:2: ( ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) ) | ( (lv_anonymousField_2_0= ruleanonymousField ) ) ) (this_STRING_LIT_3= RULE_STRING_LIT )? )
            // InternalGo.g:6229:3: ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) ) | ( (lv_anonymousField_2_0= ruleanonymousField ) ) ) (this_STRING_LIT_3= RULE_STRING_LIT )?
            {
            // InternalGo.g:6229:3: ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) ) | ( (lv_anonymousField_2_0= ruleanonymousField ) ) )
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==RULE_IDENTIFIER) ) {
                int LA79_1 = input.LA(2);

                if ( (LA79_1==EOF||LA79_1==RULE_STRING_LIT||LA79_1==47||LA79_1==95) ) {
                    alt79=2;
                }
                else if ( (LA79_1==RULE_IDENTIFIER||LA79_1==45||LA79_1==50||LA79_1==52||LA79_1==56||LA79_1==63||LA79_1==87||(LA79_1>=89 && LA79_1<=91)||LA79_1==93) ) {
                    alt79=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 79, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA79_0==63) ) {
                alt79=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;
            }
            switch (alt79) {
                case 1 :
                    // InternalGo.g:6230:4: ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) )
                    {
                    // InternalGo.g:6230:4: ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) )
                    // InternalGo.g:6231:5: ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) )
                    {
                    // InternalGo.g:6231:5: ( (lv_identifierList_0_0= ruleidentifierList ) )
                    // InternalGo.g:6232:6: (lv_identifierList_0_0= ruleidentifierList )
                    {
                    // InternalGo.g:6232:6: (lv_identifierList_0_0= ruleidentifierList )
                    // InternalGo.g:6233:7: lv_identifierList_0_0= ruleidentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFieldDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_17);
                    lv_identifierList_0_0=ruleidentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      							}
                      							set(
                      								current,
                      								"identifierList",
                      								lv_identifierList_0_0,
                      								"org.xtext.Go.identifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:6250:5: ( (lv_type_1_0= ruletype ) )
                    // InternalGo.g:6251:6: (lv_type_1_0= ruletype )
                    {
                    // InternalGo.g:6251:6: (lv_type_1_0= ruletype )
                    // InternalGo.g:6252:7: lv_type_1_0= ruletype
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_59);
                    lv_type_1_0=ruletype();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_1_0,
                      								"org.xtext.Go.type");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6271:4: ( (lv_anonymousField_2_0= ruleanonymousField ) )
                    {
                    // InternalGo.g:6271:4: ( (lv_anonymousField_2_0= ruleanonymousField ) )
                    // InternalGo.g:6272:5: (lv_anonymousField_2_0= ruleanonymousField )
                    {
                    // InternalGo.g:6272:5: (lv_anonymousField_2_0= ruleanonymousField )
                    // InternalGo.g:6273:6: lv_anonymousField_2_0= ruleanonymousField
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFieldDeclAccess().getAnonymousFieldAnonymousFieldParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_59);
                    lv_anonymousField_2_0=ruleanonymousField();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      						}
                      						set(
                      							current,
                      							"anonymousField",
                      							lv_anonymousField_2_0,
                      							"org.xtext.Go.anonymousField");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGo.g:6291:3: (this_STRING_LIT_3= RULE_STRING_LIT )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==RULE_STRING_LIT) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalGo.g:6292:4: this_STRING_LIT_3= RULE_STRING_LIT
                    {
                    this_STRING_LIT_3=(Token)match(input,RULE_STRING_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_STRING_LIT_3, grammarAccess.getFieldDeclAccess().getSTRING_LITTerminalRuleCall_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefieldDecl"


    // $ANTLR start "entryRuleanonymousField"
    // InternalGo.g:6301:1: entryRuleanonymousField returns [EObject current=null] : iv_ruleanonymousField= ruleanonymousField EOF ;
    public final EObject entryRuleanonymousField() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleanonymousField = null;


        try {
            // InternalGo.g:6301:55: (iv_ruleanonymousField= ruleanonymousField EOF )
            // InternalGo.g:6302:2: iv_ruleanonymousField= ruleanonymousField EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnonymousFieldRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleanonymousField=ruleanonymousField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleanonymousField; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleanonymousField"


    // $ANTLR start "ruleanonymousField"
    // InternalGo.g:6308:1: ruleanonymousField returns [EObject current=null] : ( (otherlv_0= '*' )? ( (lv_typeName_1_0= ruletypeName ) ) ) ;
    public final EObject ruleanonymousField() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeName_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6314:2: ( ( (otherlv_0= '*' )? ( (lv_typeName_1_0= ruletypeName ) ) ) )
            // InternalGo.g:6315:2: ( (otherlv_0= '*' )? ( (lv_typeName_1_0= ruletypeName ) ) )
            {
            // InternalGo.g:6315:2: ( (otherlv_0= '*' )? ( (lv_typeName_1_0= ruletypeName ) ) )
            // InternalGo.g:6316:3: (otherlv_0= '*' )? ( (lv_typeName_1_0= ruletypeName ) )
            {
            // InternalGo.g:6316:3: (otherlv_0= '*' )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==63) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalGo.g:6317:4: otherlv_0= '*'
                    {
                    otherlv_0=(Token)match(input,63,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getAnonymousFieldAccess().getAsteriskKeyword_0());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:6322:3: ( (lv_typeName_1_0= ruletypeName ) )
            // InternalGo.g:6323:4: (lv_typeName_1_0= ruletypeName )
            {
            // InternalGo.g:6323:4: (lv_typeName_1_0= ruletypeName )
            // InternalGo.g:6324:5: lv_typeName_1_0= ruletypeName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnonymousFieldAccess().getTypeNameTypeNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeName_1_0=ruletypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnonymousFieldRule());
              					}
              					set(
              						current,
              						"typeName",
              						lv_typeName_1_0,
              						"org.xtext.Go.typeName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleanonymousField"


    // $ANTLR start "entryRulefunctionLit"
    // InternalGo.g:6345:1: entryRulefunctionLit returns [EObject current=null] : iv_rulefunctionLit= rulefunctionLit EOF ;
    public final EObject entryRulefunctionLit() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefunctionLit = null;


        try {
            // InternalGo.g:6345:52: (iv_rulefunctionLit= rulefunctionLit EOF )
            // InternalGo.g:6346:2: iv_rulefunctionLit= rulefunctionLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefunctionLit=rulefunctionLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefunctionLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefunctionLit"


    // $ANTLR start "rulefunctionLit"
    // InternalGo.g:6352:1: rulefunctionLit returns [EObject current=null] : (otherlv_0= 'func' ( (lv_function_1_0= rulefunction ) ) ) ;
    public final EObject rulefunctionLit() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_function_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6358:2: ( (otherlv_0= 'func' ( (lv_function_1_0= rulefunction ) ) ) )
            // InternalGo.g:6359:2: (otherlv_0= 'func' ( (lv_function_1_0= rulefunction ) ) )
            {
            // InternalGo.g:6359:2: (otherlv_0= 'func' ( (lv_function_1_0= rulefunction ) ) )
            // InternalGo.g:6360:3: otherlv_0= 'func' ( (lv_function_1_0= rulefunction ) )
            {
            otherlv_0=(Token)match(input,52,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionLitAccess().getFuncKeyword_0());
              		
            }
            // InternalGo.g:6364:3: ( (lv_function_1_0= rulefunction ) )
            // InternalGo.g:6365:4: (lv_function_1_0= rulefunction )
            {
            // InternalGo.g:6365:4: (lv_function_1_0= rulefunction )
            // InternalGo.g:6366:5: lv_function_1_0= rulefunction
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionLitAccess().getFunctionFunctionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_function_1_0=rulefunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionLitRule());
              					}
              					set(
              						current,
              						"function",
              						lv_function_1_0,
              						"org.xtext.Go.function");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefunctionLit"


    // $ANTLR start "entryRuleprimaryExpr"
    // InternalGo.g:6387:1: entryRuleprimaryExpr returns [EObject current=null] : iv_ruleprimaryExpr= ruleprimaryExpr EOF ;
    public final EObject entryRuleprimaryExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExpr = null;


        try {
            // InternalGo.g:6387:52: (iv_ruleprimaryExpr= ruleprimaryExpr EOF )
            // InternalGo.g:6388:2: iv_ruleprimaryExpr= ruleprimaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExpr=ruleprimaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExpr"


    // $ANTLR start "ruleprimaryExpr"
    // InternalGo.g:6394:1: ruleprimaryExpr returns [EObject current=null] : ( ( ( (lv_content_0_0= ruleoperand ) ) | ( (lv_content_1_0= ruleconversion ) ) ) | ( (lv_content_2_0= ruleprimaryExprSelector ) ) | ( (lv_content_3_0= ruleprimaryExprIndex ) ) | ( (lv_content_4_0= ruleprimaryExprSlice ) ) | ( (lv_content_5_0= ruleprimaryExprTypeAssertion ) ) | ( (lv_content_6_0= ruleprimaryExprArguments ) ) ) ;
    public final EObject ruleprimaryExpr() throws RecognitionException {
        EObject current = null;

        EObject lv_content_0_0 = null;

        EObject lv_content_1_0 = null;

        EObject lv_content_2_0 = null;

        EObject lv_content_3_0 = null;

        EObject lv_content_4_0 = null;

        EObject lv_content_5_0 = null;

        EObject lv_content_6_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6400:2: ( ( ( ( (lv_content_0_0= ruleoperand ) ) | ( (lv_content_1_0= ruleconversion ) ) ) | ( (lv_content_2_0= ruleprimaryExprSelector ) ) | ( (lv_content_3_0= ruleprimaryExprIndex ) ) | ( (lv_content_4_0= ruleprimaryExprSlice ) ) | ( (lv_content_5_0= ruleprimaryExprTypeAssertion ) ) | ( (lv_content_6_0= ruleprimaryExprArguments ) ) ) )
            // InternalGo.g:6401:2: ( ( ( (lv_content_0_0= ruleoperand ) ) | ( (lv_content_1_0= ruleconversion ) ) ) | ( (lv_content_2_0= ruleprimaryExprSelector ) ) | ( (lv_content_3_0= ruleprimaryExprIndex ) ) | ( (lv_content_4_0= ruleprimaryExprSlice ) ) | ( (lv_content_5_0= ruleprimaryExprTypeAssertion ) ) | ( (lv_content_6_0= ruleprimaryExprArguments ) ) )
            {
            // InternalGo.g:6401:2: ( ( ( (lv_content_0_0= ruleoperand ) ) | ( (lv_content_1_0= ruleconversion ) ) ) | ( (lv_content_2_0= ruleprimaryExprSelector ) ) | ( (lv_content_3_0= ruleprimaryExprIndex ) ) | ( (lv_content_4_0= ruleprimaryExprSlice ) ) | ( (lv_content_5_0= ruleprimaryExprTypeAssertion ) ) | ( (lv_content_6_0= ruleprimaryExprArguments ) ) )
            int alt83=6;
            alt83 = dfa83.predict(input);
            switch (alt83) {
                case 1 :
                    // InternalGo.g:6402:3: ( ( (lv_content_0_0= ruleoperand ) ) | ( (lv_content_1_0= ruleconversion ) ) )
                    {
                    // InternalGo.g:6402:3: ( ( (lv_content_0_0= ruleoperand ) ) | ( (lv_content_1_0= ruleconversion ) ) )
                    int alt82=2;
                    alt82 = dfa82.predict(input);
                    switch (alt82) {
                        case 1 :
                            // InternalGo.g:6403:4: ( (lv_content_0_0= ruleoperand ) )
                            {
                            // InternalGo.g:6403:4: ( (lv_content_0_0= ruleoperand ) )
                            // InternalGo.g:6404:5: (lv_content_0_0= ruleoperand )
                            {
                            // InternalGo.g:6404:5: (lv_content_0_0= ruleoperand )
                            // InternalGo.g:6405:6: lv_content_0_0= ruleoperand
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExprAccess().getContentOperandParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_content_0_0=ruleoperand();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                              						}
                              						set(
                              							current,
                              							"content",
                              							lv_content_0_0,
                              							"org.xtext.Go.operand");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:6423:4: ( (lv_content_1_0= ruleconversion ) )
                            {
                            // InternalGo.g:6423:4: ( (lv_content_1_0= ruleconversion ) )
                            // InternalGo.g:6424:5: (lv_content_1_0= ruleconversion )
                            {
                            // InternalGo.g:6424:5: (lv_content_1_0= ruleconversion )
                            // InternalGo.g:6425:6: lv_content_1_0= ruleconversion
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExprAccess().getContentConversionParserRuleCall_0_1_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_content_1_0=ruleconversion();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                              						}
                              						set(
                              							current,
                              							"content",
                              							lv_content_1_0,
                              							"org.xtext.Go.conversion");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6444:3: ( (lv_content_2_0= ruleprimaryExprSelector ) )
                    {
                    // InternalGo.g:6444:3: ( (lv_content_2_0= ruleprimaryExprSelector ) )
                    // InternalGo.g:6445:4: (lv_content_2_0= ruleprimaryExprSelector )
                    {
                    // InternalGo.g:6445:4: (lv_content_2_0= ruleprimaryExprSelector )
                    // InternalGo.g:6446:5: lv_content_2_0= ruleprimaryExprSelector
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprAccess().getContentPrimaryExprSelectorParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_2_0=ruleprimaryExprSelector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_2_0,
                      						"org.xtext.Go.primaryExprSelector");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6464:3: ( (lv_content_3_0= ruleprimaryExprIndex ) )
                    {
                    // InternalGo.g:6464:3: ( (lv_content_3_0= ruleprimaryExprIndex ) )
                    // InternalGo.g:6465:4: (lv_content_3_0= ruleprimaryExprIndex )
                    {
                    // InternalGo.g:6465:4: (lv_content_3_0= ruleprimaryExprIndex )
                    // InternalGo.g:6466:5: lv_content_3_0= ruleprimaryExprIndex
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprAccess().getContentPrimaryExprIndexParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_3_0=ruleprimaryExprIndex();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_3_0,
                      						"org.xtext.Go.primaryExprIndex");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:6484:3: ( (lv_content_4_0= ruleprimaryExprSlice ) )
                    {
                    // InternalGo.g:6484:3: ( (lv_content_4_0= ruleprimaryExprSlice ) )
                    // InternalGo.g:6485:4: (lv_content_4_0= ruleprimaryExprSlice )
                    {
                    // InternalGo.g:6485:4: (lv_content_4_0= ruleprimaryExprSlice )
                    // InternalGo.g:6486:5: lv_content_4_0= ruleprimaryExprSlice
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprAccess().getContentPrimaryExprSliceParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_4_0=ruleprimaryExprSlice();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_4_0,
                      						"org.xtext.Go.primaryExprSlice");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:6504:3: ( (lv_content_5_0= ruleprimaryExprTypeAssertion ) )
                    {
                    // InternalGo.g:6504:3: ( (lv_content_5_0= ruleprimaryExprTypeAssertion ) )
                    // InternalGo.g:6505:4: (lv_content_5_0= ruleprimaryExprTypeAssertion )
                    {
                    // InternalGo.g:6505:4: (lv_content_5_0= ruleprimaryExprTypeAssertion )
                    // InternalGo.g:6506:5: lv_content_5_0= ruleprimaryExprTypeAssertion
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprAccess().getContentPrimaryExprTypeAssertionParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_5_0=ruleprimaryExprTypeAssertion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_5_0,
                      						"org.xtext.Go.primaryExprTypeAssertion");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:6524:3: ( (lv_content_6_0= ruleprimaryExprArguments ) )
                    {
                    // InternalGo.g:6524:3: ( (lv_content_6_0= ruleprimaryExprArguments ) )
                    // InternalGo.g:6525:4: (lv_content_6_0= ruleprimaryExprArguments )
                    {
                    // InternalGo.g:6525:4: (lv_content_6_0= ruleprimaryExprArguments )
                    // InternalGo.g:6526:5: lv_content_6_0= ruleprimaryExprArguments
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprAccess().getContentPrimaryExprArgumentsParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_6_0=ruleprimaryExprArguments();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_6_0,
                      						"org.xtext.Go.primaryExprArguments");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExpr"


    // $ANTLR start "entryRuleprimaryExprStuff"
    // InternalGo.g:6547:1: entryRuleprimaryExprStuff returns [EObject current=null] : iv_ruleprimaryExprStuff= ruleprimaryExprStuff EOF ;
    public final EObject entryRuleprimaryExprStuff() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExprStuff = null;


        try {
            // InternalGo.g:6547:57: (iv_ruleprimaryExprStuff= ruleprimaryExprStuff EOF )
            // InternalGo.g:6548:2: iv_ruleprimaryExprStuff= ruleprimaryExprStuff EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprStuffRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExprStuff=ruleprimaryExprStuff();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExprStuff; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExprStuff"


    // $ANTLR start "ruleprimaryExprStuff"
    // InternalGo.g:6554:1: ruleprimaryExprStuff returns [EObject current=null] : ( ( (lv_content_0_0= ruleselector ) ) | ( (lv_content_1_0= ruleindex ) ) | ( (lv_content_2_0= ruleslice ) ) | ( (lv_content_3_0= ruletypeAssertion ) ) | ( (lv_content_4_0= rulearguments ) ) ) ;
    public final EObject ruleprimaryExprStuff() throws RecognitionException {
        EObject current = null;

        EObject lv_content_0_0 = null;

        EObject lv_content_1_0 = null;

        EObject lv_content_2_0 = null;

        EObject lv_content_3_0 = null;

        EObject lv_content_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6560:2: ( ( ( (lv_content_0_0= ruleselector ) ) | ( (lv_content_1_0= ruleindex ) ) | ( (lv_content_2_0= ruleslice ) ) | ( (lv_content_3_0= ruletypeAssertion ) ) | ( (lv_content_4_0= rulearguments ) ) ) )
            // InternalGo.g:6561:2: ( ( (lv_content_0_0= ruleselector ) ) | ( (lv_content_1_0= ruleindex ) ) | ( (lv_content_2_0= ruleslice ) ) | ( (lv_content_3_0= ruletypeAssertion ) ) | ( (lv_content_4_0= rulearguments ) ) )
            {
            // InternalGo.g:6561:2: ( ( (lv_content_0_0= ruleselector ) ) | ( (lv_content_1_0= ruleindex ) ) | ( (lv_content_2_0= ruleslice ) ) | ( (lv_content_3_0= ruletypeAssertion ) ) | ( (lv_content_4_0= rulearguments ) ) )
            int alt84=5;
            switch ( input.LA(1) ) {
            case 47:
                {
                int LA84_1 = input.LA(2);

                if ( (synpred141_InternalGo()) ) {
                    alt84=1;
                }
                else if ( (synpred144_InternalGo()) ) {
                    alt84=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 1, input);

                    throw nvae;
                }
                }
                break;
            case 87:
                {
                int LA84_2 = input.LA(2);

                if ( (synpred142_InternalGo()) ) {
                    alt84=2;
                }
                else if ( (synpred143_InternalGo()) ) {
                    alt84=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 2, input);

                    throw nvae;
                }
                }
                break;
            case 45:
                {
                alt84=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }

            switch (alt84) {
                case 1 :
                    // InternalGo.g:6562:3: ( (lv_content_0_0= ruleselector ) )
                    {
                    // InternalGo.g:6562:3: ( (lv_content_0_0= ruleselector ) )
                    // InternalGo.g:6563:4: (lv_content_0_0= ruleselector )
                    {
                    // InternalGo.g:6563:4: (lv_content_0_0= ruleselector )
                    // InternalGo.g:6564:5: lv_content_0_0= ruleselector
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getContentSelectorParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_0_0=ruleselector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprStuffRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_0_0,
                      						"org.xtext.Go.selector");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6582:3: ( (lv_content_1_0= ruleindex ) )
                    {
                    // InternalGo.g:6582:3: ( (lv_content_1_0= ruleindex ) )
                    // InternalGo.g:6583:4: (lv_content_1_0= ruleindex )
                    {
                    // InternalGo.g:6583:4: (lv_content_1_0= ruleindex )
                    // InternalGo.g:6584:5: lv_content_1_0= ruleindex
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getContentIndexParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_1_0=ruleindex();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprStuffRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_1_0,
                      						"org.xtext.Go.index");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6602:3: ( (lv_content_2_0= ruleslice ) )
                    {
                    // InternalGo.g:6602:3: ( (lv_content_2_0= ruleslice ) )
                    // InternalGo.g:6603:4: (lv_content_2_0= ruleslice )
                    {
                    // InternalGo.g:6603:4: (lv_content_2_0= ruleslice )
                    // InternalGo.g:6604:5: lv_content_2_0= ruleslice
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getContentSliceParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_2_0=ruleslice();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprStuffRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_2_0,
                      						"org.xtext.Go.slice");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:6622:3: ( (lv_content_3_0= ruletypeAssertion ) )
                    {
                    // InternalGo.g:6622:3: ( (lv_content_3_0= ruletypeAssertion ) )
                    // InternalGo.g:6623:4: (lv_content_3_0= ruletypeAssertion )
                    {
                    // InternalGo.g:6623:4: (lv_content_3_0= ruletypeAssertion )
                    // InternalGo.g:6624:5: lv_content_3_0= ruletypeAssertion
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getContentTypeAssertionParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_3_0=ruletypeAssertion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprStuffRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_3_0,
                      						"org.xtext.Go.typeAssertion");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:6642:3: ( (lv_content_4_0= rulearguments ) )
                    {
                    // InternalGo.g:6642:3: ( (lv_content_4_0= rulearguments ) )
                    // InternalGo.g:6643:4: (lv_content_4_0= rulearguments )
                    {
                    // InternalGo.g:6643:4: (lv_content_4_0= rulearguments )
                    // InternalGo.g:6644:5: lv_content_4_0= rulearguments
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getContentArgumentsParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_4_0=rulearguments();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprStuffRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_4_0,
                      						"org.xtext.Go.arguments");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExprStuff"


    // $ANTLR start "entryRuleprimaryExprSelector"
    // InternalGo.g:6665:1: entryRuleprimaryExprSelector returns [EObject current=null] : iv_ruleprimaryExprSelector= ruleprimaryExprSelector EOF ;
    public final EObject entryRuleprimaryExprSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExprSelector = null;


        try {
            // InternalGo.g:6665:60: (iv_ruleprimaryExprSelector= ruleprimaryExprSelector EOF )
            // InternalGo.g:6666:2: iv_ruleprimaryExprSelector= ruleprimaryExprSelector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprSelectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExprSelector=ruleprimaryExprSelector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExprSelector; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExprSelector"


    // $ANTLR start "ruleprimaryExprSelector"
    // InternalGo.g:6672:1: ruleprimaryExprSelector returns [EObject current=null] : ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSelector_1_0= ruleprimaryExprSelector ) ) )? ;
    public final EObject ruleprimaryExprSelector() throws RecognitionException {
        EObject current = null;

        EObject lv_content_0_0 = null;

        EObject lv_primaryExprSelector_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6678:2: ( ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSelector_1_0= ruleprimaryExprSelector ) ) )? )
            // InternalGo.g:6679:2: ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSelector_1_0= ruleprimaryExprSelector ) ) )?
            {
            // InternalGo.g:6679:2: ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSelector_1_0= ruleprimaryExprSelector ) ) )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==47) ) {
                int LA85_1 = input.LA(2);

                if ( (LA85_1==45) ) {
                    int LA85_4 = input.LA(3);

                    if ( (LA85_4==RULE_IDENTIFIER||LA85_4==45||LA85_4==52||LA85_4==56||LA85_4==63||LA85_4==87||(LA85_4>=89 && LA85_4<=91)||LA85_4==93) ) {
                        alt85=1;
                    }
                }
                else if ( (LA85_1==RULE_IDENTIFIER) ) {
                    alt85=1;
                }
            }
            else if ( (LA85_0==45||LA85_0==87) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalGo.g:6680:3: ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSelector_1_0= ruleprimaryExprSelector ) )
                    {
                    // InternalGo.g:6680:3: ( (lv_content_0_0= ruleprimaryExprStuff ) )
                    // InternalGo.g:6681:4: (lv_content_0_0= ruleprimaryExprStuff )
                    {
                    // InternalGo.g:6681:4: (lv_content_0_0= ruleprimaryExprStuff )
                    // InternalGo.g:6682:5: lv_content_0_0= ruleprimaryExprStuff
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprSelectorAccess().getContentPrimaryExprStuffParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_60);
                    lv_content_0_0=ruleprimaryExprStuff();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprSelectorRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_0_0,
                      						"org.xtext.Go.primaryExprStuff");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalGo.g:6699:3: ( (lv_primaryExprSelector_1_0= ruleprimaryExprSelector ) )
                    // InternalGo.g:6700:4: (lv_primaryExprSelector_1_0= ruleprimaryExprSelector )
                    {
                    // InternalGo.g:6700:4: (lv_primaryExprSelector_1_0= ruleprimaryExprSelector )
                    // InternalGo.g:6701:5: lv_primaryExprSelector_1_0= ruleprimaryExprSelector
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprSelectorPrimaryExprSelectorParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprSelector_1_0=ruleprimaryExprSelector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprSelectorRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprSelector",
                      						lv_primaryExprSelector_1_0,
                      						"org.xtext.Go.primaryExprSelector");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExprSelector"


    // $ANTLR start "entryRuleprimaryExprIndex"
    // InternalGo.g:6722:1: entryRuleprimaryExprIndex returns [EObject current=null] : iv_ruleprimaryExprIndex= ruleprimaryExprIndex EOF ;
    public final EObject entryRuleprimaryExprIndex() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExprIndex = null;


        try {
            // InternalGo.g:6722:57: (iv_ruleprimaryExprIndex= ruleprimaryExprIndex EOF )
            // InternalGo.g:6723:2: iv_ruleprimaryExprIndex= ruleprimaryExprIndex EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprIndexRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExprIndex=ruleprimaryExprIndex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExprIndex; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExprIndex"


    // $ANTLR start "ruleprimaryExprIndex"
    // InternalGo.g:6729:1: ruleprimaryExprIndex returns [EObject current=null] : ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprIndex_1_0= ruleprimaryExprIndex ) ) )? ;
    public final EObject ruleprimaryExprIndex() throws RecognitionException {
        EObject current = null;

        EObject lv_content_0_0 = null;

        EObject lv_primaryExprIndex_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6735:2: ( ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprIndex_1_0= ruleprimaryExprIndex ) ) )? )
            // InternalGo.g:6736:2: ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprIndex_1_0= ruleprimaryExprIndex ) ) )?
            {
            // InternalGo.g:6736:2: ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprIndex_1_0= ruleprimaryExprIndex ) ) )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==47) ) {
                int LA86_1 = input.LA(2);

                if ( (LA86_1==45) ) {
                    int LA86_4 = input.LA(3);

                    if ( (LA86_4==RULE_IDENTIFIER||LA86_4==45||LA86_4==52||LA86_4==56||LA86_4==63||LA86_4==87||(LA86_4>=89 && LA86_4<=91)||LA86_4==93) ) {
                        alt86=1;
                    }
                }
                else if ( (LA86_1==RULE_IDENTIFIER) ) {
                    alt86=1;
                }
            }
            else if ( (LA86_0==45||LA86_0==87) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalGo.g:6737:3: ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprIndex_1_0= ruleprimaryExprIndex ) )
                    {
                    // InternalGo.g:6737:3: ( (lv_content_0_0= ruleprimaryExprStuff ) )
                    // InternalGo.g:6738:4: (lv_content_0_0= ruleprimaryExprStuff )
                    {
                    // InternalGo.g:6738:4: (lv_content_0_0= ruleprimaryExprStuff )
                    // InternalGo.g:6739:5: lv_content_0_0= ruleprimaryExprStuff
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprIndexAccess().getContentPrimaryExprStuffParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_60);
                    lv_content_0_0=ruleprimaryExprStuff();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprIndexRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_0_0,
                      						"org.xtext.Go.primaryExprStuff");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalGo.g:6756:3: ( (lv_primaryExprIndex_1_0= ruleprimaryExprIndex ) )
                    // InternalGo.g:6757:4: (lv_primaryExprIndex_1_0= ruleprimaryExprIndex )
                    {
                    // InternalGo.g:6757:4: (lv_primaryExprIndex_1_0= ruleprimaryExprIndex )
                    // InternalGo.g:6758:5: lv_primaryExprIndex_1_0= ruleprimaryExprIndex
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprIndexPrimaryExprIndexParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprIndex_1_0=ruleprimaryExprIndex();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprIndexRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprIndex",
                      						lv_primaryExprIndex_1_0,
                      						"org.xtext.Go.primaryExprIndex");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExprIndex"


    // $ANTLR start "entryRuleprimaryExprSlice"
    // InternalGo.g:6779:1: entryRuleprimaryExprSlice returns [EObject current=null] : iv_ruleprimaryExprSlice= ruleprimaryExprSlice EOF ;
    public final EObject entryRuleprimaryExprSlice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExprSlice = null;


        try {
            // InternalGo.g:6779:57: (iv_ruleprimaryExprSlice= ruleprimaryExprSlice EOF )
            // InternalGo.g:6780:2: iv_ruleprimaryExprSlice= ruleprimaryExprSlice EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprSliceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExprSlice=ruleprimaryExprSlice();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExprSlice; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExprSlice"


    // $ANTLR start "ruleprimaryExprSlice"
    // InternalGo.g:6786:1: ruleprimaryExprSlice returns [EObject current=null] : ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSlice_1_0= ruleprimaryExprSlice ) ) )? ;
    public final EObject ruleprimaryExprSlice() throws RecognitionException {
        EObject current = null;

        EObject lv_content_0_0 = null;

        EObject lv_primaryExprSlice_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6792:2: ( ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSlice_1_0= ruleprimaryExprSlice ) ) )? )
            // InternalGo.g:6793:2: ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSlice_1_0= ruleprimaryExprSlice ) ) )?
            {
            // InternalGo.g:6793:2: ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSlice_1_0= ruleprimaryExprSlice ) ) )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==47) ) {
                int LA87_1 = input.LA(2);

                if ( (LA87_1==RULE_IDENTIFIER) ) {
                    alt87=1;
                }
                else if ( (LA87_1==45) ) {
                    int LA87_4 = input.LA(3);

                    if ( (LA87_4==RULE_IDENTIFIER||LA87_4==45||LA87_4==52||LA87_4==56||LA87_4==63||LA87_4==87||(LA87_4>=89 && LA87_4<=91)||LA87_4==93) ) {
                        alt87=1;
                    }
                }
            }
            else if ( (LA87_0==45||LA87_0==87) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalGo.g:6794:3: ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSlice_1_0= ruleprimaryExprSlice ) )
                    {
                    // InternalGo.g:6794:3: ( (lv_content_0_0= ruleprimaryExprStuff ) )
                    // InternalGo.g:6795:4: (lv_content_0_0= ruleprimaryExprStuff )
                    {
                    // InternalGo.g:6795:4: (lv_content_0_0= ruleprimaryExprStuff )
                    // InternalGo.g:6796:5: lv_content_0_0= ruleprimaryExprStuff
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprSliceAccess().getContentPrimaryExprStuffParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_60);
                    lv_content_0_0=ruleprimaryExprStuff();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprSliceRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_0_0,
                      						"org.xtext.Go.primaryExprStuff");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalGo.g:6813:3: ( (lv_primaryExprSlice_1_0= ruleprimaryExprSlice ) )
                    // InternalGo.g:6814:4: (lv_primaryExprSlice_1_0= ruleprimaryExprSlice )
                    {
                    // InternalGo.g:6814:4: (lv_primaryExprSlice_1_0= ruleprimaryExprSlice )
                    // InternalGo.g:6815:5: lv_primaryExprSlice_1_0= ruleprimaryExprSlice
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprSlicePrimaryExprSliceParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprSlice_1_0=ruleprimaryExprSlice();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprSliceRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprSlice",
                      						lv_primaryExprSlice_1_0,
                      						"org.xtext.Go.primaryExprSlice");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExprSlice"


    // $ANTLR start "entryRuleprimaryExprTypeAssertion"
    // InternalGo.g:6836:1: entryRuleprimaryExprTypeAssertion returns [EObject current=null] : iv_ruleprimaryExprTypeAssertion= ruleprimaryExprTypeAssertion EOF ;
    public final EObject entryRuleprimaryExprTypeAssertion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExprTypeAssertion = null;


        try {
            // InternalGo.g:6836:65: (iv_ruleprimaryExprTypeAssertion= ruleprimaryExprTypeAssertion EOF )
            // InternalGo.g:6837:2: iv_ruleprimaryExprTypeAssertion= ruleprimaryExprTypeAssertion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprTypeAssertionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExprTypeAssertion=ruleprimaryExprTypeAssertion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExprTypeAssertion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExprTypeAssertion"


    // $ANTLR start "ruleprimaryExprTypeAssertion"
    // InternalGo.g:6843:1: ruleprimaryExprTypeAssertion returns [EObject current=null] : ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprTypeAssertion_1_0= ruleprimaryExprTypeAssertion ) ) )? ;
    public final EObject ruleprimaryExprTypeAssertion() throws RecognitionException {
        EObject current = null;

        EObject lv_content_0_0 = null;

        EObject lv_primaryExprTypeAssertion_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6849:2: ( ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprTypeAssertion_1_0= ruleprimaryExprTypeAssertion ) ) )? )
            // InternalGo.g:6850:2: ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprTypeAssertion_1_0= ruleprimaryExprTypeAssertion ) ) )?
            {
            // InternalGo.g:6850:2: ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprTypeAssertion_1_0= ruleprimaryExprTypeAssertion ) ) )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==47) ) {
                int LA88_1 = input.LA(2);

                if ( (LA88_1==45) ) {
                    int LA88_4 = input.LA(3);

                    if ( (LA88_4==RULE_IDENTIFIER||LA88_4==45||LA88_4==52||LA88_4==56||LA88_4==63||LA88_4==87||(LA88_4>=89 && LA88_4<=91)||LA88_4==93) ) {
                        alt88=1;
                    }
                }
                else if ( (LA88_1==RULE_IDENTIFIER) ) {
                    alt88=1;
                }
            }
            else if ( (LA88_0==45||LA88_0==87) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalGo.g:6851:3: ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprTypeAssertion_1_0= ruleprimaryExprTypeAssertion ) )
                    {
                    // InternalGo.g:6851:3: ( (lv_content_0_0= ruleprimaryExprStuff ) )
                    // InternalGo.g:6852:4: (lv_content_0_0= ruleprimaryExprStuff )
                    {
                    // InternalGo.g:6852:4: (lv_content_0_0= ruleprimaryExprStuff )
                    // InternalGo.g:6853:5: lv_content_0_0= ruleprimaryExprStuff
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprTypeAssertionAccess().getContentPrimaryExprStuffParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_60);
                    lv_content_0_0=ruleprimaryExprStuff();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprTypeAssertionRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_0_0,
                      						"org.xtext.Go.primaryExprStuff");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalGo.g:6870:3: ( (lv_primaryExprTypeAssertion_1_0= ruleprimaryExprTypeAssertion ) )
                    // InternalGo.g:6871:4: (lv_primaryExprTypeAssertion_1_0= ruleprimaryExprTypeAssertion )
                    {
                    // InternalGo.g:6871:4: (lv_primaryExprTypeAssertion_1_0= ruleprimaryExprTypeAssertion )
                    // InternalGo.g:6872:5: lv_primaryExprTypeAssertion_1_0= ruleprimaryExprTypeAssertion
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprTypeAssertionPrimaryExprTypeAssertionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprTypeAssertion_1_0=ruleprimaryExprTypeAssertion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprTypeAssertionRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprTypeAssertion",
                      						lv_primaryExprTypeAssertion_1_0,
                      						"org.xtext.Go.primaryExprTypeAssertion");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExprTypeAssertion"


    // $ANTLR start "entryRuleprimaryExprArguments"
    // InternalGo.g:6893:1: entryRuleprimaryExprArguments returns [EObject current=null] : iv_ruleprimaryExprArguments= ruleprimaryExprArguments EOF ;
    public final EObject entryRuleprimaryExprArguments() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExprArguments = null;


        try {
            // InternalGo.g:6893:61: (iv_ruleprimaryExprArguments= ruleprimaryExprArguments EOF )
            // InternalGo.g:6894:2: iv_ruleprimaryExprArguments= ruleprimaryExprArguments EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExprArguments=ruleprimaryExprArguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExprArguments; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExprArguments"


    // $ANTLR start "ruleprimaryExprArguments"
    // InternalGo.g:6900:1: ruleprimaryExprArguments returns [EObject current=null] : ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprArguments_1_0= ruleprimaryExprArguments ) ) )? ;
    public final EObject ruleprimaryExprArguments() throws RecognitionException {
        EObject current = null;

        EObject lv_content_0_0 = null;

        EObject lv_primaryExprArguments_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6906:2: ( ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprArguments_1_0= ruleprimaryExprArguments ) ) )? )
            // InternalGo.g:6907:2: ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprArguments_1_0= ruleprimaryExprArguments ) ) )?
            {
            // InternalGo.g:6907:2: ( ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprArguments_1_0= ruleprimaryExprArguments ) ) )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==47) ) {
                int LA89_1 = input.LA(2);

                if ( (LA89_1==45) ) {
                    int LA89_4 = input.LA(3);

                    if ( (LA89_4==RULE_IDENTIFIER||LA89_4==45||LA89_4==52||LA89_4==56||LA89_4==63||LA89_4==87||(LA89_4>=89 && LA89_4<=91)||LA89_4==93) ) {
                        alt89=1;
                    }
                }
                else if ( (LA89_1==RULE_IDENTIFIER) ) {
                    alt89=1;
                }
            }
            else if ( (LA89_0==45||LA89_0==87) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalGo.g:6908:3: ( (lv_content_0_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprArguments_1_0= ruleprimaryExprArguments ) )
                    {
                    // InternalGo.g:6908:3: ( (lv_content_0_0= ruleprimaryExprStuff ) )
                    // InternalGo.g:6909:4: (lv_content_0_0= ruleprimaryExprStuff )
                    {
                    // InternalGo.g:6909:4: (lv_content_0_0= ruleprimaryExprStuff )
                    // InternalGo.g:6910:5: lv_content_0_0= ruleprimaryExprStuff
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprArgumentsAccess().getContentPrimaryExprStuffParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_60);
                    lv_content_0_0=ruleprimaryExprStuff();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprArgumentsRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_0_0,
                      						"org.xtext.Go.primaryExprStuff");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalGo.g:6927:3: ( (lv_primaryExprArguments_1_0= ruleprimaryExprArguments ) )
                    // InternalGo.g:6928:4: (lv_primaryExprArguments_1_0= ruleprimaryExprArguments )
                    {
                    // InternalGo.g:6928:4: (lv_primaryExprArguments_1_0= ruleprimaryExprArguments )
                    // InternalGo.g:6929:5: lv_primaryExprArguments_1_0= ruleprimaryExprArguments
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprArgumentsPrimaryExprArgumentsParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprArguments_1_0=ruleprimaryExprArguments();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprArgumentsRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprArguments",
                      						lv_primaryExprArguments_1_0,
                      						"org.xtext.Go.primaryExprArguments");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExprArguments"


    // $ANTLR start "entryRuleselector"
    // InternalGo.g:6950:1: entryRuleselector returns [EObject current=null] : iv_ruleselector= ruleselector EOF ;
    public final EObject entryRuleselector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleselector = null;


        try {
            // InternalGo.g:6950:49: (iv_ruleselector= ruleselector EOF )
            // InternalGo.g:6951:2: iv_ruleselector= ruleselector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleselector=ruleselector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleselector; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleselector"


    // $ANTLR start "ruleselector"
    // InternalGo.g:6957:1: ruleselector returns [EObject current=null] : (otherlv_0= '.' ( (lv_name_1_0= RULE_IDENTIFIER ) ) ) ;
    public final EObject ruleselector() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;


        	enterRule();

        try {
            // InternalGo.g:6963:2: ( (otherlv_0= '.' ( (lv_name_1_0= RULE_IDENTIFIER ) ) ) )
            // InternalGo.g:6964:2: (otherlv_0= '.' ( (lv_name_1_0= RULE_IDENTIFIER ) ) )
            {
            // InternalGo.g:6964:2: (otherlv_0= '.' ( (lv_name_1_0= RULE_IDENTIFIER ) ) )
            // InternalGo.g:6965:3: otherlv_0= '.' ( (lv_name_1_0= RULE_IDENTIFIER ) )
            {
            otherlv_0=(Token)match(input,47,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSelectorAccess().getFullStopKeyword_0());
              		
            }
            // InternalGo.g:6969:3: ( (lv_name_1_0= RULE_IDENTIFIER ) )
            // InternalGo.g:6970:4: (lv_name_1_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:6970:4: (lv_name_1_0= RULE_IDENTIFIER )
            // InternalGo.g:6971:5: lv_name_1_0= RULE_IDENTIFIER
            {
            lv_name_1_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getSelectorAccess().getNameIDENTIFIERTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSelectorRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleselector"


    // $ANTLR start "entryRuleindex"
    // InternalGo.g:6991:1: entryRuleindex returns [EObject current=null] : iv_ruleindex= ruleindex EOF ;
    public final EObject entryRuleindex() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleindex = null;


        try {
            // InternalGo.g:6991:46: (iv_ruleindex= ruleindex EOF )
            // InternalGo.g:6992:2: iv_ruleindex= ruleindex EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIndexRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleindex=ruleindex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleindex; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleindex"


    // $ANTLR start "ruleindex"
    // InternalGo.g:6998:1: ruleindex returns [EObject current=null] : (otherlv_0= '[' ( (lv_expr_1_0= ruleexpression ) ) otherlv_2= ']' ) ;
    public final EObject ruleindex() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expr_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7004:2: ( (otherlv_0= '[' ( (lv_expr_1_0= ruleexpression ) ) otherlv_2= ']' ) )
            // InternalGo.g:7005:2: (otherlv_0= '[' ( (lv_expr_1_0= ruleexpression ) ) otherlv_2= ']' )
            {
            // InternalGo.g:7005:2: (otherlv_0= '[' ( (lv_expr_1_0= ruleexpression ) ) otherlv_2= ']' )
            // InternalGo.g:7006:3: otherlv_0= '[' ( (lv_expr_1_0= ruleexpression ) ) otherlv_2= ']'
            {
            otherlv_0=(Token)match(input,87,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalGo.g:7010:3: ( (lv_expr_1_0= ruleexpression ) )
            // InternalGo.g:7011:4: (lv_expr_1_0= ruleexpression )
            {
            // InternalGo.g:7011:4: (lv_expr_1_0= ruleexpression )
            // InternalGo.g:7012:5: lv_expr_1_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIndexAccess().getExprExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_47);
            lv_expr_1_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIndexRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_1_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleindex"


    // $ANTLR start "entryRuleslice"
    // InternalGo.g:7037:1: entryRuleslice returns [EObject current=null] : iv_ruleslice= ruleslice EOF ;
    public final EObject entryRuleslice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleslice = null;


        try {
            // InternalGo.g:7037:46: (iv_ruleslice= ruleslice EOF )
            // InternalGo.g:7038:2: iv_ruleslice= ruleslice EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSliceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleslice=ruleslice();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleslice; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleslice"


    // $ANTLR start "ruleslice"
    // InternalGo.g:7044:1: ruleslice returns [EObject current=null] : (otherlv_0= '[' ( ( ( (lv_expr1_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expr2_3_0= ruleexpression ) )? ) | ( ( (lv_expr1_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expr2_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expr3_8_0= ruleexpression ) ) ) ) otherlv_9= ']' ) ;
    public final EObject ruleslice() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_expr1_1_0 = null;

        EObject lv_expr2_3_0 = null;

        EObject lv_expr1_4_0 = null;

        EObject lv_expr2_6_0 = null;

        EObject lv_expr3_8_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7050:2: ( (otherlv_0= '[' ( ( ( (lv_expr1_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expr2_3_0= ruleexpression ) )? ) | ( ( (lv_expr1_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expr2_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expr3_8_0= ruleexpression ) ) ) ) otherlv_9= ']' ) )
            // InternalGo.g:7051:2: (otherlv_0= '[' ( ( ( (lv_expr1_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expr2_3_0= ruleexpression ) )? ) | ( ( (lv_expr1_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expr2_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expr3_8_0= ruleexpression ) ) ) ) otherlv_9= ']' )
            {
            // InternalGo.g:7051:2: (otherlv_0= '[' ( ( ( (lv_expr1_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expr2_3_0= ruleexpression ) )? ) | ( ( (lv_expr1_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expr2_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expr3_8_0= ruleexpression ) ) ) ) otherlv_9= ']' )
            // InternalGo.g:7052:3: otherlv_0= '[' ( ( ( (lv_expr1_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expr2_3_0= ruleexpression ) )? ) | ( ( (lv_expr1_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expr2_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expr3_8_0= ruleexpression ) ) ) ) otherlv_9= ']'
            {
            otherlv_0=(Token)match(input,87,FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalGo.g:7056:3: ( ( ( (lv_expr1_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expr2_3_0= ruleexpression ) )? ) | ( ( (lv_expr1_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expr2_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expr3_8_0= ruleexpression ) ) ) )
            int alt93=2;
            alt93 = dfa93.predict(input);
            switch (alt93) {
                case 1 :
                    // InternalGo.g:7057:4: ( ( (lv_expr1_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expr2_3_0= ruleexpression ) )? )
                    {
                    // InternalGo.g:7057:4: ( ( (lv_expr1_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expr2_3_0= ruleexpression ) )? )
                    // InternalGo.g:7058:5: ( (lv_expr1_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expr2_3_0= ruleexpression ) )?
                    {
                    // InternalGo.g:7058:5: ( (lv_expr1_1_0= ruleexpression ) )?
                    int alt90=2;
                    int LA90_0 = input.LA(1);

                    if ( ((LA90_0>=RULE_IDENTIFIER && LA90_0<=RULE_STRING_LIT)||(LA90_0>=RULE_INT_LIT && LA90_0<=RULE_BINARY_OP)||LA90_0==45||LA90_0==47||LA90_0==52||LA90_0==56||(LA90_0>=59 && LA90_0<=60)||(LA90_0>=62 && LA90_0<=63)||LA90_0==68||LA90_0==87||(LA90_0>=89 && LA90_0<=91)||(LA90_0>=93 && LA90_0<=94)) ) {
                        alt90=1;
                    }
                    else if ( (LA90_0==71) ) {
                        int LA90_2 = input.LA(2);

                        if ( (synpred150_InternalGo()) ) {
                            alt90=1;
                        }
                    }
                    switch (alt90) {
                        case 1 :
                            // InternalGo.g:7059:6: (lv_expr1_1_0= ruleexpression )
                            {
                            // InternalGo.g:7059:6: (lv_expr1_1_0= ruleexpression )
                            // InternalGo.g:7060:7: lv_expr1_1_0= ruleexpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSliceAccess().getExpr1ExpressionParserRuleCall_1_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_29);
                            lv_expr1_1_0=ruleexpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSliceRule());
                              							}
                              							set(
                              								current,
                              								"expr1",
                              								lv_expr1_1_0,
                              								"org.xtext.Go.expression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,71,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getSliceAccess().getColonKeyword_1_0_1());
                      				
                    }
                    // InternalGo.g:7081:5: ( (lv_expr2_3_0= ruleexpression ) )?
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( ((LA91_0>=RULE_IDENTIFIER && LA91_0<=RULE_STRING_LIT)||(LA91_0>=RULE_INT_LIT && LA91_0<=RULE_BINARY_OP)||LA91_0==45||LA91_0==47||LA91_0==52||LA91_0==56||(LA91_0>=59 && LA91_0<=60)||(LA91_0>=62 && LA91_0<=63)||LA91_0==68||LA91_0==87||(LA91_0>=89 && LA91_0<=91)||(LA91_0>=93 && LA91_0<=94)) ) {
                        alt91=1;
                    }
                    else if ( (LA91_0==88) ) {
                        int LA91_2 = input.LA(2);

                        if ( (synpred151_InternalGo()) ) {
                            alt91=1;
                        }
                    }
                    switch (alt91) {
                        case 1 :
                            // InternalGo.g:7082:6: (lv_expr2_3_0= ruleexpression )
                            {
                            // InternalGo.g:7082:6: (lv_expr2_3_0= ruleexpression )
                            // InternalGo.g:7083:7: lv_expr2_3_0= ruleexpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSliceAccess().getExpr2ExpressionParserRuleCall_1_0_2_0());
                              						
                            }
                            pushFollow(FOLLOW_47);
                            lv_expr2_3_0=ruleexpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSliceRule());
                              							}
                              							set(
                              								current,
                              								"expr2",
                              								lv_expr2_3_0,
                              								"org.xtext.Go.expression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7102:4: ( ( (lv_expr1_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expr2_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expr3_8_0= ruleexpression ) ) )
                    {
                    // InternalGo.g:7102:4: ( ( (lv_expr1_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expr2_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expr3_8_0= ruleexpression ) ) )
                    // InternalGo.g:7103:5: ( (lv_expr1_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expr2_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expr3_8_0= ruleexpression ) )
                    {
                    // InternalGo.g:7103:5: ( (lv_expr1_4_0= ruleexpression ) )?
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( ((LA92_0>=RULE_IDENTIFIER && LA92_0<=RULE_STRING_LIT)||(LA92_0>=RULE_INT_LIT && LA92_0<=RULE_BINARY_OP)||LA92_0==45||LA92_0==47||LA92_0==52||LA92_0==56||(LA92_0>=59 && LA92_0<=60)||(LA92_0>=62 && LA92_0<=63)||LA92_0==68||LA92_0==87||(LA92_0>=89 && LA92_0<=91)||(LA92_0>=93 && LA92_0<=94)) ) {
                        alt92=1;
                    }
                    else if ( (LA92_0==71) ) {
                        int LA92_2 = input.LA(2);

                        if ( (synpred153_InternalGo()) ) {
                            alt92=1;
                        }
                    }
                    switch (alt92) {
                        case 1 :
                            // InternalGo.g:7104:6: (lv_expr1_4_0= ruleexpression )
                            {
                            // InternalGo.g:7104:6: (lv_expr1_4_0= ruleexpression )
                            // InternalGo.g:7105:7: lv_expr1_4_0= ruleexpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSliceAccess().getExpr1ExpressionParserRuleCall_1_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_29);
                            lv_expr1_4_0=ruleexpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSliceRule());
                              							}
                              							set(
                              								current,
                              								"expr1",
                              								lv_expr1_4_0,
                              								"org.xtext.Go.expression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,71,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSliceAccess().getColonKeyword_1_1_1());
                      				
                    }
                    // InternalGo.g:7126:5: ( (lv_expr2_6_0= ruleexpression ) )
                    // InternalGo.g:7127:6: (lv_expr2_6_0= ruleexpression )
                    {
                    // InternalGo.g:7127:6: (lv_expr2_6_0= ruleexpression )
                    // InternalGo.g:7128:7: lv_expr2_6_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSliceAccess().getExpr2ExpressionParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_29);
                    lv_expr2_6_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSliceRule());
                      							}
                      							set(
                      								current,
                      								"expr2",
                      								lv_expr2_6_0,
                      								"org.xtext.Go.expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,71,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSliceAccess().getColonKeyword_1_1_3());
                      				
                    }
                    // InternalGo.g:7149:5: ( (lv_expr3_8_0= ruleexpression ) )
                    // InternalGo.g:7150:6: (lv_expr3_8_0= ruleexpression )
                    {
                    // InternalGo.g:7150:6: (lv_expr3_8_0= ruleexpression )
                    // InternalGo.g:7151:7: lv_expr3_8_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSliceAccess().getExpr3ExpressionParserRuleCall_1_1_4_0());
                      						
                    }
                    pushFollow(FOLLOW_47);
                    lv_expr3_8_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSliceRule());
                      							}
                      							set(
                      								current,
                      								"expr3",
                      								lv_expr3_8_0,
                      								"org.xtext.Go.expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getSliceAccess().getRightSquareBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleslice"


    // $ANTLR start "entryRuletypeAssertion"
    // InternalGo.g:7178:1: entryRuletypeAssertion returns [EObject current=null] : iv_ruletypeAssertion= ruletypeAssertion EOF ;
    public final EObject entryRuletypeAssertion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeAssertion = null;


        try {
            // InternalGo.g:7178:54: (iv_ruletypeAssertion= ruletypeAssertion EOF )
            // InternalGo.g:7179:2: iv_ruletypeAssertion= ruletypeAssertion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeAssertionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeAssertion=ruletypeAssertion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeAssertion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeAssertion"


    // $ANTLR start "ruletypeAssertion"
    // InternalGo.g:7185:1: ruletypeAssertion returns [EObject current=null] : (otherlv_0= '.' otherlv_1= '(' ( (lv_type_2_0= ruletype ) ) otherlv_3= ')' ) ;
    public final EObject ruletypeAssertion() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_type_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7191:2: ( (otherlv_0= '.' otherlv_1= '(' ( (lv_type_2_0= ruletype ) ) otherlv_3= ')' ) )
            // InternalGo.g:7192:2: (otherlv_0= '.' otherlv_1= '(' ( (lv_type_2_0= ruletype ) ) otherlv_3= ')' )
            {
            // InternalGo.g:7192:2: (otherlv_0= '.' otherlv_1= '(' ( (lv_type_2_0= ruletype ) ) otherlv_3= ')' )
            // InternalGo.g:7193:3: otherlv_0= '.' otherlv_1= '(' ( (lv_type_2_0= ruletype ) ) otherlv_3= ')'
            {
            otherlv_0=(Token)match(input,47,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,45,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:7201:3: ( (lv_type_2_0= ruletype ) )
            // InternalGo.g:7202:4: (lv_type_2_0= ruletype )
            {
            // InternalGo.g:7202:4: (lv_type_2_0= ruletype )
            // InternalGo.g:7203:5: lv_type_2_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeAssertionAccess().getTypeTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_42);
            lv_type_2_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeAssertionRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeAssertion"


    // $ANTLR start "entryRulearguments"
    // InternalGo.g:7228:1: entryRulearguments returns [EObject current=null] : iv_rulearguments= rulearguments EOF ;
    public final EObject entryRulearguments() throws RecognitionException {
        EObject current = null;

        EObject iv_rulearguments = null;


        try {
            // InternalGo.g:7228:50: (iv_rulearguments= rulearguments EOF )
            // InternalGo.g:7229:2: iv_rulearguments= rulearguments EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulearguments=rulearguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulearguments; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulearguments"


    // $ANTLR start "rulearguments"
    // InternalGo.g:7235:1: rulearguments returns [EObject current=null] : (otherlv_0= '(' ( ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) ) (otherlv_5= '...' )? (otherlv_6= ',' )? )? otherlv_7= ')' ) ;
    public final EObject rulearguments() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_expressionList_1_0 = null;

        EObject lv_type_2_0 = null;

        EObject lv_expressionList_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7241:2: ( (otherlv_0= '(' ( ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) ) (otherlv_5= '...' )? (otherlv_6= ',' )? )? otherlv_7= ')' ) )
            // InternalGo.g:7242:2: (otherlv_0= '(' ( ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) ) (otherlv_5= '...' )? (otherlv_6= ',' )? )? otherlv_7= ')' )
            {
            // InternalGo.g:7242:2: (otherlv_0= '(' ( ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) ) (otherlv_5= '...' )? (otherlv_6= ',' )? )? otherlv_7= ')' )
            // InternalGo.g:7243:3: otherlv_0= '(' ( ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) ) (otherlv_5= '...' )? (otherlv_6= ',' )? )? otherlv_7= ')'
            {
            otherlv_0=(Token)match(input,45,FOLLOW_63); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalGo.g:7247:3: ( ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) ) (otherlv_5= '...' )? (otherlv_6= ',' )? )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( ((LA98_0>=RULE_IDENTIFIER && LA98_0<=RULE_STRING_LIT)||(LA98_0>=RULE_INT_LIT && LA98_0<=RULE_BINARY_OP)||LA98_0==45||LA98_0==47||LA98_0==50||LA98_0==52||LA98_0==56||(LA98_0>=59 && LA98_0<=60)||(LA98_0>=62 && LA98_0<=63)||LA98_0==68||LA98_0==87||(LA98_0>=89 && LA98_0<=94)) ) {
                alt98=1;
            }
            else if ( (LA98_0==46) ) {
                int LA98_2 = input.LA(2);

                if ( (synpred158_InternalGo()) ) {
                    alt98=1;
                }
            }
            switch (alt98) {
                case 1 :
                    // InternalGo.g:7248:4: ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) ) (otherlv_5= '...' )? (otherlv_6= ',' )?
                    {
                    // InternalGo.g:7248:4: ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) )
                    int alt95=2;
                    alt95 = dfa95.predict(input);
                    switch (alt95) {
                        case 1 :
                            // InternalGo.g:7249:5: ( (lv_expressionList_1_0= ruleexpressionList ) )
                            {
                            // InternalGo.g:7249:5: ( (lv_expressionList_1_0= ruleexpressionList ) )
                            // InternalGo.g:7250:6: (lv_expressionList_1_0= ruleexpressionList )
                            {
                            // InternalGo.g:7250:6: (lv_expressionList_1_0= ruleexpressionList )
                            // InternalGo.g:7251:7: lv_expressionList_1_0= ruleexpressionList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_64);
                            lv_expressionList_1_0=ruleexpressionList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getArgumentsRule());
                              							}
                              							set(
                              								current,
                              								"expressionList",
                              								lv_expressionList_1_0,
                              								"org.xtext.Go.expressionList");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:7269:5: ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? )
                            {
                            // InternalGo.g:7269:5: ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? )
                            // InternalGo.g:7270:6: ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )?
                            {
                            // InternalGo.g:7270:6: ( (lv_type_2_0= ruletype ) )
                            // InternalGo.g:7271:7: (lv_type_2_0= ruletype )
                            {
                            // InternalGo.g:7271:7: (lv_type_2_0= ruletype )
                            // InternalGo.g:7272:8: lv_type_2_0= ruletype
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_1_0_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_64);
                            lv_type_2_0=ruletype();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getArgumentsRule());
                              								}
                              								set(
                              									current,
                              									"type",
                              									lv_type_2_0,
                              									"org.xtext.Go.type");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalGo.g:7289:6: (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )?
                            int alt94=2;
                            int LA94_0 = input.LA(1);

                            if ( (LA94_0==50) ) {
                                int LA94_1 = input.LA(2);

                                if ( (synpred155_InternalGo()) ) {
                                    alt94=1;
                                }
                            }
                            switch (alt94) {
                                case 1 :
                                    // InternalGo.g:7290:7: otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) )
                                    {
                                    otherlv_3=(Token)match(input,50,FOLLOW_15); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_3, grammarAccess.getArgumentsAccess().getCommaKeyword_1_0_1_1_0());
                                      						
                                    }
                                    // InternalGo.g:7294:7: ( (lv_expressionList_4_0= ruleexpressionList ) )
                                    // InternalGo.g:7295:8: (lv_expressionList_4_0= ruleexpressionList )
                                    {
                                    // InternalGo.g:7295:8: (lv_expressionList_4_0= ruleexpressionList )
                                    // InternalGo.g:7296:9: lv_expressionList_4_0= ruleexpressionList
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_1_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_64);
                                    lv_expressionList_4_0=ruleexpressionList();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getArgumentsRule());
                                      									}
                                      									set(
                                      										current,
                                      										"expressionList",
                                      										lv_expressionList_4_0,
                                      										"org.xtext.Go.expressionList");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalGo.g:7316:4: (otherlv_5= '...' )?
                    int alt96=2;
                    int LA96_0 = input.LA(1);

                    if ( (LA96_0==92) ) {
                        alt96=1;
                    }
                    switch (alt96) {
                        case 1 :
                            // InternalGo.g:7317:5: otherlv_5= '...'
                            {
                            otherlv_5=(Token)match(input,92,FOLLOW_53); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalGo.g:7322:4: (otherlv_6= ',' )?
                    int alt97=2;
                    int LA97_0 = input.LA(1);

                    if ( (LA97_0==50) ) {
                        alt97=1;
                    }
                    switch (alt97) {
                        case 1 :
                            // InternalGo.g:7323:5: otherlv_6= ','
                            {
                            otherlv_6=(Token)match(input,50,FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getArgumentsAccess().getCommaKeyword_1_2());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulearguments"


    // $ANTLR start "entryRulemethodExpr"
    // InternalGo.g:7337:1: entryRulemethodExpr returns [EObject current=null] : iv_rulemethodExpr= rulemethodExpr EOF ;
    public final EObject entryRulemethodExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_rulemethodExpr = null;


        try {
            // InternalGo.g:7337:51: (iv_rulemethodExpr= rulemethodExpr EOF )
            // InternalGo.g:7338:2: iv_rulemethodExpr= rulemethodExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulemethodExpr=rulemethodExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulemethodExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulemethodExpr"


    // $ANTLR start "rulemethodExpr"
    // InternalGo.g:7344:1: rulemethodExpr returns [EObject current=null] : ( ( (lv_receiverType_0_0= rulereceiverType ) ) otherlv_1= '.' this_IDENTIFIER_2= RULE_IDENTIFIER ) ;
    public final EObject rulemethodExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_IDENTIFIER_2=null;
        EObject lv_receiverType_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7350:2: ( ( ( (lv_receiverType_0_0= rulereceiverType ) ) otherlv_1= '.' this_IDENTIFIER_2= RULE_IDENTIFIER ) )
            // InternalGo.g:7351:2: ( ( (lv_receiverType_0_0= rulereceiverType ) ) otherlv_1= '.' this_IDENTIFIER_2= RULE_IDENTIFIER )
            {
            // InternalGo.g:7351:2: ( ( (lv_receiverType_0_0= rulereceiverType ) ) otherlv_1= '.' this_IDENTIFIER_2= RULE_IDENTIFIER )
            // InternalGo.g:7352:3: ( (lv_receiverType_0_0= rulereceiverType ) ) otherlv_1= '.' this_IDENTIFIER_2= RULE_IDENTIFIER
            {
            // InternalGo.g:7352:3: ( (lv_receiverType_0_0= rulereceiverType ) )
            // InternalGo.g:7353:4: (lv_receiverType_0_0= rulereceiverType )
            {
            // InternalGo.g:7353:4: (lv_receiverType_0_0= rulereceiverType )
            // InternalGo.g:7354:5: lv_receiverType_0_0= rulereceiverType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodExprAccess().getReceiverTypeReceiverTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_40);
            lv_receiverType_0_0=rulereceiverType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodExprRule());
              					}
              					set(
              						current,
              						"receiverType",
              						lv_receiverType_0_0,
              						"org.xtext.Go.receiverType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,47,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMethodExprAccess().getFullStopKeyword_1());
              		
            }
            this_IDENTIFIER_2=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_IDENTIFIER_2, grammarAccess.getMethodExprAccess().getIDENTIFIERTerminalRuleCall_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulemethodExpr"


    // $ANTLR start "entryRulereceiverType"
    // InternalGo.g:7383:1: entryRulereceiverType returns [EObject current=null] : iv_rulereceiverType= rulereceiverType EOF ;
    public final EObject entryRulereceiverType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulereceiverType = null;


        try {
            // InternalGo.g:7383:53: (iv_rulereceiverType= rulereceiverType EOF )
            // InternalGo.g:7384:2: iv_rulereceiverType= rulereceiverType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReceiverTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulereceiverType=rulereceiverType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulereceiverType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulereceiverType"


    // $ANTLR start "rulereceiverType"
    // InternalGo.g:7390:1: rulereceiverType returns [EObject current=null] : ( ( (lv_typeName_0_0= ruletypeName ) ) | (otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')' ) | (otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')' ) ) ;
    public final EObject rulereceiverType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_typeName_0_0 = null;

        EObject lv_typeName_3_0 = null;

        EObject lv_receiverType_6_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7396:2: ( ( ( (lv_typeName_0_0= ruletypeName ) ) | (otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')' ) | (otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')' ) ) )
            // InternalGo.g:7397:2: ( ( (lv_typeName_0_0= ruletypeName ) ) | (otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')' ) | (otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')' ) )
            {
            // InternalGo.g:7397:2: ( ( (lv_typeName_0_0= ruletypeName ) ) | (otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')' ) | (otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')' ) )
            int alt99=3;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==RULE_IDENTIFIER) ) {
                alt99=1;
            }
            else if ( (LA99_0==45) ) {
                int LA99_2 = input.LA(2);

                if ( (LA99_2==RULE_IDENTIFIER||LA99_2==45) ) {
                    alt99=3;
                }
                else if ( (LA99_2==63) ) {
                    alt99=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 99, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }
            switch (alt99) {
                case 1 :
                    // InternalGo.g:7398:3: ( (lv_typeName_0_0= ruletypeName ) )
                    {
                    // InternalGo.g:7398:3: ( (lv_typeName_0_0= ruletypeName ) )
                    // InternalGo.g:7399:4: (lv_typeName_0_0= ruletypeName )
                    {
                    // InternalGo.g:7399:4: (lv_typeName_0_0= ruletypeName )
                    // InternalGo.g:7400:5: lv_typeName_0_0= ruletypeName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReceiverTypeAccess().getTypeNameTypeNameParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeName_0_0=ruletypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReceiverTypeRule());
                      					}
                      					set(
                      						current,
                      						"typeName",
                      						lv_typeName_0_0,
                      						"org.xtext.Go.typeName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7418:3: (otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')' )
                    {
                    // InternalGo.g:7418:3: (otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')' )
                    // InternalGo.g:7419:4: otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')'
                    {
                    otherlv_1=(Token)match(input,45,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getReceiverTypeAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    otherlv_2=(Token)match(input,63,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getReceiverTypeAccess().getAsteriskKeyword_1_1());
                      			
                    }
                    // InternalGo.g:7427:4: ( (lv_typeName_3_0= ruletypeName ) )
                    // InternalGo.g:7428:5: (lv_typeName_3_0= ruletypeName )
                    {
                    // InternalGo.g:7428:5: (lv_typeName_3_0= ruletypeName )
                    // InternalGo.g:7429:6: lv_typeName_3_0= ruletypeName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReceiverTypeAccess().getTypeNameTypeNameParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_42);
                    lv_typeName_3_0=ruletypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReceiverTypeRule());
                      						}
                      						set(
                      							current,
                      							"typeName",
                      							lv_typeName_3_0,
                      							"org.xtext.Go.typeName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getReceiverTypeAccess().getRightParenthesisKeyword_1_3());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:7452:3: (otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')' )
                    {
                    // InternalGo.g:7452:3: (otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')' )
                    // InternalGo.g:7453:4: otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')'
                    {
                    otherlv_5=(Token)match(input,45,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getReceiverTypeAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalGo.g:7457:4: ( (lv_receiverType_6_0= rulereceiverType ) )
                    // InternalGo.g:7458:5: (lv_receiverType_6_0= rulereceiverType )
                    {
                    // InternalGo.g:7458:5: (lv_receiverType_6_0= rulereceiverType )
                    // InternalGo.g:7459:6: lv_receiverType_6_0= rulereceiverType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReceiverTypeAccess().getReceiverTypeReceiverTypeParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_42);
                    lv_receiverType_6_0=rulereceiverType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReceiverTypeRule());
                      						}
                      						set(
                      							current,
                      							"receiverType",
                      							lv_receiverType_6_0,
                      							"org.xtext.Go.receiverType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getReceiverTypeAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulereceiverType"


    // $ANTLR start "entryRuleexpression"
    // InternalGo.g:7485:1: entryRuleexpression returns [EObject current=null] : iv_ruleexpression= ruleexpression EOF ;
    public final EObject entryRuleexpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexpression = null;


        try {
            // InternalGo.g:7485:51: (iv_ruleexpression= ruleexpression EOF )
            // InternalGo.g:7486:2: iv_ruleexpression= ruleexpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexpression=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexpression"


    // $ANTLR start "ruleexpression"
    // InternalGo.g:7492:1: ruleexpression returns [EObject current=null] : ( ( (lv_unaryExpr_0_0= ruleunaryExpr ) ) ( (lv_expressionMatched_1_0= ruleexpressionMatched ) ) ) ;
    public final EObject ruleexpression() throws RecognitionException {
        EObject current = null;

        EObject lv_unaryExpr_0_0 = null;

        EObject lv_expressionMatched_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7498:2: ( ( ( (lv_unaryExpr_0_0= ruleunaryExpr ) ) ( (lv_expressionMatched_1_0= ruleexpressionMatched ) ) ) )
            // InternalGo.g:7499:2: ( ( (lv_unaryExpr_0_0= ruleunaryExpr ) ) ( (lv_expressionMatched_1_0= ruleexpressionMatched ) ) )
            {
            // InternalGo.g:7499:2: ( ( (lv_unaryExpr_0_0= ruleunaryExpr ) ) ( (lv_expressionMatched_1_0= ruleexpressionMatched ) ) )
            // InternalGo.g:7500:3: ( (lv_unaryExpr_0_0= ruleunaryExpr ) ) ( (lv_expressionMatched_1_0= ruleexpressionMatched ) )
            {
            // InternalGo.g:7500:3: ( (lv_unaryExpr_0_0= ruleunaryExpr ) )
            // InternalGo.g:7501:4: (lv_unaryExpr_0_0= ruleunaryExpr )
            {
            // InternalGo.g:7501:4: (lv_unaryExpr_0_0= ruleunaryExpr )
            // InternalGo.g:7502:5: lv_unaryExpr_0_0= ruleunaryExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionAccess().getUnaryExprUnaryExprParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_66);
            lv_unaryExpr_0_0=ruleunaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionRule());
              					}
              					set(
              						current,
              						"unaryExpr",
              						lv_unaryExpr_0_0,
              						"org.xtext.Go.unaryExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:7519:3: ( (lv_expressionMatched_1_0= ruleexpressionMatched ) )
            // InternalGo.g:7520:4: (lv_expressionMatched_1_0= ruleexpressionMatched )
            {
            // InternalGo.g:7520:4: (lv_expressionMatched_1_0= ruleexpressionMatched )
            // InternalGo.g:7521:5: lv_expressionMatched_1_0= ruleexpressionMatched
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionAccess().getExpressionMatchedExpressionMatchedParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expressionMatched_1_0=ruleexpressionMatched();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionRule());
              					}
              					set(
              						current,
              						"expressionMatched",
              						lv_expressionMatched_1_0,
              						"org.xtext.Go.expressionMatched");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexpression"


    // $ANTLR start "entryRuleexpressionMatched"
    // InternalGo.g:7542:1: entryRuleexpressionMatched returns [EObject current=null] : iv_ruleexpressionMatched= ruleexpressionMatched EOF ;
    public final EObject entryRuleexpressionMatched() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexpressionMatched = null;


        try {
            // InternalGo.g:7542:58: (iv_ruleexpressionMatched= ruleexpressionMatched EOF )
            // InternalGo.g:7543:2: iv_ruleexpressionMatched= ruleexpressionMatched EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionMatchedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexpressionMatched=ruleexpressionMatched();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpressionMatched; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexpressionMatched"


    // $ANTLR start "ruleexpressionMatched"
    // InternalGo.g:7549:1: ruleexpressionMatched returns [EObject current=null] : (this_BINARY_OP_0= RULE_BINARY_OP ( (lv_expression_1_0= ruleexpression ) ) )? ;
    public final EObject ruleexpressionMatched() throws RecognitionException {
        EObject current = null;

        Token this_BINARY_OP_0=null;
        EObject lv_expression_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7555:2: ( (this_BINARY_OP_0= RULE_BINARY_OP ( (lv_expression_1_0= ruleexpression ) ) )? )
            // InternalGo.g:7556:2: (this_BINARY_OP_0= RULE_BINARY_OP ( (lv_expression_1_0= ruleexpression ) ) )?
            {
            // InternalGo.g:7556:2: (this_BINARY_OP_0= RULE_BINARY_OP ( (lv_expression_1_0= ruleexpression ) ) )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==RULE_BINARY_OP) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalGo.g:7557:3: this_BINARY_OP_0= RULE_BINARY_OP ( (lv_expression_1_0= ruleexpression ) )
                    {
                    this_BINARY_OP_0=(Token)match(input,RULE_BINARY_OP,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_BINARY_OP_0, grammarAccess.getExpressionMatchedAccess().getBINARY_OPTerminalRuleCall_0());
                      		
                    }
                    // InternalGo.g:7561:3: ( (lv_expression_1_0= ruleexpression ) )
                    // InternalGo.g:7562:4: (lv_expression_1_0= ruleexpression )
                    {
                    // InternalGo.g:7562:4: (lv_expression_1_0= ruleexpression )
                    // InternalGo.g:7563:5: lv_expression_1_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExpressionMatchedAccess().getExpressionExpressionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_1_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExpressionMatchedRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_1_0,
                      						"org.xtext.Go.expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexpressionMatched"


    // $ANTLR start "entryRuleunaryExpr"
    // InternalGo.g:7584:1: entryRuleunaryExpr returns [EObject current=null] : iv_ruleunaryExpr= ruleunaryExpr EOF ;
    public final EObject entryRuleunaryExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleunaryExpr = null;


        try {
            // InternalGo.g:7584:50: (iv_ruleunaryExpr= ruleunaryExpr EOF )
            // InternalGo.g:7585:2: iv_ruleunaryExpr= ruleunaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleunaryExpr=ruleunaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleunaryExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleunaryExpr"


    // $ANTLR start "ruleunaryExpr"
    // InternalGo.g:7591:1: ruleunaryExpr returns [EObject current=null] : ( ( (lv_primaryExpr_0_0= ruleprimaryExpr ) ) | ( (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) ) ) ) ;
    public final EObject ruleunaryExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_primaryExpr_0_0 = null;

        EObject lv_unaryExpr_8_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7597:2: ( ( ( (lv_primaryExpr_0_0= ruleprimaryExpr ) ) | ( (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) ) ) ) )
            // InternalGo.g:7598:2: ( ( (lv_primaryExpr_0_0= ruleprimaryExpr ) ) | ( (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) ) ) )
            {
            // InternalGo.g:7598:2: ( ( (lv_primaryExpr_0_0= ruleprimaryExpr ) ) | ( (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) ) ) )
            int alt102=2;
            switch ( input.LA(1) ) {
            case EOF:
            case RULE_IDENTIFIER:
            case RULE_STRING_LIT:
            case RULE_INT_LIT:
            case RULE_FLOAT_LIT:
            case RULE_IMAGINARY_LIT:
            case RULE_RUNE_LIT:
            case RULE_BINARY_OP:
            case 45:
            case 46:
            case 47:
            case 49:
            case 50:
            case 52:
            case 54:
            case 55:
            case 57:
            case 58:
            case 61:
            case 64:
            case 65:
            case 66:
            case 67:
            case 69:
            case 71:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 95:
                {
                alt102=1;
                }
                break;
            case 63:
                {
                int LA102_2 = input.LA(2);

                if ( (synpred162_InternalGo()) ) {
                    alt102=1;
                }
                else if ( (true) ) {
                    alt102=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 102, 2, input);

                    throw nvae;
                }
                }
                break;
            case 56:
                {
                int LA102_3 = input.LA(2);

                if ( (synpred162_InternalGo()) ) {
                    alt102=1;
                }
                else if ( (true) ) {
                    alt102=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 102, 3, input);

                    throw nvae;
                }
                }
                break;
            case 59:
                {
                int LA102_4 = input.LA(2);

                if ( (synpred162_InternalGo()) ) {
                    alt102=1;
                }
                else if ( (true) ) {
                    alt102=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 102, 4, input);

                    throw nvae;
                }
                }
                break;
            case 60:
                {
                int LA102_5 = input.LA(2);

                if ( (synpred162_InternalGo()) ) {
                    alt102=1;
                }
                else if ( (true) ) {
                    alt102=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 102, 5, input);

                    throw nvae;
                }
                }
                break;
            case 62:
                {
                int LA102_6 = input.LA(2);

                if ( (synpred162_InternalGo()) ) {
                    alt102=1;
                }
                else if ( (true) ) {
                    alt102=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 102, 6, input);

                    throw nvae;
                }
                }
                break;
            case 68:
                {
                int LA102_7 = input.LA(2);

                if ( (synpred162_InternalGo()) ) {
                    alt102=1;
                }
                else if ( (true) ) {
                    alt102=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 102, 7, input);

                    throw nvae;
                }
                }
                break;
            case 94:
                {
                alt102=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 102, 0, input);

                throw nvae;
            }

            switch (alt102) {
                case 1 :
                    // InternalGo.g:7599:3: ( (lv_primaryExpr_0_0= ruleprimaryExpr ) )
                    {
                    // InternalGo.g:7599:3: ( (lv_primaryExpr_0_0= ruleprimaryExpr ) )
                    // InternalGo.g:7600:4: (lv_primaryExpr_0_0= ruleprimaryExpr )
                    {
                    // InternalGo.g:7600:4: (lv_primaryExpr_0_0= ruleprimaryExpr )
                    // InternalGo.g:7601:5: lv_primaryExpr_0_0= ruleprimaryExpr
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExpr_0_0=ruleprimaryExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnaryExprRule());
                      					}
                      					set(
                      						current,
                      						"primaryExpr",
                      						lv_primaryExpr_0_0,
                      						"org.xtext.Go.primaryExpr");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7619:3: ( (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) ) )
                    {
                    // InternalGo.g:7619:3: ( (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) ) )
                    // InternalGo.g:7620:4: (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) )
                    {
                    // InternalGo.g:7620:4: (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' )
                    int alt101=7;
                    switch ( input.LA(1) ) {
                    case 59:
                        {
                        alt101=1;
                        }
                        break;
                    case 60:
                        {
                        alt101=2;
                        }
                        break;
                    case 94:
                        {
                        alt101=3;
                        }
                        break;
                    case 62:
                        {
                        alt101=4;
                        }
                        break;
                    case 63:
                        {
                        alt101=5;
                        }
                        break;
                    case 68:
                        {
                        alt101=6;
                        }
                        break;
                    case 56:
                        {
                        alt101=7;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 101, 0, input);

                        throw nvae;
                    }

                    switch (alt101) {
                        case 1 :
                            // InternalGo.g:7621:5: otherlv_1= '+'
                            {
                            otherlv_1=(Token)match(input,59,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getUnaryExprAccess().getPlusSignKeyword_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalGo.g:7626:5: otherlv_2= '-'
                            {
                            otherlv_2=(Token)match(input,60,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getUnaryExprAccess().getHyphenMinusKeyword_1_0_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalGo.g:7631:5: otherlv_3= '!'
                            {
                            otherlv_3=(Token)match(input,94,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getUnaryExprAccess().getExclamationMarkKeyword_1_0_2());
                              				
                            }

                            }
                            break;
                        case 4 :
                            // InternalGo.g:7636:5: otherlv_4= '^'
                            {
                            otherlv_4=(Token)match(input,62,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getUnaryExprAccess().getCircumflexAccentKeyword_1_0_3());
                              				
                            }

                            }
                            break;
                        case 5 :
                            // InternalGo.g:7641:5: otherlv_5= '*'
                            {
                            otherlv_5=(Token)match(input,63,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getUnaryExprAccess().getAsteriskKeyword_1_0_4());
                              				
                            }

                            }
                            break;
                        case 6 :
                            // InternalGo.g:7646:5: otherlv_6= '&'
                            {
                            otherlv_6=(Token)match(input,68,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getUnaryExprAccess().getAmpersandKeyword_1_0_5());
                              				
                            }

                            }
                            break;
                        case 7 :
                            // InternalGo.g:7651:5: otherlv_7= '<-'
                            {
                            otherlv_7=(Token)match(input,56,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getUnaryExprAccess().getLessThanSignHyphenMinusKeyword_1_0_6());
                              				
                            }

                            }
                            break;

                    }

                    // InternalGo.g:7656:4: ( (lv_unaryExpr_8_0= ruleunaryExpr ) )
                    // InternalGo.g:7657:5: (lv_unaryExpr_8_0= ruleunaryExpr )
                    {
                    // InternalGo.g:7657:5: (lv_unaryExpr_8_0= ruleunaryExpr )
                    // InternalGo.g:7658:6: lv_unaryExpr_8_0= ruleunaryExpr
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExprAccess().getUnaryExprUnaryExprParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_unaryExpr_8_0=ruleunaryExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExprRule());
                      						}
                      						set(
                      							current,
                      							"unaryExpr",
                      							lv_unaryExpr_8_0,
                      							"org.xtext.Go.unaryExpr");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleunaryExpr"


    // $ANTLR start "entryRuleconversion"
    // InternalGo.g:7680:1: entryRuleconversion returns [EObject current=null] : iv_ruleconversion= ruleconversion EOF ;
    public final EObject entryRuleconversion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleconversion = null;


        try {
            // InternalGo.g:7680:51: (iv_ruleconversion= ruleconversion EOF )
            // InternalGo.g:7681:2: iv_ruleconversion= ruleconversion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConversionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleconversion=ruleconversion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleconversion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleconversion"


    // $ANTLR start "ruleconversion"
    // InternalGo.g:7687:1: ruleconversion returns [EObject current=null] : ( ( (lv_type_0_0= ruletype ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) (otherlv_3= ',' )? otherlv_4= ')' ) ;
    public final EObject ruleconversion() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_type_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7693:2: ( ( ( (lv_type_0_0= ruletype ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) (otherlv_3= ',' )? otherlv_4= ')' ) )
            // InternalGo.g:7694:2: ( ( (lv_type_0_0= ruletype ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) (otherlv_3= ',' )? otherlv_4= ')' )
            {
            // InternalGo.g:7694:2: ( ( (lv_type_0_0= ruletype ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) (otherlv_3= ',' )? otherlv_4= ')' )
            // InternalGo.g:7695:3: ( (lv_type_0_0= ruletype ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) (otherlv_3= ',' )? otherlv_4= ')'
            {
            // InternalGo.g:7695:3: ( (lv_type_0_0= ruletype ) )
            // InternalGo.g:7696:4: (lv_type_0_0= ruletype )
            {
            // InternalGo.g:7696:4: (lv_type_0_0= ruletype )
            // InternalGo.g:7697:5: lv_type_0_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_18);
            lv_type_0_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConversionRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_0_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,45,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:7718:3: ( (lv_expression_2_0= ruleexpression ) )
            // InternalGo.g:7719:4: (lv_expression_2_0= ruleexpression )
            {
            // InternalGo.g:7719:4: (lv_expression_2_0= ruleexpression )
            // InternalGo.g:7720:5: lv_expression_2_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_53);
            lv_expression_2_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConversionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:7737:3: (otherlv_3= ',' )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==50) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalGo.g:7738:4: otherlv_3= ','
                    {
                    otherlv_3=(Token)match(input,50,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getConversionAccess().getCommaKeyword_3());
                      			
                    }

                    }
                    break;

            }

            otherlv_4=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getConversionAccess().getRightParenthesisKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleconversion"


    // $ANTLR start "entryRuleeos"
    // InternalGo.g:7751:1: entryRuleeos returns [String current=null] : iv_ruleeos= ruleeos EOF ;
    public final String entryRuleeos() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleeos = null;


        try {
            // InternalGo.g:7751:43: (iv_ruleeos= ruleeos EOF )
            // InternalGo.g:7752:2: iv_ruleeos= ruleeos EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEosRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleeos=ruleeos();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleeos.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleeos"


    // $ANTLR start "ruleeos"
    // InternalGo.g:7758:1: ruleeos returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= ';' ;
    public final AntlrDatatypeRuleToken ruleeos() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:7764:2: (kw= ';' )
            // InternalGo.g:7765:2: kw= ';'
            {
            kw=(Token)match(input,95,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getEosAccess().getSemicolonKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleeos"

    // $ANTLR start synpred18_InternalGo
    public final void synpred18_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_expr_2_0 = null;


        // InternalGo.g:840:4: (otherlv_1= ',' ( (lv_expr_2_0= ruleexpression ) ) )
        // InternalGo.g:840:4: otherlv_1= ',' ( (lv_expr_2_0= ruleexpression ) )
        {
        otherlv_1=(Token)match(input,50,FOLLOW_15); if (state.failed) return ;
        // InternalGo.g:844:4: ( (lv_expr_2_0= ruleexpression ) )
        // InternalGo.g:845:5: (lv_expr_2_0= ruleexpression )
        {
        // InternalGo.g:845:5: (lv_expr_2_0= ruleexpression )
        // InternalGo.g:846:6: lv_expr_2_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExpressionListAccess().getExprExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_expr_2_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred18_InternalGo

    // $ANTLR start synpred21_InternalGo
    public final void synpred21_InternalGo_fragment() throws RecognitionException {   
        EObject lv_func_2_0 = null;


        // InternalGo.g:1048:4: ( ( (lv_func_2_0= rulefunction ) ) )
        // InternalGo.g:1048:4: ( (lv_func_2_0= rulefunction ) )
        {
        // InternalGo.g:1048:4: ( (lv_func_2_0= rulefunction ) )
        // InternalGo.g:1049:5: (lv_func_2_0= rulefunction )
        {
        // InternalGo.g:1049:5: (lv_func_2_0= rulefunction )
        // InternalGo.g:1050:6: lv_func_2_0= rulefunction
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFunctionDeclAccess().getFuncFunctionParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_func_2_0=rulefunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred21_InternalGo

    // $ANTLR start synpred22_InternalGo
    public final void synpred22_InternalGo_fragment() throws RecognitionException {   
        EObject lv_func_3_0 = null;


        // InternalGo.g:1206:4: ( ( (lv_func_3_0= rulefunction ) ) )
        // InternalGo.g:1206:4: ( (lv_func_3_0= rulefunction ) )
        {
        // InternalGo.g:1206:4: ( (lv_func_3_0= rulefunction ) )
        // InternalGo.g:1207:5: (lv_func_3_0= rulefunction )
        {
        // InternalGo.g:1207:5: (lv_func_3_0= rulefunction )
        // InternalGo.g:1208:6: lv_func_3_0= rulefunction
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getMethodDeclAccess().getFuncFunctionParserRuleCall_3_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_func_3_0=rulefunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred22_InternalGo

    // $ANTLR start synpred42_InternalGo
    public final void synpred42_InternalGo_fragment() throws RecognitionException {   
        EObject lv_content_0_0 = null;


        // InternalGo.g:1911:3: ( ( (lv_content_0_0= rulesendStmt ) ) )
        // InternalGo.g:1911:3: ( (lv_content_0_0= rulesendStmt ) )
        {
        // InternalGo.g:1911:3: ( (lv_content_0_0= rulesendStmt ) )
        // InternalGo.g:1912:4: (lv_content_0_0= rulesendStmt )
        {
        // InternalGo.g:1912:4: (lv_content_0_0= rulesendStmt )
        // InternalGo.g:1913:5: lv_content_0_0= rulesendStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getContentSendStmtParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_content_0_0=rulesendStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred42_InternalGo

    // $ANTLR start synpred43_InternalGo
    public final void synpred43_InternalGo_fragment() throws RecognitionException {   
        EObject lv_content_1_0 = null;


        // InternalGo.g:1931:3: ( ( (lv_content_1_0= ruleexpressionStmt ) ) )
        // InternalGo.g:1931:3: ( (lv_content_1_0= ruleexpressionStmt ) )
        {
        // InternalGo.g:1931:3: ( (lv_content_1_0= ruleexpressionStmt ) )
        // InternalGo.g:1932:4: (lv_content_1_0= ruleexpressionStmt )
        {
        // InternalGo.g:1932:4: (lv_content_1_0= ruleexpressionStmt )
        // InternalGo.g:1933:5: lv_content_1_0= ruleexpressionStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getContentExpressionStmtParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_content_1_0=ruleexpressionStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred43_InternalGo

    // $ANTLR start synpred44_InternalGo
    public final void synpred44_InternalGo_fragment() throws RecognitionException {   
        EObject lv_content_2_0 = null;


        // InternalGo.g:1951:3: ( ( (lv_content_2_0= ruleincDecStmt ) ) )
        // InternalGo.g:1951:3: ( (lv_content_2_0= ruleincDecStmt ) )
        {
        // InternalGo.g:1951:3: ( (lv_content_2_0= ruleincDecStmt ) )
        // InternalGo.g:1952:4: (lv_content_2_0= ruleincDecStmt )
        {
        // InternalGo.g:1952:4: (lv_content_2_0= ruleincDecStmt )
        // InternalGo.g:1953:5: lv_content_2_0= ruleincDecStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getContentIncDecStmtParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_content_2_0=ruleincDecStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred44_InternalGo

    // $ANTLR start synpred45_InternalGo
    public final void synpred45_InternalGo_fragment() throws RecognitionException {   
        EObject lv_content_3_0 = null;


        // InternalGo.g:1971:3: ( ( (lv_content_3_0= ruleassignment ) ) )
        // InternalGo.g:1971:3: ( (lv_content_3_0= ruleassignment ) )
        {
        // InternalGo.g:1971:3: ( (lv_content_3_0= ruleassignment ) )
        // InternalGo.g:1972:4: (lv_content_3_0= ruleassignment )
        {
        // InternalGo.g:1972:4: (lv_content_3_0= ruleassignment )
        // InternalGo.g:1973:5: lv_content_3_0= ruleassignment
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getContentAssignmentParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_content_3_0=ruleassignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred45_InternalGo

    // $ANTLR start synpred46_InternalGo
    public final void synpred46_InternalGo_fragment() throws RecognitionException {   
        EObject lv_content_4_0 = null;


        // InternalGo.g:1991:3: ( ( (lv_content_4_0= ruleshortVarDecl ) ) )
        // InternalGo.g:1991:3: ( (lv_content_4_0= ruleshortVarDecl ) )
        {
        // InternalGo.g:1991:3: ( (lv_content_4_0= ruleshortVarDecl ) )
        // InternalGo.g:1992:4: (lv_content_4_0= ruleshortVarDecl )
        {
        // InternalGo.g:1992:4: (lv_content_4_0= ruleshortVarDecl )
        // InternalGo.g:1993:5: lv_content_4_0= ruleshortVarDecl
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getContentShortVarDeclParserRuleCall_4_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_content_4_0=ruleshortVarDecl();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred46_InternalGo

    // $ANTLR start synpred59_InternalGo
    public final void synpred59_InternalGo_fragment() throws RecognitionException {   
        EObject lv_exprList_1_0 = null;


        // InternalGo.g:2523:4: ( (lv_exprList_1_0= ruleexpressionList ) )
        // InternalGo.g:2523:4: (lv_exprList_1_0= ruleexpressionList )
        {
        // InternalGo.g:2523:4: (lv_exprList_1_0= ruleexpressionList )
        // InternalGo.g:2524:5: lv_exprList_1_0= ruleexpressionList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getReturnStmtAccess().getExprListExpressionListParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_exprList_1_0=ruleexpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred59_InternalGo

    // $ANTLR start synpred62_InternalGo
    public final void synpred62_InternalGo_fragment() throws RecognitionException {   
        EObject lv_simplStatement_1_0 = null;


        // InternalGo.g:2761:4: ( ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos )
        // InternalGo.g:2761:4: ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos
        {
        // InternalGo.g:2761:4: ( (lv_simplStatement_1_0= rulesimpleStmt ) )
        // InternalGo.g:2762:5: (lv_simplStatement_1_0= rulesimpleStmt )
        {
        // InternalGo.g:2762:5: (lv_simplStatement_1_0= rulesimpleStmt )
        // InternalGo.g:2763:6: lv_simplStatement_1_0= rulesimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIfStmtAccess().getSimplStatementSimpleStmtParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_5);
        lv_simplStatement_1_0=rulesimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleeos();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred62_InternalGo

    // $ANTLR start synpred65_InternalGo
    public final void synpred65_InternalGo_fragment() throws RecognitionException {   
        EObject lv_statement_0_0 = null;


        // InternalGo.g:2895:3: ( ( (lv_statement_0_0= ruleexprSwitchStmt ) ) )
        // InternalGo.g:2895:3: ( (lv_statement_0_0= ruleexprSwitchStmt ) )
        {
        // InternalGo.g:2895:3: ( (lv_statement_0_0= ruleexprSwitchStmt ) )
        // InternalGo.g:2896:4: (lv_statement_0_0= ruleexprSwitchStmt )
        {
        // InternalGo.g:2896:4: (lv_statement_0_0= ruleexprSwitchStmt )
        // InternalGo.g:2897:5: lv_statement_0_0= ruleexprSwitchStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSwitchStmtAccess().getStatementExprSwitchStmtParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_statement_0_0=ruleexprSwitchStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred65_InternalGo

    // $ANTLR start synpred66_InternalGo
    public final void synpred66_InternalGo_fragment() throws RecognitionException {   
        EObject lv_simpleStmt_1_0 = null;


        // InternalGo.g:2958:4: ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) ruleeos )
        // InternalGo.g:2958:4: ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) ruleeos
        {
        // InternalGo.g:2958:4: ( (lv_simpleStmt_1_0= rulesimpleStmt ) )
        // InternalGo.g:2959:5: (lv_simpleStmt_1_0= rulesimpleStmt )
        {
        // InternalGo.g:2959:5: (lv_simpleStmt_1_0= rulesimpleStmt )
        // InternalGo.g:2960:6: lv_simpleStmt_1_0= rulesimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_5);
        lv_simpleStmt_1_0=rulesimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleeos();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred66_InternalGo

    // $ANTLR start synpred67_InternalGo
    public final void synpred67_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expr_3_0 = null;


        // InternalGo.g:2989:4: ( (lv_expr_3_0= ruleexpression ) )
        // InternalGo.g:2989:4: (lv_expr_3_0= ruleexpression )
        {
        // InternalGo.g:2989:4: (lv_expr_3_0= ruleexpression )
        // InternalGo.g:2990:5: lv_expr_3_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExprExpressionParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_expr_3_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred67_InternalGo

    // $ANTLR start synpred70_InternalGo
    public final void synpred70_InternalGo_fragment() throws RecognitionException {   
        EObject lv_simpleStatement_1_0 = null;


        // InternalGo.g:3168:4: ( ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos )
        // InternalGo.g:3168:4: ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos
        {
        // InternalGo.g:3168:4: ( (lv_simpleStatement_1_0= rulesimpleStmt ) )
        // InternalGo.g:3169:5: (lv_simpleStatement_1_0= rulesimpleStmt )
        {
        // InternalGo.g:3169:5: (lv_simpleStatement_1_0= rulesimpleStmt )
        // InternalGo.g:3170:6: lv_simpleStatement_1_0= rulesimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getSimpleStatementSimpleStmtParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_5);
        lv_simpleStatement_1_0=rulesimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleeos();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred70_InternalGo

    // $ANTLR start synpred76_InternalGo
    public final void synpred76_InternalGo_fragment() throws RecognitionException {   
        EObject lv_statement_1_0 = null;


        // InternalGo.g:3631:5: ( ( (lv_statement_1_0= rulesendStmt ) ) )
        // InternalGo.g:3631:5: ( (lv_statement_1_0= rulesendStmt ) )
        {
        // InternalGo.g:3631:5: ( (lv_statement_1_0= rulesendStmt ) )
        // InternalGo.g:3632:6: (lv_statement_1_0= rulesendStmt )
        {
        // InternalGo.g:3632:6: (lv_statement_1_0= rulesendStmt )
        // InternalGo.g:3633:7: lv_statement_1_0= rulesendStmt
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getCommCaseAccess().getStatementSendStmtParserRuleCall_0_1_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_statement_1_0=rulesendStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred76_InternalGo

    // $ANTLR start synpred78_InternalGo
    public final void synpred78_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_exprList_0_0 = null;


        // InternalGo.g:3697:4: ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) )
        // InternalGo.g:3697:4: ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' )
        {
        // InternalGo.g:3697:4: ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' )
        // InternalGo.g:3698:5: ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '='
        {
        // InternalGo.g:3698:5: ( (lv_exprList_0_0= ruleexpressionList ) )
        // InternalGo.g:3699:6: (lv_exprList_0_0= ruleexpressionList )
        {
        // InternalGo.g:3699:6: (lv_exprList_0_0= ruleexpressionList )
        // InternalGo.g:3700:7: lv_exprList_0_0= ruleexpressionList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getRecvStmtAccess().getExprListExpressionListParserRuleCall_0_0_0_0());
          						
        }
        pushFollow(FOLLOW_14);
        lv_exprList_0_0=ruleexpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,49,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred78_InternalGo

    // $ANTLR start synpred79_InternalGo
    public final void synpred79_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_idList_2_0 = null;


        // InternalGo.g:3723:4: ( ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )
        // InternalGo.g:3723:4: ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' )
        {
        // InternalGo.g:3723:4: ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' )
        // InternalGo.g:3724:5: ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':='
        {
        // InternalGo.g:3724:5: ( (lv_idList_2_0= ruleidentifierList ) )
        // InternalGo.g:3725:6: (lv_idList_2_0= ruleidentifierList )
        {
        // InternalGo.g:3725:6: (lv_idList_2_0= ruleidentifierList )
        // InternalGo.g:3726:7: lv_idList_2_0= ruleidentifierList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getRecvStmtAccess().getIdListIdentifierListParserRuleCall_0_1_0_0());
          						
        }
        pushFollow(FOLLOW_28);
        lv_idList_2_0=ruleidentifierList();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,70,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred79_InternalGo

    // $ANTLR start synpred80_InternalGo
    public final void synpred80_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expr_1_0 = null;


        // InternalGo.g:3792:4: ( ( (lv_expr_1_0= ruleexpression ) ) )
        // InternalGo.g:3792:4: ( (lv_expr_1_0= ruleexpression ) )
        {
        // InternalGo.g:3792:4: ( (lv_expr_1_0= ruleexpression ) )
        // InternalGo.g:3793:5: (lv_expr_1_0= ruleexpression )
        {
        // InternalGo.g:3793:5: (lv_expr_1_0= ruleexpression )
        // InternalGo.g:3794:6: lv_expr_1_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getExprExpressionParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_expr_1_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred80_InternalGo

    // $ANTLR start synpred81_InternalGo
    public final void synpred81_InternalGo_fragment() throws RecognitionException {   
        EObject lv_clause_2_0 = null;


        // InternalGo.g:3812:4: ( ( (lv_clause_2_0= ruleforClause ) ) )
        // InternalGo.g:3812:4: ( (lv_clause_2_0= ruleforClause ) )
        {
        // InternalGo.g:3812:4: ( (lv_clause_2_0= ruleforClause ) )
        // InternalGo.g:3813:5: (lv_clause_2_0= ruleforClause )
        {
        // InternalGo.g:3813:5: (lv_clause_2_0= ruleforClause )
        // InternalGo.g:3814:6: lv_clause_2_0= ruleforClause
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getClauseForClauseParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_clause_2_0=ruleforClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred81_InternalGo

    // $ANTLR start synpred82_InternalGo
    public final void synpred82_InternalGo_fragment() throws RecognitionException {   
        EObject lv_clause_3_0 = null;


        // InternalGo.g:3832:4: ( ( (lv_clause_3_0= rulerangeClause ) ) )
        // InternalGo.g:3832:4: ( (lv_clause_3_0= rulerangeClause ) )
        {
        // InternalGo.g:3832:4: ( (lv_clause_3_0= rulerangeClause ) )
        // InternalGo.g:3833:5: (lv_clause_3_0= rulerangeClause )
        {
        // InternalGo.g:3833:5: (lv_clause_3_0= rulerangeClause )
        // InternalGo.g:3834:6: lv_clause_3_0= rulerangeClause
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getClauseRangeClauseParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_clause_3_0=rulerangeClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred82_InternalGo

    // $ANTLR start synpred83_InternalGo
    public final void synpred83_InternalGo_fragment() throws RecognitionException {   
        EObject lv_statement1_0_0 = null;


        // InternalGo.g:3891:4: ( (lv_statement1_0_0= rulesimpleStmt ) )
        // InternalGo.g:3891:4: (lv_statement1_0_0= rulesimpleStmt )
        {
        // InternalGo.g:3891:4: (lv_statement1_0_0= rulesimpleStmt )
        // InternalGo.g:3892:5: lv_statement1_0_0= rulesimpleStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getForClauseAccess().getStatement1SimpleStmtParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_statement1_0_0=rulesimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred83_InternalGo

    // $ANTLR start synpred84_InternalGo
    public final void synpred84_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expr_2_0 = null;


        // InternalGo.g:3920:4: ( (lv_expr_2_0= ruleexpression ) )
        // InternalGo.g:3920:4: (lv_expr_2_0= ruleexpression )
        {
        // InternalGo.g:3920:4: (lv_expr_2_0= ruleexpression )
        // InternalGo.g:3921:5: lv_expr_2_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getForClauseAccess().getExprExpressionParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_expr_2_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred84_InternalGo

    // $ANTLR start synpred85_InternalGo
    public final void synpred85_InternalGo_fragment() throws RecognitionException {   
        EObject lv_statement2_4_0 = null;


        // InternalGo.g:3949:4: ( (lv_statement2_4_0= rulesimpleStmt ) )
        // InternalGo.g:3949:4: (lv_statement2_4_0= rulesimpleStmt )
        {
        // InternalGo.g:3949:4: (lv_statement2_4_0= rulesimpleStmt )
        // InternalGo.g:3950:5: lv_statement2_4_0= rulesimpleStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getForClauseAccess().getStatement2SimpleStmtParserRuleCall_4_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_statement2_4_0=rulesimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred85_InternalGo

    // $ANTLR start synpred90_InternalGo
    public final void synpred90_InternalGo_fragment() throws RecognitionException {   
        Token lv_name_0_0=null;

        // InternalGo.g:4211:3: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) )
        // InternalGo.g:4211:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
        {
        // InternalGo.g:4211:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
        // InternalGo.g:4212:4: (lv_name_0_0= RULE_IDENTIFIER )
        {
        // InternalGo.g:4212:4: (lv_name_0_0= RULE_IDENTIFIER )
        // InternalGo.g:4213:5: lv_name_0_0= RULE_IDENTIFIER
        {
        lv_name_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred90_InternalGo

    // $ANTLR start synpred91_InternalGo
    public final void synpred91_InternalGo_fragment() throws RecognitionException {   
        EObject lv_lit_0_0 = null;


        // InternalGo.g:4268:3: ( ( (lv_lit_0_0= rulearrayType ) ) )
        // InternalGo.g:4268:3: ( (lv_lit_0_0= rulearrayType ) )
        {
        // InternalGo.g:4268:3: ( (lv_lit_0_0= rulearrayType ) )
        // InternalGo.g:4269:4: (lv_lit_0_0= rulearrayType )
        {
        // InternalGo.g:4269:4: (lv_lit_0_0= rulearrayType )
        // InternalGo.g:4270:5: lv_lit_0_0= rulearrayType
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getTypeLitAccess().getLitArrayTypeParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_lit_0_0=rulearrayType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred91_InternalGo

    // $ANTLR start synpred96_InternalGo
    public final void synpred96_InternalGo_fragment() throws RecognitionException {   
        EObject lv_lit_5_0 = null;


        // InternalGo.g:4368:3: ( ( (lv_lit_5_0= rulesliceType ) ) )
        // InternalGo.g:4368:3: ( (lv_lit_5_0= rulesliceType ) )
        {
        // InternalGo.g:4368:3: ( (lv_lit_5_0= rulesliceType ) )
        // InternalGo.g:4369:4: (lv_lit_5_0= rulesliceType )
        {
        // InternalGo.g:4369:4: (lv_lit_5_0= rulesliceType )
        // InternalGo.g:4370:5: lv_lit_5_0= rulesliceType
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getTypeLitAccess().getLitSliceTypeParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_lit_5_0=rulesliceType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred96_InternalGo

    // $ANTLR start synpred99_InternalGo
    public final void synpred99_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalGo.g:4803:4: (otherlv_0= 'chan' )
        // InternalGo.g:4803:4: otherlv_0= 'chan'
        {
        otherlv_0=(Token)match(input,91,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred99_InternalGo

    // $ANTLR start synpred100_InternalGo
    public final void synpred100_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_2=null;

        // InternalGo.g:4808:4: ( (otherlv_1= 'chan' otherlv_2= '<-' ) )
        // InternalGo.g:4808:4: (otherlv_1= 'chan' otherlv_2= '<-' )
        {
        // InternalGo.g:4808:4: (otherlv_1= 'chan' otherlv_2= '<-' )
        // InternalGo.g:4809:5: otherlv_1= 'chan' otherlv_2= '<-'
        {
        otherlv_1=(Token)match(input,91,FOLLOW_25); if (state.failed) return ;
        otherlv_2=(Token)match(input,56,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred100_InternalGo

    // $ANTLR start synpred102_InternalGo
    public final void synpred102_InternalGo_fragment() throws RecognitionException {   
        EObject lv_result_1_0 = null;


        // InternalGo.g:5008:4: ( (lv_result_1_0= ruleresult ) )
        // InternalGo.g:5008:4: (lv_result_1_0= ruleresult )
        {
        // InternalGo.g:5008:4: (lv_result_1_0= ruleresult )
        // InternalGo.g:5009:5: lv_result_1_0= ruleresult
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_result_1_0=ruleresult();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred102_InternalGo

    // $ANTLR start synpred103_InternalGo
    public final void synpred103_InternalGo_fragment() throws RecognitionException {   
        EObject lv_params_0_0 = null;


        // InternalGo.g:5045:3: ( ( (lv_params_0_0= ruleparameters ) ) )
        // InternalGo.g:5045:3: ( (lv_params_0_0= ruleparameters ) )
        {
        // InternalGo.g:5045:3: ( (lv_params_0_0= ruleparameters ) )
        // InternalGo.g:5046:4: (lv_params_0_0= ruleparameters )
        {
        // InternalGo.g:5046:4: (lv_params_0_0= ruleparameters )
        // InternalGo.g:5047:5: lv_params_0_0= ruleparameters
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getResultAccess().getParamsParametersParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_params_0_0=ruleparameters();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred103_InternalGo

    // $ANTLR start synpred107_InternalGo
    public final void synpred107_InternalGo_fragment() throws RecognitionException {   
        EObject lv_identifierList_0_0 = null;


        // InternalGo.g:5221:4: ( (lv_identifierList_0_0= ruleidentifierList ) )
        // InternalGo.g:5221:4: (lv_identifierList_0_0= ruleidentifierList )
        {
        // InternalGo.g:5221:4: (lv_identifierList_0_0= ruleidentifierList )
        // InternalGo.g:5222:5: lv_identifierList_0_0= ruleidentifierList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getParameterDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_identifierList_0_0=ruleidentifierList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred107_InternalGo

    // $ANTLR start synpred109_InternalGo
    public final void synpred109_InternalGo_fragment() throws RecognitionException {   
        EObject lv_content_0_0 = null;


        // InternalGo.g:5283:3: ( ( (lv_content_0_0= ruleliteral ) ) )
        // InternalGo.g:5283:3: ( (lv_content_0_0= ruleliteral ) )
        {
        // InternalGo.g:5283:3: ( (lv_content_0_0= ruleliteral ) )
        // InternalGo.g:5284:4: (lv_content_0_0= ruleliteral )
        {
        // InternalGo.g:5284:4: (lv_content_0_0= ruleliteral )
        // InternalGo.g:5285:5: lv_content_0_0= ruleliteral
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getOperandAccess().getContentLiteralParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_content_0_0=ruleliteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred109_InternalGo

    // $ANTLR start synpred110_InternalGo
    public final void synpred110_InternalGo_fragment() throws RecognitionException {   
        EObject lv_content_1_0 = null;


        // InternalGo.g:5303:3: ( ( (lv_content_1_0= ruleoperandName ) ) )
        // InternalGo.g:5303:3: ( (lv_content_1_0= ruleoperandName ) )
        {
        // InternalGo.g:5303:3: ( (lv_content_1_0= ruleoperandName ) )
        // InternalGo.g:5304:4: (lv_content_1_0= ruleoperandName )
        {
        // InternalGo.g:5304:4: (lv_content_1_0= ruleoperandName )
        // InternalGo.g:5305:5: lv_content_1_0= ruleoperandName
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getOperandAccess().getContentOperandNameParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_content_1_0=ruleoperandName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred110_InternalGo

    // $ANTLR start synpred111_InternalGo
    public final void synpred111_InternalGo_fragment() throws RecognitionException {   
        EObject lv_content_2_0 = null;


        // InternalGo.g:5323:3: ( ( (lv_content_2_0= rulemethodExpr ) ) )
        // InternalGo.g:5323:3: ( (lv_content_2_0= rulemethodExpr ) )
        {
        // InternalGo.g:5323:3: ( (lv_content_2_0= rulemethodExpr ) )
        // InternalGo.g:5324:4: (lv_content_2_0= rulemethodExpr )
        {
        // InternalGo.g:5324:4: (lv_content_2_0= rulemethodExpr )
        // InternalGo.g:5325:5: lv_content_2_0= rulemethodExpr
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getOperandAccess().getContentMethodExprParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_content_2_0=rulemethodExpr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred111_InternalGo

    // $ANTLR start synpred120_InternalGo
    public final void synpred120_InternalGo_fragment() throws RecognitionException {   
        EObject lv_type_1_0 = null;


        // InternalGo.g:5720:3: ( ( (lv_type_1_0= rulearrayType ) ) )
        // InternalGo.g:5720:3: ( (lv_type_1_0= rulearrayType ) )
        {
        // InternalGo.g:5720:3: ( (lv_type_1_0= rulearrayType ) )
        // InternalGo.g:5721:4: (lv_type_1_0= rulearrayType )
        {
        // InternalGo.g:5721:4: (lv_type_1_0= rulearrayType )
        // InternalGo.g:5722:5: lv_type_1_0= rulearrayType
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeArrayTypeParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_type_1_0=rulearrayType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred120_InternalGo

    // $ANTLR start synpred121_InternalGo
    public final void synpred121_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_type_5_0 = null;


        // InternalGo.g:5740:3: ( (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) ) ) )
        // InternalGo.g:5740:3: (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) ) )
        {
        // InternalGo.g:5740:3: (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) ) )
        // InternalGo.g:5741:4: otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) )
        {
        otherlv_2=(Token)match(input,87,FOLLOW_55); if (state.failed) return ;
        otherlv_3=(Token)match(input,92,FOLLOW_47); if (state.failed) return ;
        otherlv_4=(Token)match(input,88,FOLLOW_17); if (state.failed) return ;
        // InternalGo.g:5753:4: ( (lv_type_5_0= ruleelementType ) )
        // InternalGo.g:5754:5: (lv_type_5_0= ruleelementType )
        {
        // InternalGo.g:5754:5: (lv_type_5_0= ruleelementType )
        // InternalGo.g:5755:6: lv_type_5_0= ruleelementType
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeElementTypeParserRuleCall_2_3_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_type_5_0=ruleelementType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred121_InternalGo

    // $ANTLR start synpred122_InternalGo
    public final void synpred122_InternalGo_fragment() throws RecognitionException {   
        EObject lv_type_6_0 = null;


        // InternalGo.g:5774:3: ( ( (lv_type_6_0= rulesliceType ) ) )
        // InternalGo.g:5774:3: ( (lv_type_6_0= rulesliceType ) )
        {
        // InternalGo.g:5774:3: ( (lv_type_6_0= rulesliceType ) )
        // InternalGo.g:5775:4: (lv_type_6_0= rulesliceType )
        {
        // InternalGo.g:5775:4: (lv_type_6_0= rulesliceType )
        // InternalGo.g:5776:5: lv_type_6_0= rulesliceType
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeSliceTypeParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_type_6_0=rulesliceType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred122_InternalGo

    // $ANTLR start synpred125_InternalGo
    public final void synpred125_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_elementList_1_0 = null;


        // InternalGo.g:5857:4: ( ( (lv_elementList_1_0= ruleelementList ) ) (otherlv_2= ',' )? )
        // InternalGo.g:5857:4: ( (lv_elementList_1_0= ruleelementList ) ) (otherlv_2= ',' )?
        {
        // InternalGo.g:5857:4: ( (lv_elementList_1_0= ruleelementList ) )
        // InternalGo.g:5858:5: (lv_elementList_1_0= ruleelementList )
        {
        // InternalGo.g:5858:5: (lv_elementList_1_0= ruleelementList )
        // InternalGo.g:5859:6: lv_elementList_1_0= ruleelementList
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getLiteralValueAccess().getElementListElementListParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_16);
        lv_elementList_1_0=ruleelementList();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:5876:4: (otherlv_2= ',' )?
        int alt110=2;
        int LA110_0 = input.LA(1);

        if ( (LA110_0==50) ) {
            alt110=1;
        }
        switch (alt110) {
            case 1 :
                // InternalGo.g:5877:5: otherlv_2= ','
                {
                otherlv_2=(Token)match(input,50,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred125_InternalGo

    // $ANTLR start synpred126_InternalGo
    public final void synpred126_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_keyedElements_2_0 = null;


        // InternalGo.g:5926:4: (otherlv_1= ',' ( (lv_keyedElements_2_0= rulekeyedElement ) ) )
        // InternalGo.g:5926:4: otherlv_1= ',' ( (lv_keyedElements_2_0= rulekeyedElement ) )
        {
        otherlv_1=(Token)match(input,50,FOLLOW_37); if (state.failed) return ;
        // InternalGo.g:5930:4: ( (lv_keyedElements_2_0= rulekeyedElement ) )
        // InternalGo.g:5931:5: (lv_keyedElements_2_0= rulekeyedElement )
        {
        // InternalGo.g:5931:5: (lv_keyedElements_2_0= rulekeyedElement )
        // InternalGo.g:5932:6: lv_keyedElements_2_0= rulekeyedElement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementsKeyedElementParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_keyedElements_2_0=rulekeyedElement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred126_InternalGo

    // $ANTLR start synpred127_InternalGo
    public final void synpred127_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_key_0_0 = null;


        // InternalGo.g:5970:4: ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )
        // InternalGo.g:5970:4: ( (lv_key_0_0= rulekey ) ) otherlv_1= ':'
        {
        // InternalGo.g:5970:4: ( (lv_key_0_0= rulekey ) )
        // InternalGo.g:5971:5: (lv_key_0_0= rulekey )
        {
        // InternalGo.g:5971:5: (lv_key_0_0= rulekey )
        // InternalGo.g:5972:6: lv_key_0_0= rulekey
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getKeyedElementAccess().getKeyKeyParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_29);
        lv_key_0_0=rulekey();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,71,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred127_InternalGo

    // $ANTLR start synpred128_InternalGo
    public final void synpred128_InternalGo_fragment() throws RecognitionException {   
        Token lv_name_0_0=null;

        // InternalGo.g:6032:3: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) )
        // InternalGo.g:6032:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
        {
        // InternalGo.g:6032:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
        // InternalGo.g:6033:4: (lv_name_0_0= RULE_IDENTIFIER )
        {
        // InternalGo.g:6033:4: (lv_name_0_0= RULE_IDENTIFIER )
        // InternalGo.g:6034:5: lv_name_0_0= RULE_IDENTIFIER
        {
        lv_name_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred128_InternalGo

    // $ANTLR start synpred129_InternalGo
    public final void synpred129_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expr_1_0 = null;


        // InternalGo.g:6051:3: ( ( (lv_expr_1_0= ruleexpression ) ) )
        // InternalGo.g:6051:3: ( (lv_expr_1_0= ruleexpression ) )
        {
        // InternalGo.g:6051:3: ( (lv_expr_1_0= ruleexpression ) )
        // InternalGo.g:6052:4: (lv_expr_1_0= ruleexpression )
        {
        // InternalGo.g:6052:4: (lv_expr_1_0= ruleexpression )
        // InternalGo.g:6053:5: lv_expr_1_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getKeyAccess().getExprExpressionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_expr_1_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred129_InternalGo

    // $ANTLR start synpred135_InternalGo
    public final void synpred135_InternalGo_fragment() throws RecognitionException {   
        EObject lv_content_0_0 = null;


        // InternalGo.g:6403:4: ( ( (lv_content_0_0= ruleoperand ) ) )
        // InternalGo.g:6403:4: ( (lv_content_0_0= ruleoperand ) )
        {
        // InternalGo.g:6403:4: ( (lv_content_0_0= ruleoperand ) )
        // InternalGo.g:6404:5: (lv_content_0_0= ruleoperand )
        {
        // InternalGo.g:6404:5: (lv_content_0_0= ruleoperand )
        // InternalGo.g:6405:6: lv_content_0_0= ruleoperand
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPrimaryExprAccess().getContentOperandParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_content_0_0=ruleoperand();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred135_InternalGo

    // $ANTLR start synpred136_InternalGo
    public final void synpred136_InternalGo_fragment() throws RecognitionException {   
        EObject lv_content_0_0 = null;

        EObject lv_content_1_0 = null;


        // InternalGo.g:6402:3: ( ( ( (lv_content_0_0= ruleoperand ) ) | ( (lv_content_1_0= ruleconversion ) ) ) )
        // InternalGo.g:6402:3: ( ( (lv_content_0_0= ruleoperand ) ) | ( (lv_content_1_0= ruleconversion ) ) )
        {
        // InternalGo.g:6402:3: ( ( (lv_content_0_0= ruleoperand ) ) | ( (lv_content_1_0= ruleconversion ) ) )
        int alt111=2;
        alt111 = dfa111.predict(input);
        switch (alt111) {
            case 1 :
                // InternalGo.g:6403:4: ( (lv_content_0_0= ruleoperand ) )
                {
                // InternalGo.g:6403:4: ( (lv_content_0_0= ruleoperand ) )
                // InternalGo.g:6404:5: (lv_content_0_0= ruleoperand )
                {
                // InternalGo.g:6404:5: (lv_content_0_0= ruleoperand )
                // InternalGo.g:6405:6: lv_content_0_0= ruleoperand
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getPrimaryExprAccess().getContentOperandParserRuleCall_0_0_0());
                  					
                }
                pushFollow(FOLLOW_2);
                lv_content_0_0=ruleoperand();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalGo.g:6423:4: ( (lv_content_1_0= ruleconversion ) )
                {
                // InternalGo.g:6423:4: ( (lv_content_1_0= ruleconversion ) )
                // InternalGo.g:6424:5: (lv_content_1_0= ruleconversion )
                {
                // InternalGo.g:6424:5: (lv_content_1_0= ruleconversion )
                // InternalGo.g:6425:6: lv_content_1_0= ruleconversion
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getPrimaryExprAccess().getContentConversionParserRuleCall_0_1_0());
                  					
                }
                pushFollow(FOLLOW_2);
                lv_content_1_0=ruleconversion();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }
    }
    // $ANTLR end synpred136_InternalGo

    // $ANTLR start synpred137_InternalGo
    public final void synpred137_InternalGo_fragment() throws RecognitionException {   
        EObject lv_content_2_0 = null;


        // InternalGo.g:6444:3: ( ( (lv_content_2_0= ruleprimaryExprSelector ) ) )
        // InternalGo.g:6444:3: ( (lv_content_2_0= ruleprimaryExprSelector ) )
        {
        // InternalGo.g:6444:3: ( (lv_content_2_0= ruleprimaryExprSelector ) )
        // InternalGo.g:6445:4: (lv_content_2_0= ruleprimaryExprSelector )
        {
        // InternalGo.g:6445:4: (lv_content_2_0= ruleprimaryExprSelector )
        // InternalGo.g:6446:5: lv_content_2_0= ruleprimaryExprSelector
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprAccess().getContentPrimaryExprSelectorParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_content_2_0=ruleprimaryExprSelector();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred137_InternalGo

    // $ANTLR start synpred138_InternalGo
    public final void synpred138_InternalGo_fragment() throws RecognitionException {   
        EObject lv_content_3_0 = null;


        // InternalGo.g:6464:3: ( ( (lv_content_3_0= ruleprimaryExprIndex ) ) )
        // InternalGo.g:6464:3: ( (lv_content_3_0= ruleprimaryExprIndex ) )
        {
        // InternalGo.g:6464:3: ( (lv_content_3_0= ruleprimaryExprIndex ) )
        // InternalGo.g:6465:4: (lv_content_3_0= ruleprimaryExprIndex )
        {
        // InternalGo.g:6465:4: (lv_content_3_0= ruleprimaryExprIndex )
        // InternalGo.g:6466:5: lv_content_3_0= ruleprimaryExprIndex
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprAccess().getContentPrimaryExprIndexParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_content_3_0=ruleprimaryExprIndex();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred138_InternalGo

    // $ANTLR start synpred139_InternalGo
    public final void synpred139_InternalGo_fragment() throws RecognitionException {   
        EObject lv_content_4_0 = null;


        // InternalGo.g:6484:3: ( ( (lv_content_4_0= ruleprimaryExprSlice ) ) )
        // InternalGo.g:6484:3: ( (lv_content_4_0= ruleprimaryExprSlice ) )
        {
        // InternalGo.g:6484:3: ( (lv_content_4_0= ruleprimaryExprSlice ) )
        // InternalGo.g:6485:4: (lv_content_4_0= ruleprimaryExprSlice )
        {
        // InternalGo.g:6485:4: (lv_content_4_0= ruleprimaryExprSlice )
        // InternalGo.g:6486:5: lv_content_4_0= ruleprimaryExprSlice
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprAccess().getContentPrimaryExprSliceParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_content_4_0=ruleprimaryExprSlice();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred139_InternalGo

    // $ANTLR start synpred140_InternalGo
    public final void synpred140_InternalGo_fragment() throws RecognitionException {   
        EObject lv_content_5_0 = null;


        // InternalGo.g:6504:3: ( ( (lv_content_5_0= ruleprimaryExprTypeAssertion ) ) )
        // InternalGo.g:6504:3: ( (lv_content_5_0= ruleprimaryExprTypeAssertion ) )
        {
        // InternalGo.g:6504:3: ( (lv_content_5_0= ruleprimaryExprTypeAssertion ) )
        // InternalGo.g:6505:4: (lv_content_5_0= ruleprimaryExprTypeAssertion )
        {
        // InternalGo.g:6505:4: (lv_content_5_0= ruleprimaryExprTypeAssertion )
        // InternalGo.g:6506:5: lv_content_5_0= ruleprimaryExprTypeAssertion
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprAccess().getContentPrimaryExprTypeAssertionParserRuleCall_4_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_content_5_0=ruleprimaryExprTypeAssertion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred140_InternalGo

    // $ANTLR start synpred141_InternalGo
    public final void synpred141_InternalGo_fragment() throws RecognitionException {   
        EObject lv_content_0_0 = null;


        // InternalGo.g:6562:3: ( ( (lv_content_0_0= ruleselector ) ) )
        // InternalGo.g:6562:3: ( (lv_content_0_0= ruleselector ) )
        {
        // InternalGo.g:6562:3: ( (lv_content_0_0= ruleselector ) )
        // InternalGo.g:6563:4: (lv_content_0_0= ruleselector )
        {
        // InternalGo.g:6563:4: (lv_content_0_0= ruleselector )
        // InternalGo.g:6564:5: lv_content_0_0= ruleselector
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getContentSelectorParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_content_0_0=ruleselector();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred141_InternalGo

    // $ANTLR start synpred142_InternalGo
    public final void synpred142_InternalGo_fragment() throws RecognitionException {   
        EObject lv_content_1_0 = null;


        // InternalGo.g:6582:3: ( ( (lv_content_1_0= ruleindex ) ) )
        // InternalGo.g:6582:3: ( (lv_content_1_0= ruleindex ) )
        {
        // InternalGo.g:6582:3: ( (lv_content_1_0= ruleindex ) )
        // InternalGo.g:6583:4: (lv_content_1_0= ruleindex )
        {
        // InternalGo.g:6583:4: (lv_content_1_0= ruleindex )
        // InternalGo.g:6584:5: lv_content_1_0= ruleindex
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getContentIndexParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_content_1_0=ruleindex();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred142_InternalGo

    // $ANTLR start synpred143_InternalGo
    public final void synpred143_InternalGo_fragment() throws RecognitionException {   
        EObject lv_content_2_0 = null;


        // InternalGo.g:6602:3: ( ( (lv_content_2_0= ruleslice ) ) )
        // InternalGo.g:6602:3: ( (lv_content_2_0= ruleslice ) )
        {
        // InternalGo.g:6602:3: ( (lv_content_2_0= ruleslice ) )
        // InternalGo.g:6603:4: (lv_content_2_0= ruleslice )
        {
        // InternalGo.g:6603:4: (lv_content_2_0= ruleslice )
        // InternalGo.g:6604:5: lv_content_2_0= ruleslice
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getContentSliceParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_content_2_0=ruleslice();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred143_InternalGo

    // $ANTLR start synpred144_InternalGo
    public final void synpred144_InternalGo_fragment() throws RecognitionException {   
        EObject lv_content_3_0 = null;


        // InternalGo.g:6622:3: ( ( (lv_content_3_0= ruletypeAssertion ) ) )
        // InternalGo.g:6622:3: ( (lv_content_3_0= ruletypeAssertion ) )
        {
        // InternalGo.g:6622:3: ( (lv_content_3_0= ruletypeAssertion ) )
        // InternalGo.g:6623:4: (lv_content_3_0= ruletypeAssertion )
        {
        // InternalGo.g:6623:4: (lv_content_3_0= ruletypeAssertion )
        // InternalGo.g:6624:5: lv_content_3_0= ruletypeAssertion
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getContentTypeAssertionParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_content_3_0=ruletypeAssertion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred144_InternalGo

    // $ANTLR start synpred150_InternalGo
    public final void synpred150_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expr1_1_0 = null;


        // InternalGo.g:7059:6: ( (lv_expr1_1_0= ruleexpression ) )
        // InternalGo.g:7059:6: (lv_expr1_1_0= ruleexpression )
        {
        // InternalGo.g:7059:6: (lv_expr1_1_0= ruleexpression )
        // InternalGo.g:7060:7: lv_expr1_1_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getSliceAccess().getExpr1ExpressionParserRuleCall_1_0_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_expr1_1_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred150_InternalGo

    // $ANTLR start synpred151_InternalGo
    public final void synpred151_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expr2_3_0 = null;


        // InternalGo.g:7082:6: ( (lv_expr2_3_0= ruleexpression ) )
        // InternalGo.g:7082:6: (lv_expr2_3_0= ruleexpression )
        {
        // InternalGo.g:7082:6: (lv_expr2_3_0= ruleexpression )
        // InternalGo.g:7083:7: lv_expr2_3_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getSliceAccess().getExpr2ExpressionParserRuleCall_1_0_2_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_expr2_3_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred151_InternalGo

    // $ANTLR start synpred152_InternalGo
    public final void synpred152_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_expr1_1_0 = null;

        EObject lv_expr2_3_0 = null;


        // InternalGo.g:7057:4: ( ( ( (lv_expr1_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expr2_3_0= ruleexpression ) )? ) )
        // InternalGo.g:7057:4: ( ( (lv_expr1_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expr2_3_0= ruleexpression ) )? )
        {
        // InternalGo.g:7057:4: ( ( (lv_expr1_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expr2_3_0= ruleexpression ) )? )
        // InternalGo.g:7058:5: ( (lv_expr1_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expr2_3_0= ruleexpression ) )?
        {
        // InternalGo.g:7058:5: ( (lv_expr1_1_0= ruleexpression ) )?
        int alt112=2;
        int LA112_0 = input.LA(1);

        if ( ((LA112_0>=RULE_IDENTIFIER && LA112_0<=RULE_STRING_LIT)||(LA112_0>=RULE_INT_LIT && LA112_0<=RULE_BINARY_OP)||LA112_0==45||LA112_0==47||LA112_0==52||LA112_0==56||(LA112_0>=59 && LA112_0<=60)||(LA112_0>=62 && LA112_0<=63)||LA112_0==68||LA112_0==87||(LA112_0>=89 && LA112_0<=91)||(LA112_0>=93 && LA112_0<=94)) ) {
            alt112=1;
        }
        else if ( (LA112_0==71) ) {
            int LA112_2 = input.LA(2);

            if ( (synpred150_InternalGo()) ) {
                alt112=1;
            }
        }
        switch (alt112) {
            case 1 :
                // InternalGo.g:7059:6: (lv_expr1_1_0= ruleexpression )
                {
                // InternalGo.g:7059:6: (lv_expr1_1_0= ruleexpression )
                // InternalGo.g:7060:7: lv_expr1_1_0= ruleexpression
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getSliceAccess().getExpr1ExpressionParserRuleCall_1_0_0_0());
                  						
                }
                pushFollow(FOLLOW_29);
                lv_expr1_1_0=ruleexpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_2=(Token)match(input,71,FOLLOW_31); if (state.failed) return ;
        // InternalGo.g:7081:5: ( (lv_expr2_3_0= ruleexpression ) )?
        int alt113=2;
        int LA113_0 = input.LA(1);

        if ( ((LA113_0>=RULE_IDENTIFIER && LA113_0<=RULE_STRING_LIT)||(LA113_0>=RULE_INT_LIT && LA113_0<=RULE_BINARY_OP)||LA113_0==45||LA113_0==47||LA113_0==52||LA113_0==56||(LA113_0>=59 && LA113_0<=60)||(LA113_0>=62 && LA113_0<=63)||LA113_0==68||LA113_0==87||(LA113_0>=89 && LA113_0<=91)||(LA113_0>=93 && LA113_0<=94)) ) {
            alt113=1;
        }
        else if ( (LA113_0==EOF) ) {
            int LA113_2 = input.LA(2);

            if ( (synpred151_InternalGo()) ) {
                alt113=1;
            }
        }
        switch (alt113) {
            case 1 :
                // InternalGo.g:7082:6: (lv_expr2_3_0= ruleexpression )
                {
                // InternalGo.g:7082:6: (lv_expr2_3_0= ruleexpression )
                // InternalGo.g:7083:7: lv_expr2_3_0= ruleexpression
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getSliceAccess().getExpr2ExpressionParserRuleCall_1_0_2_0());
                  						
                }
                pushFollow(FOLLOW_2);
                lv_expr2_3_0=ruleexpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred152_InternalGo

    // $ANTLR start synpred153_InternalGo
    public final void synpred153_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expr1_4_0 = null;


        // InternalGo.g:7104:6: ( (lv_expr1_4_0= ruleexpression ) )
        // InternalGo.g:7104:6: (lv_expr1_4_0= ruleexpression )
        {
        // InternalGo.g:7104:6: (lv_expr1_4_0= ruleexpression )
        // InternalGo.g:7105:7: lv_expr1_4_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getSliceAccess().getExpr1ExpressionParserRuleCall_1_1_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_expr1_4_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred153_InternalGo

    // $ANTLR start synpred154_InternalGo
    public final void synpred154_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expressionList_1_0 = null;


        // InternalGo.g:7249:5: ( ( (lv_expressionList_1_0= ruleexpressionList ) ) )
        // InternalGo.g:7249:5: ( (lv_expressionList_1_0= ruleexpressionList ) )
        {
        // InternalGo.g:7249:5: ( (lv_expressionList_1_0= ruleexpressionList ) )
        // InternalGo.g:7250:6: (lv_expressionList_1_0= ruleexpressionList )
        {
        // InternalGo.g:7250:6: (lv_expressionList_1_0= ruleexpressionList )
        // InternalGo.g:7251:7: lv_expressionList_1_0= ruleexpressionList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_expressionList_1_0=ruleexpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred154_InternalGo

    // $ANTLR start synpred155_InternalGo
    public final void synpred155_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_expressionList_4_0 = null;


        // InternalGo.g:7290:7: (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )
        // InternalGo.g:7290:7: otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) )
        {
        otherlv_3=(Token)match(input,50,FOLLOW_15); if (state.failed) return ;
        // InternalGo.g:7294:7: ( (lv_expressionList_4_0= ruleexpressionList ) )
        // InternalGo.g:7295:8: (lv_expressionList_4_0= ruleexpressionList )
        {
        // InternalGo.g:7295:8: (lv_expressionList_4_0= ruleexpressionList )
        // InternalGo.g:7296:9: lv_expressionList_4_0= ruleexpressionList
        {
        if ( state.backtracking==0 ) {

          									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_1_0());
          								
        }
        pushFollow(FOLLOW_2);
        lv_expressionList_4_0=ruleexpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred155_InternalGo

    // $ANTLR start synpred158_InternalGo
    public final void synpred158_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_expressionList_1_0 = null;

        EObject lv_type_2_0 = null;

        EObject lv_expressionList_4_0 = null;


        // InternalGo.g:7248:4: ( ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) ) (otherlv_5= '...' )? (otherlv_6= ',' )? )
        // InternalGo.g:7248:4: ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) ) (otherlv_5= '...' )? (otherlv_6= ',' )?
        {
        // InternalGo.g:7248:4: ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) )
        int alt115=2;
        alt115 = dfa115.predict(input);
        switch (alt115) {
            case 1 :
                // InternalGo.g:7249:5: ( (lv_expressionList_1_0= ruleexpressionList ) )
                {
                // InternalGo.g:7249:5: ( (lv_expressionList_1_0= ruleexpressionList ) )
                // InternalGo.g:7250:6: (lv_expressionList_1_0= ruleexpressionList )
                {
                // InternalGo.g:7250:6: (lv_expressionList_1_0= ruleexpressionList )
                // InternalGo.g:7251:7: lv_expressionList_1_0= ruleexpressionList
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_0_0());
                  						
                }
                pushFollow(FOLLOW_67);
                lv_expressionList_1_0=ruleexpressionList();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalGo.g:7269:5: ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? )
                {
                // InternalGo.g:7269:5: ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? )
                // InternalGo.g:7270:6: ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )?
                {
                // InternalGo.g:7270:6: ( (lv_type_2_0= ruletype ) )
                // InternalGo.g:7271:7: (lv_type_2_0= ruletype )
                {
                // InternalGo.g:7271:7: (lv_type_2_0= ruletype )
                // InternalGo.g:7272:8: lv_type_2_0= ruletype
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_1_0_1_0_0());
                  							
                }
                pushFollow(FOLLOW_67);
                lv_type_2_0=ruletype();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalGo.g:7289:6: (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )?
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==50) ) {
                    int LA114_1 = input.LA(2);

                    if ( (synpred155_InternalGo()) ) {
                        alt114=1;
                    }
                }
                switch (alt114) {
                    case 1 :
                        // InternalGo.g:7290:7: otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) )
                        {
                        otherlv_3=(Token)match(input,50,FOLLOW_15); if (state.failed) return ;
                        // InternalGo.g:7294:7: ( (lv_expressionList_4_0= ruleexpressionList ) )
                        // InternalGo.g:7295:8: (lv_expressionList_4_0= ruleexpressionList )
                        {
                        // InternalGo.g:7295:8: (lv_expressionList_4_0= ruleexpressionList )
                        // InternalGo.g:7296:9: lv_expressionList_4_0= ruleexpressionList
                        {
                        if ( state.backtracking==0 ) {

                          									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_1_0());
                          								
                        }
                        pushFollow(FOLLOW_67);
                        lv_expressionList_4_0=ruleexpressionList();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;

        }

        // InternalGo.g:7316:4: (otherlv_5= '...' )?
        int alt116=2;
        int LA116_0 = input.LA(1);

        if ( (LA116_0==92) ) {
            alt116=1;
        }
        switch (alt116) {
            case 1 :
                // InternalGo.g:7317:5: otherlv_5= '...'
                {
                otherlv_5=(Token)match(input,92,FOLLOW_16); if (state.failed) return ;

                }
                break;

        }

        // InternalGo.g:7322:4: (otherlv_6= ',' )?
        int alt117=2;
        int LA117_0 = input.LA(1);

        if ( (LA117_0==50) ) {
            alt117=1;
        }
        switch (alt117) {
            case 1 :
                // InternalGo.g:7323:5: otherlv_6= ','
                {
                otherlv_6=(Token)match(input,50,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred158_InternalGo

    // $ANTLR start synpred162_InternalGo
    public final void synpred162_InternalGo_fragment() throws RecognitionException {   
        EObject lv_primaryExpr_0_0 = null;


        // InternalGo.g:7599:3: ( ( (lv_primaryExpr_0_0= ruleprimaryExpr ) ) )
        // InternalGo.g:7599:3: ( (lv_primaryExpr_0_0= ruleprimaryExpr ) )
        {
        // InternalGo.g:7599:3: ( (lv_primaryExpr_0_0= ruleprimaryExpr ) )
        // InternalGo.g:7600:4: (lv_primaryExpr_0_0= ruleprimaryExpr )
        {
        // InternalGo.g:7600:4: (lv_primaryExpr_0_0= ruleprimaryExpr )
        // InternalGo.g:7601:5: lv_primaryExpr_0_0= ruleprimaryExpr
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_primaryExpr_0_0=ruleprimaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred162_InternalGo

    // Delegated rules

    public final boolean synpred150_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred91_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred91_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred129_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred129_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred78_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred78_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred152_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred152_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred155_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred155_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred162_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred162_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred154_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred154_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA25 dfa25 = new DFA25(this);
    protected DFA26 dfa26 = new DFA26(this);
    protected DFA32 dfa32 = new DFA32(this);
    protected DFA36 dfa36 = new DFA36(this);
    protected DFA40 dfa40 = new DFA40(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA49 dfa49 = new DFA49(this);
    protected DFA53 dfa53 = new DFA53(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA60 dfa60 = new DFA60(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA75 dfa75 = new DFA75(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA82 dfa82 = new DFA82(this);
    protected DFA93 dfa93 = new DFA93(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA111 dfa111 = new DFA111(this);
    protected DFA115 dfa115 = new DFA115(this);
    static final String dfa_1s = "\21\uffff";
    static final String dfa_2s = "\1\3\1\uffff\1\3\16\uffff";
    static final String dfa_3s = "\1\4\1\uffff\1\13\16\uffff";
    static final String dfa_4s = "\1\137\1\uffff\1\137\16\uffff";
    static final String dfa_5s = "\1\uffff\1\1\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\2";
    static final String dfa_6s = "\21\uffff}>";
    static final String[] dfa_7s = {
            "\1\2\7\3\41\uffff\1\3\1\uffff\1\3\1\1\2\3\1\1\1\3\1\1\1\12\1\uffff\16\3\2\uffff\1\5\1\6\1\7\1\10\1\11\1\17\1\13\1\uffff\1\14\2\uffff\1\15\1\16\1\uffff\1\4\1\3\1\uffff\3\3\1\uffff\3\3",
            "",
            "\1\3\41\uffff\1\3\1\uffff\1\3\1\uffff\2\3\3\uffff\1\3\1\uffff\17\3\1\20\27\uffff\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA25 extends DFA {

        public DFA25(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 25;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "1592:2: ( ( (lv_content_0_0= ruledeclaration ) ) | ( (lv_content_1_0= rulelabeledStmt ) ) | ( (lv_content_2_0= rulesimpleStmt ) ) | ( (lv_content_3_0= rulegoStmt ) ) | ( (lv_content_4_0= rulereturnStmt ) ) | ( (lv_content_5_0= rulebreakStmt ) ) | ( (lv_content_6_0= rulecontinueStmt ) ) | ( (lv_content_7_0= rulegotoStmt ) ) | ( (lv_content_8_0= rulefallthroughStmt ) ) | ( (lv_content_9_0= ruleblock ) ) | ( (lv_content_10_0= ruleifStmt ) ) | ( (lv_content_11_0= ruleswitchStmt ) ) | ( (lv_content_12_0= ruleselectStmt ) ) | ( (lv_content_13_0= ruleforStmt ) ) | ( (lv_content_14_0= ruledeferStmt ) ) )";
        }
    }
    static final String dfa_8s = "\47\uffff";
    static final String dfa_9s = "\1\27\46\uffff";
    static final String dfa_10s = "\1\4\26\0\20\uffff";
    static final String dfa_11s = "\1\137\26\0\20\uffff";
    static final String dfa_12s = "\27\uffff\1\2\2\uffff\1\3\1\uffff\1\4\7\uffff\1\6\1\1\1\5";
    static final String dfa_13s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\20\uffff}>";
    static final String[] dfa_14s = {
            "\1\11\1\5\1\44\1\1\1\2\1\3\1\4\1\21\41\uffff\1\13\1\uffff\1\20\1\uffff\2\34\1\uffff\1\12\1\uffff\1\27\1\uffff\1\17\2\32\1\22\1\23\1\34\1\25\1\14\4\34\1\26\1\34\21\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\1\24\1\27",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "1910:2: ( ( (lv_content_0_0= rulesendStmt ) ) | ( (lv_content_1_0= ruleexpressionStmt ) ) | ( (lv_content_2_0= ruleincDecStmt ) ) | ( (lv_content_3_0= ruleassignment ) ) | ( (lv_content_4_0= ruleshortVarDecl ) ) | ( (lv_content_5_0= ruleemptyStmt ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA26_1 = input.LA(1);

                         
                        int index26_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA26_2 = input.LA(1);

                         
                        int index26_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA26_3 = input.LA(1);

                         
                        int index26_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA26_4 = input.LA(1);

                         
                        int index26_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA26_5 = input.LA(1);

                         
                        int index26_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA26_6 = input.LA(1);

                         
                        int index26_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA26_7 = input.LA(1);

                         
                        int index26_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA26_8 = input.LA(1);

                         
                        int index26_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA26_9 = input.LA(1);

                         
                        int index26_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                        else if ( (synpred46_InternalGo()) ) {s = 38;}

                         
                        input.seek(index26_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA26_10 = input.LA(1);

                         
                        int index26_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA26_11 = input.LA(1);

                         
                        int index26_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA26_12 = input.LA(1);

                         
                        int index26_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA26_13 = input.LA(1);

                         
                        int index26_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA26_14 = input.LA(1);

                         
                        int index26_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA26_15 = input.LA(1);

                         
                        int index26_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA26_16 = input.LA(1);

                         
                        int index26_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA26_17 = input.LA(1);

                         
                        int index26_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA26_18 = input.LA(1);

                         
                        int index26_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA26_19 = input.LA(1);

                         
                        int index26_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA26_20 = input.LA(1);

                         
                        int index26_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA26_21 = input.LA(1);

                         
                        int index26_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA26_22 = input.LA(1);

                         
                        int index26_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalGo()) ) {s = 37;}

                        else if ( (synpred43_InternalGo()) ) {s = 23;}

                        else if ( (synpred44_InternalGo()) ) {s = 26;}

                        else if ( (synpred45_InternalGo()) ) {s = 28;}

                         
                        input.seek(index26_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 26, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_15s = "\44\uffff";
    static final String dfa_16s = "\1\4\26\0\15\uffff";
    static final String dfa_17s = "\1\137\26\0\15\uffff";
    static final String dfa_18s = "\27\uffff\1\1\13\uffff\1\2";
    static final String dfa_19s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\15\uffff}>";
    static final String[] dfa_20s = {
            "\1\11\1\5\1\27\1\1\1\2\1\3\1\4\1\21\41\uffff\1\13\1\uffff\1\20\1\uffff\2\27\1\uffff\1\12\1\uffff\1\43\1\uffff\1\17\2\27\1\22\1\23\1\27\1\25\1\14\4\27\1\26\1\27\21\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\1\24\1\27",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "2760:3: ( ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA32_1 = input.LA(1);

                         
                        int index32_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA32_2 = input.LA(1);

                         
                        int index32_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA32_3 = input.LA(1);

                         
                        int index32_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA32_4 = input.LA(1);

                         
                        int index32_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA32_5 = input.LA(1);

                         
                        int index32_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA32_6 = input.LA(1);

                         
                        int index32_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA32_7 = input.LA(1);

                         
                        int index32_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA32_8 = input.LA(1);

                         
                        int index32_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA32_9 = input.LA(1);

                         
                        int index32_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA32_10 = input.LA(1);

                         
                        int index32_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA32_11 = input.LA(1);

                         
                        int index32_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA32_12 = input.LA(1);

                         
                        int index32_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA32_13 = input.LA(1);

                         
                        int index32_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA32_14 = input.LA(1);

                         
                        int index32_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA32_15 = input.LA(1);

                         
                        int index32_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA32_16 = input.LA(1);

                         
                        int index32_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA32_17 = input.LA(1);

                         
                        int index32_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA32_18 = input.LA(1);

                         
                        int index32_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA32_19 = input.LA(1);

                         
                        int index32_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA32_20 = input.LA(1);

                         
                        int index32_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA32_21 = input.LA(1);

                         
                        int index32_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA32_22 = input.LA(1);

                         
                        int index32_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index32_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 32, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA36 extends DFA {

        public DFA36(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 36;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "2957:3: ( ( (lv_simpleStmt_1_0= rulesimpleStmt ) ) ruleeos )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA36_1 = input.LA(1);

                         
                        int index36_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA36_2 = input.LA(1);

                         
                        int index36_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA36_3 = input.LA(1);

                         
                        int index36_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA36_4 = input.LA(1);

                         
                        int index36_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA36_5 = input.LA(1);

                         
                        int index36_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA36_6 = input.LA(1);

                         
                        int index36_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA36_7 = input.LA(1);

                         
                        int index36_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA36_8 = input.LA(1);

                         
                        int index36_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA36_9 = input.LA(1);

                         
                        int index36_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA36_10 = input.LA(1);

                         
                        int index36_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA36_11 = input.LA(1);

                         
                        int index36_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA36_12 = input.LA(1);

                         
                        int index36_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA36_13 = input.LA(1);

                         
                        int index36_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA36_14 = input.LA(1);

                         
                        int index36_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA36_15 = input.LA(1);

                         
                        int index36_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA36_16 = input.LA(1);

                         
                        int index36_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA36_17 = input.LA(1);

                         
                        int index36_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA36_18 = input.LA(1);

                         
                        int index36_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA36_19 = input.LA(1);

                         
                        int index36_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA36_20 = input.LA(1);

                         
                        int index36_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA36_21 = input.LA(1);

                         
                        int index36_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA36_22 = input.LA(1);

                         
                        int index36_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index36_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 36, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_21s = "\1\4\20\0\23\uffff";
    static final String dfa_22s = "\1\137\20\0\23\uffff";
    static final String dfa_23s = "\21\uffff\1\1\21\uffff\1\2";
    static final String dfa_24s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\23\uffff}>";
    static final String[] dfa_25s = {
            "\1\11\1\5\1\21\1\1\1\2\1\3\1\4\1\21\41\uffff\1\13\1\uffff\1\20\1\uffff\2\21\1\uffff\1\12\3\uffff\1\17\6\21\1\14\6\21\21\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\2\21",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA40 extends DFA {

        public DFA40(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 40;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "3167:3: ( ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA40_1 = input.LA(1);

                         
                        int index40_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index40_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA40_2 = input.LA(1);

                         
                        int index40_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index40_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA40_3 = input.LA(1);

                         
                        int index40_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index40_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA40_4 = input.LA(1);

                         
                        int index40_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index40_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA40_5 = input.LA(1);

                         
                        int index40_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index40_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA40_6 = input.LA(1);

                         
                        int index40_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index40_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA40_7 = input.LA(1);

                         
                        int index40_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index40_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA40_8 = input.LA(1);

                         
                        int index40_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index40_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA40_9 = input.LA(1);

                         
                        int index40_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index40_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA40_10 = input.LA(1);

                         
                        int index40_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index40_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA40_11 = input.LA(1);

                         
                        int index40_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index40_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA40_12 = input.LA(1);

                         
                        int index40_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index40_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA40_13 = input.LA(1);

                         
                        int index40_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index40_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA40_14 = input.LA(1);

                         
                        int index40_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index40_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA40_15 = input.LA(1);

                         
                        int index40_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index40_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA40_16 = input.LA(1);

                         
                        int index40_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index40_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 40, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\34\uffff";
    static final String dfa_27s = "\1\27\33\uffff";
    static final String dfa_28s = "\1\4\26\0\5\uffff";
    static final String dfa_29s = "\1\136\26\0\5\uffff";
    static final String dfa_30s = "\27\uffff\1\2\3\uffff\1\1";
    static final String dfa_31s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\5\uffff}>";
    static final String[] dfa_32s = {
            "\1\11\1\5\1\uffff\1\1\1\2\1\3\1\4\1\21\41\uffff\1\13\1\uffff\1\20\1\uffff\2\27\1\uffff\1\12\3\uffff\1\17\2\uffff\1\22\1\23\1\uffff\1\25\1\14\4\uffff\1\26\2\uffff\1\27\17\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\1\24",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = dfa_26;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "3630:4: ( ( (lv_statement_1_0= rulesendStmt ) ) | ( (lv_statement_2_0= rulerecvStmt ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA46_1 = input.LA(1);

                         
                        int index46_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA46_2 = input.LA(1);

                         
                        int index46_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA46_3 = input.LA(1);

                         
                        int index46_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA46_4 = input.LA(1);

                         
                        int index46_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA46_5 = input.LA(1);

                         
                        int index46_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA46_6 = input.LA(1);

                         
                        int index46_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA46_7 = input.LA(1);

                         
                        int index46_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA46_8 = input.LA(1);

                         
                        int index46_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA46_9 = input.LA(1);

                         
                        int index46_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA46_10 = input.LA(1);

                         
                        int index46_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA46_11 = input.LA(1);

                         
                        int index46_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA46_12 = input.LA(1);

                         
                        int index46_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA46_13 = input.LA(1);

                         
                        int index46_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA46_14 = input.LA(1);

                         
                        int index46_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA46_15 = input.LA(1);

                         
                        int index46_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA46_16 = input.LA(1);

                         
                        int index46_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA46_17 = input.LA(1);

                         
                        int index46_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA46_18 = input.LA(1);

                         
                        int index46_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA46_19 = input.LA(1);

                         
                        int index46_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA46_20 = input.LA(1);

                         
                        int index46_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA46_21 = input.LA(1);

                         
                        int index46_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA46_22 = input.LA(1);

                         
                        int index46_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index46_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 46, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_33s = "\1\31\33\uffff";
    static final String dfa_34s = "\1\4\21\0\2\uffff\5\0\3\uffff";
    static final String dfa_35s = "\1\136\21\0\2\uffff\5\0\3\uffff";
    static final String dfa_36s = "\22\uffff\1\1\6\uffff\1\3\1\uffff\1\2";
    static final String dfa_37s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\2\uffff\1\21\1\22\1\23\1\24\1\25\3\uffff}>";
    static final String[] dfa_38s = {
            "\1\11\1\5\1\uffff\1\1\1\2\1\3\1\4\1\21\41\uffff\1\13\1\uffff\1\20\1\uffff\2\22\1\uffff\1\12\3\uffff\1\17\2\uffff\1\24\1\25\1\uffff\1\27\1\14\4\uffff\1\30\2\uffff\1\31\17\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\1\26",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_26;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "3696:3: ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA48_1 = input.LA(1);

                         
                        int index48_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA48_2 = input.LA(1);

                         
                        int index48_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA48_3 = input.LA(1);

                         
                        int index48_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA48_4 = input.LA(1);

                         
                        int index48_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA48_5 = input.LA(1);

                         
                        int index48_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA48_6 = input.LA(1);

                         
                        int index48_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA48_7 = input.LA(1);

                         
                        int index48_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA48_8 = input.LA(1);

                         
                        int index48_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA48_9 = input.LA(1);

                         
                        int index48_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (synpred79_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA48_10 = input.LA(1);

                         
                        int index48_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA48_11 = input.LA(1);

                         
                        int index48_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA48_12 = input.LA(1);

                         
                        int index48_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA48_13 = input.LA(1);

                         
                        int index48_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA48_14 = input.LA(1);

                         
                        int index48_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA48_15 = input.LA(1);

                         
                        int index48_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA48_16 = input.LA(1);

                         
                        int index48_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA48_17 = input.LA(1);

                         
                        int index48_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA48_20 = input.LA(1);

                         
                        int index48_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_20);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA48_21 = input.LA(1);

                         
                        int index48_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_21);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA48_22 = input.LA(1);

                         
                        int index48_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_22);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA48_23 = input.LA(1);

                         
                        int index48_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_23);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA48_24 = input.LA(1);

                         
                        int index48_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_24);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 48, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_39s = "\1\4\27\0\3\uffff\1\0\6\uffff\1\0\4\uffff";
    static final String dfa_40s = "\1\137\27\0\3\uffff\1\0\6\uffff\1\0\4\uffff";
    static final String dfa_41s = "\30\uffff\1\2\13\uffff\1\3\1\1\1\4";
    static final String dfa_42s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\3\uffff\1\27\6\uffff\1\30\4\uffff}>";
    static final String[] dfa_43s = {
            "\1\11\1\5\1\30\1\1\1\2\1\3\1\4\1\21\41\uffff\1\13\1\uffff\1\20\1\uffff\1\42\1\33\1\uffff\1\12\1\uffff\1\22\1\uffff\1\17\2\30\1\23\1\24\1\30\1\26\1\14\4\30\1\27\1\30\17\uffff\1\44\1\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\1\25\1\30",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[][] dfa_43 = unpackEncodedStringArray(dfa_43s);

    class DFA49 extends DFA {

        public DFA49(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 49;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "3791:3: ( ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_clause_2_0= ruleforClause ) ) | ( (lv_clause_3_0= rulerangeClause ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA49_1 = input.LA(1);

                         
                        int index49_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA49_2 = input.LA(1);

                         
                        int index49_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA49_3 = input.LA(1);

                         
                        int index49_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA49_4 = input.LA(1);

                         
                        int index49_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA49_5 = input.LA(1);

                         
                        int index49_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA49_6 = input.LA(1);

                         
                        int index49_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA49_7 = input.LA(1);

                         
                        int index49_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA49_8 = input.LA(1);

                         
                        int index49_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA49_9 = input.LA(1);

                         
                        int index49_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA49_10 = input.LA(1);

                         
                        int index49_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA49_11 = input.LA(1);

                         
                        int index49_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA49_12 = input.LA(1);

                         
                        int index49_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA49_13 = input.LA(1);

                         
                        int index49_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA49_14 = input.LA(1);

                         
                        int index49_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA49_15 = input.LA(1);

                         
                        int index49_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA49_16 = input.LA(1);

                         
                        int index49_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA49_17 = input.LA(1);

                         
                        int index49_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA49_18 = input.LA(1);

                         
                        int index49_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index49_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA49_19 = input.LA(1);

                         
                        int index49_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA49_20 = input.LA(1);

                         
                        int index49_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA49_21 = input.LA(1);

                         
                        int index49_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA49_22 = input.LA(1);

                         
                        int index49_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA49_23 = input.LA(1);

                         
                        int index49_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalGo()) ) {s = 37;}

                        else if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA49_27 = input.LA(1);

                         
                        int index49_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_27);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA49_34 = input.LA(1);

                         
                        int index49_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 24;}

                        else if ( (synpred82_InternalGo()) ) {s = 36;}

                         
                        input.seek(index49_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 49, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_44s = "\7\uffff";
    static final String dfa_45s = "\1\4\1\uffff\1\13\1\uffff\1\4\1\uffff\1\13";
    static final String dfa_46s = "\1\136\1\uffff\1\106\1\uffff\1\136\1\uffff\1\106";
    static final String dfa_47s = "\1\uffff\1\1\1\uffff\1\3\1\uffff\1\2\1\uffff";
    static final String dfa_48s = "\7\uffff}>";
    static final String[] dfa_49s = {
            "\1\2\1\1\1\uffff\5\1\41\uffff\1\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\1\uffff\2\1\4\uffff\1\1\20\uffff\1\3\1\uffff\1\1\1\uffff\3\1\1\uffff\2\1",
            "",
            "\1\1\41\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\4\3\uffff\1\1\17\uffff\1\5",
            "",
            "\1\6\1\1\1\uffff\5\1\41\uffff\1\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\1\uffff\2\1\4\uffff\1\1\22\uffff\1\1\1\uffff\3\1\1\uffff\2\1",
            "",
            "\1\1\41\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\4\3\uffff\1\1\17\uffff\1\5"
    };

    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[][] dfa_49 = unpackEncodedStringArray(dfa_49s);

    class DFA53 extends DFA {

        public DFA53(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 53;
            this.eot = dfa_44;
            this.eof = dfa_44;
            this.min = dfa_45;
            this.max = dfa_46;
            this.accept = dfa_47;
            this.special = dfa_48;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "3986:3: ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )?";
        }
    }
    static final String dfa_50s = "\13\uffff";
    static final String dfa_51s = "\1\64\1\0\11\uffff";
    static final String dfa_52s = "\1\135\1\0\11\uffff";
    static final String dfa_53s = "\2\uffff\1\2\1\3\1\4\1\5\1\7\1\10\1\uffff\1\1\1\6";
    static final String dfa_54s = "\1\uffff\1\0\11\uffff}>";
    static final String[] dfa_55s = {
            "\1\4\3\uffff\1\7\6\uffff\1\3\27\uffff\1\1\1\uffff\1\5\1\6\1\7\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final char[] dfa_51 = DFA.unpackEncodedStringToUnsignedChars(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[][] dfa_55 = unpackEncodedStringArray(dfa_55s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_51;
            this.max = dfa_52;
            this.accept = dfa_53;
            this.special = dfa_54;
            this.transition = dfa_55;
        }
        public String getDescription() {
            return "4267:2: ( ( (lv_lit_0_0= rulearrayType ) ) | ( (lv_lit_1_0= rulestructType ) ) | ( (lv_lit_2_0= rulepointerType ) ) | ( (lv_lit_3_0= rulefunctionType ) ) | ( (lv_lit_4_0= ruleinterfaceType ) ) | ( (lv_lit_5_0= rulesliceType ) ) | ( (lv_lit_6_0= rulemapType ) ) | ( (lv_lit_7_0= rulechannelType ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA56_1 = input.LA(1);

                         
                        int index56_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred91_InternalGo()) ) {s = 9;}

                        else if ( (synpred96_InternalGo()) ) {s = 10;}

                         
                        input.seek(index56_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 56, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_56s = "\25\uffff";
    static final String dfa_57s = "\1\13\24\uffff";
    static final String dfa_58s = "\1\4\1\0\23\uffff";
    static final String dfa_59s = "\1\137\1\0\23\uffff";
    static final String dfa_60s = "\2\uffff\1\1\10\uffff\1\2\11\uffff";
    static final String dfa_61s = "\1\uffff\1\0\23\uffff}>";
    static final String[] dfa_62s = {
            "\1\2\1\13\47\uffff\1\1\1\13\2\uffff\2\13\1\uffff\1\2\1\uffff\1\13\1\uffff\1\2\6\uffff\1\2\7\uffff\1\13\17\uffff\1\2\1\13\3\2\1\13\1\2\1\uffff\1\13",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final char[] dfa_58 = DFA.unpackEncodedStringToUnsignedChars(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[][] dfa_62 = unpackEncodedStringArray(dfa_62s);

    class DFA60 extends DFA {

        public DFA60(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 60;
            this.eot = dfa_56;
            this.eof = dfa_57;
            this.min = dfa_58;
            this.max = dfa_59;
            this.accept = dfa_60;
            this.special = dfa_61;
            this.transition = dfa_62;
        }
        public String getDescription() {
            return "5007:3: ( (lv_result_1_0= ruleresult ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA60_1 = input.LA(1);

                         
                        int index60_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalGo()) ) {s = 2;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index60_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 60, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_63s = "\14\uffff";
    static final String dfa_64s = "\1\4\1\0\12\uffff";
    static final String dfa_65s = "\1\135\1\0\12\uffff";
    static final String dfa_66s = "\2\uffff\1\2\10\uffff\1\1";
    static final String dfa_67s = "\1\uffff\1\0\12\uffff}>";
    static final String[] dfa_68s = {
            "\1\2\50\uffff\1\1\6\uffff\1\2\3\uffff\1\2\6\uffff\1\2\27\uffff\1\2\1\uffff\3\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final char[] dfa_64 = DFA.unpackEncodedStringToUnsignedChars(dfa_64s);
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[][] dfa_68 = unpackEncodedStringArray(dfa_68s);

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_63;
            this.eof = dfa_63;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_68;
        }
        public String getDescription() {
            return "5044:2: ( ( (lv_params_0_0= ruleparameters ) ) | ( (lv_type_1_0= ruletype ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA61_1 = input.LA(1);

                         
                        int index61_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index61_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 61, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_69s = "\17\uffff";
    static final String dfa_70s = "\1\4\10\uffff\1\0\1\uffff\1\0\3\uffff";
    static final String dfa_71s = "\1\135\10\uffff\1\0\1\uffff\1\0\3\uffff";
    static final String dfa_72s = "\1\uffff\1\1\12\uffff\1\2\1\3\1\4";
    static final String dfa_73s = "\11\uffff\1\0\1\uffff\1\1\3\uffff}>";
    static final String[] dfa_74s = {
            "\1\11\1\1\1\uffff\4\1\42\uffff\1\13\6\uffff\1\1\42\uffff\1\1\2\uffff\1\1\2\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final char[] dfa_70 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[][] dfa_74 = unpackEncodedStringArray(dfa_74s);

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_69;
            this.eof = dfa_69;
            this.min = dfa_70;
            this.max = dfa_71;
            this.accept = dfa_72;
            this.special = dfa_73;
            this.transition = dfa_74;
        }
        public String getDescription() {
            return "5282:2: ( ( (lv_content_0_0= ruleliteral ) ) | ( (lv_content_1_0= ruleoperandName ) ) | ( (lv_content_2_0= rulemethodExpr ) ) | (otherlv_3= '(' ( (lv_content_4_0= ruleexpression ) ) otherlv_5= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA67_9 = input.LA(1);

                         
                        int index67_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred109_InternalGo()) ) {s = 1;}

                        else if ( (synpred110_InternalGo()) ) {s = 12;}

                        else if ( (synpred111_InternalGo()) ) {s = 13;}

                         
                        input.seek(index67_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA67_11 = input.LA(1);

                         
                        int index67_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalGo()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index67_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 67, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_75s = "\1\4\21\0\1\uffff\6\0\3\uffff";
    static final String dfa_76s = "\1\136\21\0\1\uffff\6\0\3\uffff";
    static final String dfa_77s = "\22\uffff\1\1\6\uffff\1\2\2\uffff";
    static final String dfa_78s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\uffff\1\21\1\22\1\23\1\24\1\25\1\26\3\uffff}>";
    static final String[] dfa_79s = {
            "\1\1\1\6\1\uffff\1\2\1\3\1\4\1\5\1\21\41\uffff\1\13\1\uffff\1\20\2\uffff\1\31\1\uffff\1\12\1\uffff\1\30\1\31\1\17\2\uffff\1\23\1\24\1\uffff\1\26\1\14\4\uffff\1\27\2\uffff\1\22\17\uffff\1\10\1\uffff\1\15\1\11\1\16\1\uffff\1\7\1\25",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[][] dfa_79 = unpackEncodedStringArray(dfa_79s);

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = dfa_26;
            this.eof = dfa_33;
            this.min = dfa_75;
            this.max = dfa_76;
            this.accept = dfa_77;
            this.special = dfa_78;
            this.transition = dfa_79;
        }
        public String getDescription() {
            return "5969:3: ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA75_1 = input.LA(1);

                         
                        int index75_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA75_2 = input.LA(1);

                         
                        int index75_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA75_3 = input.LA(1);

                         
                        int index75_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA75_4 = input.LA(1);

                         
                        int index75_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA75_5 = input.LA(1);

                         
                        int index75_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA75_6 = input.LA(1);

                         
                        int index75_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA75_7 = input.LA(1);

                         
                        int index75_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA75_8 = input.LA(1);

                         
                        int index75_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA75_9 = input.LA(1);

                         
                        int index75_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA75_10 = input.LA(1);

                         
                        int index75_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA75_11 = input.LA(1);

                         
                        int index75_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA75_12 = input.LA(1);

                         
                        int index75_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA75_13 = input.LA(1);

                         
                        int index75_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA75_14 = input.LA(1);

                         
                        int index75_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA75_15 = input.LA(1);

                         
                        int index75_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA75_16 = input.LA(1);

                         
                        int index75_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA75_17 = input.LA(1);

                         
                        int index75_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA75_19 = input.LA(1);

                         
                        int index75_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA75_20 = input.LA(1);

                         
                        int index75_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA75_21 = input.LA(1);

                         
                        int index75_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA75_22 = input.LA(1);

                         
                        int index75_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA75_23 = input.LA(1);

                         
                        int index75_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA75_24 = input.LA(1);

                         
                        int index75_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index75_24);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 75, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_80s = "\55\uffff";
    static final String dfa_81s = "\1\21\54\uffff";
    static final String dfa_82s = "\1\4\6\uffff\1\0\3\uffff\2\0\2\uffff\31\0\5\uffff";
    static final String dfa_83s = "\1\137\6\uffff\1\0\3\uffff\2\0\2\uffff\31\0\5\uffff";
    static final String dfa_84s = "\1\uffff\1\1\46\uffff\1\2\1\3\1\4\1\5\1\6";
    static final String dfa_85s = "\7\uffff\1\0\3\uffff\1\1\1\2\2\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\5\uffff}>";
    static final String[] dfa_86s = {
            "\2\1\1\uffff\4\1\1\22\41\uffff\1\13\1\43\1\20\1\uffff\1\37\1\23\1\uffff\1\1\1\uffff\1\40\1\47\1\17\1\44\1\45\1\25\1\26\1\27\1\30\1\14\1\31\1\32\1\33\1\34\1\35\1\36\1\uffff\1\41\17\uffff\1\7\1\46\3\1\1\42\1\1\1\uffff\1\24",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final char[] dfa_83 = DFA.unpackEncodedStringToUnsignedChars(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[][] dfa_86 = unpackEncodedStringArray(dfa_86s);

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = dfa_80;
            this.eof = dfa_81;
            this.min = dfa_82;
            this.max = dfa_83;
            this.accept = dfa_84;
            this.special = dfa_85;
            this.transition = dfa_86;
        }
        public String getDescription() {
            return "6401:2: ( ( ( (lv_content_0_0= ruleoperand ) ) | ( (lv_content_1_0= ruleconversion ) ) ) | ( (lv_content_2_0= ruleprimaryExprSelector ) ) | ( (lv_content_3_0= ruleprimaryExprIndex ) ) | ( (lv_content_4_0= ruleprimaryExprSlice ) ) | ( (lv_content_5_0= ruleprimaryExprTypeAssertion ) ) | ( (lv_content_6_0= ruleprimaryExprArguments ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA83_7 = input.LA(1);

                         
                        int index83_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalGo()) ) {s = 1;}

                        else if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA83_11 = input.LA(1);

                         
                        int index83_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalGo()) ) {s = 1;}

                        else if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA83_12 = input.LA(1);

                         
                        int index83_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalGo()) ) {s = 1;}

                        else if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA83_15 = input.LA(1);

                         
                        int index83_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalGo()) ) {s = 1;}

                        else if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_15);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA83_16 = input.LA(1);

                         
                        int index83_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_16);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA83_17 = input.LA(1);

                         
                        int index83_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_17);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA83_18 = input.LA(1);

                         
                        int index83_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_18);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA83_19 = input.LA(1);

                         
                        int index83_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_19);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA83_20 = input.LA(1);

                         
                        int index83_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_20);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA83_21 = input.LA(1);

                         
                        int index83_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_21);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA83_22 = input.LA(1);

                         
                        int index83_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_22);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA83_23 = input.LA(1);

                         
                        int index83_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_23);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA83_24 = input.LA(1);

                         
                        int index83_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_24);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA83_25 = input.LA(1);

                         
                        int index83_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_25);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA83_26 = input.LA(1);

                         
                        int index83_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_26);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA83_27 = input.LA(1);

                         
                        int index83_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_27);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA83_28 = input.LA(1);

                         
                        int index83_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_28);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA83_29 = input.LA(1);

                         
                        int index83_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_29);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA83_30 = input.LA(1);

                         
                        int index83_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_30);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA83_31 = input.LA(1);

                         
                        int index83_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_31);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA83_32 = input.LA(1);

                         
                        int index83_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_32);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA83_33 = input.LA(1);

                         
                        int index83_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_33);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA83_34 = input.LA(1);

                         
                        int index83_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_34);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA83_35 = input.LA(1);

                         
                        int index83_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_35);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA83_36 = input.LA(1);

                         
                        int index83_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_36);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA83_37 = input.LA(1);

                         
                        int index83_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_37);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA83_38 = input.LA(1);

                         
                        int index83_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_38);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA83_39 = input.LA(1);

                         
                        int index83_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 40;}

                        else if ( (synpred138_InternalGo()) ) {s = 41;}

                        else if ( (synpred139_InternalGo()) ) {s = 42;}

                        else if ( (synpred140_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index83_39);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_87s = "\20\uffff";
    static final String dfa_88s = "\1\4\5\uffff\6\0\4\uffff";
    static final String dfa_89s = "\1\135\5\uffff\6\0\4\uffff";
    static final String dfa_90s = "\1\uffff\1\1\12\uffff\1\2\3\uffff";
    static final String dfa_91s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\4\uffff}>";
    static final String[] dfa_92s = {
            "\1\11\1\1\1\uffff\4\1\42\uffff\1\13\6\uffff\1\12\3\uffff\1\14\6\uffff\1\14\27\uffff\1\7\1\uffff\1\14\1\10\1\14\1\uffff\1\6",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final char[] dfa_89 = DFA.unpackEncodedStringToUnsignedChars(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[] dfa_91 = DFA.unpackEncodedString(dfa_91s);
    static final short[][] dfa_92 = unpackEncodedStringArray(dfa_92s);

    class DFA82 extends DFA {

        public DFA82(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 82;
            this.eot = dfa_87;
            this.eof = dfa_87;
            this.min = dfa_88;
            this.max = dfa_89;
            this.accept = dfa_90;
            this.special = dfa_91;
            this.transition = dfa_92;
        }
        public String getDescription() {
            return "6402:3: ( ( (lv_content_0_0= ruleoperand ) ) | ( (lv_content_1_0= ruleconversion ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA82_6 = input.LA(1);

                         
                        int index82_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index82_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA82_7 = input.LA(1);

                         
                        int index82_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index82_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA82_8 = input.LA(1);

                         
                        int index82_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index82_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA82_9 = input.LA(1);

                         
                        int index82_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index82_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA82_10 = input.LA(1);

                         
                        int index82_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index82_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA82_11 = input.LA(1);

                         
                        int index82_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index82_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 82, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_93s = "\32\uffff";
    static final String dfa_94s = "\1\4\27\0\2\uffff";
    static final String dfa_95s = "\1\136\27\0\2\uffff";
    static final String dfa_96s = "\30\uffff\1\1\1\2";
    static final String dfa_97s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\2\uffff}>";
    static final String[] dfa_98s = {
            "\1\11\1\5\1\uffff\1\1\1\2\1\3\1\4\1\21\41\uffff\1\13\1\uffff\1\20\4\uffff\1\12\3\uffff\1\17\2\uffff\1\23\1\24\1\uffff\1\26\1\14\4\uffff\1\27\2\uffff\1\22\17\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\1\25",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final char[] dfa_94 = DFA.unpackEncodedStringToUnsignedChars(dfa_94s);
    static final char[] dfa_95 = DFA.unpackEncodedStringToUnsignedChars(dfa_95s);
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[] dfa_97 = DFA.unpackEncodedString(dfa_97s);
    static final short[][] dfa_98 = unpackEncodedStringArray(dfa_98s);

    class DFA93 extends DFA {

        public DFA93(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 93;
            this.eot = dfa_93;
            this.eof = dfa_93;
            this.min = dfa_94;
            this.max = dfa_95;
            this.accept = dfa_96;
            this.special = dfa_97;
            this.transition = dfa_98;
        }
        public String getDescription() {
            return "7056:3: ( ( ( (lv_expr1_1_0= ruleexpression ) )? otherlv_2= ':' ( (lv_expr2_3_0= ruleexpression ) )? ) | ( ( (lv_expr1_4_0= ruleexpression ) )? otherlv_5= ':' ( (lv_expr2_6_0= ruleexpression ) ) otherlv_7= ':' ( (lv_expr3_8_0= ruleexpression ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA93_1 = input.LA(1);

                         
                        int index93_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA93_2 = input.LA(1);

                         
                        int index93_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA93_3 = input.LA(1);

                         
                        int index93_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA93_4 = input.LA(1);

                         
                        int index93_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA93_5 = input.LA(1);

                         
                        int index93_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA93_6 = input.LA(1);

                         
                        int index93_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA93_7 = input.LA(1);

                         
                        int index93_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA93_8 = input.LA(1);

                         
                        int index93_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA93_9 = input.LA(1);

                         
                        int index93_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA93_10 = input.LA(1);

                         
                        int index93_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA93_11 = input.LA(1);

                         
                        int index93_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA93_12 = input.LA(1);

                         
                        int index93_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA93_13 = input.LA(1);

                         
                        int index93_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA93_14 = input.LA(1);

                         
                        int index93_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA93_15 = input.LA(1);

                         
                        int index93_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA93_16 = input.LA(1);

                         
                        int index93_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA93_17 = input.LA(1);

                         
                        int index93_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA93_18 = input.LA(1);

                         
                        int index93_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA93_19 = input.LA(1);

                         
                        int index93_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA93_20 = input.LA(1);

                         
                        int index93_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA93_21 = input.LA(1);

                         
                        int index93_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA93_22 = input.LA(1);

                         
                        int index93_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA93_23 = input.LA(1);

                         
                        int index93_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index93_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 93, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_99s = "\33\uffff";
    static final String dfa_100s = "\1\4\5\uffff\12\0\13\uffff";
    static final String dfa_101s = "\1\136\5\uffff\12\0\13\uffff";
    static final String dfa_102s = "\1\uffff\1\1\30\uffff\1\2";
    static final String dfa_103s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\13\uffff}>";
    static final String[] dfa_104s = {
            "\1\11\1\1\1\uffff\5\1\41\uffff\1\13\2\1\2\uffff\1\1\1\uffff\1\12\3\uffff\1\17\2\uffff\2\1\1\uffff\1\1\1\14\4\uffff\1\1\22\uffff\1\7\1\uffff\1\15\1\10\1\16\1\1\1\6\1\1",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final char[] dfa_100 = DFA.unpackEncodedStringToUnsignedChars(dfa_100s);
    static final char[] dfa_101 = DFA.unpackEncodedStringToUnsignedChars(dfa_101s);
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final short[][] dfa_104 = unpackEncodedStringArray(dfa_104s);

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = dfa_99;
            this.eof = dfa_99;
            this.min = dfa_100;
            this.max = dfa_101;
            this.accept = dfa_102;
            this.special = dfa_103;
            this.transition = dfa_104;
        }
        public String getDescription() {
            return "7248:4: ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_6 = input.LA(1);

                         
                        int index95_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index95_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA95_7 = input.LA(1);

                         
                        int index95_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index95_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA95_8 = input.LA(1);

                         
                        int index95_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index95_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA95_9 = input.LA(1);

                         
                        int index95_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index95_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA95_10 = input.LA(1);

                         
                        int index95_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index95_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA95_11 = input.LA(1);

                         
                        int index95_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index95_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA95_12 = input.LA(1);

                         
                        int index95_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index95_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA95_13 = input.LA(1);

                         
                        int index95_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index95_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA95_14 = input.LA(1);

                         
                        int index95_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index95_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA95_15 = input.LA(1);

                         
                        int index95_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index95_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA111 extends DFA {

        public DFA111(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 111;
            this.eot = dfa_87;
            this.eof = dfa_87;
            this.min = dfa_88;
            this.max = dfa_89;
            this.accept = dfa_90;
            this.special = dfa_91;
            this.transition = dfa_92;
        }
        public String getDescription() {
            return "6402:3: ( ( (lv_content_0_0= ruleoperand ) ) | ( (lv_content_1_0= ruleconversion ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA111_6 = input.LA(1);

                         
                        int index111_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index111_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA111_7 = input.LA(1);

                         
                        int index111_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index111_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA111_8 = input.LA(1);

                         
                        int index111_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index111_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA111_9 = input.LA(1);

                         
                        int index111_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index111_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA111_10 = input.LA(1);

                         
                        int index111_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index111_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA111_11 = input.LA(1);

                         
                        int index111_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index111_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 111, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_105s = "\1\1\32\uffff";
    static final String[] dfa_106s = {
            "\1\11\1\1\1\uffff\5\1\41\uffff\1\13\1\uffff\1\1\2\uffff\1\1\1\uffff\1\12\3\uffff\1\17\2\uffff\2\1\1\uffff\1\1\1\14\4\uffff\1\1\22\uffff\1\7\1\uffff\1\15\1\10\1\16\1\1\1\6\1\1",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final short[][] dfa_106 = unpackEncodedStringArray(dfa_106s);

    class DFA115 extends DFA {

        public DFA115(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 115;
            this.eot = dfa_99;
            this.eof = dfa_105;
            this.min = dfa_100;
            this.max = dfa_101;
            this.accept = dfa_102;
            this.special = dfa_103;
            this.transition = dfa_106;
        }
        public String getDescription() {
            return "7248:4: ( ( (lv_expressionList_1_0= ruleexpressionList ) ) | ( ( (lv_type_2_0= ruletype ) ) (otherlv_3= ',' ( (lv_expressionList_4_0= ruleexpressionList ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA115_6 = input.LA(1);

                         
                        int index115_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index115_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA115_7 = input.LA(1);

                         
                        int index115_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index115_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA115_8 = input.LA(1);

                         
                        int index115_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index115_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA115_9 = input.LA(1);

                         
                        int index115_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index115_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA115_10 = input.LA(1);

                         
                        int index115_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index115_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA115_11 = input.LA(1);

                         
                        int index115_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index115_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA115_12 = input.LA(1);

                         
                        int index115_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index115_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA115_13 = input.LA(1);

                         
                        int index115_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index115_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA115_14 = input.LA(1);

                         
                        int index115_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index115_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA115_15 = input.LA(1);

                         
                        int index115_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index115_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 115, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0039100000000002L,0x0000000080000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0039100000000002L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0039000000000002L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000A00000000030L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000C00000000030L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000800000000030L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000200000000010L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000400000000010L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x8112200000000012L,0x000000002E800000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0xD910A000000007B0L,0x000000006E800010L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0004000000000002L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x8110200000000010L,0x000000002E800000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x8112200000000010L,0x000000002E800000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0xD9F9A000000007F0L,0x000000006ED97F10L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0xD979A000000007F2L,0x000000006ED97F10L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0600000000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0xF802000000000000L,0x000000000000003FL});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0xD979A000000007F0L,0x000000006ED97F10L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0xD910A000000007B2L,0x000000006E800010L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0xD910A000000007F0L,0x000000006E800010L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0040000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0xD950A000000007F0L,0x000000006E800010L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0xD950A000000007B0L,0x000000006E800010L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0080000000000000L,0x0000000000060000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x8110A000000007B0L,0x000000002E800000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0xD950A000000007F0L,0x00000000EEA00010L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0xD910A000000007B0L,0x00000000EE800010L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0xD910A000000007F2L,0x000000006E800010L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0080000000000010L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x8110200000000012L,0x000000002E800000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x8110600000000010L,0x000000003E800000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0004400000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x8110200000000010L,0x000000003E800000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0xD9D0A000000007B0L,0x000000006E800010L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0084000000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x8080000000000010L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000A00000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0xD910A000000007B0L,0x000000006E800090L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0xD910A000000007B0L,0x000000006F800010L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0xD910E000000007B0L,0x000000006E800010L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0004400000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0004000000000002L,0x0000000010000000L});

}