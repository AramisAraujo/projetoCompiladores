package org.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.GoGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalGoParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_IDENTIFIER", "RULE_STRING_LIT", "RULE_WS", "RULE_INT_LIT", "RULE_FLOAT_LIT", "RULE_IMAGINARY_LIT", "RULE_RUNE_LIT", "RULE_BINARY_OP", "RULE_LETTER", "RULE_DECIMAL_DIGIT", "RULE_REL_OP", "RULE_ADD_OP", "RULE_MUL_OP", "RULE_UNARY_OP", "RULE_DECIMAL_LIT", "RULE_OCTAL_LIT", "RULE_HEX_LIT", "RULE_OCTAL_DIGIT", "RULE_HEX_DIGIT", "RULE_DECIMALS", "RULE_EXPONENT", "RULE_UNICODE_VALUE", "RULE_BYTE_VALUE", "RULE_UNICODE_CHAR", "RULE_LITTLE_U_VALUE", "RULE_BIG_U_VALUE", "RULE_ESCAPED_CHAR", "RULE_OCTAL_BYTE_VALUE", "RULE_HEX_BYTE_VALUE", "RULE_RAW_STRING_LIT", "RULE_INTERPRETED_STRING_LIT", "RULE_NEWLINE", "RULE_UNICODE_LETTER", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_ANY_OTHER", "'package'", "'import'", "'('", "')'", "'.'", "'const'", "'='", "','", "'type'", "'func'", "'var'", "'{'", "'}'", "'<-'", "'++'", "'--'", "'+'", "'-'", "'|'", "'^'", "'*'", "'/'", "'%'", "'<<'", "'>>'", "'&'", "'&^'", "':='", "':'", "'return'", "'break'", "'continue'", "'goto'", "'fallthrough'", "'defer'", "'if'", "'else'", "'switch'", "'case'", "'default'", "'select'", "'for'", "'range'", "'go'", "'Array'", "'StructType'", "'Pointer'", "'Function'", "'Interface'", "'Slice'", "'Map'", "'Channel'", "'['", "']'", "'interface'", "'map'", "'chan'", "'...'", "'struct'", "'!'", "';'"
    };
    public static final int T__50=50;
    public static final int RULE_DECIMAL_DIGIT=13;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=37;
    public static final int RULE_INT=38;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=40;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int RULE_DECIMALS=23;
    public static final int RULE_NEWLINE=35;
    public static final int RULE_BIG_U_VALUE=29;
    public static final int RULE_ESCAPED_CHAR=30;
    public static final int RULE_BYTE_VALUE=26;
    public static final int RULE_UNICODE_LETTER=36;
    public static final int RULE_UNICODE_CHAR=27;
    public static final int RULE_OCTAL_DIGIT=21;
    public static final int RULE_LETTER=12;
    public static final int RULE_EXPONENT=24;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_RAW_STRING_LIT=33;
    public static final int T__44=44;
    public static final int RULE_UNARY_OP=17;
    public static final int T__45=45;
    public static final int RULE_HEX_DIGIT=22;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int RULE_RUNE_LIT=10;
    public static final int RULE_DECIMAL_LIT=18;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int T__99=99;
    public static final int RULE_BINARY_OP=11;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int RULE_IMAGINARY_LIT=9;
    public static final int T__98=98;
    public static final int RULE_STRING_LIT=5;
    public static final int RULE_INTERPRETED_STRING_LIT=34;
    public static final int RULE_UNICODE_VALUE=25;
    public static final int RULE_LITTLE_U_VALUE=28;
    public static final int RULE_HEX_BYTE_VALUE=32;
    public static final int RULE_OCTAL_BYTE_VALUE=31;
    public static final int RULE_MUL_OP=16;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_IDENTIFIER=4;
    public static final int RULE_STRING=39;
    public static final int RULE_SL_COMMENT=41;
    public static final int T__77=77;
    public static final int RULE_HEX_LIT=20;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int RULE_ADD_OP=15;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_WS=6;
    public static final int RULE_ANY_OTHER=42;
    public static final int RULE_OCTAL_LIT=19;
    public static final int RULE_FLOAT_LIT=8;
    public static final int RULE_INT_LIT=7;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int RULE_REL_OP=14;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalGoParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalGoParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalGoParser.tokenNames; }
    public String getGrammarFileName() { return "InternalGo.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private GoGrammarAccess grammarAccess;

        public InternalGoParser(TokenStream input, GoGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected GoGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalGo.g:70:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalGo.g:70:46: (iv_ruleModel= ruleModel EOF )
            // InternalGo.g:71:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalGo.g:77:1: ruleModel returns [EObject current=null] : ( (lv_greetings_0_0= rulesourceFile ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_greetings_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:83:2: ( ( (lv_greetings_0_0= rulesourceFile ) ) )
            // InternalGo.g:84:2: ( (lv_greetings_0_0= rulesourceFile ) )
            {
            // InternalGo.g:84:2: ( (lv_greetings_0_0= rulesourceFile ) )
            // InternalGo.g:85:3: (lv_greetings_0_0= rulesourceFile )
            {
            // InternalGo.g:85:3: (lv_greetings_0_0= rulesourceFile )
            // InternalGo.g:86:4: lv_greetings_0_0= rulesourceFile
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getModelAccess().getGreetingsSourceFileParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_greetings_0_0=rulesourceFile();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getModelRule());
              				}
              				add(
              					current,
              					"greetings",
              					lv_greetings_0_0,
              					"org.xtext.Go.sourceFile");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRulesourceFile"
    // InternalGo.g:106:1: entryRulesourceFile returns [EObject current=null] : iv_rulesourceFile= rulesourceFile EOF ;
    public final EObject entryRulesourceFile() throws RecognitionException {
        EObject current = null;

        EObject iv_rulesourceFile = null;


        try {
            // InternalGo.g:106:51: (iv_rulesourceFile= rulesourceFile EOF )
            // InternalGo.g:107:2: iv_rulesourceFile= rulesourceFile EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSourceFileRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulesourceFile=rulesourceFile();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesourceFile; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulesourceFile"


    // $ANTLR start "rulesourceFile"
    // InternalGo.g:113:1: rulesourceFile returns [EObject current=null] : ( ( (lv_package_0_0= rulepackageClause ) ) ( ruleeos )? ( ( (lv_imports_2_0= ruleimportDecl ) ) ( ruleeos )? )* ( ( (lv_topLevelDecls_4_0= ruletopLevelDecl ) ) ruleeos )* ) ;
    public final EObject rulesourceFile() throws RecognitionException {
        EObject current = null;

        EObject lv_package_0_0 = null;

        EObject lv_imports_2_0 = null;

        EObject lv_topLevelDecls_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:119:2: ( ( ( (lv_package_0_0= rulepackageClause ) ) ( ruleeos )? ( ( (lv_imports_2_0= ruleimportDecl ) ) ( ruleeos )? )* ( ( (lv_topLevelDecls_4_0= ruletopLevelDecl ) ) ruleeos )* ) )
            // InternalGo.g:120:2: ( ( (lv_package_0_0= rulepackageClause ) ) ( ruleeos )? ( ( (lv_imports_2_0= ruleimportDecl ) ) ( ruleeos )? )* ( ( (lv_topLevelDecls_4_0= ruletopLevelDecl ) ) ruleeos )* )
            {
            // InternalGo.g:120:2: ( ( (lv_package_0_0= rulepackageClause ) ) ( ruleeos )? ( ( (lv_imports_2_0= ruleimportDecl ) ) ( ruleeos )? )* ( ( (lv_topLevelDecls_4_0= ruletopLevelDecl ) ) ruleeos )* )
            // InternalGo.g:121:3: ( (lv_package_0_0= rulepackageClause ) ) ( ruleeos )? ( ( (lv_imports_2_0= ruleimportDecl ) ) ( ruleeos )? )* ( ( (lv_topLevelDecls_4_0= ruletopLevelDecl ) ) ruleeos )*
            {
            // InternalGo.g:121:3: ( (lv_package_0_0= rulepackageClause ) )
            // InternalGo.g:122:4: (lv_package_0_0= rulepackageClause )
            {
            // InternalGo.g:122:4: (lv_package_0_0= rulepackageClause )
            // InternalGo.g:123:5: lv_package_0_0= rulepackageClause
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSourceFileAccess().getPackagePackageClauseParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_package_0_0=rulepackageClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSourceFileRule());
              					}
              					set(
              						current,
              						"package",
              						lv_package_0_0,
              						"org.xtext.Go.packageClause");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:140:3: ( ruleeos )?
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==103) ) {
                alt1=1;
            }
            switch (alt1) {
                case 1 :
                    // InternalGo.g:141:4: ruleeos
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSourceFileAccess().getEosParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_4);
                    ruleeos();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:152:3: ( ( (lv_imports_2_0= ruleimportDecl ) ) ( ruleeos )? )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==44) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalGo.g:153:4: ( (lv_imports_2_0= ruleimportDecl ) ) ( ruleeos )?
            	    {
            	    // InternalGo.g:153:4: ( (lv_imports_2_0= ruleimportDecl ) )
            	    // InternalGo.g:154:5: (lv_imports_2_0= ruleimportDecl )
            	    {
            	    // InternalGo.g:154:5: (lv_imports_2_0= ruleimportDecl )
            	    // InternalGo.g:155:6: lv_imports_2_0= ruleimportDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSourceFileAccess().getImportsImportDeclParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_imports_2_0=ruleimportDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSourceFileRule());
            	      						}
            	      						add(
            	      							current,
            	      							"imports",
            	      							lv_imports_2_0,
            	      							"org.xtext.Go.importDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalGo.g:172:4: ( ruleeos )?
            	    int alt2=2;
            	    int LA2_0 = input.LA(1);

            	    if ( (LA2_0==103) ) {
            	        alt2=1;
            	    }
            	    switch (alt2) {
            	        case 1 :
            	            // InternalGo.g:173:5: ruleeos
            	            {
            	            if ( state.backtracking==0 ) {

            	              					/* */
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newCompositeNode(grammarAccess.getSourceFileAccess().getEosParserRuleCall_2_1());
            	              				
            	            }
            	            pushFollow(FOLLOW_4);
            	            ruleeos();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					afterParserOrEnumRuleCall();
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            // InternalGo.g:185:3: ( ( (lv_topLevelDecls_4_0= ruletopLevelDecl ) ) ruleeos )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==48||(LA4_0>=51 && LA4_0<=53)) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // InternalGo.g:186:4: ( (lv_topLevelDecls_4_0= ruletopLevelDecl ) ) ruleeos
            	    {
            	    // InternalGo.g:186:4: ( (lv_topLevelDecls_4_0= ruletopLevelDecl ) )
            	    // InternalGo.g:187:5: (lv_topLevelDecls_4_0= ruletopLevelDecl )
            	    {
            	    // InternalGo.g:187:5: (lv_topLevelDecls_4_0= ruletopLevelDecl )
            	    // InternalGo.g:188:6: lv_topLevelDecls_4_0= ruletopLevelDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSourceFileAccess().getTopLevelDeclsTopLevelDeclParserRuleCall_3_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_topLevelDecls_4_0=ruletopLevelDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSourceFileRule());
            	      						}
            	      						add(
            	      							current,
            	      							"topLevelDecls",
            	      							lv_topLevelDecls_4_0,
            	      							"org.xtext.Go.topLevelDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      				/* */
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getSourceFileAccess().getEosParserRuleCall_3_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_6);
            	    ruleeos();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulesourceFile"


    // $ANTLR start "entryRulepackageClause"
    // InternalGo.g:220:1: entryRulepackageClause returns [EObject current=null] : iv_rulepackageClause= rulepackageClause EOF ;
    public final EObject entryRulepackageClause() throws RecognitionException {
        EObject current = null;

        EObject iv_rulepackageClause = null;


        try {
            // InternalGo.g:220:54: (iv_rulepackageClause= rulepackageClause EOF )
            // InternalGo.g:221:2: iv_rulepackageClause= rulepackageClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulepackageClause=rulepackageClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulepackageClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulepackageClause"


    // $ANTLR start "rulepackageClause"
    // InternalGo.g:227:1: rulepackageClause returns [EObject current=null] : (otherlv_0= 'package' ( (lv_packageName_1_0= RULE_IDENTIFIER ) ) ) ;
    public final EObject rulepackageClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_packageName_1_0=null;


        	enterRule();

        try {
            // InternalGo.g:233:2: ( (otherlv_0= 'package' ( (lv_packageName_1_0= RULE_IDENTIFIER ) ) ) )
            // InternalGo.g:234:2: (otherlv_0= 'package' ( (lv_packageName_1_0= RULE_IDENTIFIER ) ) )
            {
            // InternalGo.g:234:2: (otherlv_0= 'package' ( (lv_packageName_1_0= RULE_IDENTIFIER ) ) )
            // InternalGo.g:235:3: otherlv_0= 'package' ( (lv_packageName_1_0= RULE_IDENTIFIER ) )
            {
            otherlv_0=(Token)match(input,43,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPackageClauseAccess().getPackageKeyword_0());
              		
            }
            // InternalGo.g:239:3: ( (lv_packageName_1_0= RULE_IDENTIFIER ) )
            // InternalGo.g:240:4: (lv_packageName_1_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:240:4: (lv_packageName_1_0= RULE_IDENTIFIER )
            // InternalGo.g:241:5: lv_packageName_1_0= RULE_IDENTIFIER
            {
            lv_packageName_1_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_packageName_1_0, grammarAccess.getPackageClauseAccess().getPackageNameIDENTIFIERTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPackageClauseRule());
              					}
              					setWithLastConsumed(
              						current,
              						"packageName",
              						lv_packageName_1_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulepackageClause"


    // $ANTLR start "entryRuleimportDecl"
    // InternalGo.g:261:1: entryRuleimportDecl returns [EObject current=null] : iv_ruleimportDecl= ruleimportDecl EOF ;
    public final EObject entryRuleimportDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleimportDecl = null;


        try {
            // InternalGo.g:261:51: (iv_ruleimportDecl= ruleimportDecl EOF )
            // InternalGo.g:262:2: iv_ruleimportDecl= ruleimportDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleimportDecl=ruleimportDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleimportDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleimportDecl"


    // $ANTLR start "ruleimportDecl"
    // InternalGo.g:268:1: ruleimportDecl returns [EObject current=null] : ( () otherlv_1= 'import' ( ( (lv_specs_2_0= ruleimportSpec ) ) | (otherlv_3= '(' ( ( (lv_specs_4_0= ruleimportSpec ) ) ( ruleeos )? )* otherlv_6= ')' ) ) ) ;
    public final EObject ruleimportDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        EObject lv_specs_2_0 = null;

        EObject lv_specs_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:274:2: ( ( () otherlv_1= 'import' ( ( (lv_specs_2_0= ruleimportSpec ) ) | (otherlv_3= '(' ( ( (lv_specs_4_0= ruleimportSpec ) ) ( ruleeos )? )* otherlv_6= ')' ) ) ) )
            // InternalGo.g:275:2: ( () otherlv_1= 'import' ( ( (lv_specs_2_0= ruleimportSpec ) ) | (otherlv_3= '(' ( ( (lv_specs_4_0= ruleimportSpec ) ) ( ruleeos )? )* otherlv_6= ')' ) ) )
            {
            // InternalGo.g:275:2: ( () otherlv_1= 'import' ( ( (lv_specs_2_0= ruleimportSpec ) ) | (otherlv_3= '(' ( ( (lv_specs_4_0= ruleimportSpec ) ) ( ruleeos )? )* otherlv_6= ')' ) ) )
            // InternalGo.g:276:3: () otherlv_1= 'import' ( ( (lv_specs_2_0= ruleimportSpec ) ) | (otherlv_3= '(' ( ( (lv_specs_4_0= ruleimportSpec ) ) ( ruleeos )? )* otherlv_6= ')' ) )
            {
            // InternalGo.g:276:3: ()
            // InternalGo.g:277:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getImportDeclAccess().getImportDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,44,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getImportDeclAccess().getImportKeyword_1());
              		
            }
            // InternalGo.g:290:3: ( ( (lv_specs_2_0= ruleimportSpec ) ) | (otherlv_3= '(' ( ( (lv_specs_4_0= ruleimportSpec ) ) ( ruleeos )? )* otherlv_6= ')' ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( ((LA7_0>=RULE_IDENTIFIER && LA7_0<=RULE_STRING_LIT)||LA7_0==47) ) {
                alt7=1;
            }
            else if ( (LA7_0==45) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalGo.g:291:4: ( (lv_specs_2_0= ruleimportSpec ) )
                    {
                    // InternalGo.g:291:4: ( (lv_specs_2_0= ruleimportSpec ) )
                    // InternalGo.g:292:5: (lv_specs_2_0= ruleimportSpec )
                    {
                    // InternalGo.g:292:5: (lv_specs_2_0= ruleimportSpec )
                    // InternalGo.g:293:6: lv_specs_2_0= ruleimportSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImportDeclAccess().getSpecsImportSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_specs_2_0=ruleimportSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImportDeclRule());
                      						}
                      						add(
                      							current,
                      							"specs",
                      							lv_specs_2_0,
                      							"org.xtext.Go.importSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:311:4: (otherlv_3= '(' ( ( (lv_specs_4_0= ruleimportSpec ) ) ( ruleeos )? )* otherlv_6= ')' )
                    {
                    // InternalGo.g:311:4: (otherlv_3= '(' ( ( (lv_specs_4_0= ruleimportSpec ) ) ( ruleeos )? )* otherlv_6= ')' )
                    // InternalGo.g:312:5: otherlv_3= '(' ( ( (lv_specs_4_0= ruleimportSpec ) ) ( ruleeos )? )* otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:316:5: ( ( (lv_specs_4_0= ruleimportSpec ) ) ( ruleeos )? )*
                    loop6:
                    do {
                        int alt6=2;
                        int LA6_0 = input.LA(1);

                        if ( ((LA6_0>=RULE_IDENTIFIER && LA6_0<=RULE_STRING_LIT)||LA6_0==47) ) {
                            alt6=1;
                        }


                        switch (alt6) {
                    	case 1 :
                    	    // InternalGo.g:317:6: ( (lv_specs_4_0= ruleimportSpec ) ) ( ruleeos )?
                    	    {
                    	    // InternalGo.g:317:6: ( (lv_specs_4_0= ruleimportSpec ) )
                    	    // InternalGo.g:318:7: (lv_specs_4_0= ruleimportSpec )
                    	    {
                    	    // InternalGo.g:318:7: (lv_specs_4_0= ruleimportSpec )
                    	    // InternalGo.g:319:8: lv_specs_4_0= ruleimportSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getImportDeclAccess().getSpecsImportSpecParserRuleCall_2_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_10);
                    	    lv_specs_4_0=ruleimportSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getImportDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"specs",
                    	      									lv_specs_4_0,
                    	      									"org.xtext.Go.importSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    // InternalGo.g:336:6: ( ruleeos )?
                    	    int alt5=2;
                    	    int LA5_0 = input.LA(1);

                    	    if ( (LA5_0==103) ) {
                    	        alt5=1;
                    	    }
                    	    switch (alt5) {
                    	        case 1 :
                    	            // InternalGo.g:337:7: ruleeos
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              							/* */
                    	              						
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              							newCompositeNode(grammarAccess.getImportDeclAccess().getEosParserRuleCall_2_1_1_1());
                    	              						
                    	            }
                    	            pushFollow(FOLLOW_9);
                    	            ruleeos();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							afterParserOrEnumRuleCall();
                    	              						
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop6;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleimportDecl"


    // $ANTLR start "entryRuleimportSpec"
    // InternalGo.g:359:1: entryRuleimportSpec returns [EObject current=null] : iv_ruleimportSpec= ruleimportSpec EOF ;
    public final EObject entryRuleimportSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleimportSpec = null;


        try {
            // InternalGo.g:359:51: (iv_ruleimportSpec= ruleimportSpec EOF )
            // InternalGo.g:360:2: iv_ruleimportSpec= ruleimportSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleimportSpec=ruleimportSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleimportSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleimportSpec"


    // $ANTLR start "ruleimportSpec"
    // InternalGo.g:366:1: ruleimportSpec returns [EObject current=null] : ( (otherlv_0= '.' | this_IDENTIFIER_1= RULE_IDENTIFIER )? ( (lv_path_2_0= ruleimportPath ) ) ) ;
    public final EObject ruleimportSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token this_IDENTIFIER_1=null;
        AntlrDatatypeRuleToken lv_path_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:372:2: ( ( (otherlv_0= '.' | this_IDENTIFIER_1= RULE_IDENTIFIER )? ( (lv_path_2_0= ruleimportPath ) ) ) )
            // InternalGo.g:373:2: ( (otherlv_0= '.' | this_IDENTIFIER_1= RULE_IDENTIFIER )? ( (lv_path_2_0= ruleimportPath ) ) )
            {
            // InternalGo.g:373:2: ( (otherlv_0= '.' | this_IDENTIFIER_1= RULE_IDENTIFIER )? ( (lv_path_2_0= ruleimportPath ) ) )
            // InternalGo.g:374:3: (otherlv_0= '.' | this_IDENTIFIER_1= RULE_IDENTIFIER )? ( (lv_path_2_0= ruleimportPath ) )
            {
            // InternalGo.g:374:3: (otherlv_0= '.' | this_IDENTIFIER_1= RULE_IDENTIFIER )?
            int alt8=3;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==47) ) {
                alt8=1;
            }
            else if ( (LA8_0==RULE_IDENTIFIER) ) {
                alt8=2;
            }
            switch (alt8) {
                case 1 :
                    // InternalGo.g:375:4: otherlv_0= '.'
                    {
                    otherlv_0=(Token)match(input,47,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:380:4: this_IDENTIFIER_1= RULE_IDENTIFIER
                    {
                    this_IDENTIFIER_1=(Token)match(input,RULE_IDENTIFIER,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_IDENTIFIER_1, grammarAccess.getImportSpecAccess().getIDENTIFIERTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:385:3: ( (lv_path_2_0= ruleimportPath ) )
            // InternalGo.g:386:4: (lv_path_2_0= ruleimportPath )
            {
            // InternalGo.g:386:4: (lv_path_2_0= ruleimportPath )
            // InternalGo.g:387:5: lv_path_2_0= ruleimportPath
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImportSpecAccess().getPathImportPathParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_path_2_0=ruleimportPath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImportSpecRule());
              					}
              					set(
              						current,
              						"path",
              						lv_path_2_0,
              						"org.xtext.Go.importPath");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleimportSpec"


    // $ANTLR start "entryRuleimportPath"
    // InternalGo.g:408:1: entryRuleimportPath returns [String current=null] : iv_ruleimportPath= ruleimportPath EOF ;
    public final String entryRuleimportPath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleimportPath = null;


        try {
            // InternalGo.g:408:50: (iv_ruleimportPath= ruleimportPath EOF )
            // InternalGo.g:409:2: iv_ruleimportPath= ruleimportPath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportPathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleimportPath=ruleimportPath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleimportPath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleimportPath"


    // $ANTLR start "ruleimportPath"
    // InternalGo.g:415:1: ruleimportPath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_LIT_0= RULE_STRING_LIT ;
    public final AntlrDatatypeRuleToken ruleimportPath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_LIT_0=null;


        	enterRule();

        try {
            // InternalGo.g:421:2: (this_STRING_LIT_0= RULE_STRING_LIT )
            // InternalGo.g:422:2: this_STRING_LIT_0= RULE_STRING_LIT
            {
            this_STRING_LIT_0=(Token)match(input,RULE_STRING_LIT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_STRING_LIT_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_STRING_LIT_0, grammarAccess.getImportPathAccess().getSTRING_LITTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleimportPath"


    // $ANTLR start "entryRuletopLevelDecl"
    // InternalGo.g:432:1: entryRuletopLevelDecl returns [EObject current=null] : iv_ruletopLevelDecl= ruletopLevelDecl EOF ;
    public final EObject entryRuletopLevelDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletopLevelDecl = null;


        try {
            // InternalGo.g:432:53: (iv_ruletopLevelDecl= ruletopLevelDecl EOF )
            // InternalGo.g:433:2: iv_ruletopLevelDecl= ruletopLevelDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTopLevelDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletopLevelDecl=ruletopLevelDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletopLevelDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletopLevelDecl"


    // $ANTLR start "ruletopLevelDecl"
    // InternalGo.g:439:1: ruletopLevelDecl returns [EObject current=null] : ( ( (lv_decl_0_0= ruledeclaration ) ) | ( (lv_decl_1_0= rulefunctionDecl ) ) | ( (lv_decl_2_0= rulemethodDecl ) ) ) ;
    public final EObject ruletopLevelDecl() throws RecognitionException {
        EObject current = null;

        EObject lv_decl_0_0 = null;

        EObject lv_decl_1_0 = null;

        EObject lv_decl_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:445:2: ( ( ( (lv_decl_0_0= ruledeclaration ) ) | ( (lv_decl_1_0= rulefunctionDecl ) ) | ( (lv_decl_2_0= rulemethodDecl ) ) ) )
            // InternalGo.g:446:2: ( ( (lv_decl_0_0= ruledeclaration ) ) | ( (lv_decl_1_0= rulefunctionDecl ) ) | ( (lv_decl_2_0= rulemethodDecl ) ) )
            {
            // InternalGo.g:446:2: ( ( (lv_decl_0_0= ruledeclaration ) ) | ( (lv_decl_1_0= rulefunctionDecl ) ) | ( (lv_decl_2_0= rulemethodDecl ) ) )
            int alt9=3;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==48||LA9_0==51||LA9_0==53) ) {
                alt9=1;
            }
            else if ( (LA9_0==52) ) {
                int LA9_2 = input.LA(2);

                if ( (LA9_2==45) ) {
                    alt9=3;
                }
                else if ( (LA9_2==RULE_IDENTIFIER) ) {
                    alt9=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 9, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalGo.g:447:3: ( (lv_decl_0_0= ruledeclaration ) )
                    {
                    // InternalGo.g:447:3: ( (lv_decl_0_0= ruledeclaration ) )
                    // InternalGo.g:448:4: (lv_decl_0_0= ruledeclaration )
                    {
                    // InternalGo.g:448:4: (lv_decl_0_0= ruledeclaration )
                    // InternalGo.g:449:5: lv_decl_0_0= ruledeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTopLevelDeclAccess().getDeclDeclarationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_decl_0_0=ruledeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTopLevelDeclRule());
                      					}
                      					set(
                      						current,
                      						"decl",
                      						lv_decl_0_0,
                      						"org.xtext.Go.declaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:467:3: ( (lv_decl_1_0= rulefunctionDecl ) )
                    {
                    // InternalGo.g:467:3: ( (lv_decl_1_0= rulefunctionDecl ) )
                    // InternalGo.g:468:4: (lv_decl_1_0= rulefunctionDecl )
                    {
                    // InternalGo.g:468:4: (lv_decl_1_0= rulefunctionDecl )
                    // InternalGo.g:469:5: lv_decl_1_0= rulefunctionDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTopLevelDeclAccess().getDeclFunctionDeclParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_decl_1_0=rulefunctionDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTopLevelDeclRule());
                      					}
                      					set(
                      						current,
                      						"decl",
                      						lv_decl_1_0,
                      						"org.xtext.Go.functionDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:487:3: ( (lv_decl_2_0= rulemethodDecl ) )
                    {
                    // InternalGo.g:487:3: ( (lv_decl_2_0= rulemethodDecl ) )
                    // InternalGo.g:488:4: (lv_decl_2_0= rulemethodDecl )
                    {
                    // InternalGo.g:488:4: (lv_decl_2_0= rulemethodDecl )
                    // InternalGo.g:489:5: lv_decl_2_0= rulemethodDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTopLevelDeclAccess().getDeclMethodDeclParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_decl_2_0=rulemethodDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTopLevelDeclRule());
                      					}
                      					set(
                      						current,
                      						"decl",
                      						lv_decl_2_0,
                      						"org.xtext.Go.methodDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletopLevelDecl"


    // $ANTLR start "entryRuledeclaration"
    // InternalGo.g:510:1: entryRuledeclaration returns [EObject current=null] : iv_ruledeclaration= ruledeclaration EOF ;
    public final EObject entryRuledeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledeclaration = null;


        try {
            // InternalGo.g:510:52: (iv_ruledeclaration= ruledeclaration EOF )
            // InternalGo.g:511:2: iv_ruledeclaration= ruledeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledeclaration=ruledeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledeclaration"


    // $ANTLR start "ruledeclaration"
    // InternalGo.g:517:1: ruledeclaration returns [EObject current=null] : ( ( (lv_decl_0_0= ruleconstDecl ) ) | ( (lv_decl_1_0= ruletypeDecl ) ) | ( (lv_decl_2_0= rulevarDecl ) ) ) ;
    public final EObject ruledeclaration() throws RecognitionException {
        EObject current = null;

        EObject lv_decl_0_0 = null;

        EObject lv_decl_1_0 = null;

        EObject lv_decl_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:523:2: ( ( ( (lv_decl_0_0= ruleconstDecl ) ) | ( (lv_decl_1_0= ruletypeDecl ) ) | ( (lv_decl_2_0= rulevarDecl ) ) ) )
            // InternalGo.g:524:2: ( ( (lv_decl_0_0= ruleconstDecl ) ) | ( (lv_decl_1_0= ruletypeDecl ) ) | ( (lv_decl_2_0= rulevarDecl ) ) )
            {
            // InternalGo.g:524:2: ( ( (lv_decl_0_0= ruleconstDecl ) ) | ( (lv_decl_1_0= ruletypeDecl ) ) | ( (lv_decl_2_0= rulevarDecl ) ) )
            int alt10=3;
            switch ( input.LA(1) ) {
            case 48:
                {
                alt10=1;
                }
                break;
            case 51:
                {
                alt10=2;
                }
                break;
            case 53:
                {
                alt10=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalGo.g:525:3: ( (lv_decl_0_0= ruleconstDecl ) )
                    {
                    // InternalGo.g:525:3: ( (lv_decl_0_0= ruleconstDecl ) )
                    // InternalGo.g:526:4: (lv_decl_0_0= ruleconstDecl )
                    {
                    // InternalGo.g:526:4: (lv_decl_0_0= ruleconstDecl )
                    // InternalGo.g:527:5: lv_decl_0_0= ruleconstDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclarationAccess().getDeclConstDeclParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_decl_0_0=ruleconstDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"decl",
                      						lv_decl_0_0,
                      						"org.xtext.Go.constDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:545:3: ( (lv_decl_1_0= ruletypeDecl ) )
                    {
                    // InternalGo.g:545:3: ( (lv_decl_1_0= ruletypeDecl ) )
                    // InternalGo.g:546:4: (lv_decl_1_0= ruletypeDecl )
                    {
                    // InternalGo.g:546:4: (lv_decl_1_0= ruletypeDecl )
                    // InternalGo.g:547:5: lv_decl_1_0= ruletypeDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclarationAccess().getDeclTypeDeclParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_decl_1_0=ruletypeDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"decl",
                      						lv_decl_1_0,
                      						"org.xtext.Go.typeDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:565:3: ( (lv_decl_2_0= rulevarDecl ) )
                    {
                    // InternalGo.g:565:3: ( (lv_decl_2_0= rulevarDecl ) )
                    // InternalGo.g:566:4: (lv_decl_2_0= rulevarDecl )
                    {
                    // InternalGo.g:566:4: (lv_decl_2_0= rulevarDecl )
                    // InternalGo.g:567:5: lv_decl_2_0= rulevarDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDeclarationAccess().getDeclVarDeclParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_decl_2_0=rulevarDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"decl",
                      						lv_decl_2_0,
                      						"org.xtext.Go.varDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledeclaration"


    // $ANTLR start "entryRuleconstDecl"
    // InternalGo.g:588:1: entryRuleconstDecl returns [EObject current=null] : iv_ruleconstDecl= ruleconstDecl EOF ;
    public final EObject entryRuleconstDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleconstDecl = null;


        try {
            // InternalGo.g:588:50: (iv_ruleconstDecl= ruleconstDecl EOF )
            // InternalGo.g:589:2: iv_ruleconstDecl= ruleconstDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleconstDecl=ruleconstDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleconstDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleconstDecl"


    // $ANTLR start "ruleconstDecl"
    // InternalGo.g:595:1: ruleconstDecl returns [EObject current=null] : ( () otherlv_1= 'const' ( ( (lv_spec_2_0= ruleconstSpec ) ) | (otherlv_3= '(' ( ( (lv_spec_4_0= ruleconstSpec ) ) ruleeos )* otherlv_6= ')' ) ) ) ;
    public final EObject ruleconstDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        EObject lv_spec_2_0 = null;

        EObject lv_spec_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:601:2: ( ( () otherlv_1= 'const' ( ( (lv_spec_2_0= ruleconstSpec ) ) | (otherlv_3= '(' ( ( (lv_spec_4_0= ruleconstSpec ) ) ruleeos )* otherlv_6= ')' ) ) ) )
            // InternalGo.g:602:2: ( () otherlv_1= 'const' ( ( (lv_spec_2_0= ruleconstSpec ) ) | (otherlv_3= '(' ( ( (lv_spec_4_0= ruleconstSpec ) ) ruleeos )* otherlv_6= ')' ) ) )
            {
            // InternalGo.g:602:2: ( () otherlv_1= 'const' ( ( (lv_spec_2_0= ruleconstSpec ) ) | (otherlv_3= '(' ( ( (lv_spec_4_0= ruleconstSpec ) ) ruleeos )* otherlv_6= ')' ) ) )
            // InternalGo.g:603:3: () otherlv_1= 'const' ( ( (lv_spec_2_0= ruleconstSpec ) ) | (otherlv_3= '(' ( ( (lv_spec_4_0= ruleconstSpec ) ) ruleeos )* otherlv_6= ')' ) )
            {
            // InternalGo.g:603:3: ()
            // InternalGo.g:604:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getConstDeclAccess().getConstDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,48,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConstDeclAccess().getConstKeyword_1());
              		
            }
            // InternalGo.g:617:3: ( ( (lv_spec_2_0= ruleconstSpec ) ) | (otherlv_3= '(' ( ( (lv_spec_4_0= ruleconstSpec ) ) ruleeos )* otherlv_6= ')' ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_IDENTIFIER) ) {
                alt12=1;
            }
            else if ( (LA12_0==45) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalGo.g:618:4: ( (lv_spec_2_0= ruleconstSpec ) )
                    {
                    // InternalGo.g:618:4: ( (lv_spec_2_0= ruleconstSpec ) )
                    // InternalGo.g:619:5: (lv_spec_2_0= ruleconstSpec )
                    {
                    // InternalGo.g:619:5: (lv_spec_2_0= ruleconstSpec )
                    // InternalGo.g:620:6: lv_spec_2_0= ruleconstSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstDeclAccess().getSpecConstSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_spec_2_0=ruleconstSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstDeclRule());
                      						}
                      						add(
                      							current,
                      							"spec",
                      							lv_spec_2_0,
                      							"org.xtext.Go.constSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:638:4: (otherlv_3= '(' ( ( (lv_spec_4_0= ruleconstSpec ) ) ruleeos )* otherlv_6= ')' )
                    {
                    // InternalGo.g:638:4: (otherlv_3= '(' ( ( (lv_spec_4_0= ruleconstSpec ) ) ruleeos )* otherlv_6= ')' )
                    // InternalGo.g:639:5: otherlv_3= '(' ( ( (lv_spec_4_0= ruleconstSpec ) ) ruleeos )* otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:643:5: ( ( (lv_spec_4_0= ruleconstSpec ) ) ruleeos )*
                    loop11:
                    do {
                        int alt11=2;
                        int LA11_0 = input.LA(1);

                        if ( (LA11_0==RULE_IDENTIFIER) ) {
                            alt11=1;
                        }


                        switch (alt11) {
                    	case 1 :
                    	    // InternalGo.g:644:6: ( (lv_spec_4_0= ruleconstSpec ) ) ruleeos
                    	    {
                    	    // InternalGo.g:644:6: ( (lv_spec_4_0= ruleconstSpec ) )
                    	    // InternalGo.g:645:7: (lv_spec_4_0= ruleconstSpec )
                    	    {
                    	    // InternalGo.g:645:7: (lv_spec_4_0= ruleconstSpec )
                    	    // InternalGo.g:646:8: lv_spec_4_0= ruleconstSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getConstDeclAccess().getSpecConstSpecParserRuleCall_2_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_5);
                    	    lv_spec_4_0=ruleconstSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getConstDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"spec",
                    	      									lv_spec_4_0,
                    	      									"org.xtext.Go.constSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						/* */
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getConstDeclAccess().getEosParserRuleCall_2_1_1_1());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_13);
                    	    ruleeos();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop11;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleconstDecl"


    // $ANTLR start "entryRuleconstSpec"
    // InternalGo.g:684:1: entryRuleconstSpec returns [EObject current=null] : iv_ruleconstSpec= ruleconstSpec EOF ;
    public final EObject entryRuleconstSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleconstSpec = null;


        try {
            // InternalGo.g:684:50: (iv_ruleconstSpec= ruleconstSpec EOF )
            // InternalGo.g:685:2: iv_ruleconstSpec= ruleconstSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleconstSpec=ruleconstSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleconstSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleconstSpec"


    // $ANTLR start "ruleconstSpec"
    // InternalGo.g:691:1: ruleconstSpec returns [EObject current=null] : ( ( (lv_identifiers_0_0= ruleidentifierList ) ) ( ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expression_3_0= ruleexpressionList ) ) )? ) ;
    public final EObject ruleconstSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_identifiers_0_0 = null;

        EObject lv_type_1_0 = null;

        EObject lv_expression_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:697:2: ( ( ( (lv_identifiers_0_0= ruleidentifierList ) ) ( ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expression_3_0= ruleexpressionList ) ) )? ) )
            // InternalGo.g:698:2: ( ( (lv_identifiers_0_0= ruleidentifierList ) ) ( ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expression_3_0= ruleexpressionList ) ) )? )
            {
            // InternalGo.g:698:2: ( ( (lv_identifiers_0_0= ruleidentifierList ) ) ( ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expression_3_0= ruleexpressionList ) ) )? )
            // InternalGo.g:699:3: ( (lv_identifiers_0_0= ruleidentifierList ) ) ( ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expression_3_0= ruleexpressionList ) ) )?
            {
            // InternalGo.g:699:3: ( (lv_identifiers_0_0= ruleidentifierList ) )
            // InternalGo.g:700:4: (lv_identifiers_0_0= ruleidentifierList )
            {
            // InternalGo.g:700:4: (lv_identifiers_0_0= ruleidentifierList )
            // InternalGo.g:701:5: lv_identifiers_0_0= ruleidentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstSpecAccess().getIdentifiersIdentifierListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_14);
            lv_identifiers_0_0=ruleidentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstSpecRule());
              					}
              					set(
              						current,
              						"identifiers",
              						lv_identifiers_0_0,
              						"org.xtext.Go.identifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:718:3: ( ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expression_3_0= ruleexpressionList ) ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_IDENTIFIER||LA14_0==45||LA14_0==49||LA14_0==52||LA14_0==56||LA14_0==63||LA14_0==95||(LA14_0>=97 && LA14_0<=99)||LA14_0==101) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalGo.g:719:4: ( (lv_type_1_0= ruletype ) )? otherlv_2= '=' ( (lv_expression_3_0= ruleexpressionList ) )
                    {
                    // InternalGo.g:719:4: ( (lv_type_1_0= ruletype ) )?
                    int alt13=2;
                    int LA13_0 = input.LA(1);

                    if ( (LA13_0==RULE_IDENTIFIER||LA13_0==45||LA13_0==52||LA13_0==56||LA13_0==63||LA13_0==95||(LA13_0>=97 && LA13_0<=99)||LA13_0==101) ) {
                        alt13=1;
                    }
                    switch (alt13) {
                        case 1 :
                            // InternalGo.g:720:5: (lv_type_1_0= ruletype )
                            {
                            // InternalGo.g:720:5: (lv_type_1_0= ruletype )
                            // InternalGo.g:721:6: lv_type_1_0= ruletype
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getConstSpecAccess().getTypeTypeParserRuleCall_1_0_0());
                              					
                            }
                            pushFollow(FOLLOW_15);
                            lv_type_1_0=ruletype();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getConstSpecRule());
                              						}
                              						set(
                              							current,
                              							"type",
                              							lv_type_1_0,
                              							"org.xtext.Go.type");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,49,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1());
                      			
                    }
                    // InternalGo.g:742:4: ( (lv_expression_3_0= ruleexpressionList ) )
                    // InternalGo.g:743:5: (lv_expression_3_0= ruleexpressionList )
                    {
                    // InternalGo.g:743:5: (lv_expression_3_0= ruleexpressionList )
                    // InternalGo.g:744:6: lv_expression_3_0= ruleexpressionList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConstSpecAccess().getExpressionExpressionListParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=ruleexpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConstSpecRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_3_0,
                      							"org.xtext.Go.expressionList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleconstSpec"


    // $ANTLR start "entryRuleidentifierList"
    // InternalGo.g:766:1: entryRuleidentifierList returns [EObject current=null] : iv_ruleidentifierList= ruleidentifierList EOF ;
    public final EObject entryRuleidentifierList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleidentifierList = null;


        try {
            // InternalGo.g:766:55: (iv_ruleidentifierList= ruleidentifierList EOF )
            // InternalGo.g:767:2: iv_ruleidentifierList= ruleidentifierList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleidentifierList=ruleidentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleidentifierList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleidentifierList"


    // $ANTLR start "ruleidentifierList"
    // InternalGo.g:773:1: ruleidentifierList returns [EObject current=null] : ( ( (lv_ids_0_0= RULE_IDENTIFIER ) ) (otherlv_1= ',' ( (lv_ids_2_0= RULE_IDENTIFIER ) ) )* ) ;
    public final EObject ruleidentifierList() throws RecognitionException {
        EObject current = null;

        Token lv_ids_0_0=null;
        Token otherlv_1=null;
        Token lv_ids_2_0=null;


        	enterRule();

        try {
            // InternalGo.g:779:2: ( ( ( (lv_ids_0_0= RULE_IDENTIFIER ) ) (otherlv_1= ',' ( (lv_ids_2_0= RULE_IDENTIFIER ) ) )* ) )
            // InternalGo.g:780:2: ( ( (lv_ids_0_0= RULE_IDENTIFIER ) ) (otherlv_1= ',' ( (lv_ids_2_0= RULE_IDENTIFIER ) ) )* )
            {
            // InternalGo.g:780:2: ( ( (lv_ids_0_0= RULE_IDENTIFIER ) ) (otherlv_1= ',' ( (lv_ids_2_0= RULE_IDENTIFIER ) ) )* )
            // InternalGo.g:781:3: ( (lv_ids_0_0= RULE_IDENTIFIER ) ) (otherlv_1= ',' ( (lv_ids_2_0= RULE_IDENTIFIER ) ) )*
            {
            // InternalGo.g:781:3: ( (lv_ids_0_0= RULE_IDENTIFIER ) )
            // InternalGo.g:782:4: (lv_ids_0_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:782:4: (lv_ids_0_0= RULE_IDENTIFIER )
            // InternalGo.g:783:5: lv_ids_0_0= RULE_IDENTIFIER
            {
            lv_ids_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_ids_0_0, grammarAccess.getIdentifierListAccess().getIdsIDENTIFIERTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getIdentifierListRule());
              					}
              					addWithLastConsumed(
              						current,
              						"ids",
              						lv_ids_0_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }

            // InternalGo.g:799:3: (otherlv_1= ',' ( (lv_ids_2_0= RULE_IDENTIFIER ) ) )*
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( (LA15_0==50) ) {
                    alt15=1;
                }


                switch (alt15) {
            	case 1 :
            	    // InternalGo.g:800:4: otherlv_1= ',' ( (lv_ids_2_0= RULE_IDENTIFIER ) )
            	    {
            	    otherlv_1=(Token)match(input,50,FOLLOW_7); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:804:4: ( (lv_ids_2_0= RULE_IDENTIFIER ) )
            	    // InternalGo.g:805:5: (lv_ids_2_0= RULE_IDENTIFIER )
            	    {
            	    // InternalGo.g:805:5: (lv_ids_2_0= RULE_IDENTIFIER )
            	    // InternalGo.g:806:6: lv_ids_2_0= RULE_IDENTIFIER
            	    {
            	    lv_ids_2_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_ids_2_0, grammarAccess.getIdentifierListAccess().getIdsIDENTIFIERTerminalRuleCall_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getIdentifierListRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"ids",
            	      							lv_ids_2_0,
            	      							"org.xtext.Go.IDENTIFIER");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleidentifierList"


    // $ANTLR start "entryRuleexpressionList"
    // InternalGo.g:827:1: entryRuleexpressionList returns [EObject current=null] : iv_ruleexpressionList= ruleexpressionList EOF ;
    public final EObject entryRuleexpressionList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexpressionList = null;


        try {
            // InternalGo.g:827:55: (iv_ruleexpressionList= ruleexpressionList EOF )
            // InternalGo.g:828:2: iv_ruleexpressionList= ruleexpressionList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexpressionList=ruleexpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpressionList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexpressionList"


    // $ANTLR start "ruleexpressionList"
    // InternalGo.g:834:1: ruleexpressionList returns [EObject current=null] : ( ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= ',' ( (lv_expr_2_0= ruleexpression ) ) )* ) ;
    public final EObject ruleexpressionList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expr_0_0 = null;

        EObject lv_expr_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:840:2: ( ( ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= ',' ( (lv_expr_2_0= ruleexpression ) ) )* ) )
            // InternalGo.g:841:2: ( ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= ',' ( (lv_expr_2_0= ruleexpression ) ) )* )
            {
            // InternalGo.g:841:2: ( ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= ',' ( (lv_expr_2_0= ruleexpression ) ) )* )
            // InternalGo.g:842:3: ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= ',' ( (lv_expr_2_0= ruleexpression ) ) )*
            {
            // InternalGo.g:842:3: ( (lv_expr_0_0= ruleexpression ) )
            // InternalGo.g:843:4: (lv_expr_0_0= ruleexpression )
            {
            // InternalGo.g:843:4: (lv_expr_0_0= ruleexpression )
            // InternalGo.g:844:5: lv_expr_0_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionListAccess().getExprExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_17);
            lv_expr_0_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionListRule());
              					}
              					add(
              						current,
              						"expr",
              						lv_expr_0_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:861:3: (otherlv_1= ',' ( (lv_expr_2_0= ruleexpression ) ) )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==50) ) {
                    int LA16_2 = input.LA(2);

                    if ( (synpred19_InternalGo()) ) {
                        alt16=1;
                    }


                }


                switch (alt16) {
            	case 1 :
            	    // InternalGo.g:862:4: otherlv_1= ',' ( (lv_expr_2_0= ruleexpression ) )
            	    {
            	    otherlv_1=(Token)match(input,50,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getExpressionListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:866:4: ( (lv_expr_2_0= ruleexpression ) )
            	    // InternalGo.g:867:5: (lv_expr_2_0= ruleexpression )
            	    {
            	    // InternalGo.g:867:5: (lv_expr_2_0= ruleexpression )
            	    // InternalGo.g:868:6: lv_expr_2_0= ruleexpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExpressionListAccess().getExprExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_17);
            	    lv_expr_2_0=ruleexpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExpressionListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expr",
            	      							lv_expr_2_0,
            	      							"org.xtext.Go.expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexpressionList"


    // $ANTLR start "entryRuletypeDecl"
    // InternalGo.g:890:1: entryRuletypeDecl returns [EObject current=null] : iv_ruletypeDecl= ruletypeDecl EOF ;
    public final EObject entryRuletypeDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeDecl = null;


        try {
            // InternalGo.g:890:49: (iv_ruletypeDecl= ruletypeDecl EOF )
            // InternalGo.g:891:2: iv_ruletypeDecl= ruletypeDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeDecl=ruletypeDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeDecl"


    // $ANTLR start "ruletypeDecl"
    // InternalGo.g:897:1: ruletypeDecl returns [EObject current=null] : ( () otherlv_1= 'type' ( ( (lv_spec_2_0= ruletypeSpec ) ) | (otherlv_3= '(' ( ( (lv_spec_4_0= ruletypeSpec ) ) ruleeos )* otherlv_6= ')' ) ) ) ;
    public final EObject ruletypeDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        EObject lv_spec_2_0 = null;

        EObject lv_spec_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:903:2: ( ( () otherlv_1= 'type' ( ( (lv_spec_2_0= ruletypeSpec ) ) | (otherlv_3= '(' ( ( (lv_spec_4_0= ruletypeSpec ) ) ruleeos )* otherlv_6= ')' ) ) ) )
            // InternalGo.g:904:2: ( () otherlv_1= 'type' ( ( (lv_spec_2_0= ruletypeSpec ) ) | (otherlv_3= '(' ( ( (lv_spec_4_0= ruletypeSpec ) ) ruleeos )* otherlv_6= ')' ) ) )
            {
            // InternalGo.g:904:2: ( () otherlv_1= 'type' ( ( (lv_spec_2_0= ruletypeSpec ) ) | (otherlv_3= '(' ( ( (lv_spec_4_0= ruletypeSpec ) ) ruleeos )* otherlv_6= ')' ) ) )
            // InternalGo.g:905:3: () otherlv_1= 'type' ( ( (lv_spec_2_0= ruletypeSpec ) ) | (otherlv_3= '(' ( ( (lv_spec_4_0= ruletypeSpec ) ) ruleeos )* otherlv_6= ')' ) )
            {
            // InternalGo.g:905:3: ()
            // InternalGo.g:906:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTypeDeclAccess().getTypeDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,51,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeDeclAccess().getTypeKeyword_1());
              		
            }
            // InternalGo.g:919:3: ( ( (lv_spec_2_0= ruletypeSpec ) ) | (otherlv_3= '(' ( ( (lv_spec_4_0= ruletypeSpec ) ) ruleeos )* otherlv_6= ')' ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_IDENTIFIER) ) {
                alt18=1;
            }
            else if ( (LA18_0==45) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalGo.g:920:4: ( (lv_spec_2_0= ruletypeSpec ) )
                    {
                    // InternalGo.g:920:4: ( (lv_spec_2_0= ruletypeSpec ) )
                    // InternalGo.g:921:5: (lv_spec_2_0= ruletypeSpec )
                    {
                    // InternalGo.g:921:5: (lv_spec_2_0= ruletypeSpec )
                    // InternalGo.g:922:6: lv_spec_2_0= ruletypeSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeDeclAccess().getSpecTypeSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_spec_2_0=ruletypeSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeDeclRule());
                      						}
                      						add(
                      							current,
                      							"spec",
                      							lv_spec_2_0,
                      							"org.xtext.Go.typeSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:940:4: (otherlv_3= '(' ( ( (lv_spec_4_0= ruletypeSpec ) ) ruleeos )* otherlv_6= ')' )
                    {
                    // InternalGo.g:940:4: (otherlv_3= '(' ( ( (lv_spec_4_0= ruletypeSpec ) ) ruleeos )* otherlv_6= ')' )
                    // InternalGo.g:941:5: otherlv_3= '(' ( ( (lv_spec_4_0= ruletypeSpec ) ) ruleeos )* otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:945:5: ( ( (lv_spec_4_0= ruletypeSpec ) ) ruleeos )*
                    loop17:
                    do {
                        int alt17=2;
                        int LA17_0 = input.LA(1);

                        if ( (LA17_0==RULE_IDENTIFIER) ) {
                            alt17=1;
                        }


                        switch (alt17) {
                    	case 1 :
                    	    // InternalGo.g:946:6: ( (lv_spec_4_0= ruletypeSpec ) ) ruleeos
                    	    {
                    	    // InternalGo.g:946:6: ( (lv_spec_4_0= ruletypeSpec ) )
                    	    // InternalGo.g:947:7: (lv_spec_4_0= ruletypeSpec )
                    	    {
                    	    // InternalGo.g:947:7: (lv_spec_4_0= ruletypeSpec )
                    	    // InternalGo.g:948:8: lv_spec_4_0= ruletypeSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getTypeDeclAccess().getSpecTypeSpecParserRuleCall_2_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_5);
                    	    lv_spec_4_0=ruletypeSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getTypeDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"spec",
                    	      									lv_spec_4_0,
                    	      									"org.xtext.Go.typeSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						/* */
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getTypeDeclAccess().getEosParserRuleCall_2_1_1_1());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_13);
                    	    ruleeos();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop17;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeDecl"


    // $ANTLR start "entryRuletypeSpec"
    // InternalGo.g:986:1: entryRuletypeSpec returns [EObject current=null] : iv_ruletypeSpec= ruletypeSpec EOF ;
    public final EObject entryRuletypeSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeSpec = null;


        try {
            // InternalGo.g:986:49: (iv_ruletypeSpec= ruletypeSpec EOF )
            // InternalGo.g:987:2: iv_ruletypeSpec= ruletypeSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeSpec=ruletypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeSpec"


    // $ANTLR start "ruletypeSpec"
    // InternalGo.g:993:1: ruletypeSpec returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_type_1_0= ruletype ) ) ) ;
    public final EObject ruletypeSpec() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_type_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:999:2: ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_type_1_0= ruletype ) ) ) )
            // InternalGo.g:1000:2: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_type_1_0= ruletype ) ) )
            {
            // InternalGo.g:1000:2: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_type_1_0= ruletype ) ) )
            // InternalGo.g:1001:3: ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_type_1_0= ruletype ) )
            {
            // InternalGo.g:1001:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
            // InternalGo.g:1002:4: (lv_name_0_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:1002:4: (lv_name_0_0= RULE_IDENTIFIER )
            // InternalGo.g:1003:5: lv_name_0_0= RULE_IDENTIFIER
            {
            lv_name_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getTypeSpecAccess().getNameIDENTIFIERTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTypeSpecRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }

            // InternalGo.g:1019:3: ( (lv_type_1_0= ruletype ) )
            // InternalGo.g:1020:4: (lv_type_1_0= ruletype )
            {
            // InternalGo.g:1020:4: (lv_type_1_0= ruletype )
            // InternalGo.g:1021:5: lv_type_1_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeSpecAccess().getTypeTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_type_1_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeSpecRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_1_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeSpec"


    // $ANTLR start "entryRulefunctionDecl"
    // InternalGo.g:1042:1: entryRulefunctionDecl returns [EObject current=null] : iv_rulefunctionDecl= rulefunctionDecl EOF ;
    public final EObject entryRulefunctionDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefunctionDecl = null;


        try {
            // InternalGo.g:1042:53: (iv_rulefunctionDecl= rulefunctionDecl EOF )
            // InternalGo.g:1043:2: iv_rulefunctionDecl= rulefunctionDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefunctionDecl=rulefunctionDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefunctionDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefunctionDecl"


    // $ANTLR start "rulefunctionDecl"
    // InternalGo.g:1049:1: rulefunctionDecl returns [EObject current=null] : (otherlv_0= 'func' ( (lv_name_1_0= RULE_IDENTIFIER ) ) ( ( (lv_func_2_0= rulefunction ) ) | ( (lv_sig_3_0= rulesignature ) ) ) ) ;
    public final EObject rulefunctionDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        EObject lv_func_2_0 = null;

        EObject lv_sig_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1055:2: ( (otherlv_0= 'func' ( (lv_name_1_0= RULE_IDENTIFIER ) ) ( ( (lv_func_2_0= rulefunction ) ) | ( (lv_sig_3_0= rulesignature ) ) ) ) )
            // InternalGo.g:1056:2: (otherlv_0= 'func' ( (lv_name_1_0= RULE_IDENTIFIER ) ) ( ( (lv_func_2_0= rulefunction ) ) | ( (lv_sig_3_0= rulesignature ) ) ) )
            {
            // InternalGo.g:1056:2: (otherlv_0= 'func' ( (lv_name_1_0= RULE_IDENTIFIER ) ) ( ( (lv_func_2_0= rulefunction ) ) | ( (lv_sig_3_0= rulesignature ) ) ) )
            // InternalGo.g:1057:3: otherlv_0= 'func' ( (lv_name_1_0= RULE_IDENTIFIER ) ) ( ( (lv_func_2_0= rulefunction ) ) | ( (lv_sig_3_0= rulesignature ) ) )
            {
            otherlv_0=(Token)match(input,52,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionDeclAccess().getFuncKeyword_0());
              		
            }
            // InternalGo.g:1061:3: ( (lv_name_1_0= RULE_IDENTIFIER ) )
            // InternalGo.g:1062:4: (lv_name_1_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:1062:4: (lv_name_1_0= RULE_IDENTIFIER )
            // InternalGo.g:1063:5: lv_name_1_0= RULE_IDENTIFIER
            {
            lv_name_1_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getFunctionDeclAccess().getNameIDENTIFIERTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFunctionDeclRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }

            // InternalGo.g:1079:3: ( ( (lv_func_2_0= rulefunction ) ) | ( (lv_sig_3_0= rulesignature ) ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==45) ) {
                int LA19_1 = input.LA(2);

                if ( (synpred22_InternalGo()) ) {
                    alt19=1;
                }
                else if ( (true) ) {
                    alt19=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalGo.g:1080:4: ( (lv_func_2_0= rulefunction ) )
                    {
                    // InternalGo.g:1080:4: ( (lv_func_2_0= rulefunction ) )
                    // InternalGo.g:1081:5: (lv_func_2_0= rulefunction )
                    {
                    // InternalGo.g:1081:5: (lv_func_2_0= rulefunction )
                    // InternalGo.g:1082:6: lv_func_2_0= rulefunction
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionDeclAccess().getFuncFunctionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_func_2_0=rulefunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
                      						}
                      						set(
                      							current,
                      							"func",
                      							lv_func_2_0,
                      							"org.xtext.Go.function");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1100:4: ( (lv_sig_3_0= rulesignature ) )
                    {
                    // InternalGo.g:1100:4: ( (lv_sig_3_0= rulesignature ) )
                    // InternalGo.g:1101:5: (lv_sig_3_0= rulesignature )
                    {
                    // InternalGo.g:1101:5: (lv_sig_3_0= rulesignature )
                    // InternalGo.g:1102:6: lv_sig_3_0= rulesignature
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionDeclAccess().getSigSignatureParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_sig_3_0=rulesignature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionDeclRule());
                      						}
                      						set(
                      							current,
                      							"sig",
                      							lv_sig_3_0,
                      							"org.xtext.Go.signature");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefunctionDecl"


    // $ANTLR start "entryRulefunction"
    // InternalGo.g:1124:1: entryRulefunction returns [EObject current=null] : iv_rulefunction= rulefunction EOF ;
    public final EObject entryRulefunction() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefunction = null;


        try {
            // InternalGo.g:1124:49: (iv_rulefunction= rulefunction EOF )
            // InternalGo.g:1125:2: iv_rulefunction= rulefunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefunction=rulefunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefunction"


    // $ANTLR start "rulefunction"
    // InternalGo.g:1131:1: rulefunction returns [EObject current=null] : ( ( (lv_sig_0_0= rulesignature ) ) ( (lv_codeBlock_1_0= ruleblock ) ) ) ;
    public final EObject rulefunction() throws RecognitionException {
        EObject current = null;

        EObject lv_sig_0_0 = null;

        EObject lv_codeBlock_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1137:2: ( ( ( (lv_sig_0_0= rulesignature ) ) ( (lv_codeBlock_1_0= ruleblock ) ) ) )
            // InternalGo.g:1138:2: ( ( (lv_sig_0_0= rulesignature ) ) ( (lv_codeBlock_1_0= ruleblock ) ) )
            {
            // InternalGo.g:1138:2: ( ( (lv_sig_0_0= rulesignature ) ) ( (lv_codeBlock_1_0= ruleblock ) ) )
            // InternalGo.g:1139:3: ( (lv_sig_0_0= rulesignature ) ) ( (lv_codeBlock_1_0= ruleblock ) )
            {
            // InternalGo.g:1139:3: ( (lv_sig_0_0= rulesignature ) )
            // InternalGo.g:1140:4: (lv_sig_0_0= rulesignature )
            {
            // InternalGo.g:1140:4: (lv_sig_0_0= rulesignature )
            // InternalGo.g:1141:5: lv_sig_0_0= rulesignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionAccess().getSigSignatureParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_sig_0_0=rulesignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionRule());
              					}
              					set(
              						current,
              						"sig",
              						lv_sig_0_0,
              						"org.xtext.Go.signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:1158:3: ( (lv_codeBlock_1_0= ruleblock ) )
            // InternalGo.g:1159:4: (lv_codeBlock_1_0= ruleblock )
            {
            // InternalGo.g:1159:4: (lv_codeBlock_1_0= ruleblock )
            // InternalGo.g:1160:5: lv_codeBlock_1_0= ruleblock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionAccess().getCodeBlockBlockParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_codeBlock_1_0=ruleblock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionRule());
              					}
              					set(
              						current,
              						"codeBlock",
              						lv_codeBlock_1_0,
              						"org.xtext.Go.block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefunction"


    // $ANTLR start "entryRulemethodDecl"
    // InternalGo.g:1181:1: entryRulemethodDecl returns [EObject current=null] : iv_rulemethodDecl= rulemethodDecl EOF ;
    public final EObject entryRulemethodDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_rulemethodDecl = null;


        try {
            // InternalGo.g:1181:51: (iv_rulemethodDecl= rulemethodDecl EOF )
            // InternalGo.g:1182:2: iv_rulemethodDecl= rulemethodDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulemethodDecl=rulemethodDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulemethodDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulemethodDecl"


    // $ANTLR start "rulemethodDecl"
    // InternalGo.g:1188:1: rulemethodDecl returns [EObject current=null] : (otherlv_0= 'func' ( (lv_params_1_0= rulereceiver ) ) ( (lv_name_2_0= RULE_IDENTIFIER ) ) ( ( (lv_func_3_0= rulefunction ) ) | ( (lv_sig_4_0= rulesignature ) ) ) ) ;
    public final EObject rulemethodDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_2_0=null;
        EObject lv_params_1_0 = null;

        EObject lv_func_3_0 = null;

        EObject lv_sig_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1194:2: ( (otherlv_0= 'func' ( (lv_params_1_0= rulereceiver ) ) ( (lv_name_2_0= RULE_IDENTIFIER ) ) ( ( (lv_func_3_0= rulefunction ) ) | ( (lv_sig_4_0= rulesignature ) ) ) ) )
            // InternalGo.g:1195:2: (otherlv_0= 'func' ( (lv_params_1_0= rulereceiver ) ) ( (lv_name_2_0= RULE_IDENTIFIER ) ) ( ( (lv_func_3_0= rulefunction ) ) | ( (lv_sig_4_0= rulesignature ) ) ) )
            {
            // InternalGo.g:1195:2: (otherlv_0= 'func' ( (lv_params_1_0= rulereceiver ) ) ( (lv_name_2_0= RULE_IDENTIFIER ) ) ( ( (lv_func_3_0= rulefunction ) ) | ( (lv_sig_4_0= rulesignature ) ) ) )
            // InternalGo.g:1196:3: otherlv_0= 'func' ( (lv_params_1_0= rulereceiver ) ) ( (lv_name_2_0= RULE_IDENTIFIER ) ) ( ( (lv_func_3_0= rulefunction ) ) | ( (lv_sig_4_0= rulesignature ) ) )
            {
            otherlv_0=(Token)match(input,52,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMethodDeclAccess().getFuncKeyword_0());
              		
            }
            // InternalGo.g:1200:3: ( (lv_params_1_0= rulereceiver ) )
            // InternalGo.g:1201:4: (lv_params_1_0= rulereceiver )
            {
            // InternalGo.g:1201:4: (lv_params_1_0= rulereceiver )
            // InternalGo.g:1202:5: lv_params_1_0= rulereceiver
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclAccess().getParamsReceiverParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_7);
            lv_params_1_0=rulereceiver();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclRule());
              					}
              					set(
              						current,
              						"params",
              						lv_params_1_0,
              						"org.xtext.Go.receiver");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:1219:3: ( (lv_name_2_0= RULE_IDENTIFIER ) )
            // InternalGo.g:1220:4: (lv_name_2_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:1220:4: (lv_name_2_0= RULE_IDENTIFIER )
            // InternalGo.g:1221:5: lv_name_2_0= RULE_IDENTIFIER
            {
            lv_name_2_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getMethodDeclAccess().getNameIDENTIFIERTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getMethodDeclRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }

            // InternalGo.g:1237:3: ( ( (lv_func_3_0= rulefunction ) ) | ( (lv_sig_4_0= rulesignature ) ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==45) ) {
                int LA20_1 = input.LA(2);

                if ( (synpred23_InternalGo()) ) {
                    alt20=1;
                }
                else if ( (true) ) {
                    alt20=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 20, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalGo.g:1238:4: ( (lv_func_3_0= rulefunction ) )
                    {
                    // InternalGo.g:1238:4: ( (lv_func_3_0= rulefunction ) )
                    // InternalGo.g:1239:5: (lv_func_3_0= rulefunction )
                    {
                    // InternalGo.g:1239:5: (lv_func_3_0= rulefunction )
                    // InternalGo.g:1240:6: lv_func_3_0= rulefunction
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodDeclAccess().getFuncFunctionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_func_3_0=rulefunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodDeclRule());
                      						}
                      						set(
                      							current,
                      							"func",
                      							lv_func_3_0,
                      							"org.xtext.Go.function");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1258:4: ( (lv_sig_4_0= rulesignature ) )
                    {
                    // InternalGo.g:1258:4: ( (lv_sig_4_0= rulesignature ) )
                    // InternalGo.g:1259:5: (lv_sig_4_0= rulesignature )
                    {
                    // InternalGo.g:1259:5: (lv_sig_4_0= rulesignature )
                    // InternalGo.g:1260:6: lv_sig_4_0= rulesignature
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodDeclAccess().getSigSignatureParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_sig_4_0=rulesignature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodDeclRule());
                      						}
                      						set(
                      							current,
                      							"sig",
                      							lv_sig_4_0,
                      							"org.xtext.Go.signature");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulemethodDecl"


    // $ANTLR start "entryRulereceiver"
    // InternalGo.g:1282:1: entryRulereceiver returns [EObject current=null] : iv_rulereceiver= rulereceiver EOF ;
    public final EObject entryRulereceiver() throws RecognitionException {
        EObject current = null;

        EObject iv_rulereceiver = null;


        try {
            // InternalGo.g:1282:49: (iv_rulereceiver= rulereceiver EOF )
            // InternalGo.g:1283:2: iv_rulereceiver= rulereceiver EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReceiverRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulereceiver=rulereceiver();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulereceiver; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulereceiver"


    // $ANTLR start "rulereceiver"
    // InternalGo.g:1289:1: rulereceiver returns [EObject current=null] : ( (lv_params_0_0= ruleparameters ) ) ;
    public final EObject rulereceiver() throws RecognitionException {
        EObject current = null;

        EObject lv_params_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1295:2: ( ( (lv_params_0_0= ruleparameters ) ) )
            // InternalGo.g:1296:2: ( (lv_params_0_0= ruleparameters ) )
            {
            // InternalGo.g:1296:2: ( (lv_params_0_0= ruleparameters ) )
            // InternalGo.g:1297:3: (lv_params_0_0= ruleparameters )
            {
            // InternalGo.g:1297:3: (lv_params_0_0= ruleparameters )
            // InternalGo.g:1298:4: lv_params_0_0= ruleparameters
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getReceiverAccess().getParamsParametersParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_params_0_0=ruleparameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getReceiverRule());
              				}
              				set(
              					current,
              					"params",
              					lv_params_0_0,
              					"org.xtext.Go.parameters");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulereceiver"


    // $ANTLR start "entryRulevarDecl"
    // InternalGo.g:1318:1: entryRulevarDecl returns [EObject current=null] : iv_rulevarDecl= rulevarDecl EOF ;
    public final EObject entryRulevarDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_rulevarDecl = null;


        try {
            // InternalGo.g:1318:48: (iv_rulevarDecl= rulevarDecl EOF )
            // InternalGo.g:1319:2: iv_rulevarDecl= rulevarDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulevarDecl=rulevarDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulevarDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulevarDecl"


    // $ANTLR start "rulevarDecl"
    // InternalGo.g:1325:1: rulevarDecl returns [EObject current=null] : ( () otherlv_1= 'var' ( ( (lv_specs_2_0= rulevarSpec ) ) | (otherlv_3= '(' ( ( (lv_specs_4_0= rulevarSpec ) ) ruleeos )* otherlv_6= ')' ) ) ) ;
    public final EObject rulevarDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        EObject lv_specs_2_0 = null;

        EObject lv_specs_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1331:2: ( ( () otherlv_1= 'var' ( ( (lv_specs_2_0= rulevarSpec ) ) | (otherlv_3= '(' ( ( (lv_specs_4_0= rulevarSpec ) ) ruleeos )* otherlv_6= ')' ) ) ) )
            // InternalGo.g:1332:2: ( () otherlv_1= 'var' ( ( (lv_specs_2_0= rulevarSpec ) ) | (otherlv_3= '(' ( ( (lv_specs_4_0= rulevarSpec ) ) ruleeos )* otherlv_6= ')' ) ) )
            {
            // InternalGo.g:1332:2: ( () otherlv_1= 'var' ( ( (lv_specs_2_0= rulevarSpec ) ) | (otherlv_3= '(' ( ( (lv_specs_4_0= rulevarSpec ) ) ruleeos )* otherlv_6= ')' ) ) )
            // InternalGo.g:1333:3: () otherlv_1= 'var' ( ( (lv_specs_2_0= rulevarSpec ) ) | (otherlv_3= '(' ( ( (lv_specs_4_0= rulevarSpec ) ) ruleeos )* otherlv_6= ')' ) )
            {
            // InternalGo.g:1333:3: ()
            // InternalGo.g:1334:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getVarDeclAccess().getVarDeclAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,53,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getVarDeclAccess().getVarKeyword_1());
              		
            }
            // InternalGo.g:1347:3: ( ( (lv_specs_2_0= rulevarSpec ) ) | (otherlv_3= '(' ( ( (lv_specs_4_0= rulevarSpec ) ) ruleeos )* otherlv_6= ')' ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==RULE_IDENTIFIER) ) {
                alt22=1;
            }
            else if ( (LA22_0==45) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalGo.g:1348:4: ( (lv_specs_2_0= rulevarSpec ) )
                    {
                    // InternalGo.g:1348:4: ( (lv_specs_2_0= rulevarSpec ) )
                    // InternalGo.g:1349:5: (lv_specs_2_0= rulevarSpec )
                    {
                    // InternalGo.g:1349:5: (lv_specs_2_0= rulevarSpec )
                    // InternalGo.g:1350:6: lv_specs_2_0= rulevarSpec
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getVarDeclAccess().getSpecsVarSpecParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_specs_2_0=rulevarSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getVarDeclRule());
                      						}
                      						add(
                      							current,
                      							"specs",
                      							lv_specs_2_0,
                      							"org.xtext.Go.varSpec");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1368:4: (otherlv_3= '(' ( ( (lv_specs_4_0= rulevarSpec ) ) ruleeos )* otherlv_6= ')' )
                    {
                    // InternalGo.g:1368:4: (otherlv_3= '(' ( ( (lv_specs_4_0= rulevarSpec ) ) ruleeos )* otherlv_6= ')' )
                    // InternalGo.g:1369:5: otherlv_3= '(' ( ( (lv_specs_4_0= rulevarSpec ) ) ruleeos )* otherlv_6= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_2_1_0());
                      				
                    }
                    // InternalGo.g:1373:5: ( ( (lv_specs_4_0= rulevarSpec ) ) ruleeos )*
                    loop21:
                    do {
                        int alt21=2;
                        int LA21_0 = input.LA(1);

                        if ( (LA21_0==RULE_IDENTIFIER) ) {
                            alt21=1;
                        }


                        switch (alt21) {
                    	case 1 :
                    	    // InternalGo.g:1374:6: ( (lv_specs_4_0= rulevarSpec ) ) ruleeos
                    	    {
                    	    // InternalGo.g:1374:6: ( (lv_specs_4_0= rulevarSpec ) )
                    	    // InternalGo.g:1375:7: (lv_specs_4_0= rulevarSpec )
                    	    {
                    	    // InternalGo.g:1375:7: (lv_specs_4_0= rulevarSpec )
                    	    // InternalGo.g:1376:8: lv_specs_4_0= rulevarSpec
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getVarDeclAccess().getSpecsVarSpecParserRuleCall_2_1_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_5);
                    	    lv_specs_4_0=rulevarSpec();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getVarDeclRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"specs",
                    	      									lv_specs_4_0,
                    	      									"org.xtext.Go.varSpec");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						/* */
                    	      					
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getVarDeclAccess().getEosParserRuleCall_2_1_1_1());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_13);
                    	    ruleeos();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop21;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_2_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulevarDecl"


    // $ANTLR start "entryRulevarSpec"
    // InternalGo.g:1414:1: entryRulevarSpec returns [EObject current=null] : iv_rulevarSpec= rulevarSpec EOF ;
    public final EObject entryRulevarSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_rulevarSpec = null;


        try {
            // InternalGo.g:1414:48: (iv_rulevarSpec= rulevarSpec EOF )
            // InternalGo.g:1415:2: iv_rulevarSpec= rulevarSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulevarSpec=rulevarSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulevarSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulevarSpec"


    // $ANTLR start "rulevarSpec"
    // InternalGo.g:1421:1: rulevarSpec returns [EObject current=null] : ( ( (lv_idList_0_0= ruleidentifierList ) ) ( ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_exprList_5_0= ruleexpressionList ) ) ) ) ) ;
    public final EObject rulevarSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_idList_0_0 = null;

        EObject lv_type_1_0 = null;

        EObject lv_exprList_3_0 = null;

        EObject lv_exprList_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1427:2: ( ( ( (lv_idList_0_0= ruleidentifierList ) ) ( ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_exprList_5_0= ruleexpressionList ) ) ) ) ) )
            // InternalGo.g:1428:2: ( ( (lv_idList_0_0= ruleidentifierList ) ) ( ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_exprList_5_0= ruleexpressionList ) ) ) ) )
            {
            // InternalGo.g:1428:2: ( ( (lv_idList_0_0= ruleidentifierList ) ) ( ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_exprList_5_0= ruleexpressionList ) ) ) ) )
            // InternalGo.g:1429:3: ( (lv_idList_0_0= ruleidentifierList ) ) ( ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_exprList_5_0= ruleexpressionList ) ) ) )
            {
            // InternalGo.g:1429:3: ( (lv_idList_0_0= ruleidentifierList ) )
            // InternalGo.g:1430:4: (lv_idList_0_0= ruleidentifierList )
            {
            // InternalGo.g:1430:4: (lv_idList_0_0= ruleidentifierList )
            // InternalGo.g:1431:5: lv_idList_0_0= ruleidentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVarSpecAccess().getIdListIdentifierListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_21);
            lv_idList_0_0=ruleidentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVarSpecRule());
              					}
              					set(
              						current,
              						"idList",
              						lv_idList_0_0,
              						"org.xtext.Go.identifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:1448:3: ( ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )? ) | (otherlv_4= '=' ( (lv_exprList_5_0= ruleexpressionList ) ) ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==RULE_IDENTIFIER||LA24_0==45||LA24_0==52||LA24_0==56||LA24_0==63||LA24_0==95||(LA24_0>=97 && LA24_0<=99)||LA24_0==101) ) {
                alt24=1;
            }
            else if ( (LA24_0==49) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalGo.g:1449:4: ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )? )
                    {
                    // InternalGo.g:1449:4: ( ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )? )
                    // InternalGo.g:1450:5: ( (lv_type_1_0= ruletype ) ) (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )?
                    {
                    // InternalGo.g:1450:5: ( (lv_type_1_0= ruletype ) )
                    // InternalGo.g:1451:6: (lv_type_1_0= ruletype )
                    {
                    // InternalGo.g:1451:6: (lv_type_1_0= ruletype )
                    // InternalGo.g:1452:7: lv_type_1_0= ruletype
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVarSpecAccess().getTypeTypeParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_22);
                    lv_type_1_0=ruletype();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVarSpecRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_1_0,
                      								"org.xtext.Go.type");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:1469:5: (otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) ) )?
                    int alt23=2;
                    int LA23_0 = input.LA(1);

                    if ( (LA23_0==49) ) {
                        alt23=1;
                    }
                    switch (alt23) {
                        case 1 :
                            // InternalGo.g:1470:6: otherlv_2= '=' ( (lv_exprList_3_0= ruleexpressionList ) )
                            {
                            otherlv_2=(Token)match(input,49,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0());
                              					
                            }
                            // InternalGo.g:1474:6: ( (lv_exprList_3_0= ruleexpressionList ) )
                            // InternalGo.g:1475:7: (lv_exprList_3_0= ruleexpressionList )
                            {
                            // InternalGo.g:1475:7: (lv_exprList_3_0= ruleexpressionList )
                            // InternalGo.g:1476:8: lv_exprList_3_0= ruleexpressionList
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getVarSpecAccess().getExprListExpressionListParserRuleCall_1_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_exprList_3_0=ruleexpressionList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getVarSpecRule());
                              								}
                              								add(
                              									current,
                              									"exprList",
                              									lv_exprList_3_0,
                              									"org.xtext.Go.expressionList");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1496:4: (otherlv_4= '=' ( (lv_exprList_5_0= ruleexpressionList ) ) )
                    {
                    // InternalGo.g:1496:4: (otherlv_4= '=' ( (lv_exprList_5_0= ruleexpressionList ) ) )
                    // InternalGo.g:1497:5: otherlv_4= '=' ( (lv_exprList_5_0= ruleexpressionList ) )
                    {
                    otherlv_4=(Token)match(input,49,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0());
                      				
                    }
                    // InternalGo.g:1501:5: ( (lv_exprList_5_0= ruleexpressionList ) )
                    // InternalGo.g:1502:6: (lv_exprList_5_0= ruleexpressionList )
                    {
                    // InternalGo.g:1502:6: (lv_exprList_5_0= ruleexpressionList )
                    // InternalGo.g:1503:7: lv_exprList_5_0= ruleexpressionList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVarSpecAccess().getExprListExpressionListParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_exprList_5_0=ruleexpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVarSpecRule());
                      							}
                      							add(
                      								current,
                      								"exprList",
                      								lv_exprList_5_0,
                      								"org.xtext.Go.expressionList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulevarSpec"


    // $ANTLR start "entryRuleblock"
    // InternalGo.g:1526:1: entryRuleblock returns [EObject current=null] : iv_ruleblock= ruleblock EOF ;
    public final EObject entryRuleblock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleblock = null;


        try {
            // InternalGo.g:1526:46: (iv_ruleblock= ruleblock EOF )
            // InternalGo.g:1527:2: iv_ruleblock= ruleblock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleblock=ruleblock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleblock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleblock"


    // $ANTLR start "ruleblock"
    // InternalGo.g:1533:1: ruleblock returns [EObject current=null] : (otherlv_0= '{' ( (lv_statements_1_0= rulestatementList ) ) otherlv_2= '}' ) ;
    public final EObject ruleblock() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_statements_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1539:2: ( (otherlv_0= '{' ( (lv_statements_1_0= rulestatementList ) ) otherlv_2= '}' ) )
            // InternalGo.g:1540:2: (otherlv_0= '{' ( (lv_statements_1_0= rulestatementList ) ) otherlv_2= '}' )
            {
            // InternalGo.g:1540:2: (otherlv_0= '{' ( (lv_statements_1_0= rulestatementList ) ) otherlv_2= '}' )
            // InternalGo.g:1541:3: otherlv_0= '{' ( (lv_statements_1_0= rulestatementList ) ) otherlv_2= '}'
            {
            otherlv_0=(Token)match(input,54,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalGo.g:1545:3: ( (lv_statements_1_0= rulestatementList ) )
            // InternalGo.g:1546:4: (lv_statements_1_0= rulestatementList )
            {
            // InternalGo.g:1546:4: (lv_statements_1_0= rulestatementList )
            // InternalGo.g:1547:5: lv_statements_1_0= rulestatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBlockAccess().getStatementsStatementListParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_24);
            lv_statements_1_0=rulestatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBlockRule());
              					}
              					set(
              						current,
              						"statements",
              						lv_statements_1_0,
              						"org.xtext.Go.statementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleblock"


    // $ANTLR start "entryRulestatementList"
    // InternalGo.g:1572:1: entryRulestatementList returns [EObject current=null] : iv_rulestatementList= rulestatementList EOF ;
    public final EObject entryRulestatementList() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestatementList = null;


        try {
            // InternalGo.g:1572:54: (iv_rulestatementList= rulestatementList EOF )
            // InternalGo.g:1573:2: iv_rulestatementList= rulestatementList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestatementList=rulestatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestatementList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestatementList"


    // $ANTLR start "rulestatementList"
    // InternalGo.g:1579:1: rulestatementList returns [EObject current=null] : ( () ( ( (lv_statements_1_0= rulestatement ) ) ruleeos )* ) ;
    public final EObject rulestatementList() throws RecognitionException {
        EObject current = null;

        EObject lv_statements_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1585:2: ( ( () ( ( (lv_statements_1_0= rulestatement ) ) ruleeos )* ) )
            // InternalGo.g:1586:2: ( () ( ( (lv_statements_1_0= rulestatement ) ) ruleeos )* )
            {
            // InternalGo.g:1586:2: ( () ( ( (lv_statements_1_0= rulestatement ) ) ruleeos )* )
            // InternalGo.g:1587:3: () ( ( (lv_statements_1_0= rulestatement ) ) ruleeos )*
            {
            // InternalGo.g:1587:3: ()
            // InternalGo.g:1588:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStatementListAccess().getStatementListAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:1597:3: ( ( (lv_statements_1_0= rulestatement ) ) ruleeos )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( ((LA25_0>=RULE_IDENTIFIER && LA25_0<=RULE_BINARY_OP)||LA25_0==45||(LA25_0>=47 && LA25_0<=54)||(LA25_0>=56 && LA25_0<=69)||(LA25_0>=72 && LA25_0<=78)||LA25_0==80||(LA25_0>=83 && LA25_0<=84)||LA25_0==86||LA25_0==95||(LA25_0>=97 && LA25_0<=99)||(LA25_0>=101 && LA25_0<=103)) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // InternalGo.g:1598:4: ( (lv_statements_1_0= rulestatement ) ) ruleeos
            	    {
            	    // InternalGo.g:1598:4: ( (lv_statements_1_0= rulestatement ) )
            	    // InternalGo.g:1599:5: (lv_statements_1_0= rulestatement )
            	    {
            	    // InternalGo.g:1599:5: (lv_statements_1_0= rulestatement )
            	    // InternalGo.g:1600:6: lv_statements_1_0= rulestatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStatementListAccess().getStatementsStatementParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_statements_1_0=rulestatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStatementListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"statements",
            	      							lv_statements_1_0,
            	      							"org.xtext.Go.statement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      				/* */
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getStatementListAccess().getEosParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_25);
            	    ruleeos();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestatementList"


    // $ANTLR start "entryRulestatement"
    // InternalGo.g:1632:1: entryRulestatement returns [EObject current=null] : iv_rulestatement= rulestatement EOF ;
    public final EObject entryRulestatement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestatement = null;


        try {
            // InternalGo.g:1632:50: (iv_rulestatement= rulestatement EOF )
            // InternalGo.g:1633:2: iv_rulestatement= rulestatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestatement=rulestatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestatement"


    // $ANTLR start "rulestatement"
    // InternalGo.g:1639:1: rulestatement returns [EObject current=null] : ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_labeledStmt_1_0= rulelabeledStmt ) ) | ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) | ( (lv_goStmt_3_0= rulegoStmt ) ) | ( (lv_returnStmt_4_0= rulereturnStmt ) ) | ( (lv_breakStmt_5_0= rulebreakStmt ) ) | ( (lv_continueStmt_6_0= rulecontinueStmt ) ) | ( (lv_gotoStmt_7_0= rulegotoStmt ) ) | ( (lv_fallthroughStmt_8_0= rulefallthroughStmt ) ) | ( (lv_block_9_0= ruleblock ) ) | ( (lv_ifStmt_10_0= ruleifStmt ) ) | ( (lv_switchStmt_11_0= ruleswitchStmt ) ) | ( (lv_selectStmt_12_0= ruleselectStmt ) ) | ( (lv_forStmt_13_0= ruleforStmt ) ) | ( (lv_deferStmt_14_0= ruledeferStmt ) ) ) ;
    public final EObject rulestatement() throws RecognitionException {
        EObject current = null;

        EObject lv_declaration_0_0 = null;

        EObject lv_labeledStmt_1_0 = null;

        EObject lv_simpleStmt_2_0 = null;

        EObject lv_goStmt_3_0 = null;

        EObject lv_returnStmt_4_0 = null;

        EObject lv_breakStmt_5_0 = null;

        EObject lv_continueStmt_6_0 = null;

        EObject lv_gotoStmt_7_0 = null;

        EObject lv_fallthroughStmt_8_0 = null;

        EObject lv_block_9_0 = null;

        EObject lv_ifStmt_10_0 = null;

        EObject lv_switchStmt_11_0 = null;

        EObject lv_selectStmt_12_0 = null;

        EObject lv_forStmt_13_0 = null;

        EObject lv_deferStmt_14_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1645:2: ( ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_labeledStmt_1_0= rulelabeledStmt ) ) | ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) | ( (lv_goStmt_3_0= rulegoStmt ) ) | ( (lv_returnStmt_4_0= rulereturnStmt ) ) | ( (lv_breakStmt_5_0= rulebreakStmt ) ) | ( (lv_continueStmt_6_0= rulecontinueStmt ) ) | ( (lv_gotoStmt_7_0= rulegotoStmt ) ) | ( (lv_fallthroughStmt_8_0= rulefallthroughStmt ) ) | ( (lv_block_9_0= ruleblock ) ) | ( (lv_ifStmt_10_0= ruleifStmt ) ) | ( (lv_switchStmt_11_0= ruleswitchStmt ) ) | ( (lv_selectStmt_12_0= ruleselectStmt ) ) | ( (lv_forStmt_13_0= ruleforStmt ) ) | ( (lv_deferStmt_14_0= ruledeferStmt ) ) ) )
            // InternalGo.g:1646:2: ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_labeledStmt_1_0= rulelabeledStmt ) ) | ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) | ( (lv_goStmt_3_0= rulegoStmt ) ) | ( (lv_returnStmt_4_0= rulereturnStmt ) ) | ( (lv_breakStmt_5_0= rulebreakStmt ) ) | ( (lv_continueStmt_6_0= rulecontinueStmt ) ) | ( (lv_gotoStmt_7_0= rulegotoStmt ) ) | ( (lv_fallthroughStmt_8_0= rulefallthroughStmt ) ) | ( (lv_block_9_0= ruleblock ) ) | ( (lv_ifStmt_10_0= ruleifStmt ) ) | ( (lv_switchStmt_11_0= ruleswitchStmt ) ) | ( (lv_selectStmt_12_0= ruleselectStmt ) ) | ( (lv_forStmt_13_0= ruleforStmt ) ) | ( (lv_deferStmt_14_0= ruledeferStmt ) ) )
            {
            // InternalGo.g:1646:2: ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_labeledStmt_1_0= rulelabeledStmt ) ) | ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) | ( (lv_goStmt_3_0= rulegoStmt ) ) | ( (lv_returnStmt_4_0= rulereturnStmt ) ) | ( (lv_breakStmt_5_0= rulebreakStmt ) ) | ( (lv_continueStmt_6_0= rulecontinueStmt ) ) | ( (lv_gotoStmt_7_0= rulegotoStmt ) ) | ( (lv_fallthroughStmt_8_0= rulefallthroughStmt ) ) | ( (lv_block_9_0= ruleblock ) ) | ( (lv_ifStmt_10_0= ruleifStmt ) ) | ( (lv_switchStmt_11_0= ruleswitchStmt ) ) | ( (lv_selectStmt_12_0= ruleselectStmt ) ) | ( (lv_forStmt_13_0= ruleforStmt ) ) | ( (lv_deferStmt_14_0= ruledeferStmt ) ) )
            int alt26=15;
            alt26 = dfa26.predict(input);
            switch (alt26) {
                case 1 :
                    // InternalGo.g:1647:3: ( (lv_declaration_0_0= ruledeclaration ) )
                    {
                    // InternalGo.g:1647:3: ( (lv_declaration_0_0= ruledeclaration ) )
                    // InternalGo.g:1648:4: (lv_declaration_0_0= ruledeclaration )
                    {
                    // InternalGo.g:1648:4: (lv_declaration_0_0= ruledeclaration )
                    // InternalGo.g:1649:5: lv_declaration_0_0= ruledeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaration_0_0=ruledeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"declaration",
                      						lv_declaration_0_0,
                      						"org.xtext.Go.declaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1667:3: ( (lv_labeledStmt_1_0= rulelabeledStmt ) )
                    {
                    // InternalGo.g:1667:3: ( (lv_labeledStmt_1_0= rulelabeledStmt ) )
                    // InternalGo.g:1668:4: (lv_labeledStmt_1_0= rulelabeledStmt )
                    {
                    // InternalGo.g:1668:4: (lv_labeledStmt_1_0= rulelabeledStmt )
                    // InternalGo.g:1669:5: lv_labeledStmt_1_0= rulelabeledStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getLabeledStmtLabeledStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_labeledStmt_1_0=rulelabeledStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"labeledStmt",
                      						lv_labeledStmt_1_0,
                      						"org.xtext.Go.labeledStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:1687:3: ( (lv_simpleStmt_2_0= rulesimpleStmt ) )
                    {
                    // InternalGo.g:1687:3: ( (lv_simpleStmt_2_0= rulesimpleStmt ) )
                    // InternalGo.g:1688:4: (lv_simpleStmt_2_0= rulesimpleStmt )
                    {
                    // InternalGo.g:1688:4: (lv_simpleStmt_2_0= rulesimpleStmt )
                    // InternalGo.g:1689:5: lv_simpleStmt_2_0= rulesimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSimpleStmtSimpleStmtParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_simpleStmt_2_0=rulesimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"simpleStmt",
                      						lv_simpleStmt_2_0,
                      						"org.xtext.Go.simpleStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:1707:3: ( (lv_goStmt_3_0= rulegoStmt ) )
                    {
                    // InternalGo.g:1707:3: ( (lv_goStmt_3_0= rulegoStmt ) )
                    // InternalGo.g:1708:4: (lv_goStmt_3_0= rulegoStmt )
                    {
                    // InternalGo.g:1708:4: (lv_goStmt_3_0= rulegoStmt )
                    // InternalGo.g:1709:5: lv_goStmt_3_0= rulegoStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getGoStmtGoStmtParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_goStmt_3_0=rulegoStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"goStmt",
                      						lv_goStmt_3_0,
                      						"org.xtext.Go.goStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:1727:3: ( (lv_returnStmt_4_0= rulereturnStmt ) )
                    {
                    // InternalGo.g:1727:3: ( (lv_returnStmt_4_0= rulereturnStmt ) )
                    // InternalGo.g:1728:4: (lv_returnStmt_4_0= rulereturnStmt )
                    {
                    // InternalGo.g:1728:4: (lv_returnStmt_4_0= rulereturnStmt )
                    // InternalGo.g:1729:5: lv_returnStmt_4_0= rulereturnStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getReturnStmtReturnStmtParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnStmt_4_0=rulereturnStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"returnStmt",
                      						lv_returnStmt_4_0,
                      						"org.xtext.Go.returnStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:1747:3: ( (lv_breakStmt_5_0= rulebreakStmt ) )
                    {
                    // InternalGo.g:1747:3: ( (lv_breakStmt_5_0= rulebreakStmt ) )
                    // InternalGo.g:1748:4: (lv_breakStmt_5_0= rulebreakStmt )
                    {
                    // InternalGo.g:1748:4: (lv_breakStmt_5_0= rulebreakStmt )
                    // InternalGo.g:1749:5: lv_breakStmt_5_0= rulebreakStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getBreakStmtBreakStmtParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_breakStmt_5_0=rulebreakStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"breakStmt",
                      						lv_breakStmt_5_0,
                      						"org.xtext.Go.breakStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalGo.g:1767:3: ( (lv_continueStmt_6_0= rulecontinueStmt ) )
                    {
                    // InternalGo.g:1767:3: ( (lv_continueStmt_6_0= rulecontinueStmt ) )
                    // InternalGo.g:1768:4: (lv_continueStmt_6_0= rulecontinueStmt )
                    {
                    // InternalGo.g:1768:4: (lv_continueStmt_6_0= rulecontinueStmt )
                    // InternalGo.g:1769:5: lv_continueStmt_6_0= rulecontinueStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getContinueStmtContinueStmtParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_continueStmt_6_0=rulecontinueStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"continueStmt",
                      						lv_continueStmt_6_0,
                      						"org.xtext.Go.continueStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalGo.g:1787:3: ( (lv_gotoStmt_7_0= rulegotoStmt ) )
                    {
                    // InternalGo.g:1787:3: ( (lv_gotoStmt_7_0= rulegotoStmt ) )
                    // InternalGo.g:1788:4: (lv_gotoStmt_7_0= rulegotoStmt )
                    {
                    // InternalGo.g:1788:4: (lv_gotoStmt_7_0= rulegotoStmt )
                    // InternalGo.g:1789:5: lv_gotoStmt_7_0= rulegotoStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getGotoStmtGotoStmtParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_gotoStmt_7_0=rulegotoStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"gotoStmt",
                      						lv_gotoStmt_7_0,
                      						"org.xtext.Go.gotoStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalGo.g:1807:3: ( (lv_fallthroughStmt_8_0= rulefallthroughStmt ) )
                    {
                    // InternalGo.g:1807:3: ( (lv_fallthroughStmt_8_0= rulefallthroughStmt ) )
                    // InternalGo.g:1808:4: (lv_fallthroughStmt_8_0= rulefallthroughStmt )
                    {
                    // InternalGo.g:1808:4: (lv_fallthroughStmt_8_0= rulefallthroughStmt )
                    // InternalGo.g:1809:5: lv_fallthroughStmt_8_0= rulefallthroughStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getFallthroughStmtFallthroughStmtParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_fallthroughStmt_8_0=rulefallthroughStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"fallthroughStmt",
                      						lv_fallthroughStmt_8_0,
                      						"org.xtext.Go.fallthroughStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalGo.g:1827:3: ( (lv_block_9_0= ruleblock ) )
                    {
                    // InternalGo.g:1827:3: ( (lv_block_9_0= ruleblock ) )
                    // InternalGo.g:1828:4: (lv_block_9_0= ruleblock )
                    {
                    // InternalGo.g:1828:4: (lv_block_9_0= ruleblock )
                    // InternalGo.g:1829:5: lv_block_9_0= ruleblock
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getBlockBlockParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_block_9_0=ruleblock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"block",
                      						lv_block_9_0,
                      						"org.xtext.Go.block");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalGo.g:1847:3: ( (lv_ifStmt_10_0= ruleifStmt ) )
                    {
                    // InternalGo.g:1847:3: ( (lv_ifStmt_10_0= ruleifStmt ) )
                    // InternalGo.g:1848:4: (lv_ifStmt_10_0= ruleifStmt )
                    {
                    // InternalGo.g:1848:4: (lv_ifStmt_10_0= ruleifStmt )
                    // InternalGo.g:1849:5: lv_ifStmt_10_0= ruleifStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getIfStmtIfStmtParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_ifStmt_10_0=ruleifStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"ifStmt",
                      						lv_ifStmt_10_0,
                      						"org.xtext.Go.ifStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalGo.g:1867:3: ( (lv_switchStmt_11_0= ruleswitchStmt ) )
                    {
                    // InternalGo.g:1867:3: ( (lv_switchStmt_11_0= ruleswitchStmt ) )
                    // InternalGo.g:1868:4: (lv_switchStmt_11_0= ruleswitchStmt )
                    {
                    // InternalGo.g:1868:4: (lv_switchStmt_11_0= ruleswitchStmt )
                    // InternalGo.g:1869:5: lv_switchStmt_11_0= ruleswitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSwitchStmtSwitchStmtParserRuleCall_11_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_switchStmt_11_0=ruleswitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"switchStmt",
                      						lv_switchStmt_11_0,
                      						"org.xtext.Go.switchStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalGo.g:1887:3: ( (lv_selectStmt_12_0= ruleselectStmt ) )
                    {
                    // InternalGo.g:1887:3: ( (lv_selectStmt_12_0= ruleselectStmt ) )
                    // InternalGo.g:1888:4: (lv_selectStmt_12_0= ruleselectStmt )
                    {
                    // InternalGo.g:1888:4: (lv_selectStmt_12_0= ruleselectStmt )
                    // InternalGo.g:1889:5: lv_selectStmt_12_0= ruleselectStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getSelectStmtSelectStmtParserRuleCall_12_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_selectStmt_12_0=ruleselectStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"selectStmt",
                      						lv_selectStmt_12_0,
                      						"org.xtext.Go.selectStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalGo.g:1907:3: ( (lv_forStmt_13_0= ruleforStmt ) )
                    {
                    // InternalGo.g:1907:3: ( (lv_forStmt_13_0= ruleforStmt ) )
                    // InternalGo.g:1908:4: (lv_forStmt_13_0= ruleforStmt )
                    {
                    // InternalGo.g:1908:4: (lv_forStmt_13_0= ruleforStmt )
                    // InternalGo.g:1909:5: lv_forStmt_13_0= ruleforStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getForStmtForStmtParserRuleCall_13_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_forStmt_13_0=ruleforStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"forStmt",
                      						lv_forStmt_13_0,
                      						"org.xtext.Go.forStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalGo.g:1927:3: ( (lv_deferStmt_14_0= ruledeferStmt ) )
                    {
                    // InternalGo.g:1927:3: ( (lv_deferStmt_14_0= ruledeferStmt ) )
                    // InternalGo.g:1928:4: (lv_deferStmt_14_0= ruledeferStmt )
                    {
                    // InternalGo.g:1928:4: (lv_deferStmt_14_0= ruledeferStmt )
                    // InternalGo.g:1929:5: lv_deferStmt_14_0= ruledeferStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStatementAccess().getDeferStmtDeferStmtParserRuleCall_14_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_deferStmt_14_0=ruledeferStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStatementRule());
                      					}
                      					set(
                      						current,
                      						"deferStmt",
                      						lv_deferStmt_14_0,
                      						"org.xtext.Go.deferStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestatement"


    // $ANTLR start "entryRulesimpleStmt"
    // InternalGo.g:1950:1: entryRulesimpleStmt returns [EObject current=null] : iv_rulesimpleStmt= rulesimpleStmt EOF ;
    public final EObject entryRulesimpleStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulesimpleStmt = null;


        try {
            // InternalGo.g:1950:51: (iv_rulesimpleStmt= rulesimpleStmt EOF )
            // InternalGo.g:1951:2: iv_rulesimpleStmt= rulesimpleStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulesimpleStmt=rulesimpleStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesimpleStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulesimpleStmt"


    // $ANTLR start "rulesimpleStmt"
    // InternalGo.g:1957:1: rulesimpleStmt returns [EObject current=null] : ( ( (lv_sendStmt_0_0= rulesendStmt ) ) | ( (lv_expressionStmt_1_0= ruleexpressionStmt ) ) | ( (lv_incDecStmt_2_0= ruleincDecStmt ) ) | ( (lv_assignment_3_0= ruleassignment ) ) | ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) ) | ( (lv_emptyStmt_5_0= ruleemptyStmt ) ) ) ;
    public final EObject rulesimpleStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_sendStmt_0_0 = null;

        EObject lv_expressionStmt_1_0 = null;

        EObject lv_incDecStmt_2_0 = null;

        EObject lv_assignment_3_0 = null;

        EObject lv_shortVarDecl_4_0 = null;

        EObject lv_emptyStmt_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:1963:2: ( ( ( (lv_sendStmt_0_0= rulesendStmt ) ) | ( (lv_expressionStmt_1_0= ruleexpressionStmt ) ) | ( (lv_incDecStmt_2_0= ruleincDecStmt ) ) | ( (lv_assignment_3_0= ruleassignment ) ) | ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) ) | ( (lv_emptyStmt_5_0= ruleemptyStmt ) ) ) )
            // InternalGo.g:1964:2: ( ( (lv_sendStmt_0_0= rulesendStmt ) ) | ( (lv_expressionStmt_1_0= ruleexpressionStmt ) ) | ( (lv_incDecStmt_2_0= ruleincDecStmt ) ) | ( (lv_assignment_3_0= ruleassignment ) ) | ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) ) | ( (lv_emptyStmt_5_0= ruleemptyStmt ) ) )
            {
            // InternalGo.g:1964:2: ( ( (lv_sendStmt_0_0= rulesendStmt ) ) | ( (lv_expressionStmt_1_0= ruleexpressionStmt ) ) | ( (lv_incDecStmt_2_0= ruleincDecStmt ) ) | ( (lv_assignment_3_0= ruleassignment ) ) | ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) ) | ( (lv_emptyStmt_5_0= ruleemptyStmt ) ) )
            int alt27=6;
            alt27 = dfa27.predict(input);
            switch (alt27) {
                case 1 :
                    // InternalGo.g:1965:3: ( (lv_sendStmt_0_0= rulesendStmt ) )
                    {
                    // InternalGo.g:1965:3: ( (lv_sendStmt_0_0= rulesendStmt ) )
                    // InternalGo.g:1966:4: (lv_sendStmt_0_0= rulesendStmt )
                    {
                    // InternalGo.g:1966:4: (lv_sendStmt_0_0= rulesendStmt )
                    // InternalGo.g:1967:5: lv_sendStmt_0_0= rulesendStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSendStmtSendStmtParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_sendStmt_0_0=rulesendStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"sendStmt",
                      						lv_sendStmt_0_0,
                      						"org.xtext.Go.sendStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:1985:3: ( (lv_expressionStmt_1_0= ruleexpressionStmt ) )
                    {
                    // InternalGo.g:1985:3: ( (lv_expressionStmt_1_0= ruleexpressionStmt ) )
                    // InternalGo.g:1986:4: (lv_expressionStmt_1_0= ruleexpressionStmt )
                    {
                    // InternalGo.g:1986:4: (lv_expressionStmt_1_0= ruleexpressionStmt )
                    // InternalGo.g:1987:5: lv_expressionStmt_1_0= ruleexpressionStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getExpressionStmtExpressionStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressionStmt_1_0=ruleexpressionStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"expressionStmt",
                      						lv_expressionStmt_1_0,
                      						"org.xtext.Go.expressionStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:2005:3: ( (lv_incDecStmt_2_0= ruleincDecStmt ) )
                    {
                    // InternalGo.g:2005:3: ( (lv_incDecStmt_2_0= ruleincDecStmt ) )
                    // InternalGo.g:2006:4: (lv_incDecStmt_2_0= ruleincDecStmt )
                    {
                    // InternalGo.g:2006:4: (lv_incDecStmt_2_0= ruleincDecStmt )
                    // InternalGo.g:2007:5: lv_incDecStmt_2_0= ruleincDecStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getIncDecStmtIncDecStmtParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_incDecStmt_2_0=ruleincDecStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"incDecStmt",
                      						lv_incDecStmt_2_0,
                      						"org.xtext.Go.incDecStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:2025:3: ( (lv_assignment_3_0= ruleassignment ) )
                    {
                    // InternalGo.g:2025:3: ( (lv_assignment_3_0= ruleassignment ) )
                    // InternalGo.g:2026:4: (lv_assignment_3_0= ruleassignment )
                    {
                    // InternalGo.g:2026:4: (lv_assignment_3_0= ruleassignment )
                    // InternalGo.g:2027:5: lv_assignment_3_0= ruleassignment
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getAssignmentAssignmentParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_assignment_3_0=ruleassignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"assignment",
                      						lv_assignment_3_0,
                      						"org.xtext.Go.assignment");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:2045:3: ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) )
                    {
                    // InternalGo.g:2045:3: ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) )
                    // InternalGo.g:2046:4: (lv_shortVarDecl_4_0= ruleshortVarDecl )
                    {
                    // InternalGo.g:2046:4: (lv_shortVarDecl_4_0= ruleshortVarDecl )
                    // InternalGo.g:2047:5: lv_shortVarDecl_4_0= ruleshortVarDecl
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_shortVarDecl_4_0=ruleshortVarDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"shortVarDecl",
                      						lv_shortVarDecl_4_0,
                      						"org.xtext.Go.shortVarDecl");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:2065:3: ( (lv_emptyStmt_5_0= ruleemptyStmt ) )
                    {
                    // InternalGo.g:2065:3: ( (lv_emptyStmt_5_0= ruleemptyStmt ) )
                    // InternalGo.g:2066:4: (lv_emptyStmt_5_0= ruleemptyStmt )
                    {
                    // InternalGo.g:2066:4: (lv_emptyStmt_5_0= ruleemptyStmt )
                    // InternalGo.g:2067:5: lv_emptyStmt_5_0= ruleemptyStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSimpleStmtAccess().getEmptyStmtEmptyStmtParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_emptyStmt_5_0=ruleemptyStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSimpleStmtRule());
                      					}
                      					set(
                      						current,
                      						"emptyStmt",
                      						lv_emptyStmt_5_0,
                      						"org.xtext.Go.emptyStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulesimpleStmt"


    // $ANTLR start "entryRuleexpressionStmt"
    // InternalGo.g:2088:1: entryRuleexpressionStmt returns [EObject current=null] : iv_ruleexpressionStmt= ruleexpressionStmt EOF ;
    public final EObject entryRuleexpressionStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexpressionStmt = null;


        try {
            // InternalGo.g:2088:55: (iv_ruleexpressionStmt= ruleexpressionStmt EOF )
            // InternalGo.g:2089:2: iv_ruleexpressionStmt= ruleexpressionStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexpressionStmt=ruleexpressionStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpressionStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexpressionStmt"


    // $ANTLR start "ruleexpressionStmt"
    // InternalGo.g:2095:1: ruleexpressionStmt returns [EObject current=null] : ( (lv_expr_0_0= ruleexpression ) ) ;
    public final EObject ruleexpressionStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_expr_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2101:2: ( ( (lv_expr_0_0= ruleexpression ) ) )
            // InternalGo.g:2102:2: ( (lv_expr_0_0= ruleexpression ) )
            {
            // InternalGo.g:2102:2: ( (lv_expr_0_0= ruleexpression ) )
            // InternalGo.g:2103:3: (lv_expr_0_0= ruleexpression )
            {
            // InternalGo.g:2103:3: (lv_expr_0_0= ruleexpression )
            // InternalGo.g:2104:4: lv_expr_0_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getExpressionStmtAccess().getExprExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_expr_0_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getExpressionStmtRule());
              				}
              				set(
              					current,
              					"expr",
              					lv_expr_0_0,
              					"org.xtext.Go.expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexpressionStmt"


    // $ANTLR start "entryRulesendStmt"
    // InternalGo.g:2124:1: entryRulesendStmt returns [EObject current=null] : iv_rulesendStmt= rulesendStmt EOF ;
    public final EObject entryRulesendStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulesendStmt = null;


        try {
            // InternalGo.g:2124:49: (iv_rulesendStmt= rulesendStmt EOF )
            // InternalGo.g:2125:2: iv_rulesendStmt= rulesendStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSendStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulesendStmt=rulesendStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesendStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulesendStmt"


    // $ANTLR start "rulesendStmt"
    // InternalGo.g:2131:1: rulesendStmt returns [EObject current=null] : ( ( (lv_expr1_0_0= ruleexpression ) ) otherlv_1= '<-' ( (lv_expr2_2_0= ruleexpression ) ) ) ;
    public final EObject rulesendStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expr1_0_0 = null;

        EObject lv_expr2_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2137:2: ( ( ( (lv_expr1_0_0= ruleexpression ) ) otherlv_1= '<-' ( (lv_expr2_2_0= ruleexpression ) ) ) )
            // InternalGo.g:2138:2: ( ( (lv_expr1_0_0= ruleexpression ) ) otherlv_1= '<-' ( (lv_expr2_2_0= ruleexpression ) ) )
            {
            // InternalGo.g:2138:2: ( ( (lv_expr1_0_0= ruleexpression ) ) otherlv_1= '<-' ( (lv_expr2_2_0= ruleexpression ) ) )
            // InternalGo.g:2139:3: ( (lv_expr1_0_0= ruleexpression ) ) otherlv_1= '<-' ( (lv_expr2_2_0= ruleexpression ) )
            {
            // InternalGo.g:2139:3: ( (lv_expr1_0_0= ruleexpression ) )
            // InternalGo.g:2140:4: (lv_expr1_0_0= ruleexpression )
            {
            // InternalGo.g:2140:4: (lv_expr1_0_0= ruleexpression )
            // InternalGo.g:2141:5: lv_expr1_0_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSendStmtAccess().getExpr1ExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_expr1_0_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSendStmtRule());
              					}
              					set(
              						current,
              						"expr1",
              						lv_expr1_0_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,56,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSendStmtAccess().getLessThanSignHyphenMinusKeyword_1());
              		
            }
            // InternalGo.g:2162:3: ( (lv_expr2_2_0= ruleexpression ) )
            // InternalGo.g:2163:4: (lv_expr2_2_0= ruleexpression )
            {
            // InternalGo.g:2163:4: (lv_expr2_2_0= ruleexpression )
            // InternalGo.g:2164:5: lv_expr2_2_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSendStmtAccess().getExpr2ExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr2_2_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSendStmtRule());
              					}
              					set(
              						current,
              						"expr2",
              						lv_expr2_2_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulesendStmt"


    // $ANTLR start "entryRuleincDecStmt"
    // InternalGo.g:2185:1: entryRuleincDecStmt returns [EObject current=null] : iv_ruleincDecStmt= ruleincDecStmt EOF ;
    public final EObject entryRuleincDecStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleincDecStmt = null;


        try {
            // InternalGo.g:2185:51: (iv_ruleincDecStmt= ruleincDecStmt EOF )
            // InternalGo.g:2186:2: iv_ruleincDecStmt= ruleincDecStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIncDecStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleincDecStmt=ruleincDecStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleincDecStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleincDecStmt"


    // $ANTLR start "ruleincDecStmt"
    // InternalGo.g:2192:1: ruleincDecStmt returns [EObject current=null] : ( ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= '++' | otherlv_2= '--' ) ) ;
    public final EObject ruleincDecStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_expr_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2198:2: ( ( ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= '++' | otherlv_2= '--' ) ) )
            // InternalGo.g:2199:2: ( ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= '++' | otherlv_2= '--' ) )
            {
            // InternalGo.g:2199:2: ( ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= '++' | otherlv_2= '--' ) )
            // InternalGo.g:2200:3: ( (lv_expr_0_0= ruleexpression ) ) (otherlv_1= '++' | otherlv_2= '--' )
            {
            // InternalGo.g:2200:3: ( (lv_expr_0_0= ruleexpression ) )
            // InternalGo.g:2201:4: (lv_expr_0_0= ruleexpression )
            {
            // InternalGo.g:2201:4: (lv_expr_0_0= ruleexpression )
            // InternalGo.g:2202:5: lv_expr_0_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIncDecStmtAccess().getExprExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_27);
            lv_expr_0_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIncDecStmtRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_0_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2219:3: (otherlv_1= '++' | otherlv_2= '--' )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==57) ) {
                alt28=1;
            }
            else if ( (LA28_0==58) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalGo.g:2220:4: otherlv_1= '++'
                    {
                    otherlv_1=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getIncDecStmtAccess().getPlusSignPlusSignKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:2225:4: otherlv_2= '--'
                    {
                    otherlv_2=(Token)match(input,58,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getIncDecStmtAccess().getHyphenMinusHyphenMinusKeyword_1_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleincDecStmt"


    // $ANTLR start "entryRuleassignment"
    // InternalGo.g:2234:1: entryRuleassignment returns [EObject current=null] : iv_ruleassignment= ruleassignment EOF ;
    public final EObject entryRuleassignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleassignment = null;


        try {
            // InternalGo.g:2234:51: (iv_ruleassignment= ruleassignment EOF )
            // InternalGo.g:2235:2: iv_ruleassignment= ruleassignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleassignment=ruleassignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleassignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleassignment"


    // $ANTLR start "ruleassignment"
    // InternalGo.g:2241:1: ruleassignment returns [EObject current=null] : ( ( (lv_exprList1_0_0= ruleexpressionList ) ) ( (lv_operation_1_0= ruleassign_op ) ) ( (lv_exprList2_2_0= ruleexpressionList ) ) ) ;
    public final EObject ruleassignment() throws RecognitionException {
        EObject current = null;

        EObject lv_exprList1_0_0 = null;

        AntlrDatatypeRuleToken lv_operation_1_0 = null;

        EObject lv_exprList2_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2247:2: ( ( ( (lv_exprList1_0_0= ruleexpressionList ) ) ( (lv_operation_1_0= ruleassign_op ) ) ( (lv_exprList2_2_0= ruleexpressionList ) ) ) )
            // InternalGo.g:2248:2: ( ( (lv_exprList1_0_0= ruleexpressionList ) ) ( (lv_operation_1_0= ruleassign_op ) ) ( (lv_exprList2_2_0= ruleexpressionList ) ) )
            {
            // InternalGo.g:2248:2: ( ( (lv_exprList1_0_0= ruleexpressionList ) ) ( (lv_operation_1_0= ruleassign_op ) ) ( (lv_exprList2_2_0= ruleexpressionList ) ) )
            // InternalGo.g:2249:3: ( (lv_exprList1_0_0= ruleexpressionList ) ) ( (lv_operation_1_0= ruleassign_op ) ) ( (lv_exprList2_2_0= ruleexpressionList ) )
            {
            // InternalGo.g:2249:3: ( (lv_exprList1_0_0= ruleexpressionList ) )
            // InternalGo.g:2250:4: (lv_exprList1_0_0= ruleexpressionList )
            {
            // InternalGo.g:2250:4: (lv_exprList1_0_0= ruleexpressionList )
            // InternalGo.g:2251:5: lv_exprList1_0_0= ruleexpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExprList1ExpressionListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_28);
            lv_exprList1_0_0=ruleexpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"exprList1",
              						lv_exprList1_0_0,
              						"org.xtext.Go.expressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2268:3: ( (lv_operation_1_0= ruleassign_op ) )
            // InternalGo.g:2269:4: (lv_operation_1_0= ruleassign_op )
            {
            // InternalGo.g:2269:4: (lv_operation_1_0= ruleassign_op )
            // InternalGo.g:2270:5: lv_operation_1_0= ruleassign_op
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getOperationAssign_opParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_operation_1_0=ruleassign_op();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"operation",
              						lv_operation_1_0,
              						"org.xtext.Go.assign_op");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2287:3: ( (lv_exprList2_2_0= ruleexpressionList ) )
            // InternalGo.g:2288:4: (lv_exprList2_2_0= ruleexpressionList )
            {
            // InternalGo.g:2288:4: (lv_exprList2_2_0= ruleexpressionList )
            // InternalGo.g:2289:5: lv_exprList2_2_0= ruleexpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExprList2ExpressionListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_exprList2_2_0=ruleexpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"exprList2",
              						lv_exprList2_2_0,
              						"org.xtext.Go.expressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleassignment"


    // $ANTLR start "entryRuleassign_op"
    // InternalGo.g:2310:1: entryRuleassign_op returns [String current=null] : iv_ruleassign_op= ruleassign_op EOF ;
    public final String entryRuleassign_op() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleassign_op = null;


        try {
            // InternalGo.g:2310:49: (iv_ruleassign_op= ruleassign_op EOF )
            // InternalGo.g:2311:2: iv_ruleassign_op= ruleassign_op EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssign_opRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleassign_op=ruleassign_op();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleassign_op.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleassign_op"


    // $ANTLR start "ruleassign_op"
    // InternalGo.g:2317:1: ruleassign_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '+' | kw= '-' | kw= '|' | kw= '^' | kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )? kw= '=' ) ;
    public final AntlrDatatypeRuleToken ruleassign_op() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:2323:2: ( ( (kw= '+' | kw= '-' | kw= '|' | kw= '^' | kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )? kw= '=' ) )
            // InternalGo.g:2324:2: ( (kw= '+' | kw= '-' | kw= '|' | kw= '^' | kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )? kw= '=' )
            {
            // InternalGo.g:2324:2: ( (kw= '+' | kw= '-' | kw= '|' | kw= '^' | kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )? kw= '=' )
            // InternalGo.g:2325:3: (kw= '+' | kw= '-' | kw= '|' | kw= '^' | kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )? kw= '='
            {
            // InternalGo.g:2325:3: (kw= '+' | kw= '-' | kw= '|' | kw= '^' | kw= '*' | kw= '/' | kw= '%' | kw= '<<' | kw= '>>' | kw= '&' | kw= '&^' )?
            int alt29=12;
            switch ( input.LA(1) ) {
                case 59:
                    {
                    alt29=1;
                    }
                    break;
                case 60:
                    {
                    alt29=2;
                    }
                    break;
                case 61:
                    {
                    alt29=3;
                    }
                    break;
                case 62:
                    {
                    alt29=4;
                    }
                    break;
                case 63:
                    {
                    alt29=5;
                    }
                    break;
                case 64:
                    {
                    alt29=6;
                    }
                    break;
                case 65:
                    {
                    alt29=7;
                    }
                    break;
                case 66:
                    {
                    alt29=8;
                    }
                    break;
                case 67:
                    {
                    alt29=9;
                    }
                    break;
                case 68:
                    {
                    alt29=10;
                    }
                    break;
                case 69:
                    {
                    alt29=11;
                    }
                    break;
            }

            switch (alt29) {
                case 1 :
                    // InternalGo.g:2326:4: kw= '+'
                    {
                    kw=(Token)match(input,59,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getPlusSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:2332:4: kw= '-'
                    {
                    kw=(Token)match(input,60,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getHyphenMinusKeyword_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalGo.g:2338:4: kw= '|'
                    {
                    kw=(Token)match(input,61,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getVerticalLineKeyword_0_2());
                      			
                    }

                    }
                    break;
                case 4 :
                    // InternalGo.g:2344:4: kw= '^'
                    {
                    kw=(Token)match(input,62,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getCircumflexAccentKeyword_0_3());
                      			
                    }

                    }
                    break;
                case 5 :
                    // InternalGo.g:2350:4: kw= '*'
                    {
                    kw=(Token)match(input,63,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getAsteriskKeyword_0_4());
                      			
                    }

                    }
                    break;
                case 6 :
                    // InternalGo.g:2356:4: kw= '/'
                    {
                    kw=(Token)match(input,64,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getSolidusKeyword_0_5());
                      			
                    }

                    }
                    break;
                case 7 :
                    // InternalGo.g:2362:4: kw= '%'
                    {
                    kw=(Token)match(input,65,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getPercentSignKeyword_0_6());
                      			
                    }

                    }
                    break;
                case 8 :
                    // InternalGo.g:2368:4: kw= '<<'
                    {
                    kw=(Token)match(input,66,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getLessThanSignLessThanSignKeyword_0_7());
                      			
                    }

                    }
                    break;
                case 9 :
                    // InternalGo.g:2374:4: kw= '>>'
                    {
                    kw=(Token)match(input,67,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getGreaterThanSignGreaterThanSignKeyword_0_8());
                      			
                    }

                    }
                    break;
                case 10 :
                    // InternalGo.g:2380:4: kw= '&'
                    {
                    kw=(Token)match(input,68,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getAmpersandKeyword_0_9());
                      			
                    }

                    }
                    break;
                case 11 :
                    // InternalGo.g:2386:4: kw= '&^'
                    {
                    kw=(Token)match(input,69,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAssign_opAccess().getAmpersandCircumflexAccentKeyword_0_10());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getAssign_opAccess().getEqualsSignKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleassign_op"


    // $ANTLR start "entryRuleshortVarDecl"
    // InternalGo.g:2401:1: entryRuleshortVarDecl returns [EObject current=null] : iv_ruleshortVarDecl= ruleshortVarDecl EOF ;
    public final EObject entryRuleshortVarDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleshortVarDecl = null;


        try {
            // InternalGo.g:2401:53: (iv_ruleshortVarDecl= ruleshortVarDecl EOF )
            // InternalGo.g:2402:2: iv_ruleshortVarDecl= ruleshortVarDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShortVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleshortVarDecl=ruleshortVarDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleshortVarDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleshortVarDecl"


    // $ANTLR start "ruleshortVarDecl"
    // InternalGo.g:2408:1: ruleshortVarDecl returns [EObject current=null] : ( ( (lv_idList_0_0= ruleidentifierList ) ) otherlv_1= ':=' ( (lv_exprList_2_0= ruleexpressionList ) ) ) ;
    public final EObject ruleshortVarDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_idList_0_0 = null;

        EObject lv_exprList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2414:2: ( ( ( (lv_idList_0_0= ruleidentifierList ) ) otherlv_1= ':=' ( (lv_exprList_2_0= ruleexpressionList ) ) ) )
            // InternalGo.g:2415:2: ( ( (lv_idList_0_0= ruleidentifierList ) ) otherlv_1= ':=' ( (lv_exprList_2_0= ruleexpressionList ) ) )
            {
            // InternalGo.g:2415:2: ( ( (lv_idList_0_0= ruleidentifierList ) ) otherlv_1= ':=' ( (lv_exprList_2_0= ruleexpressionList ) ) )
            // InternalGo.g:2416:3: ( (lv_idList_0_0= ruleidentifierList ) ) otherlv_1= ':=' ( (lv_exprList_2_0= ruleexpressionList ) )
            {
            // InternalGo.g:2416:3: ( (lv_idList_0_0= ruleidentifierList ) )
            // InternalGo.g:2417:4: (lv_idList_0_0= ruleidentifierList )
            {
            // InternalGo.g:2417:4: (lv_idList_0_0= ruleidentifierList )
            // InternalGo.g:2418:5: lv_idList_0_0= ruleidentifierList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getShortVarDeclAccess().getIdListIdentifierListParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_29);
            lv_idList_0_0=ruleidentifierList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
              					}
              					set(
              						current,
              						"idList",
              						lv_idList_0_0,
              						"org.xtext.Go.identifierList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,70,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1());
              		
            }
            // InternalGo.g:2439:3: ( (lv_exprList_2_0= ruleexpressionList ) )
            // InternalGo.g:2440:4: (lv_exprList_2_0= ruleexpressionList )
            {
            // InternalGo.g:2440:4: (lv_exprList_2_0= ruleexpressionList )
            // InternalGo.g:2441:5: lv_exprList_2_0= ruleexpressionList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getShortVarDeclAccess().getExprListExpressionListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_exprList_2_0=ruleexpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getShortVarDeclRule());
              					}
              					set(
              						current,
              						"exprList",
              						lv_exprList_2_0,
              						"org.xtext.Go.expressionList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleshortVarDecl"


    // $ANTLR start "entryRuleemptyStmt"
    // InternalGo.g:2462:1: entryRuleemptyStmt returns [EObject current=null] : iv_ruleemptyStmt= ruleemptyStmt EOF ;
    public final EObject entryRuleemptyStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleemptyStmt = null;


        try {
            // InternalGo.g:2462:50: (iv_ruleemptyStmt= ruleemptyStmt EOF )
            // InternalGo.g:2463:2: iv_ruleemptyStmt= ruleemptyStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleemptyStmt=ruleemptyStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleemptyStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleemptyStmt"


    // $ANTLR start "ruleemptyStmt"
    // InternalGo.g:2469:1: ruleemptyStmt returns [EObject current=null] : ( (lv_content_0_0= RULE_WS ) ) ;
    public final EObject ruleemptyStmt() throws RecognitionException {
        EObject current = null;

        Token lv_content_0_0=null;


        	enterRule();

        try {
            // InternalGo.g:2475:2: ( ( (lv_content_0_0= RULE_WS ) ) )
            // InternalGo.g:2476:2: ( (lv_content_0_0= RULE_WS ) )
            {
            // InternalGo.g:2476:2: ( (lv_content_0_0= RULE_WS ) )
            // InternalGo.g:2477:3: (lv_content_0_0= RULE_WS )
            {
            // InternalGo.g:2477:3: (lv_content_0_0= RULE_WS )
            // InternalGo.g:2478:4: lv_content_0_0= RULE_WS
            {
            lv_content_0_0=(Token)match(input,RULE_WS,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_content_0_0, grammarAccess.getEmptyStmtAccess().getContentWSTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getEmptyStmtRule());
              				}
              				setWithLastConsumed(
              					current,
              					"content",
              					lv_content_0_0,
              					"org.eclipse.xtext.common.Terminals.WS");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleemptyStmt"


    // $ANTLR start "entryRulelabeledStmt"
    // InternalGo.g:2497:1: entryRulelabeledStmt returns [EObject current=null] : iv_rulelabeledStmt= rulelabeledStmt EOF ;
    public final EObject entryRulelabeledStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulelabeledStmt = null;


        try {
            // InternalGo.g:2497:52: (iv_rulelabeledStmt= rulelabeledStmt EOF )
            // InternalGo.g:2498:2: iv_rulelabeledStmt= rulelabeledStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabeledStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulelabeledStmt=rulelabeledStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulelabeledStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulelabeledStmt"


    // $ANTLR start "rulelabeledStmt"
    // InternalGo.g:2504:1: rulelabeledStmt returns [EObject current=null] : ( ( (lv_label_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':' ( (lv_stmt_2_0= rulestatement ) ) ) ;
    public final EObject rulelabeledStmt() throws RecognitionException {
        EObject current = null;

        Token lv_label_0_0=null;
        Token otherlv_1=null;
        EObject lv_stmt_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2510:2: ( ( ( (lv_label_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':' ( (lv_stmt_2_0= rulestatement ) ) ) )
            // InternalGo.g:2511:2: ( ( (lv_label_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':' ( (lv_stmt_2_0= rulestatement ) ) )
            {
            // InternalGo.g:2511:2: ( ( (lv_label_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':' ( (lv_stmt_2_0= rulestatement ) ) )
            // InternalGo.g:2512:3: ( (lv_label_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':' ( (lv_stmt_2_0= rulestatement ) )
            {
            // InternalGo.g:2512:3: ( (lv_label_0_0= RULE_IDENTIFIER ) )
            // InternalGo.g:2513:4: (lv_label_0_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:2513:4: (lv_label_0_0= RULE_IDENTIFIER )
            // InternalGo.g:2514:5: lv_label_0_0= RULE_IDENTIFIER
            {
            lv_label_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_label_0_0, grammarAccess.getLabeledStmtAccess().getLabelIDENTIFIERTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLabeledStmtRule());
              					}
              					setWithLastConsumed(
              						current,
              						"label",
              						lv_label_0_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,71,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLabeledStmtAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:2534:3: ( (lv_stmt_2_0= rulestatement ) )
            // InternalGo.g:2535:4: (lv_stmt_2_0= rulestatement )
            {
            // InternalGo.g:2535:4: (lv_stmt_2_0= rulestatement )
            // InternalGo.g:2536:5: lv_stmt_2_0= rulestatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLabeledStmtAccess().getStmtStatementParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_stmt_2_0=rulestatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLabeledStmtRule());
              					}
              					set(
              						current,
              						"stmt",
              						lv_stmt_2_0,
              						"org.xtext.Go.statement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulelabeledStmt"


    // $ANTLR start "entryRulereturnStmt"
    // InternalGo.g:2557:1: entryRulereturnStmt returns [EObject current=null] : iv_rulereturnStmt= rulereturnStmt EOF ;
    public final EObject entryRulereturnStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulereturnStmt = null;


        try {
            // InternalGo.g:2557:51: (iv_rulereturnStmt= rulereturnStmt EOF )
            // InternalGo.g:2558:2: iv_rulereturnStmt= rulereturnStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulereturnStmt=rulereturnStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulereturnStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulereturnStmt"


    // $ANTLR start "rulereturnStmt"
    // InternalGo.g:2564:1: rulereturnStmt returns [EObject current=null] : ( () otherlv_1= 'return' ( (lv_exprList_2_0= ruleexpressionList ) )? ) ;
    public final EObject rulereturnStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_exprList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2570:2: ( ( () otherlv_1= 'return' ( (lv_exprList_2_0= ruleexpressionList ) )? ) )
            // InternalGo.g:2571:2: ( () otherlv_1= 'return' ( (lv_exprList_2_0= ruleexpressionList ) )? )
            {
            // InternalGo.g:2571:2: ( () otherlv_1= 'return' ( (lv_exprList_2_0= ruleexpressionList ) )? )
            // InternalGo.g:2572:3: () otherlv_1= 'return' ( (lv_exprList_2_0= ruleexpressionList ) )?
            {
            // InternalGo.g:2572:3: ()
            // InternalGo.g:2573:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getReturnStmtAccess().getReturnStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,72,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getReturnStmtAccess().getReturnKeyword_1());
              		
            }
            // InternalGo.g:2586:3: ( (lv_exprList_2_0= ruleexpressionList ) )?
            int alt30=2;
            switch ( input.LA(1) ) {
                case RULE_IDENTIFIER:
                case RULE_STRING_LIT:
                case RULE_INT_LIT:
                case RULE_FLOAT_LIT:
                case RULE_IMAGINARY_LIT:
                case RULE_RUNE_LIT:
                case RULE_BINARY_OP:
                case 45:
                case 47:
                case 50:
                case 52:
                case 56:
                case 59:
                case 60:
                case 62:
                case 63:
                case 68:
                case 95:
                case 97:
                case 98:
                case 99:
                case 101:
                case 102:
                    {
                    alt30=1;
                    }
                    break;
                case 103:
                    {
                    int LA30_2 = input.LA(2);

                    if ( (synpred60_InternalGo()) ) {
                        alt30=1;
                    }
                    }
                    break;
                case EOF:
                    {
                    int LA30_3 = input.LA(2);

                    if ( (synpred60_InternalGo()) ) {
                        alt30=1;
                    }
                    }
                    break;
            }

            switch (alt30) {
                case 1 :
                    // InternalGo.g:2587:4: (lv_exprList_2_0= ruleexpressionList )
                    {
                    // InternalGo.g:2587:4: (lv_exprList_2_0= ruleexpressionList )
                    // InternalGo.g:2588:5: lv_exprList_2_0= ruleexpressionList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReturnStmtAccess().getExprListExpressionListParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_exprList_2_0=ruleexpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReturnStmtRule());
                      					}
                      					set(
                      						current,
                      						"exprList",
                      						lv_exprList_2_0,
                      						"org.xtext.Go.expressionList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulereturnStmt"


    // $ANTLR start "entryRulebreakStmt"
    // InternalGo.g:2609:1: entryRulebreakStmt returns [EObject current=null] : iv_rulebreakStmt= rulebreakStmt EOF ;
    public final EObject entryRulebreakStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulebreakStmt = null;


        try {
            // InternalGo.g:2609:50: (iv_rulebreakStmt= rulebreakStmt EOF )
            // InternalGo.g:2610:2: iv_rulebreakStmt= rulebreakStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBreakStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulebreakStmt=rulebreakStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulebreakStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulebreakStmt"


    // $ANTLR start "rulebreakStmt"
    // InternalGo.g:2616:1: rulebreakStmt returns [EObject current=null] : ( () otherlv_1= 'break' ( (lv_label_2_0= RULE_IDENTIFIER ) )? ) ;
    public final EObject rulebreakStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_label_2_0=null;


        	enterRule();

        try {
            // InternalGo.g:2622:2: ( ( () otherlv_1= 'break' ( (lv_label_2_0= RULE_IDENTIFIER ) )? ) )
            // InternalGo.g:2623:2: ( () otherlv_1= 'break' ( (lv_label_2_0= RULE_IDENTIFIER ) )? )
            {
            // InternalGo.g:2623:2: ( () otherlv_1= 'break' ( (lv_label_2_0= RULE_IDENTIFIER ) )? )
            // InternalGo.g:2624:3: () otherlv_1= 'break' ( (lv_label_2_0= RULE_IDENTIFIER ) )?
            {
            // InternalGo.g:2624:3: ()
            // InternalGo.g:2625:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getBreakStmtAccess().getBreakStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,73,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBreakStmtAccess().getBreakKeyword_1());
              		
            }
            // InternalGo.g:2638:3: ( (lv_label_2_0= RULE_IDENTIFIER ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==RULE_IDENTIFIER) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalGo.g:2639:4: (lv_label_2_0= RULE_IDENTIFIER )
                    {
                    // InternalGo.g:2639:4: (lv_label_2_0= RULE_IDENTIFIER )
                    // InternalGo.g:2640:5: lv_label_2_0= RULE_IDENTIFIER
                    {
                    lv_label_2_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_2_0, grammarAccess.getBreakStmtAccess().getLabelIDENTIFIERTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getBreakStmtRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_2_0,
                      						"org.xtext.Go.IDENTIFIER");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulebreakStmt"


    // $ANTLR start "entryRulecontinueStmt"
    // InternalGo.g:2660:1: entryRulecontinueStmt returns [EObject current=null] : iv_rulecontinueStmt= rulecontinueStmt EOF ;
    public final EObject entryRulecontinueStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulecontinueStmt = null;


        try {
            // InternalGo.g:2660:53: (iv_rulecontinueStmt= rulecontinueStmt EOF )
            // InternalGo.g:2661:2: iv_rulecontinueStmt= rulecontinueStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContinueStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecontinueStmt=rulecontinueStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecontinueStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecontinueStmt"


    // $ANTLR start "rulecontinueStmt"
    // InternalGo.g:2667:1: rulecontinueStmt returns [EObject current=null] : ( () otherlv_1= 'continue' ( (lv_label_2_0= RULE_IDENTIFIER ) )? ) ;
    public final EObject rulecontinueStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_label_2_0=null;


        	enterRule();

        try {
            // InternalGo.g:2673:2: ( ( () otherlv_1= 'continue' ( (lv_label_2_0= RULE_IDENTIFIER ) )? ) )
            // InternalGo.g:2674:2: ( () otherlv_1= 'continue' ( (lv_label_2_0= RULE_IDENTIFIER ) )? )
            {
            // InternalGo.g:2674:2: ( () otherlv_1= 'continue' ( (lv_label_2_0= RULE_IDENTIFIER ) )? )
            // InternalGo.g:2675:3: () otherlv_1= 'continue' ( (lv_label_2_0= RULE_IDENTIFIER ) )?
            {
            // InternalGo.g:2675:3: ()
            // InternalGo.g:2676:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getContinueStmtAccess().getContinueStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,74,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getContinueStmtAccess().getContinueKeyword_1());
              		
            }
            // InternalGo.g:2689:3: ( (lv_label_2_0= RULE_IDENTIFIER ) )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==RULE_IDENTIFIER) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // InternalGo.g:2690:4: (lv_label_2_0= RULE_IDENTIFIER )
                    {
                    // InternalGo.g:2690:4: (lv_label_2_0= RULE_IDENTIFIER )
                    // InternalGo.g:2691:5: lv_label_2_0= RULE_IDENTIFIER
                    {
                    lv_label_2_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_label_2_0, grammarAccess.getContinueStmtAccess().getLabelIDENTIFIERTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getContinueStmtRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"label",
                      						lv_label_2_0,
                      						"org.xtext.Go.IDENTIFIER");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecontinueStmt"


    // $ANTLR start "entryRulegotoStmt"
    // InternalGo.g:2711:1: entryRulegotoStmt returns [EObject current=null] : iv_rulegotoStmt= rulegotoStmt EOF ;
    public final EObject entryRulegotoStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulegotoStmt = null;


        try {
            // InternalGo.g:2711:49: (iv_rulegotoStmt= rulegotoStmt EOF )
            // InternalGo.g:2712:2: iv_rulegotoStmt= rulegotoStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGotoStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulegotoStmt=rulegotoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulegotoStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulegotoStmt"


    // $ANTLR start "rulegotoStmt"
    // InternalGo.g:2718:1: rulegotoStmt returns [EObject current=null] : (otherlv_0= 'goto' ( (lv_label_1_0= RULE_IDENTIFIER ) ) ) ;
    public final EObject rulegotoStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_label_1_0=null;


        	enterRule();

        try {
            // InternalGo.g:2724:2: ( (otherlv_0= 'goto' ( (lv_label_1_0= RULE_IDENTIFIER ) ) ) )
            // InternalGo.g:2725:2: (otherlv_0= 'goto' ( (lv_label_1_0= RULE_IDENTIFIER ) ) )
            {
            // InternalGo.g:2725:2: (otherlv_0= 'goto' ( (lv_label_1_0= RULE_IDENTIFIER ) ) )
            // InternalGo.g:2726:3: otherlv_0= 'goto' ( (lv_label_1_0= RULE_IDENTIFIER ) )
            {
            otherlv_0=(Token)match(input,75,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getGotoStmtAccess().getGotoKeyword_0());
              		
            }
            // InternalGo.g:2730:3: ( (lv_label_1_0= RULE_IDENTIFIER ) )
            // InternalGo.g:2731:4: (lv_label_1_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:2731:4: (lv_label_1_0= RULE_IDENTIFIER )
            // InternalGo.g:2732:5: lv_label_1_0= RULE_IDENTIFIER
            {
            lv_label_1_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_label_1_0, grammarAccess.getGotoStmtAccess().getLabelIDENTIFIERTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGotoStmtRule());
              					}
              					setWithLastConsumed(
              						current,
              						"label",
              						lv_label_1_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulegotoStmt"


    // $ANTLR start "entryRulefallthroughStmt"
    // InternalGo.g:2752:1: entryRulefallthroughStmt returns [EObject current=null] : iv_rulefallthroughStmt= rulefallthroughStmt EOF ;
    public final EObject entryRulefallthroughStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefallthroughStmt = null;


        try {
            // InternalGo.g:2752:56: (iv_rulefallthroughStmt= rulefallthroughStmt EOF )
            // InternalGo.g:2753:2: iv_rulefallthroughStmt= rulefallthroughStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFallthroughStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefallthroughStmt=rulefallthroughStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefallthroughStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefallthroughStmt"


    // $ANTLR start "rulefallthroughStmt"
    // InternalGo.g:2759:1: rulefallthroughStmt returns [EObject current=null] : ( (lv_content_0_0= 'fallthrough' ) ) ;
    public final EObject rulefallthroughStmt() throws RecognitionException {
        EObject current = null;

        Token lv_content_0_0=null;


        	enterRule();

        try {
            // InternalGo.g:2765:2: ( ( (lv_content_0_0= 'fallthrough' ) ) )
            // InternalGo.g:2766:2: ( (lv_content_0_0= 'fallthrough' ) )
            {
            // InternalGo.g:2766:2: ( (lv_content_0_0= 'fallthrough' ) )
            // InternalGo.g:2767:3: (lv_content_0_0= 'fallthrough' )
            {
            // InternalGo.g:2767:3: (lv_content_0_0= 'fallthrough' )
            // InternalGo.g:2768:4: lv_content_0_0= 'fallthrough'
            {
            lv_content_0_0=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_content_0_0, grammarAccess.getFallthroughStmtAccess().getContentFallthroughKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFallthroughStmtRule());
              				}
              				setWithLastConsumed(current, "content", lv_content_0_0, "fallthrough");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefallthroughStmt"


    // $ANTLR start "entryRuledeferStmt"
    // InternalGo.g:2783:1: entryRuledeferStmt returns [EObject current=null] : iv_ruledeferStmt= ruledeferStmt EOF ;
    public final EObject entryRuledeferStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledeferStmt = null;


        try {
            // InternalGo.g:2783:50: (iv_ruledeferStmt= ruledeferStmt EOF )
            // InternalGo.g:2784:2: iv_ruledeferStmt= ruledeferStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeferStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledeferStmt=ruledeferStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledeferStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledeferStmt"


    // $ANTLR start "ruledeferStmt"
    // InternalGo.g:2790:1: ruledeferStmt returns [EObject current=null] : (otherlv_0= 'defer' ( (lv_expr_1_0= ruleexpression ) ) ) ;
    public final EObject ruledeferStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_expr_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2796:2: ( (otherlv_0= 'defer' ( (lv_expr_1_0= ruleexpression ) ) ) )
            // InternalGo.g:2797:2: (otherlv_0= 'defer' ( (lv_expr_1_0= ruleexpression ) ) )
            {
            // InternalGo.g:2797:2: (otherlv_0= 'defer' ( (lv_expr_1_0= ruleexpression ) ) )
            // InternalGo.g:2798:3: otherlv_0= 'defer' ( (lv_expr_1_0= ruleexpression ) )
            {
            otherlv_0=(Token)match(input,77,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDeferStmtAccess().getDeferKeyword_0());
              		
            }
            // InternalGo.g:2802:3: ( (lv_expr_1_0= ruleexpression ) )
            // InternalGo.g:2803:4: (lv_expr_1_0= ruleexpression )
            {
            // InternalGo.g:2803:4: (lv_expr_1_0= ruleexpression )
            // InternalGo.g:2804:5: lv_expr_1_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDeferStmtAccess().getExprExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_1_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDeferStmtRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_1_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledeferStmt"


    // $ANTLR start "entryRuleifStmt"
    // InternalGo.g:2825:1: entryRuleifStmt returns [EObject current=null] : iv_ruleifStmt= ruleifStmt EOF ;
    public final EObject entryRuleifStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleifStmt = null;


        try {
            // InternalGo.g:2825:47: (iv_ruleifStmt= ruleifStmt EOF )
            // InternalGo.g:2826:2: iv_ruleifStmt= ruleifStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleifStmt=ruleifStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleifStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleifStmt"


    // $ANTLR start "ruleifStmt"
    // InternalGo.g:2832:1: ruleifStmt returns [EObject current=null] : (otherlv_0= 'if' ( ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_3_0= ruleexpression ) ) ( (lv_codeBlock_4_0= ruleblock ) ) (otherlv_5= 'else' ( ( (lv_ifStatement_6_0= ruleifStmt ) ) | ( (lv_codeBlockIf_7_0= ruleblock ) ) ) )? ) ;
    public final EObject ruleifStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_5=null;
        EObject lv_simplStatement_1_0 = null;

        EObject lv_expr_3_0 = null;

        EObject lv_codeBlock_4_0 = null;

        EObject lv_ifStatement_6_0 = null;

        EObject lv_codeBlockIf_7_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2838:2: ( (otherlv_0= 'if' ( ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_3_0= ruleexpression ) ) ( (lv_codeBlock_4_0= ruleblock ) ) (otherlv_5= 'else' ( ( (lv_ifStatement_6_0= ruleifStmt ) ) | ( (lv_codeBlockIf_7_0= ruleblock ) ) ) )? ) )
            // InternalGo.g:2839:2: (otherlv_0= 'if' ( ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_3_0= ruleexpression ) ) ( (lv_codeBlock_4_0= ruleblock ) ) (otherlv_5= 'else' ( ( (lv_ifStatement_6_0= ruleifStmt ) ) | ( (lv_codeBlockIf_7_0= ruleblock ) ) ) )? )
            {
            // InternalGo.g:2839:2: (otherlv_0= 'if' ( ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_3_0= ruleexpression ) ) ( (lv_codeBlock_4_0= ruleblock ) ) (otherlv_5= 'else' ( ( (lv_ifStatement_6_0= ruleifStmt ) ) | ( (lv_codeBlockIf_7_0= ruleblock ) ) ) )? )
            // InternalGo.g:2840:3: otherlv_0= 'if' ( ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_3_0= ruleexpression ) ) ( (lv_codeBlock_4_0= ruleblock ) ) (otherlv_5= 'else' ( ( (lv_ifStatement_6_0= ruleifStmt ) ) | ( (lv_codeBlockIf_7_0= ruleblock ) ) ) )?
            {
            otherlv_0=(Token)match(input,78,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIfStmtAccess().getIfKeyword_0());
              		
            }
            // InternalGo.g:2844:3: ( ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos )?
            int alt33=2;
            alt33 = dfa33.predict(input);
            switch (alt33) {
                case 1 :
                    // InternalGo.g:2845:4: ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos
                    {
                    // InternalGo.g:2845:4: ( (lv_simplStatement_1_0= rulesimpleStmt ) )
                    // InternalGo.g:2846:5: (lv_simplStatement_1_0= rulesimpleStmt )
                    {
                    // InternalGo.g:2846:5: (lv_simplStatement_1_0= rulesimpleStmt )
                    // InternalGo.g:2847:6: lv_simplStatement_1_0= rulesimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIfStmtAccess().getSimplStatementSimpleStmtParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_simplStatement_1_0=rulesimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIfStmtRule());
                      						}
                      						set(
                      							current,
                      							"simplStatement",
                      							lv_simplStatement_1_0,
                      							"org.xtext.Go.simpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getIfStmtAccess().getEosParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_16);
                    ruleeos();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:2875:3: ( (lv_expr_3_0= ruleexpression ) )
            // InternalGo.g:2876:4: (lv_expr_3_0= ruleexpression )
            {
            // InternalGo.g:2876:4: (lv_expr_3_0= ruleexpression )
            // InternalGo.g:2877:5: lv_expr_3_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStmtAccess().getExprExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_expr_3_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStmtRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_3_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2894:3: ( (lv_codeBlock_4_0= ruleblock ) )
            // InternalGo.g:2895:4: (lv_codeBlock_4_0= ruleblock )
            {
            // InternalGo.g:2895:4: (lv_codeBlock_4_0= ruleblock )
            // InternalGo.g:2896:5: lv_codeBlock_4_0= ruleblock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIfStmtAccess().getCodeBlockBlockParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_codeBlock_4_0=ruleblock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIfStmtRule());
              					}
              					set(
              						current,
              						"codeBlock",
              						lv_codeBlock_4_0,
              						"org.xtext.Go.block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:2913:3: (otherlv_5= 'else' ( ( (lv_ifStatement_6_0= ruleifStmt ) ) | ( (lv_codeBlockIf_7_0= ruleblock ) ) ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==79) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalGo.g:2914:4: otherlv_5= 'else' ( ( (lv_ifStatement_6_0= ruleifStmt ) ) | ( (lv_codeBlockIf_7_0= ruleblock ) ) )
                    {
                    otherlv_5=(Token)match(input,79,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getIfStmtAccess().getElseKeyword_4_0());
                      			
                    }
                    // InternalGo.g:2918:4: ( ( (lv_ifStatement_6_0= ruleifStmt ) ) | ( (lv_codeBlockIf_7_0= ruleblock ) ) )
                    int alt34=2;
                    int LA34_0 = input.LA(1);

                    if ( (LA34_0==78) ) {
                        alt34=1;
                    }
                    else if ( (LA34_0==54) ) {
                        alt34=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 34, 0, input);

                        throw nvae;
                    }
                    switch (alt34) {
                        case 1 :
                            // InternalGo.g:2919:5: ( (lv_ifStatement_6_0= ruleifStmt ) )
                            {
                            // InternalGo.g:2919:5: ( (lv_ifStatement_6_0= ruleifStmt ) )
                            // InternalGo.g:2920:6: (lv_ifStatement_6_0= ruleifStmt )
                            {
                            // InternalGo.g:2920:6: (lv_ifStatement_6_0= ruleifStmt )
                            // InternalGo.g:2921:7: lv_ifStatement_6_0= ruleifStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getIfStmtAccess().getIfStatementIfStmtParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_ifStatement_6_0=ruleifStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getIfStmtRule());
                              							}
                              							set(
                              								current,
                              								"ifStatement",
                              								lv_ifStatement_6_0,
                              								"org.xtext.Go.ifStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:2939:5: ( (lv_codeBlockIf_7_0= ruleblock ) )
                            {
                            // InternalGo.g:2939:5: ( (lv_codeBlockIf_7_0= ruleblock ) )
                            // InternalGo.g:2940:6: (lv_codeBlockIf_7_0= ruleblock )
                            {
                            // InternalGo.g:2940:6: (lv_codeBlockIf_7_0= ruleblock )
                            // InternalGo.g:2941:7: lv_codeBlockIf_7_0= ruleblock
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getIfStmtAccess().getCodeBlockIfBlockParserRuleCall_4_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_codeBlockIf_7_0=ruleblock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getIfStmtRule());
                              							}
                              							set(
                              								current,
                              								"codeBlockIf",
                              								lv_codeBlockIf_7_0,
                              								"org.xtext.Go.block");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleifStmt"


    // $ANTLR start "entryRuleswitchStmt"
    // InternalGo.g:2964:1: entryRuleswitchStmt returns [EObject current=null] : iv_ruleswitchStmt= ruleswitchStmt EOF ;
    public final EObject entryRuleswitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleswitchStmt = null;


        try {
            // InternalGo.g:2964:51: (iv_ruleswitchStmt= ruleswitchStmt EOF )
            // InternalGo.g:2965:2: iv_ruleswitchStmt= ruleswitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleswitchStmt=ruleswitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleswitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleswitchStmt"


    // $ANTLR start "ruleswitchStmt"
    // InternalGo.g:2971:1: ruleswitchStmt returns [EObject current=null] : ( ( (lv_statement_0_0= ruleexprSwitchStmt ) ) | ( (lv_statement_1_0= ruletypeSwitchStmt ) ) ) ;
    public final EObject ruleswitchStmt() throws RecognitionException {
        EObject current = null;

        EObject lv_statement_0_0 = null;

        EObject lv_statement_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:2977:2: ( ( ( (lv_statement_0_0= ruleexprSwitchStmt ) ) | ( (lv_statement_1_0= ruletypeSwitchStmt ) ) ) )
            // InternalGo.g:2978:2: ( ( (lv_statement_0_0= ruleexprSwitchStmt ) ) | ( (lv_statement_1_0= ruletypeSwitchStmt ) ) )
            {
            // InternalGo.g:2978:2: ( ( (lv_statement_0_0= ruleexprSwitchStmt ) ) | ( (lv_statement_1_0= ruletypeSwitchStmt ) ) )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==80) ) {
                int LA36_1 = input.LA(2);

                if ( (synpred66_InternalGo()) ) {
                    alt36=1;
                }
                else if ( (true) ) {
                    alt36=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalGo.g:2979:3: ( (lv_statement_0_0= ruleexprSwitchStmt ) )
                    {
                    // InternalGo.g:2979:3: ( (lv_statement_0_0= ruleexprSwitchStmt ) )
                    // InternalGo.g:2980:4: (lv_statement_0_0= ruleexprSwitchStmt )
                    {
                    // InternalGo.g:2980:4: (lv_statement_0_0= ruleexprSwitchStmt )
                    // InternalGo.g:2981:5: lv_statement_0_0= ruleexprSwitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSwitchStmtAccess().getStatementExprSwitchStmtParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_0_0=ruleexprSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSwitchStmtRule());
                      					}
                      					set(
                      						current,
                      						"statement",
                      						lv_statement_0_0,
                      						"org.xtext.Go.exprSwitchStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2999:3: ( (lv_statement_1_0= ruletypeSwitchStmt ) )
                    {
                    // InternalGo.g:2999:3: ( (lv_statement_1_0= ruletypeSwitchStmt ) )
                    // InternalGo.g:3000:4: (lv_statement_1_0= ruletypeSwitchStmt )
                    {
                    // InternalGo.g:3000:4: (lv_statement_1_0= ruletypeSwitchStmt )
                    // InternalGo.g:3001:5: lv_statement_1_0= ruletypeSwitchStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSwitchStmtAccess().getStatementTypeSwitchStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement_1_0=ruletypeSwitchStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSwitchStmtRule());
                      					}
                      					set(
                      						current,
                      						"statement",
                      						lv_statement_1_0,
                      						"org.xtext.Go.typeSwitchStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleswitchStmt"


    // $ANTLR start "entryRuleexprSwitchStmt"
    // InternalGo.g:3022:1: entryRuleexprSwitchStmt returns [EObject current=null] : iv_ruleexprSwitchStmt= ruleexprSwitchStmt EOF ;
    public final EObject entryRuleexprSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexprSwitchStmt = null;


        try {
            // InternalGo.g:3022:55: (iv_ruleexprSwitchStmt= ruleexprSwitchStmt EOF )
            // InternalGo.g:3023:2: iv_ruleexprSwitchStmt= ruleexprSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexprSwitchStmt=ruleexprSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexprSwitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexprSwitchStmt"


    // $ANTLR start "ruleexprSwitchStmt"
    // InternalGo.g:3029:1: ruleexprSwitchStmt returns [EObject current=null] : ( () otherlv_1= 'switch' ( ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_4_0= ruleexpression ) )? otherlv_5= '{' ( (lv_exprCaseClauses_6_0= ruleexprCaseClause ) )* otherlv_7= '}' ) ;
    public final EObject ruleexprSwitchStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_simpleStmt_2_0 = null;

        EObject lv_expr_4_0 = null;

        EObject lv_exprCaseClauses_6_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3035:2: ( ( () otherlv_1= 'switch' ( ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_4_0= ruleexpression ) )? otherlv_5= '{' ( (lv_exprCaseClauses_6_0= ruleexprCaseClause ) )* otherlv_7= '}' ) )
            // InternalGo.g:3036:2: ( () otherlv_1= 'switch' ( ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_4_0= ruleexpression ) )? otherlv_5= '{' ( (lv_exprCaseClauses_6_0= ruleexprCaseClause ) )* otherlv_7= '}' )
            {
            // InternalGo.g:3036:2: ( () otherlv_1= 'switch' ( ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_4_0= ruleexpression ) )? otherlv_5= '{' ( (lv_exprCaseClauses_6_0= ruleexprCaseClause ) )* otherlv_7= '}' )
            // InternalGo.g:3037:3: () otherlv_1= 'switch' ( ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) ruleeos )? ( (lv_expr_4_0= ruleexpression ) )? otherlv_5= '{' ( (lv_exprCaseClauses_6_0= ruleexprCaseClause ) )* otherlv_7= '}'
            {
            // InternalGo.g:3037:3: ()
            // InternalGo.g:3038:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExprSwitchStmtAccess().getExprSwitchStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,80,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExprSwitchStmtAccess().getSwitchKeyword_1());
              		
            }
            // InternalGo.g:3051:3: ( ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) ruleeos )?
            int alt37=2;
            alt37 = dfa37.predict(input);
            switch (alt37) {
                case 1 :
                    // InternalGo.g:3052:4: ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) ruleeos
                    {
                    // InternalGo.g:3052:4: ( (lv_simpleStmt_2_0= rulesimpleStmt ) )
                    // InternalGo.g:3053:5: (lv_simpleStmt_2_0= rulesimpleStmt )
                    {
                    // InternalGo.g:3053:5: (lv_simpleStmt_2_0= rulesimpleStmt )
                    // InternalGo.g:3054:6: lv_simpleStmt_2_0= rulesimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_simpleStmt_2_0=rulesimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
                      						}
                      						set(
                      							current,
                      							"simpleStmt",
                      							lv_simpleStmt_2_0,
                      							"org.xtext.Go.simpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getEosParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FOLLOW_38);
                    ruleeos();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:3082:3: ( (lv_expr_4_0= ruleexpression ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( ((LA38_0>=RULE_IDENTIFIER && LA38_0<=RULE_STRING_LIT)||(LA38_0>=RULE_INT_LIT && LA38_0<=RULE_BINARY_OP)||LA38_0==45||LA38_0==47||LA38_0==52||LA38_0==56||(LA38_0>=59 && LA38_0<=60)||(LA38_0>=62 && LA38_0<=63)||LA38_0==68||LA38_0==95||(LA38_0>=97 && LA38_0<=99)||(LA38_0>=101 && LA38_0<=102)) ) {
                alt38=1;
            }
            else if ( (LA38_0==54) ) {
                int LA38_2 = input.LA(2);

                if ( (synpred68_InternalGo()) ) {
                    alt38=1;
                }
            }
            switch (alt38) {
                case 1 :
                    // InternalGo.g:3083:4: (lv_expr_4_0= ruleexpression )
                    {
                    // InternalGo.g:3083:4: (lv_expr_4_0= ruleexpression )
                    // InternalGo.g:3084:5: lv_expr_4_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExprExpressionParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_20);
                    lv_expr_4_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
                      					}
                      					set(
                      						current,
                      						"expr",
                      						lv_expr_4_0,
                      						"org.xtext.Go.expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,54,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getExprSwitchStmtAccess().getLeftCurlyBracketKeyword_4());
              		
            }
            // InternalGo.g:3105:3: ( (lv_exprCaseClauses_6_0= ruleexprCaseClause ) )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( ((LA39_0>=81 && LA39_0<=82)) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalGo.g:3106:4: (lv_exprCaseClauses_6_0= ruleexprCaseClause )
            	    {
            	    // InternalGo.g:3106:4: (lv_exprCaseClauses_6_0= ruleexprCaseClause )
            	    // InternalGo.g:3107:5: lv_exprCaseClauses_6_0= ruleexprCaseClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExprCaseClausesExprCaseClauseParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_exprCaseClauses_6_0=ruleexprCaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExprSwitchStmtRule());
            	      					}
            	      					add(
            	      						current,
            	      						"exprCaseClauses",
            	      						lv_exprCaseClauses_6_0,
            	      						"org.xtext.Go.exprCaseClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

            otherlv_7=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getExprSwitchStmtAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexprSwitchStmt"


    // $ANTLR start "entryRuleexprCaseClause"
    // InternalGo.g:3132:1: entryRuleexprCaseClause returns [EObject current=null] : iv_ruleexprCaseClause= ruleexprCaseClause EOF ;
    public final EObject entryRuleexprCaseClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexprCaseClause = null;


        try {
            // InternalGo.g:3132:55: (iv_ruleexprCaseClause= ruleexprCaseClause EOF )
            // InternalGo.g:3133:2: iv_ruleexprCaseClause= ruleexprCaseClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexprCaseClause=ruleexprCaseClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexprCaseClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexprCaseClause"


    // $ANTLR start "ruleexprCaseClause"
    // InternalGo.g:3139:1: ruleexprCaseClause returns [EObject current=null] : ( ( (lv_exprSwitchCase_0_0= ruleexprSwitchCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) ) ) ;
    public final EObject ruleexprCaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_exprSwitchCase_0_0 = null;

        EObject lv_stmtList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3145:2: ( ( ( (lv_exprSwitchCase_0_0= ruleexprSwitchCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) ) ) )
            // InternalGo.g:3146:2: ( ( (lv_exprSwitchCase_0_0= ruleexprSwitchCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) ) )
            {
            // InternalGo.g:3146:2: ( ( (lv_exprSwitchCase_0_0= ruleexprSwitchCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) ) )
            // InternalGo.g:3147:3: ( (lv_exprSwitchCase_0_0= ruleexprSwitchCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) )
            {
            // InternalGo.g:3147:3: ( (lv_exprSwitchCase_0_0= ruleexprSwitchCase ) )
            // InternalGo.g:3148:4: (lv_exprSwitchCase_0_0= ruleexprSwitchCase )
            {
            // InternalGo.g:3148:4: (lv_exprSwitchCase_0_0= ruleexprSwitchCase )
            // InternalGo.g:3149:5: lv_exprSwitchCase_0_0= ruleexprSwitchCase
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseExprSwitchCaseParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_30);
            lv_exprSwitchCase_0_0=ruleexprSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExprCaseClauseRule());
              					}
              					set(
              						current,
              						"exprSwitchCase",
              						lv_exprSwitchCase_0_0,
              						"org.xtext.Go.exprSwitchCase");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,71,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExprCaseClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:3170:3: ( (lv_stmtList_2_0= rulestatementList ) )
            // InternalGo.g:3171:4: (lv_stmtList_2_0= rulestatementList )
            {
            // InternalGo.g:3171:4: (lv_stmtList_2_0= rulestatementList )
            // InternalGo.g:3172:5: lv_stmtList_2_0= rulestatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExprCaseClauseAccess().getStmtListStatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_stmtList_2_0=rulestatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExprCaseClauseRule());
              					}
              					set(
              						current,
              						"stmtList",
              						lv_stmtList_2_0,
              						"org.xtext.Go.statementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexprCaseClause"


    // $ANTLR start "entryRuleexprSwitchCase"
    // InternalGo.g:3193:1: entryRuleexprSwitchCase returns [EObject current=null] : iv_ruleexprSwitchCase= ruleexprSwitchCase EOF ;
    public final EObject entryRuleexprSwitchCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexprSwitchCase = null;


        try {
            // InternalGo.g:3193:55: (iv_ruleexprSwitchCase= ruleexprSwitchCase EOF )
            // InternalGo.g:3194:2: iv_ruleexprSwitchCase= ruleexprSwitchCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExprSwitchCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexprSwitchCase=ruleexprSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexprSwitchCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexprSwitchCase"


    // $ANTLR start "ruleexprSwitchCase"
    // InternalGo.g:3200:1: ruleexprSwitchCase returns [EObject current=null] : ( (otherlv_0= 'case' ( (lv_exprList_1_0= ruleexpressionList ) ) ) | ( () otherlv_3= 'default' ) ) ;
    public final EObject ruleexprSwitchCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_exprList_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3206:2: ( ( (otherlv_0= 'case' ( (lv_exprList_1_0= ruleexpressionList ) ) ) | ( () otherlv_3= 'default' ) ) )
            // InternalGo.g:3207:2: ( (otherlv_0= 'case' ( (lv_exprList_1_0= ruleexpressionList ) ) ) | ( () otherlv_3= 'default' ) )
            {
            // InternalGo.g:3207:2: ( (otherlv_0= 'case' ( (lv_exprList_1_0= ruleexpressionList ) ) ) | ( () otherlv_3= 'default' ) )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==81) ) {
                alt40=1;
            }
            else if ( (LA40_0==82) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalGo.g:3208:3: (otherlv_0= 'case' ( (lv_exprList_1_0= ruleexpressionList ) ) )
                    {
                    // InternalGo.g:3208:3: (otherlv_0= 'case' ( (lv_exprList_1_0= ruleexpressionList ) ) )
                    // InternalGo.g:3209:4: otherlv_0= 'case' ( (lv_exprList_1_0= ruleexpressionList ) )
                    {
                    otherlv_0=(Token)match(input,81,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getExprSwitchCaseAccess().getCaseKeyword_0_0());
                      			
                    }
                    // InternalGo.g:3213:4: ( (lv_exprList_1_0= ruleexpressionList ) )
                    // InternalGo.g:3214:5: (lv_exprList_1_0= ruleexpressionList )
                    {
                    // InternalGo.g:3214:5: (lv_exprList_1_0= ruleexpressionList )
                    // InternalGo.g:3215:6: lv_exprList_1_0= ruleexpressionList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExprSwitchCaseAccess().getExprListExpressionListParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_exprList_1_0=ruleexpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExprSwitchCaseRule());
                      						}
                      						set(
                      							current,
                      							"exprList",
                      							lv_exprList_1_0,
                      							"org.xtext.Go.expressionList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3234:3: ( () otherlv_3= 'default' )
                    {
                    // InternalGo.g:3234:3: ( () otherlv_3= 'default' )
                    // InternalGo.g:3235:4: () otherlv_3= 'default'
                    {
                    // InternalGo.g:3235:4: ()
                    // InternalGo.g:3236:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExprSwitchCaseAccess().getExprSwitchCaseAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_3=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExprSwitchCaseAccess().getDefaultKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexprSwitchCase"


    // $ANTLR start "entryRuletypeSwitchStmt"
    // InternalGo.g:3254:1: entryRuletypeSwitchStmt returns [EObject current=null] : iv_ruletypeSwitchStmt= ruletypeSwitchStmt EOF ;
    public final EObject entryRuletypeSwitchStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeSwitchStmt = null;


        try {
            // InternalGo.g:3254:55: (iv_ruletypeSwitchStmt= ruletypeSwitchStmt EOF )
            // InternalGo.g:3255:2: iv_ruletypeSwitchStmt= ruletypeSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeSwitchStmt=ruletypeSwitchStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeSwitchStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeSwitchStmt"


    // $ANTLR start "ruletypeSwitchStmt"
    // InternalGo.g:3261:1: ruletypeSwitchStmt returns [EObject current=null] : (otherlv_0= 'switch' ( ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typeCaseClauses_5_0= ruletypeCaseClause ) )* otherlv_6= '}' ) ;
    public final EObject ruletypeSwitchStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_simpleStatement_1_0 = null;

        EObject lv_typeSwitchGuard_3_0 = null;

        EObject lv_typeCaseClauses_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3267:2: ( (otherlv_0= 'switch' ( ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typeCaseClauses_5_0= ruletypeCaseClause ) )* otherlv_6= '}' ) )
            // InternalGo.g:3268:2: (otherlv_0= 'switch' ( ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typeCaseClauses_5_0= ruletypeCaseClause ) )* otherlv_6= '}' )
            {
            // InternalGo.g:3268:2: (otherlv_0= 'switch' ( ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typeCaseClauses_5_0= ruletypeCaseClause ) )* otherlv_6= '}' )
            // InternalGo.g:3269:3: otherlv_0= 'switch' ( ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos )? ( (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard ) ) otherlv_4= '{' ( (lv_typeCaseClauses_5_0= ruletypeCaseClause ) )* otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,80,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeSwitchStmtAccess().getSwitchKeyword_0());
              		
            }
            // InternalGo.g:3273:3: ( ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos )?
            int alt41=2;
            alt41 = dfa41.predict(input);
            switch (alt41) {
                case 1 :
                    // InternalGo.g:3274:4: ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos
                    {
                    // InternalGo.g:3274:4: ( (lv_simpleStatement_1_0= rulesimpleStmt ) )
                    // InternalGo.g:3275:5: (lv_simpleStatement_1_0= rulesimpleStmt )
                    {
                    // InternalGo.g:3275:5: (lv_simpleStatement_1_0= rulesimpleStmt )
                    // InternalGo.g:3276:6: lv_simpleStatement_1_0= rulesimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getSimpleStatementSimpleStmtParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_simpleStatement_1_0=rulesimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
                      						}
                      						set(
                      							current,
                      							"simpleStatement",
                      							lv_simpleStatement_1_0,
                      							"org.xtext.Go.simpleStmt");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getEosParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_34);
                    ruleeos();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:3304:3: ( (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard ) )
            // InternalGo.g:3305:4: (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard )
            {
            // InternalGo.g:3305:4: (lv_typeSwitchGuard_3_0= ruletypeSwitchGuard )
            // InternalGo.g:3306:5: lv_typeSwitchGuard_3_0= ruletypeSwitchGuard
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getTypeSwitchGuardTypeSwitchGuardParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_typeSwitchGuard_3_0=ruletypeSwitchGuard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
              					}
              					set(
              						current,
              						"typeSwitchGuard",
              						lv_typeSwitchGuard_3_0,
              						"org.xtext.Go.typeSwitchGuard");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,54,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchStmtAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalGo.g:3327:3: ( (lv_typeCaseClauses_5_0= ruletypeCaseClause ) )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( ((LA42_0>=81 && LA42_0<=82)) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalGo.g:3328:4: (lv_typeCaseClauses_5_0= ruletypeCaseClause )
            	    {
            	    // InternalGo.g:3328:4: (lv_typeCaseClauses_5_0= ruletypeCaseClause )
            	    // InternalGo.g:3329:5: lv_typeCaseClauses_5_0= ruletypeCaseClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getTypeCaseClausesTypeCaseClauseParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_typeCaseClauses_5_0=ruletypeCaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTypeSwitchStmtRule());
            	      					}
            	      					add(
            	      						current,
            	      						"typeCaseClauses",
            	      						lv_typeCaseClauses_5_0,
            	      						"org.xtext.Go.typeCaseClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            otherlv_6=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchStmtAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeSwitchStmt"


    // $ANTLR start "entryRuletypeSwitchGuard"
    // InternalGo.g:3354:1: entryRuletypeSwitchGuard returns [EObject current=null] : iv_ruletypeSwitchGuard= ruletypeSwitchGuard EOF ;
    public final EObject entryRuletypeSwitchGuard() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeSwitchGuard = null;


        try {
            // InternalGo.g:3354:56: (iv_ruletypeSwitchGuard= ruletypeSwitchGuard EOF )
            // InternalGo.g:3355:2: iv_ruletypeSwitchGuard= ruletypeSwitchGuard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchGuardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeSwitchGuard=ruletypeSwitchGuard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeSwitchGuard; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeSwitchGuard"


    // $ANTLR start "ruletypeSwitchGuard"
    // InternalGo.g:3361:1: ruletypeSwitchGuard returns [EObject current=null] : ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_primaryExpression_2_0= ruleprimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' ) ;
    public final EObject ruletypeSwitchGuard() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_primaryExpression_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3367:2: ( ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_primaryExpression_2_0= ruleprimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' ) )
            // InternalGo.g:3368:2: ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_primaryExpression_2_0= ruleprimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' )
            {
            // InternalGo.g:3368:2: ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_primaryExpression_2_0= ruleprimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')' )
            // InternalGo.g:3369:3: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':=' )? ( (lv_primaryExpression_2_0= ruleprimaryExpr ) ) otherlv_3= '.' otherlv_4= '(' otherlv_5= 'type' otherlv_6= ')'
            {
            // InternalGo.g:3369:3: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':=' )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_IDENTIFIER) ) {
                int LA43_1 = input.LA(2);

                if ( (LA43_1==70) ) {
                    alt43=1;
                }
            }
            switch (alt43) {
                case 1 :
                    // InternalGo.g:3370:4: ( (lv_name_0_0= RULE_IDENTIFIER ) ) otherlv_1= ':='
                    {
                    // InternalGo.g:3370:4: ( (lv_name_0_0= RULE_IDENTIFIER ) )
                    // InternalGo.g:3371:5: (lv_name_0_0= RULE_IDENTIFIER )
                    {
                    // InternalGo.g:3371:5: (lv_name_0_0= RULE_IDENTIFIER )
                    // InternalGo.g:3372:6: lv_name_0_0= RULE_IDENTIFIER
                    {
                    lv_name_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_0, grammarAccess.getTypeSwitchGuardAccess().getNameIDENTIFIERTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTypeSwitchGuardRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_0_0,
                      							"org.xtext.Go.IDENTIFIER");
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,70,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:3393:3: ( (lv_primaryExpression_2_0= ruleprimaryExpr ) )
            // InternalGo.g:3394:4: (lv_primaryExpression_2_0= ruleprimaryExpr )
            {
            // InternalGo.g:3394:4: (lv_primaryExpression_2_0= ruleprimaryExpr )
            // InternalGo.g:3395:5: lv_primaryExpression_2_0= ruleprimaryExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExpressionPrimaryExprParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_41);
            lv_primaryExpression_2_0=ruleprimaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeSwitchGuardRule());
              					}
              					set(
              						current,
              						"primaryExpression",
              						lv_primaryExpression_2_0,
              						"org.xtext.Go.primaryExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,47,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getTypeSwitchGuardAccess().getFullStopKeyword_2());
              		
            }
            otherlv_4=(Token)match(input,45,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypeSwitchGuardAccess().getLeftParenthesisKeyword_3());
              		
            }
            otherlv_5=(Token)match(input,51,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getTypeSwitchGuardAccess().getTypeKeyword_4());
              		
            }
            otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getTypeSwitchGuardAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeSwitchGuard"


    // $ANTLR start "entryRuletypeCaseClause"
    // InternalGo.g:3432:1: entryRuletypeCaseClause returns [EObject current=null] : iv_ruletypeCaseClause= ruletypeCaseClause EOF ;
    public final EObject entryRuletypeCaseClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeCaseClause = null;


        try {
            // InternalGo.g:3432:55: (iv_ruletypeCaseClause= ruletypeCaseClause EOF )
            // InternalGo.g:3433:2: iv_ruletypeCaseClause= ruletypeCaseClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeCaseClause=ruletypeCaseClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeCaseClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeCaseClause"


    // $ANTLR start "ruletypeCaseClause"
    // InternalGo.g:3439:1: ruletypeCaseClause returns [EObject current=null] : ( ( (lv_typeSwitchCase_0_0= ruletypeSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) ) ;
    public final EObject ruletypeCaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_typeSwitchCase_0_0 = null;

        EObject lv_statementList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3445:2: ( ( ( (lv_typeSwitchCase_0_0= ruletypeSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) ) )
            // InternalGo.g:3446:2: ( ( (lv_typeSwitchCase_0_0= ruletypeSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) )
            {
            // InternalGo.g:3446:2: ( ( (lv_typeSwitchCase_0_0= ruletypeSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) ) )
            // InternalGo.g:3447:3: ( (lv_typeSwitchCase_0_0= ruletypeSwitchCase ) ) otherlv_1= ':' ( (lv_statementList_2_0= rulestatementList ) )
            {
            // InternalGo.g:3447:3: ( (lv_typeSwitchCase_0_0= ruletypeSwitchCase ) )
            // InternalGo.g:3448:4: (lv_typeSwitchCase_0_0= ruletypeSwitchCase )
            {
            // InternalGo.g:3448:4: (lv_typeSwitchCase_0_0= ruletypeSwitchCase )
            // InternalGo.g:3449:5: lv_typeSwitchCase_0_0= ruletypeSwitchCase
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseTypeSwitchCaseParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_30);
            lv_typeSwitchCase_0_0=ruletypeSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeCaseClauseRule());
              					}
              					set(
              						current,
              						"typeSwitchCase",
              						lv_typeSwitchCase_0_0,
              						"org.xtext.Go.typeSwitchCase");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,71,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:3470:3: ( (lv_statementList_2_0= rulestatementList ) )
            // InternalGo.g:3471:4: (lv_statementList_2_0= rulestatementList )
            {
            // InternalGo.g:3471:4: (lv_statementList_2_0= rulestatementList )
            // InternalGo.g:3472:5: lv_statementList_2_0= rulestatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_statementList_2_0=rulestatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeCaseClauseRule());
              					}
              					set(
              						current,
              						"statementList",
              						lv_statementList_2_0,
              						"org.xtext.Go.statementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeCaseClause"


    // $ANTLR start "entryRuletypeSwitchCase"
    // InternalGo.g:3493:1: entryRuletypeSwitchCase returns [EObject current=null] : iv_ruletypeSwitchCase= ruletypeSwitchCase EOF ;
    public final EObject entryRuletypeSwitchCase() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeSwitchCase = null;


        try {
            // InternalGo.g:3493:55: (iv_ruletypeSwitchCase= ruletypeSwitchCase EOF )
            // InternalGo.g:3494:2: iv_ruletypeSwitchCase= ruletypeSwitchCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSwitchCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeSwitchCase=ruletypeSwitchCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeSwitchCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeSwitchCase"


    // $ANTLR start "ruletypeSwitchCase"
    // InternalGo.g:3500:1: ruletypeSwitchCase returns [EObject current=null] : ( (otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) ) ) | ( () otherlv_3= 'default' ) ) ;
    public final EObject ruletypeSwitchCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_typeList_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3506:2: ( ( (otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) ) ) | ( () otherlv_3= 'default' ) ) )
            // InternalGo.g:3507:2: ( (otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) ) ) | ( () otherlv_3= 'default' ) )
            {
            // InternalGo.g:3507:2: ( (otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) ) ) | ( () otherlv_3= 'default' ) )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==81) ) {
                alt44=1;
            }
            else if ( (LA44_0==82) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // InternalGo.g:3508:3: (otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) ) )
                    {
                    // InternalGo.g:3508:3: (otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) ) )
                    // InternalGo.g:3509:4: otherlv_0= 'case' ( (lv_typeList_1_0= ruletypeList ) )
                    {
                    otherlv_0=(Token)match(input,81,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getTypeSwitchCaseAccess().getCaseKeyword_0_0());
                      			
                    }
                    // InternalGo.g:3513:4: ( (lv_typeList_1_0= ruletypeList ) )
                    // InternalGo.g:3514:5: (lv_typeList_1_0= ruletypeList )
                    {
                    // InternalGo.g:3514:5: (lv_typeList_1_0= ruletypeList )
                    // InternalGo.g:3515:6: lv_typeList_1_0= ruletypeList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeSwitchCaseAccess().getTypeListTypeListParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeList_1_0=ruletypeList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeSwitchCaseRule());
                      						}
                      						set(
                      							current,
                      							"typeList",
                      							lv_typeList_1_0,
                      							"org.xtext.Go.typeList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3534:3: ( () otherlv_3= 'default' )
                    {
                    // InternalGo.g:3534:3: ( () otherlv_3= 'default' )
                    // InternalGo.g:3535:4: () otherlv_3= 'default'
                    {
                    // InternalGo.g:3535:4: ()
                    // InternalGo.g:3536:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeSwitchCaseAccess().getTypeSwitchCaseAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_3=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTypeSwitchCaseAccess().getDefaultKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeSwitchCase"


    // $ANTLR start "entryRuletypeList"
    // InternalGo.g:3554:1: entryRuletypeList returns [EObject current=null] : iv_ruletypeList= ruletypeList EOF ;
    public final EObject entryRuletypeList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeList = null;


        try {
            // InternalGo.g:3554:49: (iv_ruletypeList= ruletypeList EOF )
            // InternalGo.g:3555:2: iv_ruletypeList= ruletypeList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeList=ruletypeList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeList"


    // $ANTLR start "ruletypeList"
    // InternalGo.g:3561:1: ruletypeList returns [EObject current=null] : ( ( (lv_types_0_0= ruletype ) ) (otherlv_1= ',' ( (lv_types_2_0= ruletype ) ) )* ) ;
    public final EObject ruletypeList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_types_0_0 = null;

        EObject lv_types_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3567:2: ( ( ( (lv_types_0_0= ruletype ) ) (otherlv_1= ',' ( (lv_types_2_0= ruletype ) ) )* ) )
            // InternalGo.g:3568:2: ( ( (lv_types_0_0= ruletype ) ) (otherlv_1= ',' ( (lv_types_2_0= ruletype ) ) )* )
            {
            // InternalGo.g:3568:2: ( ( (lv_types_0_0= ruletype ) ) (otherlv_1= ',' ( (lv_types_2_0= ruletype ) ) )* )
            // InternalGo.g:3569:3: ( (lv_types_0_0= ruletype ) ) (otherlv_1= ',' ( (lv_types_2_0= ruletype ) ) )*
            {
            // InternalGo.g:3569:3: ( (lv_types_0_0= ruletype ) )
            // InternalGo.g:3570:4: (lv_types_0_0= ruletype )
            {
            // InternalGo.g:3570:4: (lv_types_0_0= ruletype )
            // InternalGo.g:3571:5: lv_types_0_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeListAccess().getTypesTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_17);
            lv_types_0_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeListRule());
              					}
              					add(
              						current,
              						"types",
              						lv_types_0_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:3588:3: (otherlv_1= ',' ( (lv_types_2_0= ruletype ) ) )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==50) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalGo.g:3589:4: otherlv_1= ',' ( (lv_types_2_0= ruletype ) )
            	    {
            	    otherlv_1=(Token)match(input,50,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getTypeListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:3593:4: ( (lv_types_2_0= ruletype ) )
            	    // InternalGo.g:3594:5: (lv_types_2_0= ruletype )
            	    {
            	    // InternalGo.g:3594:5: (lv_types_2_0= ruletype )
            	    // InternalGo.g:3595:6: lv_types_2_0= ruletype
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypeListAccess().getTypesTypeParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_17);
            	    lv_types_2_0=ruletype();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypeListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"types",
            	      							lv_types_2_0,
            	      							"org.xtext.Go.type");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeList"


    // $ANTLR start "entryRuleselectStmt"
    // InternalGo.g:3617:1: entryRuleselectStmt returns [EObject current=null] : iv_ruleselectStmt= ruleselectStmt EOF ;
    public final EObject entryRuleselectStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleselectStmt = null;


        try {
            // InternalGo.g:3617:51: (iv_ruleselectStmt= ruleselectStmt EOF )
            // InternalGo.g:3618:2: iv_ruleselectStmt= ruleselectStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleselectStmt=ruleselectStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleselectStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleselectStmt"


    // $ANTLR start "ruleselectStmt"
    // InternalGo.g:3624:1: ruleselectStmt returns [EObject current=null] : ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commClauses_3_0= rulecommClause ) )* otherlv_4= '}' ) ;
    public final EObject ruleselectStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_commClauses_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3630:2: ( ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commClauses_3_0= rulecommClause ) )* otherlv_4= '}' ) )
            // InternalGo.g:3631:2: ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commClauses_3_0= rulecommClause ) )* otherlv_4= '}' )
            {
            // InternalGo.g:3631:2: ( () otherlv_1= 'select' otherlv_2= '{' ( (lv_commClauses_3_0= rulecommClause ) )* otherlv_4= '}' )
            // InternalGo.g:3632:3: () otherlv_1= 'select' otherlv_2= '{' ( (lv_commClauses_3_0= rulecommClause ) )* otherlv_4= '}'
            {
            // InternalGo.g:3632:3: ()
            // InternalGo.g:3633:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSelectStmtAccess().getSelectStmtAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,83,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSelectStmtAccess().getSelectKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,54,FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGo.g:3650:3: ( (lv_commClauses_3_0= rulecommClause ) )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( ((LA46_0>=81 && LA46_0<=82)) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalGo.g:3651:4: (lv_commClauses_3_0= rulecommClause )
            	    {
            	    // InternalGo.g:3651:4: (lv_commClauses_3_0= rulecommClause )
            	    // InternalGo.g:3652:5: lv_commClauses_3_0= rulecommClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSelectStmtAccess().getCommClausesCommClauseParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_commClauses_3_0=rulecommClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSelectStmtRule());
            	      					}
            	      					add(
            	      						current,
            	      						"commClauses",
            	      						lv_commClauses_3_0,
            	      						"org.xtext.Go.commClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            otherlv_4=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleselectStmt"


    // $ANTLR start "entryRulecommClause"
    // InternalGo.g:3677:1: entryRulecommClause returns [EObject current=null] : iv_rulecommClause= rulecommClause EOF ;
    public final EObject entryRulecommClause() throws RecognitionException {
        EObject current = null;

        EObject iv_rulecommClause = null;


        try {
            // InternalGo.g:3677:51: (iv_rulecommClause= rulecommClause EOF )
            // InternalGo.g:3678:2: iv_rulecommClause= rulecommClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecommClause=rulecommClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecommClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecommClause"


    // $ANTLR start "rulecommClause"
    // InternalGo.g:3684:1: rulecommClause returns [EObject current=null] : ( ( (lv_case_0_0= rulecommCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) ) ) ;
    public final EObject rulecommClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_case_0_0 = null;

        EObject lv_stmtList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3690:2: ( ( ( (lv_case_0_0= rulecommCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) ) ) )
            // InternalGo.g:3691:2: ( ( (lv_case_0_0= rulecommCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) ) )
            {
            // InternalGo.g:3691:2: ( ( (lv_case_0_0= rulecommCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) ) )
            // InternalGo.g:3692:3: ( (lv_case_0_0= rulecommCase ) ) otherlv_1= ':' ( (lv_stmtList_2_0= rulestatementList ) )
            {
            // InternalGo.g:3692:3: ( (lv_case_0_0= rulecommCase ) )
            // InternalGo.g:3693:4: (lv_case_0_0= rulecommCase )
            {
            // InternalGo.g:3693:4: (lv_case_0_0= rulecommCase )
            // InternalGo.g:3694:5: lv_case_0_0= rulecommCase
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCommClauseAccess().getCaseCommCaseParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_30);
            lv_case_0_0=rulecommCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCommClauseRule());
              					}
              					set(
              						current,
              						"case",
              						lv_case_0_0,
              						"org.xtext.Go.commCase");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,71,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getCommClauseAccess().getColonKeyword_1());
              		
            }
            // InternalGo.g:3715:3: ( (lv_stmtList_2_0= rulestatementList ) )
            // InternalGo.g:3716:4: (lv_stmtList_2_0= rulestatementList )
            {
            // InternalGo.g:3716:4: (lv_stmtList_2_0= rulestatementList )
            // InternalGo.g:3717:5: lv_stmtList_2_0= rulestatementList
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCommClauseAccess().getStmtListStatementListParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_stmtList_2_0=rulestatementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCommClauseRule());
              					}
              					set(
              						current,
              						"stmtList",
              						lv_stmtList_2_0,
              						"org.xtext.Go.statementList");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecommClause"


    // $ANTLR start "entryRulecommCase"
    // InternalGo.g:3738:1: entryRulecommCase returns [EObject current=null] : iv_rulecommCase= rulecommCase EOF ;
    public final EObject entryRulecommCase() throws RecognitionException {
        EObject current = null;

        EObject iv_rulecommCase = null;


        try {
            // InternalGo.g:3738:49: (iv_rulecommCase= rulecommCase EOF )
            // InternalGo.g:3739:2: iv_rulecommCase= rulecommCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecommCase=rulecommCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecommCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecommCase"


    // $ANTLR start "rulecommCase"
    // InternalGo.g:3745:1: rulecommCase returns [EObject current=null] : ( (otherlv_0= 'case' ( ( (lv_statement_1_0= rulesendStmt ) ) | ( (lv_statement_2_0= rulerecvStmt ) ) ) ) | ( () otherlv_4= 'default' ) ) ;
    public final EObject rulecommCase() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_4=null;
        EObject lv_statement_1_0 = null;

        EObject lv_statement_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3751:2: ( ( (otherlv_0= 'case' ( ( (lv_statement_1_0= rulesendStmt ) ) | ( (lv_statement_2_0= rulerecvStmt ) ) ) ) | ( () otherlv_4= 'default' ) ) )
            // InternalGo.g:3752:2: ( (otherlv_0= 'case' ( ( (lv_statement_1_0= rulesendStmt ) ) | ( (lv_statement_2_0= rulerecvStmt ) ) ) ) | ( () otherlv_4= 'default' ) )
            {
            // InternalGo.g:3752:2: ( (otherlv_0= 'case' ( ( (lv_statement_1_0= rulesendStmt ) ) | ( (lv_statement_2_0= rulerecvStmt ) ) ) ) | ( () otherlv_4= 'default' ) )
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==81) ) {
                alt48=1;
            }
            else if ( (LA48_0==82) ) {
                alt48=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }
            switch (alt48) {
                case 1 :
                    // InternalGo.g:3753:3: (otherlv_0= 'case' ( ( (lv_statement_1_0= rulesendStmt ) ) | ( (lv_statement_2_0= rulerecvStmt ) ) ) )
                    {
                    // InternalGo.g:3753:3: (otherlv_0= 'case' ( ( (lv_statement_1_0= rulesendStmt ) ) | ( (lv_statement_2_0= rulerecvStmt ) ) ) )
                    // InternalGo.g:3754:4: otherlv_0= 'case' ( ( (lv_statement_1_0= rulesendStmt ) ) | ( (lv_statement_2_0= rulerecvStmt ) ) )
                    {
                    otherlv_0=(Token)match(input,81,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getCommCaseAccess().getCaseKeyword_0_0());
                      			
                    }
                    // InternalGo.g:3758:4: ( ( (lv_statement_1_0= rulesendStmt ) ) | ( (lv_statement_2_0= rulerecvStmt ) ) )
                    int alt47=2;
                    alt47 = dfa47.predict(input);
                    switch (alt47) {
                        case 1 :
                            // InternalGo.g:3759:5: ( (lv_statement_1_0= rulesendStmt ) )
                            {
                            // InternalGo.g:3759:5: ( (lv_statement_1_0= rulesendStmt ) )
                            // InternalGo.g:3760:6: (lv_statement_1_0= rulesendStmt )
                            {
                            // InternalGo.g:3760:6: (lv_statement_1_0= rulesendStmt )
                            // InternalGo.g:3761:7: lv_statement_1_0= rulesendStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCommCaseAccess().getStatementSendStmtParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_statement_1_0=rulesendStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCommCaseRule());
                              							}
                              							set(
                              								current,
                              								"statement",
                              								lv_statement_1_0,
                              								"org.xtext.Go.sendStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:3779:5: ( (lv_statement_2_0= rulerecvStmt ) )
                            {
                            // InternalGo.g:3779:5: ( (lv_statement_2_0= rulerecvStmt ) )
                            // InternalGo.g:3780:6: (lv_statement_2_0= rulerecvStmt )
                            {
                            // InternalGo.g:3780:6: (lv_statement_2_0= rulerecvStmt )
                            // InternalGo.g:3781:7: lv_statement_2_0= rulerecvStmt
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCommCaseAccess().getStatementRecvStmtParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_statement_2_0=rulerecvStmt();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCommCaseRule());
                              							}
                              							set(
                              								current,
                              								"statement",
                              								lv_statement_2_0,
                              								"org.xtext.Go.recvStmt");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3801:3: ( () otherlv_4= 'default' )
                    {
                    // InternalGo.g:3801:3: ( () otherlv_4= 'default' )
                    // InternalGo.g:3802:4: () otherlv_4= 'default'
                    {
                    // InternalGo.g:3802:4: ()
                    // InternalGo.g:3803:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getCommCaseAccess().getCommCaseAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_4=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getCommCaseAccess().getDefaultKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecommCase"


    // $ANTLR start "entryRulerecvStmt"
    // InternalGo.g:3821:1: entryRulerecvStmt returns [EObject current=null] : iv_rulerecvStmt= rulerecvStmt EOF ;
    public final EObject entryRulerecvStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerecvStmt = null;


        try {
            // InternalGo.g:3821:49: (iv_rulerecvStmt= rulerecvStmt EOF )
            // InternalGo.g:3822:2: iv_rulerecvStmt= rulerecvStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRecvStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerecvStmt=rulerecvStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerecvStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerecvStmt"


    // $ANTLR start "rulerecvStmt"
    // InternalGo.g:3828:1: rulerecvStmt returns [EObject current=null] : ( ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? ( (lv_expr_4_0= ruleexpression ) ) ) ;
    public final EObject rulerecvStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_exprList_0_0 = null;

        EObject lv_idList_2_0 = null;

        EObject lv_expr_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3834:2: ( ( ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? ( (lv_expr_4_0= ruleexpression ) ) ) )
            // InternalGo.g:3835:2: ( ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? ( (lv_expr_4_0= ruleexpression ) ) )
            {
            // InternalGo.g:3835:2: ( ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? ( (lv_expr_4_0= ruleexpression ) ) )
            // InternalGo.g:3836:3: ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? ( (lv_expr_4_0= ruleexpression ) )
            {
            // InternalGo.g:3836:3: ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )?
            int alt49=3;
            alt49 = dfa49.predict(input);
            switch (alt49) {
                case 1 :
                    // InternalGo.g:3837:4: ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' )
                    {
                    // InternalGo.g:3837:4: ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' )
                    // InternalGo.g:3838:5: ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '='
                    {
                    // InternalGo.g:3838:5: ( (lv_exprList_0_0= ruleexpressionList ) )
                    // InternalGo.g:3839:6: (lv_exprList_0_0= ruleexpressionList )
                    {
                    // InternalGo.g:3839:6: (lv_exprList_0_0= ruleexpressionList )
                    // InternalGo.g:3840:7: lv_exprList_0_0= ruleexpressionList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRecvStmtAccess().getExprListExpressionListParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_15);
                    lv_exprList_0_0=ruleexpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRecvStmtRule());
                      							}
                      							set(
                      								current,
                      								"exprList",
                      								lv_exprList_0_0,
                      								"org.xtext.Go.expressionList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,49,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getRecvStmtAccess().getEqualsSignKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3863:4: ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' )
                    {
                    // InternalGo.g:3863:4: ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' )
                    // InternalGo.g:3864:5: ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':='
                    {
                    // InternalGo.g:3864:5: ( (lv_idList_2_0= ruleidentifierList ) )
                    // InternalGo.g:3865:6: (lv_idList_2_0= ruleidentifierList )
                    {
                    // InternalGo.g:3865:6: (lv_idList_2_0= ruleidentifierList )
                    // InternalGo.g:3866:7: lv_idList_2_0= ruleidentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRecvStmtAccess().getIdListIdentifierListParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_29);
                    lv_idList_2_0=ruleidentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRecvStmtRule());
                      							}
                      							set(
                      								current,
                      								"idList",
                      								lv_idList_2_0,
                      								"org.xtext.Go.identifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,70,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRecvStmtAccess().getColonEqualsSignKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:3889:3: ( (lv_expr_4_0= ruleexpression ) )
            // InternalGo.g:3890:4: (lv_expr_4_0= ruleexpression )
            {
            // InternalGo.g:3890:4: (lv_expr_4_0= ruleexpression )
            // InternalGo.g:3891:5: lv_expr_4_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRecvStmtAccess().getExprExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_4_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRecvStmtRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_4_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerecvStmt"


    // $ANTLR start "entryRuleforStmt"
    // InternalGo.g:3912:1: entryRuleforStmt returns [EObject current=null] : iv_ruleforStmt= ruleforStmt EOF ;
    public final EObject entryRuleforStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleforStmt = null;


        try {
            // InternalGo.g:3912:48: (iv_ruleforStmt= ruleforStmt EOF )
            // InternalGo.g:3913:2: iv_ruleforStmt= ruleforStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleforStmt=ruleforStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleforStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleforStmt"


    // $ANTLR start "ruleforStmt"
    // InternalGo.g:3919:1: ruleforStmt returns [EObject current=null] : (otherlv_0= 'for' ( ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_clause_2_0= ruleforClause ) ) | ( (lv_clause_3_0= rulerangeClause ) ) )? ( (lv_codeBlock_4_0= ruleblock ) ) ) ;
    public final EObject ruleforStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_expr_1_0 = null;

        EObject lv_clause_2_0 = null;

        EObject lv_clause_3_0 = null;

        EObject lv_codeBlock_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:3925:2: ( (otherlv_0= 'for' ( ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_clause_2_0= ruleforClause ) ) | ( (lv_clause_3_0= rulerangeClause ) ) )? ( (lv_codeBlock_4_0= ruleblock ) ) ) )
            // InternalGo.g:3926:2: (otherlv_0= 'for' ( ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_clause_2_0= ruleforClause ) ) | ( (lv_clause_3_0= rulerangeClause ) ) )? ( (lv_codeBlock_4_0= ruleblock ) ) )
            {
            // InternalGo.g:3926:2: (otherlv_0= 'for' ( ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_clause_2_0= ruleforClause ) ) | ( (lv_clause_3_0= rulerangeClause ) ) )? ( (lv_codeBlock_4_0= ruleblock ) ) )
            // InternalGo.g:3927:3: otherlv_0= 'for' ( ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_clause_2_0= ruleforClause ) ) | ( (lv_clause_3_0= rulerangeClause ) ) )? ( (lv_codeBlock_4_0= ruleblock ) )
            {
            otherlv_0=(Token)match(input,84,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getForStmtAccess().getForKeyword_0());
              		
            }
            // InternalGo.g:3931:3: ( ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_clause_2_0= ruleforClause ) ) | ( (lv_clause_3_0= rulerangeClause ) ) )?
            int alt50=4;
            alt50 = dfa50.predict(input);
            switch (alt50) {
                case 1 :
                    // InternalGo.g:3932:4: ( (lv_expr_1_0= ruleexpression ) )
                    {
                    // InternalGo.g:3932:4: ( (lv_expr_1_0= ruleexpression ) )
                    // InternalGo.g:3933:5: (lv_expr_1_0= ruleexpression )
                    {
                    // InternalGo.g:3933:5: (lv_expr_1_0= ruleexpression )
                    // InternalGo.g:3934:6: lv_expr_1_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForStmtAccess().getExprExpressionParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_20);
                    lv_expr_1_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForStmtRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_1_0,
                      							"org.xtext.Go.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3952:4: ( (lv_clause_2_0= ruleforClause ) )
                    {
                    // InternalGo.g:3952:4: ( (lv_clause_2_0= ruleforClause ) )
                    // InternalGo.g:3953:5: (lv_clause_2_0= ruleforClause )
                    {
                    // InternalGo.g:3953:5: (lv_clause_2_0= ruleforClause )
                    // InternalGo.g:3954:6: lv_clause_2_0= ruleforClause
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForStmtAccess().getClauseForClauseParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_20);
                    lv_clause_2_0=ruleforClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForStmtRule());
                      						}
                      						set(
                      							current,
                      							"clause",
                      							lv_clause_2_0,
                      							"org.xtext.Go.forClause");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3972:4: ( (lv_clause_3_0= rulerangeClause ) )
                    {
                    // InternalGo.g:3972:4: ( (lv_clause_3_0= rulerangeClause ) )
                    // InternalGo.g:3973:5: (lv_clause_3_0= rulerangeClause )
                    {
                    // InternalGo.g:3973:5: (lv_clause_3_0= rulerangeClause )
                    // InternalGo.g:3974:6: lv_clause_3_0= rulerangeClause
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForStmtAccess().getClauseRangeClauseParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_20);
                    lv_clause_3_0=rulerangeClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForStmtRule());
                      						}
                      						set(
                      							current,
                      							"clause",
                      							lv_clause_3_0,
                      							"org.xtext.Go.rangeClause");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGo.g:3992:3: ( (lv_codeBlock_4_0= ruleblock ) )
            // InternalGo.g:3993:4: (lv_codeBlock_4_0= ruleblock )
            {
            // InternalGo.g:3993:4: (lv_codeBlock_4_0= ruleblock )
            // InternalGo.g:3994:5: lv_codeBlock_4_0= ruleblock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForStmtAccess().getCodeBlockBlockParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_codeBlock_4_0=ruleblock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForStmtRule());
              					}
              					set(
              						current,
              						"codeBlock",
              						lv_codeBlock_4_0,
              						"org.xtext.Go.block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleforStmt"


    // $ANTLR start "entryRuleforClause"
    // InternalGo.g:4015:1: entryRuleforClause returns [EObject current=null] : iv_ruleforClause= ruleforClause EOF ;
    public final EObject entryRuleforClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleforClause = null;


        try {
            // InternalGo.g:4015:50: (iv_ruleforClause= ruleforClause EOF )
            // InternalGo.g:4016:2: iv_ruleforClause= ruleforClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleforClause=ruleforClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleforClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleforClause"


    // $ANTLR start "ruleforClause"
    // InternalGo.g:4022:1: ruleforClause returns [EObject current=null] : ( () ( (lv_statement1_1_0= rulesimpleStmt ) )? ruleeos ( (lv_expr_3_0= ruleexpression ) )? ruleeos ( (lv_statement2_5_0= rulesimpleStmt ) )? ) ;
    public final EObject ruleforClause() throws RecognitionException {
        EObject current = null;

        EObject lv_statement1_1_0 = null;

        EObject lv_expr_3_0 = null;

        EObject lv_statement2_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4028:2: ( ( () ( (lv_statement1_1_0= rulesimpleStmt ) )? ruleeos ( (lv_expr_3_0= ruleexpression ) )? ruleeos ( (lv_statement2_5_0= rulesimpleStmt ) )? ) )
            // InternalGo.g:4029:2: ( () ( (lv_statement1_1_0= rulesimpleStmt ) )? ruleeos ( (lv_expr_3_0= ruleexpression ) )? ruleeos ( (lv_statement2_5_0= rulesimpleStmt ) )? )
            {
            // InternalGo.g:4029:2: ( () ( (lv_statement1_1_0= rulesimpleStmt ) )? ruleeos ( (lv_expr_3_0= ruleexpression ) )? ruleeos ( (lv_statement2_5_0= rulesimpleStmt ) )? )
            // InternalGo.g:4030:3: () ( (lv_statement1_1_0= rulesimpleStmt ) )? ruleeos ( (lv_expr_3_0= ruleexpression ) )? ruleeos ( (lv_statement2_5_0= rulesimpleStmt ) )?
            {
            // InternalGo.g:4030:3: ()
            // InternalGo.g:4031:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getForClauseAccess().getForClauseAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:4040:3: ( (lv_statement1_1_0= rulesimpleStmt ) )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( ((LA51_0>=RULE_IDENTIFIER && LA51_0<=RULE_BINARY_OP)||LA51_0==45||LA51_0==47||(LA51_0>=49 && LA51_0<=50)||LA51_0==52||(LA51_0>=56 && LA51_0<=69)||LA51_0==95||(LA51_0>=97 && LA51_0<=99)||(LA51_0>=101 && LA51_0<=102)) ) {
                alt51=1;
            }
            else if ( (LA51_0==103) ) {
                int LA51_2 = input.LA(2);

                if ( (synpred84_InternalGo()) ) {
                    alt51=1;
                }
            }
            switch (alt51) {
                case 1 :
                    // InternalGo.g:4041:4: (lv_statement1_1_0= rulesimpleStmt )
                    {
                    // InternalGo.g:4041:4: (lv_statement1_1_0= rulesimpleStmt )
                    // InternalGo.g:4042:5: lv_statement1_1_0= rulesimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getStatement1SimpleStmtParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_5);
                    lv_statement1_1_0=rulesimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"statement1",
                      						lv_statement1_1_0,
                      						"org.xtext.Go.simpleStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getForClauseAccess().getEosParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_45);
            ruleeos();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:4069:3: ( (lv_expr_3_0= ruleexpression ) )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( ((LA52_0>=RULE_IDENTIFIER && LA52_0<=RULE_STRING_LIT)||(LA52_0>=RULE_INT_LIT && LA52_0<=RULE_BINARY_OP)||LA52_0==45||LA52_0==47||LA52_0==52||LA52_0==56||(LA52_0>=59 && LA52_0<=60)||(LA52_0>=62 && LA52_0<=63)||LA52_0==68||LA52_0==95||(LA52_0>=97 && LA52_0<=99)||(LA52_0>=101 && LA52_0<=102)) ) {
                alt52=1;
            }
            else if ( (LA52_0==103) ) {
                int LA52_2 = input.LA(2);

                if ( (synpred85_InternalGo()) ) {
                    alt52=1;
                }
            }
            switch (alt52) {
                case 1 :
                    // InternalGo.g:4070:4: (lv_expr_3_0= ruleexpression )
                    {
                    // InternalGo.g:4070:4: (lv_expr_3_0= ruleexpression )
                    // InternalGo.g:4071:5: lv_expr_3_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getExprExpressionParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_5);
                    lv_expr_3_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"expr",
                      						lv_expr_3_0,
                      						"org.xtext.Go.expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getForClauseAccess().getEosParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_46);
            ruleeos();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalGo.g:4098:3: ( (lv_statement2_5_0= rulesimpleStmt ) )?
            int alt53=2;
            switch ( input.LA(1) ) {
                case RULE_IDENTIFIER:
                case RULE_STRING_LIT:
                case RULE_WS:
                case RULE_INT_LIT:
                case RULE_FLOAT_LIT:
                case RULE_IMAGINARY_LIT:
                case RULE_RUNE_LIT:
                case RULE_BINARY_OP:
                case 45:
                case 47:
                case 49:
                case 50:
                case 52:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 65:
                case 66:
                case 67:
                case 68:
                case 69:
                case 95:
                case 97:
                case 98:
                case 99:
                case 101:
                case 102:
                    {
                    alt53=1;
                    }
                    break;
                case 54:
                    {
                    int LA53_2 = input.LA(2);

                    if ( (synpred86_InternalGo()) ) {
                        alt53=1;
                    }
                    }
                    break;
                case EOF:
                    {
                    int LA53_3 = input.LA(2);

                    if ( (synpred86_InternalGo()) ) {
                        alt53=1;
                    }
                    }
                    break;
            }

            switch (alt53) {
                case 1 :
                    // InternalGo.g:4099:4: (lv_statement2_5_0= rulesimpleStmt )
                    {
                    // InternalGo.g:4099:4: (lv_statement2_5_0= rulesimpleStmt )
                    // InternalGo.g:4100:5: lv_statement2_5_0= rulesimpleStmt
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getForClauseAccess().getStatement2SimpleStmtParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_statement2_5_0=rulesimpleStmt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getForClauseRule());
                      					}
                      					set(
                      						current,
                      						"statement2",
                      						lv_statement2_5_0,
                      						"org.xtext.Go.simpleStmt");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleforClause"


    // $ANTLR start "entryRulerangeClause"
    // InternalGo.g:4121:1: entryRulerangeClause returns [EObject current=null] : iv_rulerangeClause= rulerangeClause EOF ;
    public final EObject entryRulerangeClause() throws RecognitionException {
        EObject current = null;

        EObject iv_rulerangeClause = null;


        try {
            // InternalGo.g:4121:52: (iv_rulerangeClause= rulerangeClause EOF )
            // InternalGo.g:4122:2: iv_rulerangeClause= rulerangeClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRangeClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulerangeClause=rulerangeClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulerangeClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulerangeClause"


    // $ANTLR start "rulerangeClause"
    // InternalGo.g:4128:1: rulerangeClause returns [EObject current=null] : ( ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expr_5_0= ruleexpression ) ) ) ;
    public final EObject rulerangeClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_exprList_0_0 = null;

        EObject lv_idList_2_0 = null;

        EObject lv_expr_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4134:2: ( ( ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expr_5_0= ruleexpression ) ) ) )
            // InternalGo.g:4135:2: ( ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expr_5_0= ruleexpression ) ) )
            {
            // InternalGo.g:4135:2: ( ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expr_5_0= ruleexpression ) ) )
            // InternalGo.g:4136:3: ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )? otherlv_4= 'range' ( (lv_expr_5_0= ruleexpression ) )
            {
            // InternalGo.g:4136:3: ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )?
            int alt54=3;
            alt54 = dfa54.predict(input);
            switch (alt54) {
                case 1 :
                    // InternalGo.g:4137:4: ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' )
                    {
                    // InternalGo.g:4137:4: ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' )
                    // InternalGo.g:4138:5: ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '='
                    {
                    // InternalGo.g:4138:5: ( (lv_exprList_0_0= ruleexpressionList ) )
                    // InternalGo.g:4139:6: (lv_exprList_0_0= ruleexpressionList )
                    {
                    // InternalGo.g:4139:6: (lv_exprList_0_0= ruleexpressionList )
                    // InternalGo.g:4140:7: lv_exprList_0_0= ruleexpressionList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRangeClauseAccess().getExprListExpressionListParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_15);
                    lv_exprList_0_0=ruleexpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRangeClauseRule());
                      							}
                      							set(
                      								current,
                      								"exprList",
                      								lv_exprList_0_0,
                      								"org.xtext.Go.expressionList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,49,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getRangeClauseAccess().getEqualsSignKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4163:4: ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' )
                    {
                    // InternalGo.g:4163:4: ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' )
                    // InternalGo.g:4164:5: ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':='
                    {
                    // InternalGo.g:4164:5: ( (lv_idList_2_0= ruleidentifierList ) )
                    // InternalGo.g:4165:6: (lv_idList_2_0= ruleidentifierList )
                    {
                    // InternalGo.g:4165:6: (lv_idList_2_0= ruleidentifierList )
                    // InternalGo.g:4166:7: lv_idList_2_0= ruleidentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRangeClauseAccess().getIdListIdentifierListParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_29);
                    lv_idList_2_0=ruleidentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRangeClauseRule());
                      							}
                      							set(
                      								current,
                      								"idList",
                      								lv_idList_2_0,
                      								"org.xtext.Go.identifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,70,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,85,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRangeClauseAccess().getRangeKeyword_1());
              		
            }
            // InternalGo.g:4193:3: ( (lv_expr_5_0= ruleexpression ) )
            // InternalGo.g:4194:4: (lv_expr_5_0= ruleexpression )
            {
            // InternalGo.g:4194:4: (lv_expr_5_0= ruleexpression )
            // InternalGo.g:4195:5: lv_expr_5_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRangeClauseAccess().getExprExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_5_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRangeClauseRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_5_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulerangeClause"


    // $ANTLR start "entryRulegoStmt"
    // InternalGo.g:4216:1: entryRulegoStmt returns [EObject current=null] : iv_rulegoStmt= rulegoStmt EOF ;
    public final EObject entryRulegoStmt() throws RecognitionException {
        EObject current = null;

        EObject iv_rulegoStmt = null;


        try {
            // InternalGo.g:4216:47: (iv_rulegoStmt= rulegoStmt EOF )
            // InternalGo.g:4217:2: iv_rulegoStmt= rulegoStmt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGoStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulegoStmt=rulegoStmt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulegoStmt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulegoStmt"


    // $ANTLR start "rulegoStmt"
    // InternalGo.g:4223:1: rulegoStmt returns [EObject current=null] : (otherlv_0= 'go' ( (lv_expr_1_0= ruleexpression ) ) ) ;
    public final EObject rulegoStmt() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_expr_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4229:2: ( (otherlv_0= 'go' ( (lv_expr_1_0= ruleexpression ) ) ) )
            // InternalGo.g:4230:2: (otherlv_0= 'go' ( (lv_expr_1_0= ruleexpression ) ) )
            {
            // InternalGo.g:4230:2: (otherlv_0= 'go' ( (lv_expr_1_0= ruleexpression ) ) )
            // InternalGo.g:4231:3: otherlv_0= 'go' ( (lv_expr_1_0= ruleexpression ) )
            {
            otherlv_0=(Token)match(input,86,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getGoStmtAccess().getGoKeyword_0());
              		
            }
            // InternalGo.g:4235:3: ( (lv_expr_1_0= ruleexpression ) )
            // InternalGo.g:4236:4: (lv_expr_1_0= ruleexpression )
            {
            // InternalGo.g:4236:4: (lv_expr_1_0= ruleexpression )
            // InternalGo.g:4237:5: lv_expr_1_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGoStmtAccess().getExprExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_1_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGoStmtRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_1_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulegoStmt"


    // $ANTLR start "entryRuletype"
    // InternalGo.g:4258:1: entryRuletype returns [EObject current=null] : iv_ruletype= ruletype EOF ;
    public final EObject entryRuletype() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletype = null;


        try {
            // InternalGo.g:4258:45: (iv_ruletype= ruletype EOF )
            // InternalGo.g:4259:2: iv_ruletype= ruletype EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletype=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletype; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletype"


    // $ANTLR start "ruletype"
    // InternalGo.g:4265:1: ruletype returns [EObject current=null] : ( ( (lv_content_0_0= ruletypeName ) ) | ( (lv_content_1_0= ruletypeLit ) ) | (otherlv_2= '(' ( (lv_content_3_0= ruletype ) ) otherlv_4= ')' ) ) ;
    public final EObject ruletype() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_content_0_0 = null;

        EObject lv_content_1_0 = null;

        EObject lv_content_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4271:2: ( ( ( (lv_content_0_0= ruletypeName ) ) | ( (lv_content_1_0= ruletypeLit ) ) | (otherlv_2= '(' ( (lv_content_3_0= ruletype ) ) otherlv_4= ')' ) ) )
            // InternalGo.g:4272:2: ( ( (lv_content_0_0= ruletypeName ) ) | ( (lv_content_1_0= ruletypeLit ) ) | (otherlv_2= '(' ( (lv_content_3_0= ruletype ) ) otherlv_4= ')' ) )
            {
            // InternalGo.g:4272:2: ( ( (lv_content_0_0= ruletypeName ) ) | ( (lv_content_1_0= ruletypeLit ) ) | (otherlv_2= '(' ( (lv_content_3_0= ruletype ) ) otherlv_4= ')' ) )
            int alt55=3;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                alt55=1;
                }
                break;
            case 52:
            case 56:
            case 63:
            case 95:
            case 97:
            case 98:
            case 99:
            case 101:
                {
                alt55=2;
                }
                break;
            case 45:
                {
                alt55=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }

            switch (alt55) {
                case 1 :
                    // InternalGo.g:4273:3: ( (lv_content_0_0= ruletypeName ) )
                    {
                    // InternalGo.g:4273:3: ( (lv_content_0_0= ruletypeName ) )
                    // InternalGo.g:4274:4: (lv_content_0_0= ruletypeName )
                    {
                    // InternalGo.g:4274:4: (lv_content_0_0= ruletypeName )
                    // InternalGo.g:4275:5: lv_content_0_0= ruletypeName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeAccess().getContentTypeNameParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_0_0=ruletypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_0_0,
                      						"org.xtext.Go.typeName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4293:3: ( (lv_content_1_0= ruletypeLit ) )
                    {
                    // InternalGo.g:4293:3: ( (lv_content_1_0= ruletypeLit ) )
                    // InternalGo.g:4294:4: (lv_content_1_0= ruletypeLit )
                    {
                    // InternalGo.g:4294:4: (lv_content_1_0= ruletypeLit )
                    // InternalGo.g:4295:5: lv_content_1_0= ruletypeLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeAccess().getContentTypeLitParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_1_0=ruletypeLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_1_0,
                      						"org.xtext.Go.typeLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:4313:3: (otherlv_2= '(' ( (lv_content_3_0= ruletype ) ) otherlv_4= ')' )
                    {
                    // InternalGo.g:4313:3: (otherlv_2= '(' ( (lv_content_3_0= ruletype ) ) otherlv_4= ')' )
                    // InternalGo.g:4314:4: otherlv_2= '(' ( (lv_content_3_0= ruletype ) ) otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,45,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalGo.g:4318:4: ( (lv_content_3_0= ruletype ) )
                    // InternalGo.g:4319:5: (lv_content_3_0= ruletype )
                    {
                    // InternalGo.g:4319:5: (lv_content_3_0= ruletype )
                    // InternalGo.g:4320:6: lv_content_3_0= ruletype
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeAccess().getContentTypeParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    lv_content_3_0=ruletype();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeRule());
                      						}
                      						set(
                      							current,
                      							"content",
                      							lv_content_3_0,
                      							"org.xtext.Go.type");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletype"


    // $ANTLR start "entryRuletypeName"
    // InternalGo.g:4346:1: entryRuletypeName returns [EObject current=null] : iv_ruletypeName= ruletypeName EOF ;
    public final EObject entryRuletypeName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeName = null;


        try {
            // InternalGo.g:4346:49: (iv_ruletypeName= ruletypeName EOF )
            // InternalGo.g:4347:2: iv_ruletypeName= ruletypeName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeName=ruletypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeName"


    // $ANTLR start "ruletypeName"
    // InternalGo.g:4353:1: ruletypeName returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_qualIdent_1_0= rulequalifiedIdent ) ) ) ;
    public final EObject ruletypeName() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_qualIdent_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4359:2: ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_qualIdent_1_0= rulequalifiedIdent ) ) ) )
            // InternalGo.g:4360:2: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_qualIdent_1_0= rulequalifiedIdent ) ) )
            {
            // InternalGo.g:4360:2: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_qualIdent_1_0= rulequalifiedIdent ) ) )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==RULE_IDENTIFIER) ) {
                int LA56_1 = input.LA(2);

                if ( (LA56_1==EOF||LA56_1==RULE_STRING_LIT||(LA56_1>=45 && LA56_1<=46)||(LA56_1>=49 && LA56_1<=50)||LA56_1==54||LA56_1==71||LA56_1==87||(LA56_1>=89 && LA56_1<=90)||(LA56_1>=92 && LA56_1<=94)||LA56_1==96||LA56_1==100||LA56_1==103) ) {
                    alt56=1;
                }
                else if ( (LA56_1==47) ) {
                    int LA56_3 = input.LA(3);

                    if ( (LA56_3==RULE_IDENTIFIER) ) {
                        int LA56_4 = input.LA(4);

                        if ( (synpred91_InternalGo()) ) {
                            alt56=1;
                        }
                        else if ( (true) ) {
                            alt56=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 56, 4, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 56, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // InternalGo.g:4361:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
                    {
                    // InternalGo.g:4361:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
                    // InternalGo.g:4362:4: (lv_name_0_0= RULE_IDENTIFIER )
                    {
                    // InternalGo.g:4362:4: (lv_name_0_0= RULE_IDENTIFIER )
                    // InternalGo.g:4363:5: lv_name_0_0= RULE_IDENTIFIER
                    {
                    lv_name_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getTypeNameAccess().getNameIDENTIFIERTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTypeNameRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.xtext.Go.IDENTIFIER");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4380:3: ( (lv_qualIdent_1_0= rulequalifiedIdent ) )
                    {
                    // InternalGo.g:4380:3: ( (lv_qualIdent_1_0= rulequalifiedIdent ) )
                    // InternalGo.g:4381:4: (lv_qualIdent_1_0= rulequalifiedIdent )
                    {
                    // InternalGo.g:4381:4: (lv_qualIdent_1_0= rulequalifiedIdent )
                    // InternalGo.g:4382:5: lv_qualIdent_1_0= rulequalifiedIdent
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTypeNameAccess().getQualIdentQualifiedIdentParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_qualIdent_1_0=rulequalifiedIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTypeNameRule());
                      					}
                      					set(
                      						current,
                      						"qualIdent",
                      						lv_qualIdent_1_0,
                      						"org.xtext.Go.qualifiedIdent");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeName"


    // $ANTLR start "entryRuletypeLit"
    // InternalGo.g:4403:1: entryRuletypeLit returns [EObject current=null] : iv_ruletypeLit= ruletypeLit EOF ;
    public final EObject entryRuletypeLit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeLit = null;


        try {
            // InternalGo.g:4403:48: (iv_ruletypeLit= ruletypeLit EOF )
            // InternalGo.g:4404:2: iv_ruletypeLit= ruletypeLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeLit=ruletypeLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeLit"


    // $ANTLR start "ruletypeLit"
    // InternalGo.g:4410:1: ruletypeLit returns [EObject current=null] : ( ( ( (lv_lit_0_0= rulearrayType ) ) ( (lv_contentType_1_0= 'Array' ) ) ) | ( ( (lv_lit_2_0= rulestructType ) ) ( (lv_contentType_3_0= 'StructType' ) ) ) | ( ( (lv_lit_4_0= rulepointerType ) ) ( (lv_contentType_5_0= 'Pointer' ) ) ) | ( ( (lv_lit_6_0= rulefunctionType ) ) ( (lv_contentType_7_0= 'Function' ) ) ) | ( ( (lv_lit_8_0= ruleinterfaceType ) ) ( (lv_contentType_9_0= 'Interface' ) ) ) | ( ( (lv_lit_10_0= rulesliceType ) ) ( (lv_contentType_11_0= 'Slice' ) ) ) | ( ( (lv_lit_12_0= rulemapType ) ) ( (lv_contentType_13_0= 'Map' ) ) ) | ( ( (lv_lit_14_0= rulechannelType ) ) ( (lv_contentType_15_0= 'Channel' ) ) ) ) ;
    public final EObject ruletypeLit() throws RecognitionException {
        EObject current = null;

        Token lv_contentType_1_0=null;
        Token lv_contentType_3_0=null;
        Token lv_contentType_5_0=null;
        Token lv_contentType_7_0=null;
        Token lv_contentType_9_0=null;
        Token lv_contentType_11_0=null;
        Token lv_contentType_13_0=null;
        Token lv_contentType_15_0=null;
        EObject lv_lit_0_0 = null;

        EObject lv_lit_2_0 = null;

        EObject lv_lit_4_0 = null;

        EObject lv_lit_6_0 = null;

        EObject lv_lit_8_0 = null;

        EObject lv_lit_10_0 = null;

        EObject lv_lit_12_0 = null;

        EObject lv_lit_14_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4416:2: ( ( ( ( (lv_lit_0_0= rulearrayType ) ) ( (lv_contentType_1_0= 'Array' ) ) ) | ( ( (lv_lit_2_0= rulestructType ) ) ( (lv_contentType_3_0= 'StructType' ) ) ) | ( ( (lv_lit_4_0= rulepointerType ) ) ( (lv_contentType_5_0= 'Pointer' ) ) ) | ( ( (lv_lit_6_0= rulefunctionType ) ) ( (lv_contentType_7_0= 'Function' ) ) ) | ( ( (lv_lit_8_0= ruleinterfaceType ) ) ( (lv_contentType_9_0= 'Interface' ) ) ) | ( ( (lv_lit_10_0= rulesliceType ) ) ( (lv_contentType_11_0= 'Slice' ) ) ) | ( ( (lv_lit_12_0= rulemapType ) ) ( (lv_contentType_13_0= 'Map' ) ) ) | ( ( (lv_lit_14_0= rulechannelType ) ) ( (lv_contentType_15_0= 'Channel' ) ) ) ) )
            // InternalGo.g:4417:2: ( ( ( (lv_lit_0_0= rulearrayType ) ) ( (lv_contentType_1_0= 'Array' ) ) ) | ( ( (lv_lit_2_0= rulestructType ) ) ( (lv_contentType_3_0= 'StructType' ) ) ) | ( ( (lv_lit_4_0= rulepointerType ) ) ( (lv_contentType_5_0= 'Pointer' ) ) ) | ( ( (lv_lit_6_0= rulefunctionType ) ) ( (lv_contentType_7_0= 'Function' ) ) ) | ( ( (lv_lit_8_0= ruleinterfaceType ) ) ( (lv_contentType_9_0= 'Interface' ) ) ) | ( ( (lv_lit_10_0= rulesliceType ) ) ( (lv_contentType_11_0= 'Slice' ) ) ) | ( ( (lv_lit_12_0= rulemapType ) ) ( (lv_contentType_13_0= 'Map' ) ) ) | ( ( (lv_lit_14_0= rulechannelType ) ) ( (lv_contentType_15_0= 'Channel' ) ) ) )
            {
            // InternalGo.g:4417:2: ( ( ( (lv_lit_0_0= rulearrayType ) ) ( (lv_contentType_1_0= 'Array' ) ) ) | ( ( (lv_lit_2_0= rulestructType ) ) ( (lv_contentType_3_0= 'StructType' ) ) ) | ( ( (lv_lit_4_0= rulepointerType ) ) ( (lv_contentType_5_0= 'Pointer' ) ) ) | ( ( (lv_lit_6_0= rulefunctionType ) ) ( (lv_contentType_7_0= 'Function' ) ) ) | ( ( (lv_lit_8_0= ruleinterfaceType ) ) ( (lv_contentType_9_0= 'Interface' ) ) ) | ( ( (lv_lit_10_0= rulesliceType ) ) ( (lv_contentType_11_0= 'Slice' ) ) ) | ( ( (lv_lit_12_0= rulemapType ) ) ( (lv_contentType_13_0= 'Map' ) ) ) | ( ( (lv_lit_14_0= rulechannelType ) ) ( (lv_contentType_15_0= 'Channel' ) ) ) )
            int alt57=8;
            alt57 = dfa57.predict(input);
            switch (alt57) {
                case 1 :
                    // InternalGo.g:4418:3: ( ( (lv_lit_0_0= rulearrayType ) ) ( (lv_contentType_1_0= 'Array' ) ) )
                    {
                    // InternalGo.g:4418:3: ( ( (lv_lit_0_0= rulearrayType ) ) ( (lv_contentType_1_0= 'Array' ) ) )
                    // InternalGo.g:4419:4: ( (lv_lit_0_0= rulearrayType ) ) ( (lv_contentType_1_0= 'Array' ) )
                    {
                    // InternalGo.g:4419:4: ( (lv_lit_0_0= rulearrayType ) )
                    // InternalGo.g:4420:5: (lv_lit_0_0= rulearrayType )
                    {
                    // InternalGo.g:4420:5: (lv_lit_0_0= rulearrayType )
                    // InternalGo.g:4421:6: lv_lit_0_0= rulearrayType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeLitAccess().getLitArrayTypeParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_48);
                    lv_lit_0_0=rulearrayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      						}
                      						set(
                      							current,
                      							"lit",
                      							lv_lit_0_0,
                      							"org.xtext.Go.arrayType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:4438:4: ( (lv_contentType_1_0= 'Array' ) )
                    // InternalGo.g:4439:5: (lv_contentType_1_0= 'Array' )
                    {
                    // InternalGo.g:4439:5: (lv_contentType_1_0= 'Array' )
                    // InternalGo.g:4440:6: lv_contentType_1_0= 'Array'
                    {
                    lv_contentType_1_0=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_contentType_1_0, grammarAccess.getTypeLitAccess().getContentTypeArrayKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTypeLitRule());
                      						}
                      						setWithLastConsumed(current, "contentType", lv_contentType_1_0, "Array");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4454:3: ( ( (lv_lit_2_0= rulestructType ) ) ( (lv_contentType_3_0= 'StructType' ) ) )
                    {
                    // InternalGo.g:4454:3: ( ( (lv_lit_2_0= rulestructType ) ) ( (lv_contentType_3_0= 'StructType' ) ) )
                    // InternalGo.g:4455:4: ( (lv_lit_2_0= rulestructType ) ) ( (lv_contentType_3_0= 'StructType' ) )
                    {
                    // InternalGo.g:4455:4: ( (lv_lit_2_0= rulestructType ) )
                    // InternalGo.g:4456:5: (lv_lit_2_0= rulestructType )
                    {
                    // InternalGo.g:4456:5: (lv_lit_2_0= rulestructType )
                    // InternalGo.g:4457:6: lv_lit_2_0= rulestructType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeLitAccess().getLitStructTypeParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_49);
                    lv_lit_2_0=rulestructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      						}
                      						set(
                      							current,
                      							"lit",
                      							lv_lit_2_0,
                      							"org.xtext.Go.structType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:4474:4: ( (lv_contentType_3_0= 'StructType' ) )
                    // InternalGo.g:4475:5: (lv_contentType_3_0= 'StructType' )
                    {
                    // InternalGo.g:4475:5: (lv_contentType_3_0= 'StructType' )
                    // InternalGo.g:4476:6: lv_contentType_3_0= 'StructType'
                    {
                    lv_contentType_3_0=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_contentType_3_0, grammarAccess.getTypeLitAccess().getContentTypeStructTypeKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTypeLitRule());
                      						}
                      						setWithLastConsumed(current, "contentType", lv_contentType_3_0, "StructType");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:4490:3: ( ( (lv_lit_4_0= rulepointerType ) ) ( (lv_contentType_5_0= 'Pointer' ) ) )
                    {
                    // InternalGo.g:4490:3: ( ( (lv_lit_4_0= rulepointerType ) ) ( (lv_contentType_5_0= 'Pointer' ) ) )
                    // InternalGo.g:4491:4: ( (lv_lit_4_0= rulepointerType ) ) ( (lv_contentType_5_0= 'Pointer' ) )
                    {
                    // InternalGo.g:4491:4: ( (lv_lit_4_0= rulepointerType ) )
                    // InternalGo.g:4492:5: (lv_lit_4_0= rulepointerType )
                    {
                    // InternalGo.g:4492:5: (lv_lit_4_0= rulepointerType )
                    // InternalGo.g:4493:6: lv_lit_4_0= rulepointerType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeLitAccess().getLitPointerTypeParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_50);
                    lv_lit_4_0=rulepointerType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      						}
                      						set(
                      							current,
                      							"lit",
                      							lv_lit_4_0,
                      							"org.xtext.Go.pointerType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:4510:4: ( (lv_contentType_5_0= 'Pointer' ) )
                    // InternalGo.g:4511:5: (lv_contentType_5_0= 'Pointer' )
                    {
                    // InternalGo.g:4511:5: (lv_contentType_5_0= 'Pointer' )
                    // InternalGo.g:4512:6: lv_contentType_5_0= 'Pointer'
                    {
                    lv_contentType_5_0=(Token)match(input,89,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_contentType_5_0, grammarAccess.getTypeLitAccess().getContentTypePointerKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTypeLitRule());
                      						}
                      						setWithLastConsumed(current, "contentType", lv_contentType_5_0, "Pointer");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:4526:3: ( ( (lv_lit_6_0= rulefunctionType ) ) ( (lv_contentType_7_0= 'Function' ) ) )
                    {
                    // InternalGo.g:4526:3: ( ( (lv_lit_6_0= rulefunctionType ) ) ( (lv_contentType_7_0= 'Function' ) ) )
                    // InternalGo.g:4527:4: ( (lv_lit_6_0= rulefunctionType ) ) ( (lv_contentType_7_0= 'Function' ) )
                    {
                    // InternalGo.g:4527:4: ( (lv_lit_6_0= rulefunctionType ) )
                    // InternalGo.g:4528:5: (lv_lit_6_0= rulefunctionType )
                    {
                    // InternalGo.g:4528:5: (lv_lit_6_0= rulefunctionType )
                    // InternalGo.g:4529:6: lv_lit_6_0= rulefunctionType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeLitAccess().getLitFunctionTypeParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_51);
                    lv_lit_6_0=rulefunctionType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      						}
                      						set(
                      							current,
                      							"lit",
                      							lv_lit_6_0,
                      							"org.xtext.Go.functionType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:4546:4: ( (lv_contentType_7_0= 'Function' ) )
                    // InternalGo.g:4547:5: (lv_contentType_7_0= 'Function' )
                    {
                    // InternalGo.g:4547:5: (lv_contentType_7_0= 'Function' )
                    // InternalGo.g:4548:6: lv_contentType_7_0= 'Function'
                    {
                    lv_contentType_7_0=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_contentType_7_0, grammarAccess.getTypeLitAccess().getContentTypeFunctionKeyword_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTypeLitRule());
                      						}
                      						setWithLastConsumed(current, "contentType", lv_contentType_7_0, "Function");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:4562:3: ( ( (lv_lit_8_0= ruleinterfaceType ) ) ( (lv_contentType_9_0= 'Interface' ) ) )
                    {
                    // InternalGo.g:4562:3: ( ( (lv_lit_8_0= ruleinterfaceType ) ) ( (lv_contentType_9_0= 'Interface' ) ) )
                    // InternalGo.g:4563:4: ( (lv_lit_8_0= ruleinterfaceType ) ) ( (lv_contentType_9_0= 'Interface' ) )
                    {
                    // InternalGo.g:4563:4: ( (lv_lit_8_0= ruleinterfaceType ) )
                    // InternalGo.g:4564:5: (lv_lit_8_0= ruleinterfaceType )
                    {
                    // InternalGo.g:4564:5: (lv_lit_8_0= ruleinterfaceType )
                    // InternalGo.g:4565:6: lv_lit_8_0= ruleinterfaceType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeLitAccess().getLitInterfaceTypeParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_52);
                    lv_lit_8_0=ruleinterfaceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      						}
                      						set(
                      							current,
                      							"lit",
                      							lv_lit_8_0,
                      							"org.xtext.Go.interfaceType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:4582:4: ( (lv_contentType_9_0= 'Interface' ) )
                    // InternalGo.g:4583:5: (lv_contentType_9_0= 'Interface' )
                    {
                    // InternalGo.g:4583:5: (lv_contentType_9_0= 'Interface' )
                    // InternalGo.g:4584:6: lv_contentType_9_0= 'Interface'
                    {
                    lv_contentType_9_0=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_contentType_9_0, grammarAccess.getTypeLitAccess().getContentTypeInterfaceKeyword_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTypeLitRule());
                      						}
                      						setWithLastConsumed(current, "contentType", lv_contentType_9_0, "Interface");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:4598:3: ( ( (lv_lit_10_0= rulesliceType ) ) ( (lv_contentType_11_0= 'Slice' ) ) )
                    {
                    // InternalGo.g:4598:3: ( ( (lv_lit_10_0= rulesliceType ) ) ( (lv_contentType_11_0= 'Slice' ) ) )
                    // InternalGo.g:4599:4: ( (lv_lit_10_0= rulesliceType ) ) ( (lv_contentType_11_0= 'Slice' ) )
                    {
                    // InternalGo.g:4599:4: ( (lv_lit_10_0= rulesliceType ) )
                    // InternalGo.g:4600:5: (lv_lit_10_0= rulesliceType )
                    {
                    // InternalGo.g:4600:5: (lv_lit_10_0= rulesliceType )
                    // InternalGo.g:4601:6: lv_lit_10_0= rulesliceType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeLitAccess().getLitSliceTypeParserRuleCall_5_0_0());
                      					
                    }
                    pushFollow(FOLLOW_53);
                    lv_lit_10_0=rulesliceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      						}
                      						set(
                      							current,
                      							"lit",
                      							lv_lit_10_0,
                      							"org.xtext.Go.sliceType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:4618:4: ( (lv_contentType_11_0= 'Slice' ) )
                    // InternalGo.g:4619:5: (lv_contentType_11_0= 'Slice' )
                    {
                    // InternalGo.g:4619:5: (lv_contentType_11_0= 'Slice' )
                    // InternalGo.g:4620:6: lv_contentType_11_0= 'Slice'
                    {
                    lv_contentType_11_0=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_contentType_11_0, grammarAccess.getTypeLitAccess().getContentTypeSliceKeyword_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTypeLitRule());
                      						}
                      						setWithLastConsumed(current, "contentType", lv_contentType_11_0, "Slice");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalGo.g:4634:3: ( ( (lv_lit_12_0= rulemapType ) ) ( (lv_contentType_13_0= 'Map' ) ) )
                    {
                    // InternalGo.g:4634:3: ( ( (lv_lit_12_0= rulemapType ) ) ( (lv_contentType_13_0= 'Map' ) ) )
                    // InternalGo.g:4635:4: ( (lv_lit_12_0= rulemapType ) ) ( (lv_contentType_13_0= 'Map' ) )
                    {
                    // InternalGo.g:4635:4: ( (lv_lit_12_0= rulemapType ) )
                    // InternalGo.g:4636:5: (lv_lit_12_0= rulemapType )
                    {
                    // InternalGo.g:4636:5: (lv_lit_12_0= rulemapType )
                    // InternalGo.g:4637:6: lv_lit_12_0= rulemapType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeLitAccess().getLitMapTypeParserRuleCall_6_0_0());
                      					
                    }
                    pushFollow(FOLLOW_54);
                    lv_lit_12_0=rulemapType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      						}
                      						set(
                      							current,
                      							"lit",
                      							lv_lit_12_0,
                      							"org.xtext.Go.mapType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:4654:4: ( (lv_contentType_13_0= 'Map' ) )
                    // InternalGo.g:4655:5: (lv_contentType_13_0= 'Map' )
                    {
                    // InternalGo.g:4655:5: (lv_contentType_13_0= 'Map' )
                    // InternalGo.g:4656:6: lv_contentType_13_0= 'Map'
                    {
                    lv_contentType_13_0=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_contentType_13_0, grammarAccess.getTypeLitAccess().getContentTypeMapKeyword_6_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTypeLitRule());
                      						}
                      						setWithLastConsumed(current, "contentType", lv_contentType_13_0, "Map");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalGo.g:4670:3: ( ( (lv_lit_14_0= rulechannelType ) ) ( (lv_contentType_15_0= 'Channel' ) ) )
                    {
                    // InternalGo.g:4670:3: ( ( (lv_lit_14_0= rulechannelType ) ) ( (lv_contentType_15_0= 'Channel' ) ) )
                    // InternalGo.g:4671:4: ( (lv_lit_14_0= rulechannelType ) ) ( (lv_contentType_15_0= 'Channel' ) )
                    {
                    // InternalGo.g:4671:4: ( (lv_lit_14_0= rulechannelType ) )
                    // InternalGo.g:4672:5: (lv_lit_14_0= rulechannelType )
                    {
                    // InternalGo.g:4672:5: (lv_lit_14_0= rulechannelType )
                    // InternalGo.g:4673:6: lv_lit_14_0= rulechannelType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeLitAccess().getLitChannelTypeParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_55);
                    lv_lit_14_0=rulechannelType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeLitRule());
                      						}
                      						set(
                      							current,
                      							"lit",
                      							lv_lit_14_0,
                      							"org.xtext.Go.channelType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:4690:4: ( (lv_contentType_15_0= 'Channel' ) )
                    // InternalGo.g:4691:5: (lv_contentType_15_0= 'Channel' )
                    {
                    // InternalGo.g:4691:5: (lv_contentType_15_0= 'Channel' )
                    // InternalGo.g:4692:6: lv_contentType_15_0= 'Channel'
                    {
                    lv_contentType_15_0=(Token)match(input,94,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_contentType_15_0, grammarAccess.getTypeLitAccess().getContentTypeChannelKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTypeLitRule());
                      						}
                      						setWithLastConsumed(current, "contentType", lv_contentType_15_0, "Channel");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeLit"


    // $ANTLR start "entryRulearrayType"
    // InternalGo.g:4709:1: entryRulearrayType returns [EObject current=null] : iv_rulearrayType= rulearrayType EOF ;
    public final EObject entryRulearrayType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulearrayType = null;


        try {
            // InternalGo.g:4709:50: (iv_rulearrayType= rulearrayType EOF )
            // InternalGo.g:4710:2: iv_rulearrayType= rulearrayType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulearrayType=rulearrayType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulearrayType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulearrayType"


    // $ANTLR start "rulearrayType"
    // InternalGo.g:4716:1: rulearrayType returns [EObject current=null] : (otherlv_0= '[' ( (lv_arrayLength_1_0= rulearrayLength ) ) otherlv_2= ']' ( (lv_elemType_3_0= ruleelementType ) ) ) ;
    public final EObject rulearrayType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_arrayLength_1_0 = null;

        EObject lv_elemType_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4722:2: ( (otherlv_0= '[' ( (lv_arrayLength_1_0= rulearrayLength ) ) otherlv_2= ']' ( (lv_elemType_3_0= ruleelementType ) ) ) )
            // InternalGo.g:4723:2: (otherlv_0= '[' ( (lv_arrayLength_1_0= rulearrayLength ) ) otherlv_2= ']' ( (lv_elemType_3_0= ruleelementType ) ) )
            {
            // InternalGo.g:4723:2: (otherlv_0= '[' ( (lv_arrayLength_1_0= rulearrayLength ) ) otherlv_2= ']' ( (lv_elemType_3_0= ruleelementType ) ) )
            // InternalGo.g:4724:3: otherlv_0= '[' ( (lv_arrayLength_1_0= rulearrayLength ) ) otherlv_2= ']' ( (lv_elemType_3_0= ruleelementType ) )
            {
            otherlv_0=(Token)match(input,95,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalGo.g:4728:3: ( (lv_arrayLength_1_0= rulearrayLength ) )
            // InternalGo.g:4729:4: (lv_arrayLength_1_0= rulearrayLength )
            {
            // InternalGo.g:4729:4: (lv_arrayLength_1_0= rulearrayLength )
            // InternalGo.g:4730:5: lv_arrayLength_1_0= rulearrayLength
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArrayTypeAccess().getArrayLengthArrayLengthParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_56);
            lv_arrayLength_1_0=rulearrayLength();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArrayTypeRule());
              					}
              					set(
              						current,
              						"arrayLength",
              						lv_arrayLength_1_0,
              						"org.xtext.Go.arrayLength");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,96,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2());
              		
            }
            // InternalGo.g:4751:3: ( (lv_elemType_3_0= ruleelementType ) )
            // InternalGo.g:4752:4: (lv_elemType_3_0= ruleelementType )
            {
            // InternalGo.g:4752:4: (lv_elemType_3_0= ruleelementType )
            // InternalGo.g:4753:5: lv_elemType_3_0= ruleelementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArrayTypeAccess().getElemTypeElementTypeParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemType_3_0=ruleelementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArrayTypeRule());
              					}
              					set(
              						current,
              						"elemType",
              						lv_elemType_3_0,
              						"org.xtext.Go.elementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulearrayType"


    // $ANTLR start "entryRulearrayLength"
    // InternalGo.g:4774:1: entryRulearrayLength returns [EObject current=null] : iv_rulearrayLength= rulearrayLength EOF ;
    public final EObject entryRulearrayLength() throws RecognitionException {
        EObject current = null;

        EObject iv_rulearrayLength = null;


        try {
            // InternalGo.g:4774:52: (iv_rulearrayLength= rulearrayLength EOF )
            // InternalGo.g:4775:2: iv_rulearrayLength= rulearrayLength EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayLengthRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulearrayLength=rulearrayLength();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulearrayLength; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulearrayLength"


    // $ANTLR start "rulearrayLength"
    // InternalGo.g:4781:1: rulearrayLength returns [EObject current=null] : ( (lv_expr_0_0= ruleexpression ) ) ;
    public final EObject rulearrayLength() throws RecognitionException {
        EObject current = null;

        EObject lv_expr_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4787:2: ( ( (lv_expr_0_0= ruleexpression ) ) )
            // InternalGo.g:4788:2: ( (lv_expr_0_0= ruleexpression ) )
            {
            // InternalGo.g:4788:2: ( (lv_expr_0_0= ruleexpression ) )
            // InternalGo.g:4789:3: (lv_expr_0_0= ruleexpression )
            {
            // InternalGo.g:4789:3: (lv_expr_0_0= ruleexpression )
            // InternalGo.g:4790:4: lv_expr_0_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getArrayLengthAccess().getExprExpressionParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_expr_0_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getArrayLengthRule());
              				}
              				set(
              					current,
              					"expr",
              					lv_expr_0_0,
              					"org.xtext.Go.expression");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulearrayLength"


    // $ANTLR start "entryRuleelementType"
    // InternalGo.g:4810:1: entryRuleelementType returns [EObject current=null] : iv_ruleelementType= ruleelementType EOF ;
    public final EObject entryRuleelementType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleelementType = null;


        try {
            // InternalGo.g:4810:52: (iv_ruleelementType= ruleelementType EOF )
            // InternalGo.g:4811:2: iv_ruleelementType= ruleelementType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleelementType=ruleelementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleelementType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleelementType"


    // $ANTLR start "ruleelementType"
    // InternalGo.g:4817:1: ruleelementType returns [EObject current=null] : ( (lv_type_0_0= ruletype ) ) ;
    public final EObject ruleelementType() throws RecognitionException {
        EObject current = null;

        EObject lv_type_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4823:2: ( ( (lv_type_0_0= ruletype ) ) )
            // InternalGo.g:4824:2: ( (lv_type_0_0= ruletype ) )
            {
            // InternalGo.g:4824:2: ( (lv_type_0_0= ruletype ) )
            // InternalGo.g:4825:3: (lv_type_0_0= ruletype )
            {
            // InternalGo.g:4825:3: (lv_type_0_0= ruletype )
            // InternalGo.g:4826:4: lv_type_0_0= ruletype
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getElementTypeAccess().getTypeTypeParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_type_0_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getElementTypeRule());
              				}
              				set(
              					current,
              					"type",
              					lv_type_0_0,
              					"org.xtext.Go.type");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleelementType"


    // $ANTLR start "entryRulepointerType"
    // InternalGo.g:4846:1: entryRulepointerType returns [EObject current=null] : iv_rulepointerType= rulepointerType EOF ;
    public final EObject entryRulepointerType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulepointerType = null;


        try {
            // InternalGo.g:4846:52: (iv_rulepointerType= rulepointerType EOF )
            // InternalGo.g:4847:2: iv_rulepointerType= rulepointerType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPointerTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulepointerType=rulepointerType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulepointerType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulepointerType"


    // $ANTLR start "rulepointerType"
    // InternalGo.g:4853:1: rulepointerType returns [EObject current=null] : (otherlv_0= '*' ( (lv_type_1_0= ruletype ) ) ) ;
    public final EObject rulepointerType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_type_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4859:2: ( (otherlv_0= '*' ( (lv_type_1_0= ruletype ) ) ) )
            // InternalGo.g:4860:2: (otherlv_0= '*' ( (lv_type_1_0= ruletype ) ) )
            {
            // InternalGo.g:4860:2: (otherlv_0= '*' ( (lv_type_1_0= ruletype ) ) )
            // InternalGo.g:4861:3: otherlv_0= '*' ( (lv_type_1_0= ruletype ) )
            {
            otherlv_0=(Token)match(input,63,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0());
              		
            }
            // InternalGo.g:4865:3: ( (lv_type_1_0= ruletype ) )
            // InternalGo.g:4866:4: (lv_type_1_0= ruletype )
            {
            // InternalGo.g:4866:4: (lv_type_1_0= ruletype )
            // InternalGo.g:4867:5: lv_type_1_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPointerTypeAccess().getTypeTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_type_1_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPointerTypeRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_1_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulepointerType"


    // $ANTLR start "entryRuleinterfaceType"
    // InternalGo.g:4888:1: entryRuleinterfaceType returns [EObject current=null] : iv_ruleinterfaceType= ruleinterfaceType EOF ;
    public final EObject entryRuleinterfaceType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleinterfaceType = null;


        try {
            // InternalGo.g:4888:54: (iv_ruleinterfaceType= ruleinterfaceType EOF )
            // InternalGo.g:4889:2: iv_ruleinterfaceType= ruleinterfaceType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterfaceTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleinterfaceType=ruleinterfaceType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleinterfaceType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleinterfaceType"


    // $ANTLR start "ruleinterfaceType"
    // InternalGo.g:4895:1: ruleinterfaceType returns [EObject current=null] : ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodSpecs_3_0= rulemethodSpec ) ) ruleeos )* otherlv_5= '}' ) ;
    public final EObject ruleinterfaceType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_methodSpecs_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4901:2: ( ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodSpecs_3_0= rulemethodSpec ) ) ruleeos )* otherlv_5= '}' ) )
            // InternalGo.g:4902:2: ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodSpecs_3_0= rulemethodSpec ) ) ruleeos )* otherlv_5= '}' )
            {
            // InternalGo.g:4902:2: ( () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodSpecs_3_0= rulemethodSpec ) ) ruleeos )* otherlv_5= '}' )
            // InternalGo.g:4903:3: () otherlv_1= 'interface' otherlv_2= '{' ( ( (lv_methodSpecs_3_0= rulemethodSpec ) ) ruleeos )* otherlv_5= '}'
            {
            // InternalGo.g:4903:3: ()
            // InternalGo.g:4904:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getInterfaceTypeAccess().getInterfaceTypeAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,97,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,54,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGo.g:4921:3: ( ( (lv_methodSpecs_3_0= rulemethodSpec ) ) ruleeos )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==RULE_IDENTIFIER) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalGo.g:4922:4: ( (lv_methodSpecs_3_0= rulemethodSpec ) ) ruleeos
            	    {
            	    // InternalGo.g:4922:4: ( (lv_methodSpecs_3_0= rulemethodSpec ) )
            	    // InternalGo.g:4923:5: (lv_methodSpecs_3_0= rulemethodSpec )
            	    {
            	    // InternalGo.g:4923:5: (lv_methodSpecs_3_0= rulemethodSpec )
            	    // InternalGo.g:4924:6: lv_methodSpecs_3_0= rulemethodSpec
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getInterfaceTypeAccess().getMethodSpecsMethodSpecParserRuleCall_3_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_methodSpecs_3_0=rulemethodSpec();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getInterfaceTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"methodSpecs",
            	      							lv_methodSpecs_3_0,
            	      							"org.xtext.Go.methodSpec");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      				/* */
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getInterfaceTypeAccess().getEosParserRuleCall_3_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_57);
            	    ruleeos();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            otherlv_5=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleinterfaceType"


    // $ANTLR start "entryRulesliceType"
    // InternalGo.g:4960:1: entryRulesliceType returns [EObject current=null] : iv_rulesliceType= rulesliceType EOF ;
    public final EObject entryRulesliceType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulesliceType = null;


        try {
            // InternalGo.g:4960:50: (iv_rulesliceType= rulesliceType EOF )
            // InternalGo.g:4961:2: iv_rulesliceType= rulesliceType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSliceTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulesliceType=rulesliceType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesliceType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulesliceType"


    // $ANTLR start "rulesliceType"
    // InternalGo.g:4967:1: rulesliceType returns [EObject current=null] : (otherlv_0= '[' otherlv_1= ']' ( (lv_elemType_2_0= ruleelementType ) ) ) ;
    public final EObject rulesliceType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        EObject lv_elemType_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:4973:2: ( (otherlv_0= '[' otherlv_1= ']' ( (lv_elemType_2_0= ruleelementType ) ) ) )
            // InternalGo.g:4974:2: (otherlv_0= '[' otherlv_1= ']' ( (lv_elemType_2_0= ruleelementType ) ) )
            {
            // InternalGo.g:4974:2: (otherlv_0= '[' otherlv_1= ']' ( (lv_elemType_2_0= ruleelementType ) ) )
            // InternalGo.g:4975:3: otherlv_0= '[' otherlv_1= ']' ( (lv_elemType_2_0= ruleelementType ) )
            {
            otherlv_0=(Token)match(input,95,FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSliceTypeAccess().getLeftSquareBracketKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,96,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSliceTypeAccess().getRightSquareBracketKeyword_1());
              		
            }
            // InternalGo.g:4983:3: ( (lv_elemType_2_0= ruleelementType ) )
            // InternalGo.g:4984:4: (lv_elemType_2_0= ruleelementType )
            {
            // InternalGo.g:4984:4: (lv_elemType_2_0= ruleelementType )
            // InternalGo.g:4985:5: lv_elemType_2_0= ruleelementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSliceTypeAccess().getElemTypeElementTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemType_2_0=ruleelementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSliceTypeRule());
              					}
              					set(
              						current,
              						"elemType",
              						lv_elemType_2_0,
              						"org.xtext.Go.elementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulesliceType"


    // $ANTLR start "entryRulemapType"
    // InternalGo.g:5006:1: entryRulemapType returns [EObject current=null] : iv_rulemapType= rulemapType EOF ;
    public final EObject entryRulemapType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulemapType = null;


        try {
            // InternalGo.g:5006:48: (iv_rulemapType= rulemapType EOF )
            // InternalGo.g:5007:2: iv_rulemapType= rulemapType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulemapType=rulemapType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulemapType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulemapType"


    // $ANTLR start "rulemapType"
    // InternalGo.g:5013:1: rulemapType returns [EObject current=null] : (otherlv_0= 'map' otherlv_1= '[' ( (lv_type_2_0= ruletype ) ) otherlv_3= ']' ( (lv_elemType_4_0= ruleelementType ) ) ) ;
    public final EObject rulemapType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_type_2_0 = null;

        EObject lv_elemType_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5019:2: ( (otherlv_0= 'map' otherlv_1= '[' ( (lv_type_2_0= ruletype ) ) otherlv_3= ']' ( (lv_elemType_4_0= ruleelementType ) ) ) )
            // InternalGo.g:5020:2: (otherlv_0= 'map' otherlv_1= '[' ( (lv_type_2_0= ruletype ) ) otherlv_3= ']' ( (lv_elemType_4_0= ruleelementType ) ) )
            {
            // InternalGo.g:5020:2: (otherlv_0= 'map' otherlv_1= '[' ( (lv_type_2_0= ruletype ) ) otherlv_3= ']' ( (lv_elemType_4_0= ruleelementType ) ) )
            // InternalGo.g:5021:3: otherlv_0= 'map' otherlv_1= '[' ( (lv_type_2_0= ruletype ) ) otherlv_3= ']' ( (lv_elemType_4_0= ruleelementType ) )
            {
            otherlv_0=(Token)match(input,98,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMapTypeAccess().getMapKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,95,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalGo.g:5029:3: ( (lv_type_2_0= ruletype ) )
            // InternalGo.g:5030:4: (lv_type_2_0= ruletype )
            {
            // InternalGo.g:5030:4: (lv_type_2_0= ruletype )
            // InternalGo.g:5031:5: lv_type_2_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapTypeAccess().getTypeTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_56);
            lv_type_2_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapTypeRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,96,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3());
              		
            }
            // InternalGo.g:5052:3: ( (lv_elemType_4_0= ruleelementType ) )
            // InternalGo.g:5053:4: (lv_elemType_4_0= ruleelementType )
            {
            // InternalGo.g:5053:4: (lv_elemType_4_0= ruleelementType )
            // InternalGo.g:5054:5: lv_elemType_4_0= ruleelementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapTypeAccess().getElemTypeElementTypeParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemType_4_0=ruleelementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapTypeRule());
              					}
              					set(
              						current,
              						"elemType",
              						lv_elemType_4_0,
              						"org.xtext.Go.elementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulemapType"


    // $ANTLR start "entryRulechannelType"
    // InternalGo.g:5075:1: entryRulechannelType returns [EObject current=null] : iv_rulechannelType= rulechannelType EOF ;
    public final EObject entryRulechannelType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulechannelType = null;


        try {
            // InternalGo.g:5075:52: (iv_rulechannelType= rulechannelType EOF )
            // InternalGo.g:5076:2: iv_rulechannelType= rulechannelType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChannelTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulechannelType=rulechannelType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulechannelType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulechannelType"


    // $ANTLR start "rulechannelType"
    // InternalGo.g:5082:1: rulechannelType returns [EObject current=null] : ( (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_elemType_5_0= ruleelementType ) ) ) ;
    public final EObject rulechannelType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_elemType_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5088:2: ( ( (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_elemType_5_0= ruleelementType ) ) ) )
            // InternalGo.g:5089:2: ( (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_elemType_5_0= ruleelementType ) ) )
            {
            // InternalGo.g:5089:2: ( (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_elemType_5_0= ruleelementType ) ) )
            // InternalGo.g:5090:3: (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) ) ( (lv_elemType_5_0= ruleelementType ) )
            {
            // InternalGo.g:5090:3: (otherlv_0= 'chan' | (otherlv_1= 'chan' otherlv_2= '<-' ) | (otherlv_3= '<-' otherlv_4= 'chan' ) )
            int alt59=3;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==99) ) {
                int LA59_1 = input.LA(2);

                if ( (synpred100_InternalGo()) ) {
                    alt59=1;
                }
                else if ( (synpred101_InternalGo()) ) {
                    alt59=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 59, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA59_0==56) ) {
                alt59=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }
            switch (alt59) {
                case 1 :
                    // InternalGo.g:5091:4: otherlv_0= 'chan'
                    {
                    otherlv_0=(Token)match(input,99,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getChannelTypeAccess().getChanKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalGo.g:5096:4: (otherlv_1= 'chan' otherlv_2= '<-' )
                    {
                    // InternalGo.g:5096:4: (otherlv_1= 'chan' otherlv_2= '<-' )
                    // InternalGo.g:5097:5: otherlv_1= 'chan' otherlv_2= '<-'
                    {
                    otherlv_1=(Token)match(input,99,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_0());
                      				
                    }
                    otherlv_2=(Token)match(input,56,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_1());
                      				
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:5107:4: (otherlv_3= '<-' otherlv_4= 'chan' )
                    {
                    // InternalGo.g:5107:4: (otherlv_3= '<-' otherlv_4= 'chan' )
                    // InternalGo.g:5108:5: otherlv_3= '<-' otherlv_4= 'chan'
                    {
                    otherlv_3=(Token)match(input,56,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_2_0());
                      				
                    }
                    otherlv_4=(Token)match(input,99,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getChannelTypeAccess().getChanKeyword_0_2_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:5118:3: ( (lv_elemType_5_0= ruleelementType ) )
            // InternalGo.g:5119:4: (lv_elemType_5_0= ruleelementType )
            {
            // InternalGo.g:5119:4: (lv_elemType_5_0= ruleelementType )
            // InternalGo.g:5120:5: lv_elemType_5_0= ruleelementType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChannelTypeAccess().getElemTypeElementTypeParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_elemType_5_0=ruleelementType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChannelTypeRule());
              					}
              					set(
              						current,
              						"elemType",
              						lv_elemType_5_0,
              						"org.xtext.Go.elementType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulechannelType"


    // $ANTLR start "entryRulemethodSpec"
    // InternalGo.g:5141:1: entryRulemethodSpec returns [EObject current=null] : iv_rulemethodSpec= rulemethodSpec EOF ;
    public final EObject entryRulemethodSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_rulemethodSpec = null;


        try {
            // InternalGo.g:5141:51: (iv_rulemethodSpec= rulemethodSpec EOF )
            // InternalGo.g:5142:2: iv_rulemethodSpec= rulemethodSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulemethodSpec=rulemethodSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulemethodSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulemethodSpec"


    // $ANTLR start "rulemethodSpec"
    // InternalGo.g:5148:1: rulemethodSpec returns [EObject current=null] : ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_sig_1_0= rulesignature ) ) ) | ( (lv_typeName_2_0= ruletypeName ) ) ) ;
    public final EObject rulemethodSpec() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_sig_1_0 = null;

        EObject lv_typeName_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5154:2: ( ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_sig_1_0= rulesignature ) ) ) | ( (lv_typeName_2_0= ruletypeName ) ) ) )
            // InternalGo.g:5155:2: ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_sig_1_0= rulesignature ) ) ) | ( (lv_typeName_2_0= ruletypeName ) ) )
            {
            // InternalGo.g:5155:2: ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_sig_1_0= rulesignature ) ) ) | ( (lv_typeName_2_0= ruletypeName ) ) )
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==RULE_IDENTIFIER) ) {
                int LA60_1 = input.LA(2);

                if ( (LA60_1==EOF||LA60_1==47||LA60_1==103) ) {
                    alt60=2;
                }
                else if ( (LA60_1==45) ) {
                    alt60=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;
            }
            switch (alt60) {
                case 1 :
                    // InternalGo.g:5156:3: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_sig_1_0= rulesignature ) ) )
                    {
                    // InternalGo.g:5156:3: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_sig_1_0= rulesignature ) ) )
                    // InternalGo.g:5157:4: ( (lv_name_0_0= RULE_IDENTIFIER ) ) ( (lv_sig_1_0= rulesignature ) )
                    {
                    // InternalGo.g:5157:4: ( (lv_name_0_0= RULE_IDENTIFIER ) )
                    // InternalGo.g:5158:5: (lv_name_0_0= RULE_IDENTIFIER )
                    {
                    // InternalGo.g:5158:5: (lv_name_0_0= RULE_IDENTIFIER )
                    // InternalGo.g:5159:6: lv_name_0_0= RULE_IDENTIFIER
                    {
                    lv_name_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_0, grammarAccess.getMethodSpecAccess().getNameIDENTIFIERTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getMethodSpecRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_0_0,
                      							"org.xtext.Go.IDENTIFIER");
                      					
                    }

                    }


                    }

                    // InternalGo.g:5175:4: ( (lv_sig_1_0= rulesignature ) )
                    // InternalGo.g:5176:5: (lv_sig_1_0= rulesignature )
                    {
                    // InternalGo.g:5176:5: (lv_sig_1_0= rulesignature )
                    // InternalGo.g:5177:6: lv_sig_1_0= rulesignature
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodSpecAccess().getSigSignatureParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_sig_1_0=rulesignature();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodSpecRule());
                      						}
                      						set(
                      							current,
                      							"sig",
                      							lv_sig_1_0,
                      							"org.xtext.Go.signature");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5196:3: ( (lv_typeName_2_0= ruletypeName ) )
                    {
                    // InternalGo.g:5196:3: ( (lv_typeName_2_0= ruletypeName ) )
                    // InternalGo.g:5197:4: (lv_typeName_2_0= ruletypeName )
                    {
                    // InternalGo.g:5197:4: (lv_typeName_2_0= ruletypeName )
                    // InternalGo.g:5198:5: lv_typeName_2_0= ruletypeName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodSpecAccess().getTypeNameTypeNameParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeName_2_0=ruletypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodSpecRule());
                      					}
                      					set(
                      						current,
                      						"typeName",
                      						lv_typeName_2_0,
                      						"org.xtext.Go.typeName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulemethodSpec"


    // $ANTLR start "entryRulefunctionType"
    // InternalGo.g:5219:1: entryRulefunctionType returns [EObject current=null] : iv_rulefunctionType= rulefunctionType EOF ;
    public final EObject entryRulefunctionType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefunctionType = null;


        try {
            // InternalGo.g:5219:53: (iv_rulefunctionType= rulefunctionType EOF )
            // InternalGo.g:5220:2: iv_rulefunctionType= rulefunctionType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefunctionType=rulefunctionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefunctionType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefunctionType"


    // $ANTLR start "rulefunctionType"
    // InternalGo.g:5226:1: rulefunctionType returns [EObject current=null] : (otherlv_0= 'func' ( (lv_sig_1_0= rulesignature ) ) ) ;
    public final EObject rulefunctionType() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_sig_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5232:2: ( (otherlv_0= 'func' ( (lv_sig_1_0= rulesignature ) ) ) )
            // InternalGo.g:5233:2: (otherlv_0= 'func' ( (lv_sig_1_0= rulesignature ) ) )
            {
            // InternalGo.g:5233:2: (otherlv_0= 'func' ( (lv_sig_1_0= rulesignature ) ) )
            // InternalGo.g:5234:3: otherlv_0= 'func' ( (lv_sig_1_0= rulesignature ) )
            {
            otherlv_0=(Token)match(input,52,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionTypeAccess().getFuncKeyword_0());
              		
            }
            // InternalGo.g:5238:3: ( (lv_sig_1_0= rulesignature ) )
            // InternalGo.g:5239:4: (lv_sig_1_0= rulesignature )
            {
            // InternalGo.g:5239:4: (lv_sig_1_0= rulesignature )
            // InternalGo.g:5240:5: lv_sig_1_0= rulesignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionTypeAccess().getSigSignatureParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_sig_1_0=rulesignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionTypeRule());
              					}
              					set(
              						current,
              						"sig",
              						lv_sig_1_0,
              						"org.xtext.Go.signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefunctionType"


    // $ANTLR start "entryRulesignature"
    // InternalGo.g:5261:1: entryRulesignature returns [EObject current=null] : iv_rulesignature= rulesignature EOF ;
    public final EObject entryRulesignature() throws RecognitionException {
        EObject current = null;

        EObject iv_rulesignature = null;


        try {
            // InternalGo.g:5261:50: (iv_rulesignature= rulesignature EOF )
            // InternalGo.g:5262:2: iv_rulesignature= rulesignature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulesignature=rulesignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulesignature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulesignature"


    // $ANTLR start "rulesignature"
    // InternalGo.g:5268:1: rulesignature returns [EObject current=null] : ( ( (lv_params_0_0= ruleparameters ) ) ( (lv_result_1_0= ruleresult ) )? ) ;
    public final EObject rulesignature() throws RecognitionException {
        EObject current = null;

        EObject lv_params_0_0 = null;

        EObject lv_result_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5274:2: ( ( ( (lv_params_0_0= ruleparameters ) ) ( (lv_result_1_0= ruleresult ) )? ) )
            // InternalGo.g:5275:2: ( ( (lv_params_0_0= ruleparameters ) ) ( (lv_result_1_0= ruleresult ) )? )
            {
            // InternalGo.g:5275:2: ( ( (lv_params_0_0= ruleparameters ) ) ( (lv_result_1_0= ruleresult ) )? )
            // InternalGo.g:5276:3: ( (lv_params_0_0= ruleparameters ) ) ( (lv_result_1_0= ruleresult ) )?
            {
            // InternalGo.g:5276:3: ( (lv_params_0_0= ruleparameters ) )
            // InternalGo.g:5277:4: (lv_params_0_0= ruleparameters )
            {
            // InternalGo.g:5277:4: (lv_params_0_0= ruleparameters )
            // InternalGo.g:5278:5: lv_params_0_0= ruleparameters
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSignatureAccess().getParamsParametersParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_60);
            lv_params_0_0=ruleparameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSignatureRule());
              					}
              					set(
              						current,
              						"params",
              						lv_params_0_0,
              						"org.xtext.Go.parameters");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:5295:3: ( (lv_result_1_0= ruleresult ) )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==RULE_IDENTIFIER||LA61_0==45||LA61_0==52||LA61_0==56||LA61_0==63||LA61_0==95||(LA61_0>=97 && LA61_0<=99)||LA61_0==101) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalGo.g:5296:4: (lv_result_1_0= ruleresult )
                    {
                    // InternalGo.g:5296:4: (lv_result_1_0= ruleresult )
                    // InternalGo.g:5297:5: lv_result_1_0= ruleresult
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_result_1_0=ruleresult();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSignatureRule());
                      					}
                      					set(
                      						current,
                      						"result",
                      						lv_result_1_0,
                      						"org.xtext.Go.result");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulesignature"


    // $ANTLR start "entryRuleresult"
    // InternalGo.g:5318:1: entryRuleresult returns [EObject current=null] : iv_ruleresult= ruleresult EOF ;
    public final EObject entryRuleresult() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleresult = null;


        try {
            // InternalGo.g:5318:47: (iv_ruleresult= ruleresult EOF )
            // InternalGo.g:5319:2: iv_ruleresult= ruleresult EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getResultRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleresult=ruleresult();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleresult; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleresult"


    // $ANTLR start "ruleresult"
    // InternalGo.g:5325:1: ruleresult returns [EObject current=null] : ( ( (lv_params_0_0= ruleparameters ) ) | ( (lv_type_1_0= ruletype ) ) ) ;
    public final EObject ruleresult() throws RecognitionException {
        EObject current = null;

        EObject lv_params_0_0 = null;

        EObject lv_type_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5331:2: ( ( ( (lv_params_0_0= ruleparameters ) ) | ( (lv_type_1_0= ruletype ) ) ) )
            // InternalGo.g:5332:2: ( ( (lv_params_0_0= ruleparameters ) ) | ( (lv_type_1_0= ruletype ) ) )
            {
            // InternalGo.g:5332:2: ( ( (lv_params_0_0= ruleparameters ) ) | ( (lv_type_1_0= ruletype ) ) )
            int alt62=2;
            alt62 = dfa62.predict(input);
            switch (alt62) {
                case 1 :
                    // InternalGo.g:5333:3: ( (lv_params_0_0= ruleparameters ) )
                    {
                    // InternalGo.g:5333:3: ( (lv_params_0_0= ruleparameters ) )
                    // InternalGo.g:5334:4: (lv_params_0_0= ruleparameters )
                    {
                    // InternalGo.g:5334:4: (lv_params_0_0= ruleparameters )
                    // InternalGo.g:5335:5: lv_params_0_0= ruleparameters
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getResultAccess().getParamsParametersParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_params_0_0=ruleparameters();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getResultRule());
                      					}
                      					set(
                      						current,
                      						"params",
                      						lv_params_0_0,
                      						"org.xtext.Go.parameters");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5353:3: ( (lv_type_1_0= ruletype ) )
                    {
                    // InternalGo.g:5353:3: ( (lv_type_1_0= ruletype ) )
                    // InternalGo.g:5354:4: (lv_type_1_0= ruletype )
                    {
                    // InternalGo.g:5354:4: (lv_type_1_0= ruletype )
                    // InternalGo.g:5355:5: lv_type_1_0= ruletype
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getResultAccess().getTypeTypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_1_0=ruletype();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getResultRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_1_0,
                      						"org.xtext.Go.type");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleresult"


    // $ANTLR start "entryRuleparameters"
    // InternalGo.g:5376:1: entryRuleparameters returns [EObject current=null] : iv_ruleparameters= ruleparameters EOF ;
    public final EObject entryRuleparameters() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleparameters = null;


        try {
            // InternalGo.g:5376:51: (iv_ruleparameters= ruleparameters EOF )
            // InternalGo.g:5377:2: iv_ruleparameters= ruleparameters EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParametersRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleparameters=ruleparameters();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleparameters; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleparameters"


    // $ANTLR start "ruleparameters"
    // InternalGo.g:5383:1: ruleparameters returns [EObject current=null] : ( () otherlv_1= '(' ( ( (lv_paramList_2_0= ruleparameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')' ) ;
    public final EObject ruleparameters() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_paramList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5389:2: ( ( () otherlv_1= '(' ( ( (lv_paramList_2_0= ruleparameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')' ) )
            // InternalGo.g:5390:2: ( () otherlv_1= '(' ( ( (lv_paramList_2_0= ruleparameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')' )
            {
            // InternalGo.g:5390:2: ( () otherlv_1= '(' ( ( (lv_paramList_2_0= ruleparameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')' )
            // InternalGo.g:5391:3: () otherlv_1= '(' ( ( (lv_paramList_2_0= ruleparameterList ) ) (otherlv_3= ',' )? )? otherlv_4= ')'
            {
            // InternalGo.g:5391:3: ()
            // InternalGo.g:5392:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getParametersAccess().getParametersAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,45,FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:5405:3: ( ( (lv_paramList_2_0= ruleparameterList ) ) (otherlv_3= ',' )? )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==RULE_IDENTIFIER||LA64_0==45||LA64_0==52||LA64_0==56||LA64_0==63||LA64_0==95||(LA64_0>=97 && LA64_0<=101)) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalGo.g:5406:4: ( (lv_paramList_2_0= ruleparameterList ) ) (otherlv_3= ',' )?
                    {
                    // InternalGo.g:5406:4: ( (lv_paramList_2_0= ruleparameterList ) )
                    // InternalGo.g:5407:5: (lv_paramList_2_0= ruleparameterList )
                    {
                    // InternalGo.g:5407:5: (lv_paramList_2_0= ruleparameterList )
                    // InternalGo.g:5408:6: lv_paramList_2_0= ruleparameterList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParametersAccess().getParamListParameterListParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_62);
                    lv_paramList_2_0=ruleparameterList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParametersRule());
                      						}
                      						add(
                      							current,
                      							"paramList",
                      							lv_paramList_2_0,
                      							"org.xtext.Go.parameterList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:5425:4: (otherlv_3= ',' )?
                    int alt63=2;
                    int LA63_0 = input.LA(1);

                    if ( (LA63_0==50) ) {
                        alt63=1;
                    }
                    switch (alt63) {
                        case 1 :
                            // InternalGo.g:5426:5: otherlv_3= ','
                            {
                            otherlv_3=(Token)match(input,50,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getParametersAccess().getCommaKeyword_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getParametersAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleparameters"


    // $ANTLR start "entryRuleparameterList"
    // InternalGo.g:5440:1: entryRuleparameterList returns [EObject current=null] : iv_ruleparameterList= ruleparameterList EOF ;
    public final EObject entryRuleparameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleparameterList = null;


        try {
            // InternalGo.g:5440:54: (iv_ruleparameterList= ruleparameterList EOF )
            // InternalGo.g:5441:2: iv_ruleparameterList= ruleparameterList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleparameterList=ruleparameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleparameterList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleparameterList"


    // $ANTLR start "ruleparameterList"
    // InternalGo.g:5447:1: ruleparameterList returns [EObject current=null] : ( ( (lv_paramsDecl_0_0= ruleparameterDecl ) ) (otherlv_1= ',' ( (lv_paramsDecl_2_0= ruleparameterDecl ) ) )* ) ;
    public final EObject ruleparameterList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_paramsDecl_0_0 = null;

        EObject lv_paramsDecl_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5453:2: ( ( ( (lv_paramsDecl_0_0= ruleparameterDecl ) ) (otherlv_1= ',' ( (lv_paramsDecl_2_0= ruleparameterDecl ) ) )* ) )
            // InternalGo.g:5454:2: ( ( (lv_paramsDecl_0_0= ruleparameterDecl ) ) (otherlv_1= ',' ( (lv_paramsDecl_2_0= ruleparameterDecl ) ) )* )
            {
            // InternalGo.g:5454:2: ( ( (lv_paramsDecl_0_0= ruleparameterDecl ) ) (otherlv_1= ',' ( (lv_paramsDecl_2_0= ruleparameterDecl ) ) )* )
            // InternalGo.g:5455:3: ( (lv_paramsDecl_0_0= ruleparameterDecl ) ) (otherlv_1= ',' ( (lv_paramsDecl_2_0= ruleparameterDecl ) ) )*
            {
            // InternalGo.g:5455:3: ( (lv_paramsDecl_0_0= ruleparameterDecl ) )
            // InternalGo.g:5456:4: (lv_paramsDecl_0_0= ruleparameterDecl )
            {
            // InternalGo.g:5456:4: (lv_paramsDecl_0_0= ruleparameterDecl )
            // InternalGo.g:5457:5: lv_paramsDecl_0_0= ruleparameterDecl
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterListAccess().getParamsDeclParameterDeclParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_17);
            lv_paramsDecl_0_0=ruleparameterDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterListRule());
              					}
              					add(
              						current,
              						"paramsDecl",
              						lv_paramsDecl_0_0,
              						"org.xtext.Go.parameterDecl");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:5474:3: (otherlv_1= ',' ( (lv_paramsDecl_2_0= ruleparameterDecl ) ) )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==50) ) {
                    int LA65_1 = input.LA(2);

                    if ( (LA65_1==RULE_IDENTIFIER||LA65_1==45||LA65_1==52||LA65_1==56||LA65_1==63||LA65_1==95||(LA65_1>=97 && LA65_1<=101)) ) {
                        alt65=1;
                    }


                }


                switch (alt65) {
            	case 1 :
            	    // InternalGo.g:5475:4: otherlv_1= ',' ( (lv_paramsDecl_2_0= ruleparameterDecl ) )
            	    {
            	    otherlv_1=(Token)match(input,50,FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:5479:4: ( (lv_paramsDecl_2_0= ruleparameterDecl ) )
            	    // InternalGo.g:5480:5: (lv_paramsDecl_2_0= ruleparameterDecl )
            	    {
            	    // InternalGo.g:5480:5: (lv_paramsDecl_2_0= ruleparameterDecl )
            	    // InternalGo.g:5481:6: lv_paramsDecl_2_0= ruleparameterDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getParameterListAccess().getParamsDeclParameterDeclParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_17);
            	    lv_paramsDecl_2_0=ruleparameterDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getParameterListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"paramsDecl",
            	      							lv_paramsDecl_2_0,
            	      							"org.xtext.Go.parameterDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleparameterList"


    // $ANTLR start "entryRuleparameterDecl"
    // InternalGo.g:5503:1: entryRuleparameterDecl returns [EObject current=null] : iv_ruleparameterDecl= ruleparameterDecl EOF ;
    public final EObject entryRuleparameterDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleparameterDecl = null;


        try {
            // InternalGo.g:5503:54: (iv_ruleparameterDecl= ruleparameterDecl EOF )
            // InternalGo.g:5504:2: iv_ruleparameterDecl= ruleparameterDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleparameterDecl=ruleparameterDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleparameterDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleparameterDecl"


    // $ANTLR start "ruleparameterDecl"
    // InternalGo.g:5510:1: ruleparameterDecl returns [EObject current=null] : ( ( (lv_identifierList_0_0= ruleidentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruletype ) ) ) ;
    public final EObject ruleparameterDecl() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_identifierList_0_0 = null;

        EObject lv_type_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5516:2: ( ( ( (lv_identifierList_0_0= ruleidentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruletype ) ) ) )
            // InternalGo.g:5517:2: ( ( (lv_identifierList_0_0= ruleidentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruletype ) ) )
            {
            // InternalGo.g:5517:2: ( ( (lv_identifierList_0_0= ruleidentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruletype ) ) )
            // InternalGo.g:5518:3: ( (lv_identifierList_0_0= ruleidentifierList ) )? (otherlv_1= '...' )? ( (lv_type_2_0= ruletype ) )
            {
            // InternalGo.g:5518:3: ( (lv_identifierList_0_0= ruleidentifierList ) )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==RULE_IDENTIFIER) ) {
                int LA66_1 = input.LA(2);

                if ( (LA66_1==50) ) {
                    int LA66_3 = input.LA(3);

                    if ( (LA66_3==RULE_IDENTIFIER) ) {
                        int LA66_5 = input.LA(4);

                        if ( (synpred108_InternalGo()) ) {
                            alt66=1;
                        }
                    }
                }
                else if ( (LA66_1==RULE_IDENTIFIER||LA66_1==45||LA66_1==52||LA66_1==56||LA66_1==63||LA66_1==95||(LA66_1>=97 && LA66_1<=101)) ) {
                    alt66=1;
                }
            }
            switch (alt66) {
                case 1 :
                    // InternalGo.g:5519:4: (lv_identifierList_0_0= ruleidentifierList )
                    {
                    // InternalGo.g:5519:4: (lv_identifierList_0_0= ruleidentifierList )
                    // InternalGo.g:5520:5: lv_identifierList_0_0= ruleidentifierList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameterDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_63);
                    lv_identifierList_0_0=ruleidentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameterDeclRule());
                      					}
                      					set(
                      						current,
                      						"identifierList",
                      						lv_identifierList_0_0,
                      						"org.xtext.Go.identifierList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalGo.g:5537:3: (otherlv_1= '...' )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==100) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalGo.g:5538:4: otherlv_1= '...'
                    {
                    otherlv_1=(Token)match(input,100,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:5543:3: ( (lv_type_2_0= ruletype ) )
            // InternalGo.g:5544:4: (lv_type_2_0= ruletype )
            {
            // InternalGo.g:5544:4: (lv_type_2_0= ruletype )
            // InternalGo.g:5545:5: lv_type_2_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_type_2_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterDeclRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleparameterDecl"


    // $ANTLR start "entryRuleoperand"
    // InternalGo.g:5566:1: entryRuleoperand returns [EObject current=null] : iv_ruleoperand= ruleoperand EOF ;
    public final EObject entryRuleoperand() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleoperand = null;


        try {
            // InternalGo.g:5566:48: (iv_ruleoperand= ruleoperand EOF )
            // InternalGo.g:5567:2: iv_ruleoperand= ruleoperand EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleoperand=ruleoperand();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleoperand; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleoperand"


    // $ANTLR start "ruleoperand"
    // InternalGo.g:5573:1: ruleoperand returns [EObject current=null] : ( ( (lv_literal_0_0= ruleliteral ) ) | ( (lv_operandName_1_0= ruleoperandName ) ) | ( (lv_methodExpr_2_0= rulemethodExpr ) ) | (otherlv_3= '(' ( (lv_expr_4_0= ruleexpression ) ) otherlv_5= ')' ) ) ;
    public final EObject ruleoperand() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_literal_0_0 = null;

        EObject lv_operandName_1_0 = null;

        EObject lv_methodExpr_2_0 = null;

        EObject lv_expr_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5579:2: ( ( ( (lv_literal_0_0= ruleliteral ) ) | ( (lv_operandName_1_0= ruleoperandName ) ) | ( (lv_methodExpr_2_0= rulemethodExpr ) ) | (otherlv_3= '(' ( (lv_expr_4_0= ruleexpression ) ) otherlv_5= ')' ) ) )
            // InternalGo.g:5580:2: ( ( (lv_literal_0_0= ruleliteral ) ) | ( (lv_operandName_1_0= ruleoperandName ) ) | ( (lv_methodExpr_2_0= rulemethodExpr ) ) | (otherlv_3= '(' ( (lv_expr_4_0= ruleexpression ) ) otherlv_5= ')' ) )
            {
            // InternalGo.g:5580:2: ( ( (lv_literal_0_0= ruleliteral ) ) | ( (lv_operandName_1_0= ruleoperandName ) ) | ( (lv_methodExpr_2_0= rulemethodExpr ) ) | (otherlv_3= '(' ( (lv_expr_4_0= ruleexpression ) ) otherlv_5= ')' ) )
            int alt68=4;
            alt68 = dfa68.predict(input);
            switch (alt68) {
                case 1 :
                    // InternalGo.g:5581:3: ( (lv_literal_0_0= ruleliteral ) )
                    {
                    // InternalGo.g:5581:3: ( (lv_literal_0_0= ruleliteral ) )
                    // InternalGo.g:5582:4: (lv_literal_0_0= ruleliteral )
                    {
                    // InternalGo.g:5582:4: (lv_literal_0_0= ruleliteral )
                    // InternalGo.g:5583:5: lv_literal_0_0= ruleliteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleliteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOperandRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.xtext.Go.literal");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5601:3: ( (lv_operandName_1_0= ruleoperandName ) )
                    {
                    // InternalGo.g:5601:3: ( (lv_operandName_1_0= ruleoperandName ) )
                    // InternalGo.g:5602:4: (lv_operandName_1_0= ruleoperandName )
                    {
                    // InternalGo.g:5602:4: (lv_operandName_1_0= ruleoperandName )
                    // InternalGo.g:5603:5: lv_operandName_1_0= ruleoperandName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOperandAccess().getOperandNameOperandNameParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_operandName_1_0=ruleoperandName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOperandRule());
                      					}
                      					set(
                      						current,
                      						"operandName",
                      						lv_operandName_1_0,
                      						"org.xtext.Go.operandName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:5621:3: ( (lv_methodExpr_2_0= rulemethodExpr ) )
                    {
                    // InternalGo.g:5621:3: ( (lv_methodExpr_2_0= rulemethodExpr ) )
                    // InternalGo.g:5622:4: (lv_methodExpr_2_0= rulemethodExpr )
                    {
                    // InternalGo.g:5622:4: (lv_methodExpr_2_0= rulemethodExpr )
                    // InternalGo.g:5623:5: lv_methodExpr_2_0= rulemethodExpr
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOperandAccess().getMethodExprMethodExprParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_methodExpr_2_0=rulemethodExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOperandRule());
                      					}
                      					set(
                      						current,
                      						"methodExpr",
                      						lv_methodExpr_2_0,
                      						"org.xtext.Go.methodExpr");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:5641:3: (otherlv_3= '(' ( (lv_expr_4_0= ruleexpression ) ) otherlv_5= ')' )
                    {
                    // InternalGo.g:5641:3: (otherlv_3= '(' ( (lv_expr_4_0= ruleexpression ) ) otherlv_5= ')' )
                    // InternalGo.g:5642:4: otherlv_3= '(' ( (lv_expr_4_0= ruleexpression ) ) otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getOperandAccess().getLeftParenthesisKeyword_3_0());
                      			
                    }
                    // InternalGo.g:5646:4: ( (lv_expr_4_0= ruleexpression ) )
                    // InternalGo.g:5647:5: (lv_expr_4_0= ruleexpression )
                    {
                    // InternalGo.g:5647:5: (lv_expr_4_0= ruleexpression )
                    // InternalGo.g:5648:6: lv_expr_4_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOperandAccess().getExprExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    lv_expr_4_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOperandRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_4_0,
                      							"org.xtext.Go.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getOperandAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleoperand"


    // $ANTLR start "entryRuleliteral"
    // InternalGo.g:5674:1: entryRuleliteral returns [EObject current=null] : iv_ruleliteral= ruleliteral EOF ;
    public final EObject entryRuleliteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleliteral = null;


        try {
            // InternalGo.g:5674:48: (iv_ruleliteral= ruleliteral EOF )
            // InternalGo.g:5675:2: iv_ruleliteral= ruleliteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleliteral=ruleliteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleliteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleliteral"


    // $ANTLR start "ruleliteral"
    // InternalGo.g:5681:1: ruleliteral returns [EObject current=null] : ( ( (lv_litBasic_0_0= rulebasicLit ) ) | ( (lv_litComposite_1_0= rulecompositeLit ) ) | ( (lv_litFunc_2_0= rulefunctionLit ) ) ) ;
    public final EObject ruleliteral() throws RecognitionException {
        EObject current = null;

        EObject lv_litBasic_0_0 = null;

        EObject lv_litComposite_1_0 = null;

        EObject lv_litFunc_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5687:2: ( ( ( (lv_litBasic_0_0= rulebasicLit ) ) | ( (lv_litComposite_1_0= rulecompositeLit ) ) | ( (lv_litFunc_2_0= rulefunctionLit ) ) ) )
            // InternalGo.g:5688:2: ( ( (lv_litBasic_0_0= rulebasicLit ) ) | ( (lv_litComposite_1_0= rulecompositeLit ) ) | ( (lv_litFunc_2_0= rulefunctionLit ) ) )
            {
            // InternalGo.g:5688:2: ( ( (lv_litBasic_0_0= rulebasicLit ) ) | ( (lv_litComposite_1_0= rulecompositeLit ) ) | ( (lv_litFunc_2_0= rulefunctionLit ) ) )
            int alt69=3;
            switch ( input.LA(1) ) {
            case RULE_STRING_LIT:
            case RULE_INT_LIT:
            case RULE_FLOAT_LIT:
            case RULE_IMAGINARY_LIT:
            case RULE_RUNE_LIT:
                {
                alt69=1;
                }
                break;
            case RULE_IDENTIFIER:
            case 95:
            case 98:
            case 101:
                {
                alt69=2;
                }
                break;
            case 52:
                {
                alt69=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }

            switch (alt69) {
                case 1 :
                    // InternalGo.g:5689:3: ( (lv_litBasic_0_0= rulebasicLit ) )
                    {
                    // InternalGo.g:5689:3: ( (lv_litBasic_0_0= rulebasicLit ) )
                    // InternalGo.g:5690:4: (lv_litBasic_0_0= rulebasicLit )
                    {
                    // InternalGo.g:5690:4: (lv_litBasic_0_0= rulebasicLit )
                    // InternalGo.g:5691:5: lv_litBasic_0_0= rulebasicLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getLitBasicBasicLitParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_litBasic_0_0=rulebasicLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"litBasic",
                      						lv_litBasic_0_0,
                      						"org.xtext.Go.basicLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5709:3: ( (lv_litComposite_1_0= rulecompositeLit ) )
                    {
                    // InternalGo.g:5709:3: ( (lv_litComposite_1_0= rulecompositeLit ) )
                    // InternalGo.g:5710:4: (lv_litComposite_1_0= rulecompositeLit )
                    {
                    // InternalGo.g:5710:4: (lv_litComposite_1_0= rulecompositeLit )
                    // InternalGo.g:5711:5: lv_litComposite_1_0= rulecompositeLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getLitCompositeCompositeLitParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_litComposite_1_0=rulecompositeLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"litComposite",
                      						lv_litComposite_1_0,
                      						"org.xtext.Go.compositeLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:5729:3: ( (lv_litFunc_2_0= rulefunctionLit ) )
                    {
                    // InternalGo.g:5729:3: ( (lv_litFunc_2_0= rulefunctionLit ) )
                    // InternalGo.g:5730:4: (lv_litFunc_2_0= rulefunctionLit )
                    {
                    // InternalGo.g:5730:4: (lv_litFunc_2_0= rulefunctionLit )
                    // InternalGo.g:5731:5: lv_litFunc_2_0= rulefunctionLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getLitFuncFunctionLitParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_litFunc_2_0=rulefunctionLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"litFunc",
                      						lv_litFunc_2_0,
                      						"org.xtext.Go.functionLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleliteral"


    // $ANTLR start "entryRulebasicLit"
    // InternalGo.g:5752:1: entryRulebasicLit returns [EObject current=null] : iv_rulebasicLit= rulebasicLit EOF ;
    public final EObject entryRulebasicLit() throws RecognitionException {
        EObject current = null;

        EObject iv_rulebasicLit = null;


        try {
            // InternalGo.g:5752:49: (iv_rulebasicLit= rulebasicLit EOF )
            // InternalGo.g:5753:2: iv_rulebasicLit= rulebasicLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulebasicLit=rulebasicLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulebasicLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulebasicLit"


    // $ANTLR start "rulebasicLit"
    // InternalGo.g:5759:1: rulebasicLit returns [EObject current=null] : ( ( (lv_intLit_0_0= ruleintLit ) ) | ( (lv_floatLit_1_0= rulefloatLit ) ) | ( (lv_imaginaryLit_2_0= ruleimaginaryLit ) ) | ( (lv_runeLit_3_0= ruleruneLit ) ) | ( (lv_stringLit_4_0= rulestringLit ) ) ) ;
    public final EObject rulebasicLit() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_intLit_0_0 = null;

        AntlrDatatypeRuleToken lv_floatLit_1_0 = null;

        AntlrDatatypeRuleToken lv_imaginaryLit_2_0 = null;

        AntlrDatatypeRuleToken lv_runeLit_3_0 = null;

        AntlrDatatypeRuleToken lv_stringLit_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:5765:2: ( ( ( (lv_intLit_0_0= ruleintLit ) ) | ( (lv_floatLit_1_0= rulefloatLit ) ) | ( (lv_imaginaryLit_2_0= ruleimaginaryLit ) ) | ( (lv_runeLit_3_0= ruleruneLit ) ) | ( (lv_stringLit_4_0= rulestringLit ) ) ) )
            // InternalGo.g:5766:2: ( ( (lv_intLit_0_0= ruleintLit ) ) | ( (lv_floatLit_1_0= rulefloatLit ) ) | ( (lv_imaginaryLit_2_0= ruleimaginaryLit ) ) | ( (lv_runeLit_3_0= ruleruneLit ) ) | ( (lv_stringLit_4_0= rulestringLit ) ) )
            {
            // InternalGo.g:5766:2: ( ( (lv_intLit_0_0= ruleintLit ) ) | ( (lv_floatLit_1_0= rulefloatLit ) ) | ( (lv_imaginaryLit_2_0= ruleimaginaryLit ) ) | ( (lv_runeLit_3_0= ruleruneLit ) ) | ( (lv_stringLit_4_0= rulestringLit ) ) )
            int alt70=5;
            switch ( input.LA(1) ) {
            case RULE_INT_LIT:
                {
                alt70=1;
                }
                break;
            case RULE_FLOAT_LIT:
                {
                alt70=2;
                }
                break;
            case RULE_IMAGINARY_LIT:
                {
                alt70=3;
                }
                break;
            case RULE_RUNE_LIT:
                {
                alt70=4;
                }
                break;
            case RULE_STRING_LIT:
                {
                alt70=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }

            switch (alt70) {
                case 1 :
                    // InternalGo.g:5767:3: ( (lv_intLit_0_0= ruleintLit ) )
                    {
                    // InternalGo.g:5767:3: ( (lv_intLit_0_0= ruleintLit ) )
                    // InternalGo.g:5768:4: (lv_intLit_0_0= ruleintLit )
                    {
                    // InternalGo.g:5768:4: (lv_intLit_0_0= ruleintLit )
                    // InternalGo.g:5769:5: lv_intLit_0_0= ruleintLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBasicLitAccess().getIntLitIntLitParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_intLit_0_0=ruleintLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBasicLitRule());
                      					}
                      					set(
                      						current,
                      						"intLit",
                      						lv_intLit_0_0,
                      						"org.xtext.Go.intLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:5787:3: ( (lv_floatLit_1_0= rulefloatLit ) )
                    {
                    // InternalGo.g:5787:3: ( (lv_floatLit_1_0= rulefloatLit ) )
                    // InternalGo.g:5788:4: (lv_floatLit_1_0= rulefloatLit )
                    {
                    // InternalGo.g:5788:4: (lv_floatLit_1_0= rulefloatLit )
                    // InternalGo.g:5789:5: lv_floatLit_1_0= rulefloatLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBasicLitAccess().getFloatLitFloatLitParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_floatLit_1_0=rulefloatLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBasicLitRule());
                      					}
                      					set(
                      						current,
                      						"floatLit",
                      						lv_floatLit_1_0,
                      						"org.xtext.Go.floatLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:5807:3: ( (lv_imaginaryLit_2_0= ruleimaginaryLit ) )
                    {
                    // InternalGo.g:5807:3: ( (lv_imaginaryLit_2_0= ruleimaginaryLit ) )
                    // InternalGo.g:5808:4: (lv_imaginaryLit_2_0= ruleimaginaryLit )
                    {
                    // InternalGo.g:5808:4: (lv_imaginaryLit_2_0= ruleimaginaryLit )
                    // InternalGo.g:5809:5: lv_imaginaryLit_2_0= ruleimaginaryLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBasicLitAccess().getImaginaryLitImaginaryLitParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_imaginaryLit_2_0=ruleimaginaryLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBasicLitRule());
                      					}
                      					set(
                      						current,
                      						"imaginaryLit",
                      						lv_imaginaryLit_2_0,
                      						"org.xtext.Go.imaginaryLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:5827:3: ( (lv_runeLit_3_0= ruleruneLit ) )
                    {
                    // InternalGo.g:5827:3: ( (lv_runeLit_3_0= ruleruneLit ) )
                    // InternalGo.g:5828:4: (lv_runeLit_3_0= ruleruneLit )
                    {
                    // InternalGo.g:5828:4: (lv_runeLit_3_0= ruleruneLit )
                    // InternalGo.g:5829:5: lv_runeLit_3_0= ruleruneLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBasicLitAccess().getRuneLitRuneLitParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_runeLit_3_0=ruleruneLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBasicLitRule());
                      					}
                      					set(
                      						current,
                      						"runeLit",
                      						lv_runeLit_3_0,
                      						"org.xtext.Go.runeLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:5847:3: ( (lv_stringLit_4_0= rulestringLit ) )
                    {
                    // InternalGo.g:5847:3: ( (lv_stringLit_4_0= rulestringLit ) )
                    // InternalGo.g:5848:4: (lv_stringLit_4_0= rulestringLit )
                    {
                    // InternalGo.g:5848:4: (lv_stringLit_4_0= rulestringLit )
                    // InternalGo.g:5849:5: lv_stringLit_4_0= rulestringLit
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getBasicLitAccess().getStringLitStringLitParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_stringLit_4_0=rulestringLit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getBasicLitRule());
                      					}
                      					set(
                      						current,
                      						"stringLit",
                      						lv_stringLit_4_0,
                      						"org.xtext.Go.stringLit");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulebasicLit"


    // $ANTLR start "entryRuleintLit"
    // InternalGo.g:5870:1: entryRuleintLit returns [String current=null] : iv_ruleintLit= ruleintLit EOF ;
    public final String entryRuleintLit() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleintLit = null;


        try {
            // InternalGo.g:5870:46: (iv_ruleintLit= ruleintLit EOF )
            // InternalGo.g:5871:2: iv_ruleintLit= ruleintLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleintLit=ruleintLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleintLit.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleintLit"


    // $ANTLR start "ruleintLit"
    // InternalGo.g:5877:1: ruleintLit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_INT_LIT_0= RULE_INT_LIT ;
    public final AntlrDatatypeRuleToken ruleintLit() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_LIT_0=null;


        	enterRule();

        try {
            // InternalGo.g:5883:2: (this_INT_LIT_0= RULE_INT_LIT )
            // InternalGo.g:5884:2: this_INT_LIT_0= RULE_INT_LIT
            {
            this_INT_LIT_0=(Token)match(input,RULE_INT_LIT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_LIT_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_INT_LIT_0, grammarAccess.getIntLitAccess().getINT_LITTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleintLit"


    // $ANTLR start "entryRulefloatLit"
    // InternalGo.g:5894:1: entryRulefloatLit returns [String current=null] : iv_rulefloatLit= rulefloatLit EOF ;
    public final String entryRulefloatLit() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulefloatLit = null;


        try {
            // InternalGo.g:5894:48: (iv_rulefloatLit= rulefloatLit EOF )
            // InternalGo.g:5895:2: iv_rulefloatLit= rulefloatLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloatLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefloatLit=rulefloatLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefloatLit.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefloatLit"


    // $ANTLR start "rulefloatLit"
    // InternalGo.g:5901:1: rulefloatLit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_FLOAT_LIT_0= RULE_FLOAT_LIT ;
    public final AntlrDatatypeRuleToken rulefloatLit() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_FLOAT_LIT_0=null;


        	enterRule();

        try {
            // InternalGo.g:5907:2: (this_FLOAT_LIT_0= RULE_FLOAT_LIT )
            // InternalGo.g:5908:2: this_FLOAT_LIT_0= RULE_FLOAT_LIT
            {
            this_FLOAT_LIT_0=(Token)match(input,RULE_FLOAT_LIT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_FLOAT_LIT_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_FLOAT_LIT_0, grammarAccess.getFloatLitAccess().getFLOAT_LITTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefloatLit"


    // $ANTLR start "entryRuleimaginaryLit"
    // InternalGo.g:5918:1: entryRuleimaginaryLit returns [String current=null] : iv_ruleimaginaryLit= ruleimaginaryLit EOF ;
    public final String entryRuleimaginaryLit() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleimaginaryLit = null;


        try {
            // InternalGo.g:5918:52: (iv_ruleimaginaryLit= ruleimaginaryLit EOF )
            // InternalGo.g:5919:2: iv_ruleimaginaryLit= ruleimaginaryLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImaginaryLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleimaginaryLit=ruleimaginaryLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleimaginaryLit.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleimaginaryLit"


    // $ANTLR start "ruleimaginaryLit"
    // InternalGo.g:5925:1: ruleimaginaryLit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_IMAGINARY_LIT_0= RULE_IMAGINARY_LIT ;
    public final AntlrDatatypeRuleToken ruleimaginaryLit() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IMAGINARY_LIT_0=null;


        	enterRule();

        try {
            // InternalGo.g:5931:2: (this_IMAGINARY_LIT_0= RULE_IMAGINARY_LIT )
            // InternalGo.g:5932:2: this_IMAGINARY_LIT_0= RULE_IMAGINARY_LIT
            {
            this_IMAGINARY_LIT_0=(Token)match(input,RULE_IMAGINARY_LIT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IMAGINARY_LIT_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_IMAGINARY_LIT_0, grammarAccess.getImaginaryLitAccess().getIMAGINARY_LITTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleimaginaryLit"


    // $ANTLR start "entryRuleruneLit"
    // InternalGo.g:5942:1: entryRuleruneLit returns [String current=null] : iv_ruleruneLit= ruleruneLit EOF ;
    public final String entryRuleruneLit() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleruneLit = null;


        try {
            // InternalGo.g:5942:47: (iv_ruleruneLit= ruleruneLit EOF )
            // InternalGo.g:5943:2: iv_ruleruneLit= ruleruneLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRuneLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleruneLit=ruleruneLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleruneLit.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleruneLit"


    // $ANTLR start "ruleruneLit"
    // InternalGo.g:5949:1: ruleruneLit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_RUNE_LIT_0= RULE_RUNE_LIT ;
    public final AntlrDatatypeRuleToken ruleruneLit() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_RUNE_LIT_0=null;


        	enterRule();

        try {
            // InternalGo.g:5955:2: (this_RUNE_LIT_0= RULE_RUNE_LIT )
            // InternalGo.g:5956:2: this_RUNE_LIT_0= RULE_RUNE_LIT
            {
            this_RUNE_LIT_0=(Token)match(input,RULE_RUNE_LIT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_RUNE_LIT_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_RUNE_LIT_0, grammarAccess.getRuneLitAccess().getRUNE_LITTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleruneLit"


    // $ANTLR start "entryRulestringLit"
    // InternalGo.g:5966:1: entryRulestringLit returns [String current=null] : iv_rulestringLit= rulestringLit EOF ;
    public final String entryRulestringLit() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulestringLit = null;


        try {
            // InternalGo.g:5966:49: (iv_rulestringLit= rulestringLit EOF )
            // InternalGo.g:5967:2: iv_rulestringLit= rulestringLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestringLit=rulestringLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestringLit.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestringLit"


    // $ANTLR start "rulestringLit"
    // InternalGo.g:5973:1: rulestringLit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_LIT_0= RULE_STRING_LIT ;
    public final AntlrDatatypeRuleToken rulestringLit() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_LIT_0=null;


        	enterRule();

        try {
            // InternalGo.g:5979:2: (this_STRING_LIT_0= RULE_STRING_LIT )
            // InternalGo.g:5980:2: this_STRING_LIT_0= RULE_STRING_LIT
            {
            this_STRING_LIT_0=(Token)match(input,RULE_STRING_LIT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_STRING_LIT_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_STRING_LIT_0, grammarAccess.getStringLitAccess().getSTRING_LITTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestringLit"


    // $ANTLR start "entryRuleoperandName"
    // InternalGo.g:5990:1: entryRuleoperandName returns [EObject current=null] : iv_ruleoperandName= ruleoperandName EOF ;
    public final EObject entryRuleoperandName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleoperandName = null;


        try {
            // InternalGo.g:5990:52: (iv_ruleoperandName= ruleoperandName EOF )
            // InternalGo.g:5991:2: iv_ruleoperandName= ruleoperandName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOperandNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleoperandName=ruleoperandName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleoperandName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleoperandName"


    // $ANTLR start "ruleoperandName"
    // InternalGo.g:5997:1: ruleoperandName returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_qualIdent_1_0= rulequalifiedIdent ) ) ) ;
    public final EObject ruleoperandName() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_qualIdent_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6003:2: ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_qualIdent_1_0= rulequalifiedIdent ) ) ) )
            // InternalGo.g:6004:2: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_qualIdent_1_0= rulequalifiedIdent ) ) )
            {
            // InternalGo.g:6004:2: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_qualIdent_1_0= rulequalifiedIdent ) ) )
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==RULE_IDENTIFIER) ) {
                int LA71_1 = input.LA(2);

                if ( (LA71_1==47) ) {
                    int LA71_2 = input.LA(3);

                    if ( (LA71_2==45) ) {
                        alt71=1;
                    }
                    else if ( (LA71_2==RULE_IDENTIFIER) ) {
                        alt71=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 71, 2, input);

                        throw nvae;
                    }
                }
                else if ( (LA71_1==EOF||LA71_1==RULE_BINARY_OP||LA71_1==46||(LA71_1>=49 && LA71_1<=50)||(LA71_1>=54 && LA71_1<=69)||LA71_1==71||LA71_1==96||LA71_1==100||LA71_1==103) ) {
                    alt71=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 71, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;
            }
            switch (alt71) {
                case 1 :
                    // InternalGo.g:6005:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
                    {
                    // InternalGo.g:6005:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
                    // InternalGo.g:6006:4: (lv_name_0_0= RULE_IDENTIFIER )
                    {
                    // InternalGo.g:6006:4: (lv_name_0_0= RULE_IDENTIFIER )
                    // InternalGo.g:6007:5: lv_name_0_0= RULE_IDENTIFIER
                    {
                    lv_name_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getOperandNameAccess().getNameIDENTIFIERTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOperandNameRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.xtext.Go.IDENTIFIER");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6024:3: ( (lv_qualIdent_1_0= rulequalifiedIdent ) )
                    {
                    // InternalGo.g:6024:3: ( (lv_qualIdent_1_0= rulequalifiedIdent ) )
                    // InternalGo.g:6025:4: (lv_qualIdent_1_0= rulequalifiedIdent )
                    {
                    // InternalGo.g:6025:4: (lv_qualIdent_1_0= rulequalifiedIdent )
                    // InternalGo.g:6026:5: lv_qualIdent_1_0= rulequalifiedIdent
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getOperandNameAccess().getQualIdentQualifiedIdentParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_qualIdent_1_0=rulequalifiedIdent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getOperandNameRule());
                      					}
                      					set(
                      						current,
                      						"qualIdent",
                      						lv_qualIdent_1_0,
                      						"org.xtext.Go.qualifiedIdent");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleoperandName"


    // $ANTLR start "entryRulequalifiedIdent"
    // InternalGo.g:6047:1: entryRulequalifiedIdent returns [EObject current=null] : iv_rulequalifiedIdent= rulequalifiedIdent EOF ;
    public final EObject entryRulequalifiedIdent() throws RecognitionException {
        EObject current = null;

        EObject iv_rulequalifiedIdent = null;


        try {
            // InternalGo.g:6047:55: (iv_rulequalifiedIdent= rulequalifiedIdent EOF )
            // InternalGo.g:6048:2: iv_rulequalifiedIdent= rulequalifiedIdent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedIdentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulequalifiedIdent=rulequalifiedIdent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulequalifiedIdent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulequalifiedIdent"


    // $ANTLR start "rulequalifiedIdent"
    // InternalGo.g:6054:1: rulequalifiedIdent returns [EObject current=null] : ( ( (lv_packageName_0_0= RULE_IDENTIFIER ) ) otherlv_1= '.' ( (lv_name_2_0= RULE_IDENTIFIER ) ) ) ;
    public final EObject rulequalifiedIdent() throws RecognitionException {
        EObject current = null;

        Token lv_packageName_0_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;


        	enterRule();

        try {
            // InternalGo.g:6060:2: ( ( ( (lv_packageName_0_0= RULE_IDENTIFIER ) ) otherlv_1= '.' ( (lv_name_2_0= RULE_IDENTIFIER ) ) ) )
            // InternalGo.g:6061:2: ( ( (lv_packageName_0_0= RULE_IDENTIFIER ) ) otherlv_1= '.' ( (lv_name_2_0= RULE_IDENTIFIER ) ) )
            {
            // InternalGo.g:6061:2: ( ( (lv_packageName_0_0= RULE_IDENTIFIER ) ) otherlv_1= '.' ( (lv_name_2_0= RULE_IDENTIFIER ) ) )
            // InternalGo.g:6062:3: ( (lv_packageName_0_0= RULE_IDENTIFIER ) ) otherlv_1= '.' ( (lv_name_2_0= RULE_IDENTIFIER ) )
            {
            // InternalGo.g:6062:3: ( (lv_packageName_0_0= RULE_IDENTIFIER ) )
            // InternalGo.g:6063:4: (lv_packageName_0_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:6063:4: (lv_packageName_0_0= RULE_IDENTIFIER )
            // InternalGo.g:6064:5: lv_packageName_0_0= RULE_IDENTIFIER
            {
            lv_packageName_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_packageName_0_0, grammarAccess.getQualifiedIdentAccess().getPackageNameIDENTIFIERTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQualifiedIdentRule());
              					}
              					setWithLastConsumed(
              						current,
              						"packageName",
              						lv_packageName_0_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,47,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1());
              		
            }
            // InternalGo.g:6084:3: ( (lv_name_2_0= RULE_IDENTIFIER ) )
            // InternalGo.g:6085:4: (lv_name_2_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:6085:4: (lv_name_2_0= RULE_IDENTIFIER )
            // InternalGo.g:6086:5: lv_name_2_0= RULE_IDENTIFIER
            {
            lv_name_2_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getQualifiedIdentAccess().getNameIDENTIFIERTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQualifiedIdentRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulequalifiedIdent"


    // $ANTLR start "entryRulecompositeLit"
    // InternalGo.g:6106:1: entryRulecompositeLit returns [EObject current=null] : iv_rulecompositeLit= rulecompositeLit EOF ;
    public final EObject entryRulecompositeLit() throws RecognitionException {
        EObject current = null;

        EObject iv_rulecompositeLit = null;


        try {
            // InternalGo.g:6106:53: (iv_rulecompositeLit= rulecompositeLit EOF )
            // InternalGo.g:6107:2: iv_rulecompositeLit= rulecompositeLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompositeLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulecompositeLit=rulecompositeLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulecompositeLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulecompositeLit"


    // $ANTLR start "rulecompositeLit"
    // InternalGo.g:6113:1: rulecompositeLit returns [EObject current=null] : ( ( (lv_literalType_0_0= ruleliteralType ) ) ( (lv_literalValue_1_0= ruleliteralValue ) ) ) ;
    public final EObject rulecompositeLit() throws RecognitionException {
        EObject current = null;

        EObject lv_literalType_0_0 = null;

        EObject lv_literalValue_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6119:2: ( ( ( (lv_literalType_0_0= ruleliteralType ) ) ( (lv_literalValue_1_0= ruleliteralValue ) ) ) )
            // InternalGo.g:6120:2: ( ( (lv_literalType_0_0= ruleliteralType ) ) ( (lv_literalValue_1_0= ruleliteralValue ) ) )
            {
            // InternalGo.g:6120:2: ( ( (lv_literalType_0_0= ruleliteralType ) ) ( (lv_literalValue_1_0= ruleliteralValue ) ) )
            // InternalGo.g:6121:3: ( (lv_literalType_0_0= ruleliteralType ) ) ( (lv_literalValue_1_0= ruleliteralValue ) )
            {
            // InternalGo.g:6121:3: ( (lv_literalType_0_0= ruleliteralType ) )
            // InternalGo.g:6122:4: (lv_literalType_0_0= ruleliteralType )
            {
            // InternalGo.g:6122:4: (lv_literalType_0_0= ruleliteralType )
            // InternalGo.g:6123:5: lv_literalType_0_0= ruleliteralType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteralTypeLiteralTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_literalType_0_0=ruleliteralType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompositeLitRule());
              					}
              					set(
              						current,
              						"literalType",
              						lv_literalType_0_0,
              						"org.xtext.Go.literalType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:6140:3: ( (lv_literalValue_1_0= ruleliteralValue ) )
            // InternalGo.g:6141:4: (lv_literalValue_1_0= ruleliteralValue )
            {
            // InternalGo.g:6141:4: (lv_literalValue_1_0= ruleliteralValue )
            // InternalGo.g:6142:5: lv_literalValue_1_0= ruleliteralValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompositeLitAccess().getLiteralValueLiteralValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_literalValue_1_0=ruleliteralValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompositeLitRule());
              					}
              					set(
              						current,
              						"literalValue",
              						lv_literalValue_1_0,
              						"org.xtext.Go.literalValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulecompositeLit"


    // $ANTLR start "entryRuleliteralType"
    // InternalGo.g:6163:1: entryRuleliteralType returns [EObject current=null] : iv_ruleliteralType= ruleliteralType EOF ;
    public final EObject entryRuleliteralType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleliteralType = null;


        try {
            // InternalGo.g:6163:52: (iv_ruleliteralType= ruleliteralType EOF )
            // InternalGo.g:6164:2: iv_ruleliteralType= ruleliteralType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleliteralType=ruleliteralType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleliteralType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleliteralType"


    // $ANTLR start "ruleliteralType"
    // InternalGo.g:6170:1: ruleliteralType returns [EObject current=null] : ( ( (lv_type_0_0= rulestructType ) ) | ( (lv_type_1_0= rulearrayType ) ) | (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) ) ) | ( (lv_type_6_0= rulesliceType ) ) | ( (lv_type_7_0= rulemapType ) ) | ( (lv_type_8_0= ruletypeName ) ) ) ;
    public final EObject ruleliteralType() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_type_0_0 = null;

        EObject lv_type_1_0 = null;

        EObject lv_type_5_0 = null;

        EObject lv_type_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_type_8_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6176:2: ( ( ( (lv_type_0_0= rulestructType ) ) | ( (lv_type_1_0= rulearrayType ) ) | (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) ) ) | ( (lv_type_6_0= rulesliceType ) ) | ( (lv_type_7_0= rulemapType ) ) | ( (lv_type_8_0= ruletypeName ) ) ) )
            // InternalGo.g:6177:2: ( ( (lv_type_0_0= rulestructType ) ) | ( (lv_type_1_0= rulearrayType ) ) | (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) ) ) | ( (lv_type_6_0= rulesliceType ) ) | ( (lv_type_7_0= rulemapType ) ) | ( (lv_type_8_0= ruletypeName ) ) )
            {
            // InternalGo.g:6177:2: ( ( (lv_type_0_0= rulestructType ) ) | ( (lv_type_1_0= rulearrayType ) ) | (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) ) ) | ( (lv_type_6_0= rulesliceType ) ) | ( (lv_type_7_0= rulemapType ) ) | ( (lv_type_8_0= ruletypeName ) ) )
            int alt72=6;
            switch ( input.LA(1) ) {
            case 101:
                {
                alt72=1;
                }
                break;
            case 95:
                {
                int LA72_2 = input.LA(2);

                if ( (synpred121_InternalGo()) ) {
                    alt72=2;
                }
                else if ( (synpred122_InternalGo()) ) {
                    alt72=3;
                }
                else if ( (synpred123_InternalGo()) ) {
                    alt72=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 2, input);

                    throw nvae;
                }
                }
                break;
            case 98:
                {
                alt72=5;
                }
                break;
            case RULE_IDENTIFIER:
                {
                alt72=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;
            }

            switch (alt72) {
                case 1 :
                    // InternalGo.g:6178:3: ( (lv_type_0_0= rulestructType ) )
                    {
                    // InternalGo.g:6178:3: ( (lv_type_0_0= rulestructType ) )
                    // InternalGo.g:6179:4: (lv_type_0_0= rulestructType )
                    {
                    // InternalGo.g:6179:4: (lv_type_0_0= rulestructType )
                    // InternalGo.g:6180:5: lv_type_0_0= rulestructType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeStructTypeParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_0_0=rulestructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_0_0,
                      						"org.xtext.Go.structType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6198:3: ( (lv_type_1_0= rulearrayType ) )
                    {
                    // InternalGo.g:6198:3: ( (lv_type_1_0= rulearrayType ) )
                    // InternalGo.g:6199:4: (lv_type_1_0= rulearrayType )
                    {
                    // InternalGo.g:6199:4: (lv_type_1_0= rulearrayType )
                    // InternalGo.g:6200:5: lv_type_1_0= rulearrayType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeArrayTypeParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_1_0=rulearrayType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_1_0,
                      						"org.xtext.Go.arrayType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6218:3: (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) ) )
                    {
                    // InternalGo.g:6218:3: (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) ) )
                    // InternalGo.g:6219:4: otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) )
                    {
                    otherlv_2=(Token)match(input,95,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_2_0());
                      			
                    }
                    otherlv_3=(Token)match(input,100,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getLiteralTypeAccess().getFullStopFullStopFullStopKeyword_2_1());
                      			
                    }
                    otherlv_4=(Token)match(input,96,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getLiteralTypeAccess().getRightSquareBracketKeyword_2_2());
                      			
                    }
                    // InternalGo.g:6231:4: ( (lv_type_5_0= ruleelementType ) )
                    // InternalGo.g:6232:5: (lv_type_5_0= ruleelementType )
                    {
                    // InternalGo.g:6232:5: (lv_type_5_0= ruleelementType )
                    // InternalGo.g:6233:6: lv_type_5_0= ruleelementType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeElementTypeParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_5_0=ruleelementType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_5_0,
                      							"org.xtext.Go.elementType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:6252:3: ( (lv_type_6_0= rulesliceType ) )
                    {
                    // InternalGo.g:6252:3: ( (lv_type_6_0= rulesliceType ) )
                    // InternalGo.g:6253:4: (lv_type_6_0= rulesliceType )
                    {
                    // InternalGo.g:6253:4: (lv_type_6_0= rulesliceType )
                    // InternalGo.g:6254:5: lv_type_6_0= rulesliceType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeSliceTypeParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_6_0=rulesliceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_6_0,
                      						"org.xtext.Go.sliceType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:6272:3: ( (lv_type_7_0= rulemapType ) )
                    {
                    // InternalGo.g:6272:3: ( (lv_type_7_0= rulemapType ) )
                    // InternalGo.g:6273:4: (lv_type_7_0= rulemapType )
                    {
                    // InternalGo.g:6273:4: (lv_type_7_0= rulemapType )
                    // InternalGo.g:6274:5: lv_type_7_0= rulemapType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeMapTypeParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_7_0=rulemapType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_7_0,
                      						"org.xtext.Go.mapType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:6292:3: ( (lv_type_8_0= ruletypeName ) )
                    {
                    // InternalGo.g:6292:3: ( (lv_type_8_0= ruletypeName ) )
                    // InternalGo.g:6293:4: (lv_type_8_0= ruletypeName )
                    {
                    // InternalGo.g:6293:4: (lv_type_8_0= ruletypeName )
                    // InternalGo.g:6294:5: lv_type_8_0= ruletypeName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeTypeNameParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_8_0=ruletypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralTypeRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_8_0,
                      						"org.xtext.Go.typeName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleliteralType"


    // $ANTLR start "entryRuleliteralValue"
    // InternalGo.g:6315:1: entryRuleliteralValue returns [EObject current=null] : iv_ruleliteralValue= ruleliteralValue EOF ;
    public final EObject entryRuleliteralValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleliteralValue = null;


        try {
            // InternalGo.g:6315:53: (iv_ruleliteralValue= ruleliteralValue EOF )
            // InternalGo.g:6316:2: iv_ruleliteralValue= ruleliteralValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleliteralValue=ruleliteralValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleliteralValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleliteralValue"


    // $ANTLR start "ruleliteralValue"
    // InternalGo.g:6322:1: ruleliteralValue returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_elementList_2_0= ruleelementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' ) ;
    public final EObject ruleliteralValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_elementList_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6328:2: ( ( () otherlv_1= '{' ( ( (lv_elementList_2_0= ruleelementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' ) )
            // InternalGo.g:6329:2: ( () otherlv_1= '{' ( ( (lv_elementList_2_0= ruleelementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' )
            {
            // InternalGo.g:6329:2: ( () otherlv_1= '{' ( ( (lv_elementList_2_0= ruleelementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}' )
            // InternalGo.g:6330:3: () otherlv_1= '{' ( ( (lv_elementList_2_0= ruleelementList ) ) (otherlv_3= ',' )? )? otherlv_4= '}'
            {
            // InternalGo.g:6330:3: ()
            // InternalGo.g:6331:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLiteralValueAccess().getLiteralValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,54,FOLLOW_65); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalGo.g:6344:3: ( ( (lv_elementList_2_0= ruleelementList ) ) (otherlv_3= ',' )? )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( ((LA74_0>=RULE_IDENTIFIER && LA74_0<=RULE_STRING_LIT)||(LA74_0>=RULE_INT_LIT && LA74_0<=RULE_BINARY_OP)||LA74_0==45||LA74_0==47||LA74_0==50||LA74_0==52||LA74_0==54||LA74_0==56||(LA74_0>=59 && LA74_0<=60)||(LA74_0>=62 && LA74_0<=63)||LA74_0==68||LA74_0==71||LA74_0==95||(LA74_0>=97 && LA74_0<=99)||(LA74_0>=101 && LA74_0<=102)) ) {
                alt74=1;
            }
            else if ( (LA74_0==55) ) {
                int LA74_2 = input.LA(2);

                if ( (synpred126_InternalGo()) ) {
                    alt74=1;
                }
            }
            switch (alt74) {
                case 1 :
                    // InternalGo.g:6345:4: ( (lv_elementList_2_0= ruleelementList ) ) (otherlv_3= ',' )?
                    {
                    // InternalGo.g:6345:4: ( (lv_elementList_2_0= ruleelementList ) )
                    // InternalGo.g:6346:5: (lv_elementList_2_0= ruleelementList )
                    {
                    // InternalGo.g:6346:5: (lv_elementList_2_0= ruleelementList )
                    // InternalGo.g:6347:6: lv_elementList_2_0= ruleelementList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralValueAccess().getElementListElementListParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_66);
                    lv_elementList_2_0=ruleelementList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralValueRule());
                      						}
                      						set(
                      							current,
                      							"elementList",
                      							lv_elementList_2_0,
                      							"org.xtext.Go.elementList");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:6364:4: (otherlv_3= ',' )?
                    int alt73=2;
                    int LA73_0 = input.LA(1);

                    if ( (LA73_0==50) ) {
                        alt73=1;
                    }
                    switch (alt73) {
                        case 1 :
                            // InternalGo.g:6365:5: otherlv_3= ','
                            {
                            otherlv_3=(Token)match(input,50,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getLiteralValueAccess().getCommaKeyword_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleliteralValue"


    // $ANTLR start "entryRuleelementList"
    // InternalGo.g:6379:1: entryRuleelementList returns [EObject current=null] : iv_ruleelementList= ruleelementList EOF ;
    public final EObject entryRuleelementList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleelementList = null;


        try {
            // InternalGo.g:6379:52: (iv_ruleelementList= ruleelementList EOF )
            // InternalGo.g:6380:2: iv_ruleelementList= ruleelementList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleelementList=ruleelementList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleelementList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleelementList"


    // $ANTLR start "ruleelementList"
    // InternalGo.g:6386:1: ruleelementList returns [EObject current=null] : ( ( (lv_keyedElements_0_0= rulekeyedElement ) ) (otherlv_1= ',' ( (lv_keyedElements_2_0= rulekeyedElement ) ) )* ) ;
    public final EObject ruleelementList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_keyedElements_0_0 = null;

        EObject lv_keyedElements_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6392:2: ( ( ( (lv_keyedElements_0_0= rulekeyedElement ) ) (otherlv_1= ',' ( (lv_keyedElements_2_0= rulekeyedElement ) ) )* ) )
            // InternalGo.g:6393:2: ( ( (lv_keyedElements_0_0= rulekeyedElement ) ) (otherlv_1= ',' ( (lv_keyedElements_2_0= rulekeyedElement ) ) )* )
            {
            // InternalGo.g:6393:2: ( ( (lv_keyedElements_0_0= rulekeyedElement ) ) (otherlv_1= ',' ( (lv_keyedElements_2_0= rulekeyedElement ) ) )* )
            // InternalGo.g:6394:3: ( (lv_keyedElements_0_0= rulekeyedElement ) ) (otherlv_1= ',' ( (lv_keyedElements_2_0= rulekeyedElement ) ) )*
            {
            // InternalGo.g:6394:3: ( (lv_keyedElements_0_0= rulekeyedElement ) )
            // InternalGo.g:6395:4: (lv_keyedElements_0_0= rulekeyedElement )
            {
            // InternalGo.g:6395:4: (lv_keyedElements_0_0= rulekeyedElement )
            // InternalGo.g:6396:5: lv_keyedElements_0_0= rulekeyedElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementsKeyedElementParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_17);
            lv_keyedElements_0_0=rulekeyedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getElementListRule());
              					}
              					add(
              						current,
              						"keyedElements",
              						lv_keyedElements_0_0,
              						"org.xtext.Go.keyedElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:6413:3: (otherlv_1= ',' ( (lv_keyedElements_2_0= rulekeyedElement ) ) )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==50) ) {
                    int LA75_1 = input.LA(2);

                    if ( (synpred127_InternalGo()) ) {
                        alt75=1;
                    }


                }


                switch (alt75) {
            	case 1 :
            	    // InternalGo.g:6414:4: otherlv_1= ',' ( (lv_keyedElements_2_0= rulekeyedElement ) )
            	    {
            	    otherlv_1=(Token)match(input,50,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getElementListAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalGo.g:6418:4: ( (lv_keyedElements_2_0= rulekeyedElement ) )
            	    // InternalGo.g:6419:5: (lv_keyedElements_2_0= rulekeyedElement )
            	    {
            	    // InternalGo.g:6419:5: (lv_keyedElements_2_0= rulekeyedElement )
            	    // InternalGo.g:6420:6: lv_keyedElements_2_0= rulekeyedElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementsKeyedElementParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_17);
            	    lv_keyedElements_2_0=rulekeyedElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getElementListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"keyedElements",
            	      							lv_keyedElements_2_0,
            	      							"org.xtext.Go.keyedElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleelementList"


    // $ANTLR start "entryRulekeyedElement"
    // InternalGo.g:6442:1: entryRulekeyedElement returns [EObject current=null] : iv_rulekeyedElement= rulekeyedElement EOF ;
    public final EObject entryRulekeyedElement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulekeyedElement = null;


        try {
            // InternalGo.g:6442:53: (iv_rulekeyedElement= rulekeyedElement EOF )
            // InternalGo.g:6443:2: iv_rulekeyedElement= rulekeyedElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyedElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulekeyedElement=rulekeyedElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulekeyedElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulekeyedElement"


    // $ANTLR start "rulekeyedElement"
    // InternalGo.g:6449:1: rulekeyedElement returns [EObject current=null] : ( ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )? ( (lv_element_2_0= ruleelement ) ) ) ;
    public final EObject rulekeyedElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_key_0_0 = null;

        EObject lv_element_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6455:2: ( ( ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )? ( (lv_element_2_0= ruleelement ) ) ) )
            // InternalGo.g:6456:2: ( ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )? ( (lv_element_2_0= ruleelement ) ) )
            {
            // InternalGo.g:6456:2: ( ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )? ( (lv_element_2_0= ruleelement ) ) )
            // InternalGo.g:6457:3: ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )? ( (lv_element_2_0= ruleelement ) )
            {
            // InternalGo.g:6457:3: ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )?
            int alt76=2;
            alt76 = dfa76.predict(input);
            switch (alt76) {
                case 1 :
                    // InternalGo.g:6458:4: ( (lv_key_0_0= rulekey ) ) otherlv_1= ':'
                    {
                    // InternalGo.g:6458:4: ( (lv_key_0_0= rulekey ) )
                    // InternalGo.g:6459:5: (lv_key_0_0= rulekey )
                    {
                    // InternalGo.g:6459:5: (lv_key_0_0= rulekey )
                    // InternalGo.g:6460:6: lv_key_0_0= rulekey
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeyedElementAccess().getKeyKeyParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_30);
                    lv_key_0_0=rulekey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeyedElementRule());
                      						}
                      						set(
                      							current,
                      							"key",
                      							lv_key_0_0,
                      							"org.xtext.Go.key");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,71,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getKeyedElementAccess().getColonKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:6482:3: ( (lv_element_2_0= ruleelement ) )
            // InternalGo.g:6483:4: (lv_element_2_0= ruleelement )
            {
            // InternalGo.g:6483:4: (lv_element_2_0= ruleelement )
            // InternalGo.g:6484:5: lv_element_2_0= ruleelement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_element_2_0=ruleelement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyedElementRule());
              					}
              					set(
              						current,
              						"element",
              						lv_element_2_0,
              						"org.xtext.Go.element");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulekeyedElement"


    // $ANTLR start "entryRulekey"
    // InternalGo.g:6505:1: entryRulekey returns [EObject current=null] : iv_rulekey= rulekey EOF ;
    public final EObject entryRulekey() throws RecognitionException {
        EObject current = null;

        EObject iv_rulekey = null;


        try {
            // InternalGo.g:6505:44: (iv_rulekey= rulekey EOF )
            // InternalGo.g:6506:2: iv_rulekey= rulekey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulekey=rulekey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulekey; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulekey"


    // $ANTLR start "rulekey"
    // InternalGo.g:6512:1: rulekey returns [EObject current=null] : ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_lit_2_0= ruleliteralValue ) ) ) ;
    public final EObject rulekey() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_expr_1_0 = null;

        EObject lv_lit_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6518:2: ( ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_lit_2_0= ruleliteralValue ) ) ) )
            // InternalGo.g:6519:2: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_lit_2_0= ruleliteralValue ) ) )
            {
            // InternalGo.g:6519:2: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) | ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_lit_2_0= ruleliteralValue ) ) )
            int alt77=3;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                int LA77_1 = input.LA(2);

                if ( (synpred129_InternalGo()) ) {
                    alt77=1;
                }
                else if ( (synpred130_InternalGo()) ) {
                    alt77=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 77, 1, input);

                    throw nvae;
                }
                }
                break;
            case EOF:
            case RULE_STRING_LIT:
            case RULE_INT_LIT:
            case RULE_FLOAT_LIT:
            case RULE_IMAGINARY_LIT:
            case RULE_RUNE_LIT:
            case RULE_BINARY_OP:
            case 45:
            case 47:
            case 52:
            case 56:
            case 59:
            case 60:
            case 62:
            case 63:
            case 68:
            case 71:
            case 95:
            case 97:
            case 98:
            case 99:
            case 101:
            case 102:
                {
                alt77=2;
                }
                break;
            case 54:
                {
                alt77=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;
            }

            switch (alt77) {
                case 1 :
                    // InternalGo.g:6520:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
                    {
                    // InternalGo.g:6520:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
                    // InternalGo.g:6521:4: (lv_name_0_0= RULE_IDENTIFIER )
                    {
                    // InternalGo.g:6521:4: (lv_name_0_0= RULE_IDENTIFIER )
                    // InternalGo.g:6522:5: lv_name_0_0= RULE_IDENTIFIER
                    {
                    lv_name_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getKeyAccess().getNameIDENTIFIERTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getKeyRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.xtext.Go.IDENTIFIER");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6539:3: ( (lv_expr_1_0= ruleexpression ) )
                    {
                    // InternalGo.g:6539:3: ( (lv_expr_1_0= ruleexpression ) )
                    // InternalGo.g:6540:4: (lv_expr_1_0= ruleexpression )
                    {
                    // InternalGo.g:6540:4: (lv_expr_1_0= ruleexpression )
                    // InternalGo.g:6541:5: lv_expr_1_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getKeyAccess().getExprExpressionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_1_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getKeyRule());
                      					}
                      					set(
                      						current,
                      						"expr",
                      						lv_expr_1_0,
                      						"org.xtext.Go.expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6559:3: ( (lv_lit_2_0= ruleliteralValue ) )
                    {
                    // InternalGo.g:6559:3: ( (lv_lit_2_0= ruleliteralValue ) )
                    // InternalGo.g:6560:4: (lv_lit_2_0= ruleliteralValue )
                    {
                    // InternalGo.g:6560:4: (lv_lit_2_0= ruleliteralValue )
                    // InternalGo.g:6561:5: lv_lit_2_0= ruleliteralValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getKeyAccess().getLitLiteralValueParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_lit_2_0=ruleliteralValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getKeyRule());
                      					}
                      					set(
                      						current,
                      						"lit",
                      						lv_lit_2_0,
                      						"org.xtext.Go.literalValue");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulekey"


    // $ANTLR start "entryRuleelement"
    // InternalGo.g:6582:1: entryRuleelement returns [EObject current=null] : iv_ruleelement= ruleelement EOF ;
    public final EObject entryRuleelement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleelement = null;


        try {
            // InternalGo.g:6582:48: (iv_ruleelement= ruleelement EOF )
            // InternalGo.g:6583:2: iv_ruleelement= ruleelement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleelement=ruleelement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleelement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleelement"


    // $ANTLR start "ruleelement"
    // InternalGo.g:6589:1: ruleelement returns [EObject current=null] : ( ( (lv_content_0_0= ruleexpression ) ) | ( (lv_content_1_0= ruleliteralValue ) ) ) ;
    public final EObject ruleelement() throws RecognitionException {
        EObject current = null;

        EObject lv_content_0_0 = null;

        EObject lv_content_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6595:2: ( ( ( (lv_content_0_0= ruleexpression ) ) | ( (lv_content_1_0= ruleliteralValue ) ) ) )
            // InternalGo.g:6596:2: ( ( (lv_content_0_0= ruleexpression ) ) | ( (lv_content_1_0= ruleliteralValue ) ) )
            {
            // InternalGo.g:6596:2: ( ( (lv_content_0_0= ruleexpression ) ) | ( (lv_content_1_0= ruleliteralValue ) ) )
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==EOF||(LA78_0>=RULE_IDENTIFIER && LA78_0<=RULE_STRING_LIT)||(LA78_0>=RULE_INT_LIT && LA78_0<=RULE_BINARY_OP)||LA78_0==45||LA78_0==47||LA78_0==50||LA78_0==52||(LA78_0>=55 && LA78_0<=56)||(LA78_0>=59 && LA78_0<=60)||(LA78_0>=62 && LA78_0<=63)||LA78_0==68||LA78_0==95||(LA78_0>=97 && LA78_0<=99)||(LA78_0>=101 && LA78_0<=102)) ) {
                alt78=1;
            }
            else if ( (LA78_0==54) ) {
                alt78=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;
            }
            switch (alt78) {
                case 1 :
                    // InternalGo.g:6597:3: ( (lv_content_0_0= ruleexpression ) )
                    {
                    // InternalGo.g:6597:3: ( (lv_content_0_0= ruleexpression ) )
                    // InternalGo.g:6598:4: (lv_content_0_0= ruleexpression )
                    {
                    // InternalGo.g:6598:4: (lv_content_0_0= ruleexpression )
                    // InternalGo.g:6599:5: lv_content_0_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getElementAccess().getContentExpressionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_0_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getElementRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_0_0,
                      						"org.xtext.Go.expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6617:3: ( (lv_content_1_0= ruleliteralValue ) )
                    {
                    // InternalGo.g:6617:3: ( (lv_content_1_0= ruleliteralValue ) )
                    // InternalGo.g:6618:4: (lv_content_1_0= ruleliteralValue )
                    {
                    // InternalGo.g:6618:4: (lv_content_1_0= ruleliteralValue )
                    // InternalGo.g:6619:5: lv_content_1_0= ruleliteralValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getElementAccess().getContentLiteralValueParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_content_1_0=ruleliteralValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getElementRule());
                      					}
                      					set(
                      						current,
                      						"content",
                      						lv_content_1_0,
                      						"org.xtext.Go.literalValue");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleelement"


    // $ANTLR start "entryRulestructType"
    // InternalGo.g:6640:1: entryRulestructType returns [EObject current=null] : iv_rulestructType= rulestructType EOF ;
    public final EObject entryRulestructType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulestructType = null;


        try {
            // InternalGo.g:6640:51: (iv_rulestructType= rulestructType EOF )
            // InternalGo.g:6641:2: iv_rulestructType= rulestructType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulestructType=rulestructType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulestructType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulestructType"


    // $ANTLR start "rulestructType"
    // InternalGo.g:6647:1: rulestructType returns [EObject current=null] : ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fieldsDecl_3_0= rulefieldDecl ) ) ruleeos )* otherlv_5= '}' ) ;
    public final EObject rulestructType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_fieldsDecl_3_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6653:2: ( ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fieldsDecl_3_0= rulefieldDecl ) ) ruleeos )* otherlv_5= '}' ) )
            // InternalGo.g:6654:2: ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fieldsDecl_3_0= rulefieldDecl ) ) ruleeos )* otherlv_5= '}' )
            {
            // InternalGo.g:6654:2: ( () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fieldsDecl_3_0= rulefieldDecl ) ) ruleeos )* otherlv_5= '}' )
            // InternalGo.g:6655:3: () otherlv_1= 'struct' otherlv_2= '{' ( ( (lv_fieldsDecl_3_0= rulefieldDecl ) ) ruleeos )* otherlv_5= '}'
            {
            // InternalGo.g:6655:3: ()
            // InternalGo.g:6656:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStructTypeAccess().getStructTypeAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,101,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStructTypeAccess().getStructKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,54,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalGo.g:6673:3: ( ( (lv_fieldsDecl_3_0= rulefieldDecl ) ) ruleeos )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==RULE_IDENTIFIER||LA79_0==63) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalGo.g:6674:4: ( (lv_fieldsDecl_3_0= rulefieldDecl ) ) ruleeos
            	    {
            	    // InternalGo.g:6674:4: ( (lv_fieldsDecl_3_0= rulefieldDecl ) )
            	    // InternalGo.g:6675:5: (lv_fieldsDecl_3_0= rulefieldDecl )
            	    {
            	    // InternalGo.g:6675:5: (lv_fieldsDecl_3_0= rulefieldDecl )
            	    // InternalGo.g:6676:6: lv_fieldsDecl_3_0= rulefieldDecl
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStructTypeAccess().getFieldsDeclFieldDeclParserRuleCall_3_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_fieldsDecl_3_0=rulefieldDecl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStructTypeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"fieldsDecl",
            	      							lv_fieldsDecl_3_0,
            	      							"org.xtext.Go.fieldDecl");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      				/* */
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getStructTypeAccess().getEosParserRuleCall_3_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_67);
            	    ruleeos();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

            otherlv_5=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulestructType"


    // $ANTLR start "entryRulefieldDecl"
    // InternalGo.g:6712:1: entryRulefieldDecl returns [EObject current=null] : iv_rulefieldDecl= rulefieldDecl EOF ;
    public final EObject entryRulefieldDecl() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefieldDecl = null;


        try {
            // InternalGo.g:6712:50: (iv_rulefieldDecl= rulefieldDecl EOF )
            // InternalGo.g:6713:2: iv_rulefieldDecl= rulefieldDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFieldDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefieldDecl=rulefieldDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefieldDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefieldDecl"


    // $ANTLR start "rulefieldDecl"
    // InternalGo.g:6719:1: rulefieldDecl returns [EObject current=null] : ( ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) ) | ( (lv_anonymousField_2_0= ruleanonymousField ) ) ) (this_STRING_LIT_3= RULE_STRING_LIT )? ) ;
    public final EObject rulefieldDecl() throws RecognitionException {
        EObject current = null;

        Token this_STRING_LIT_3=null;
        EObject lv_identifierList_0_0 = null;

        EObject lv_type_1_0 = null;

        EObject lv_anonymousField_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6725:2: ( ( ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) ) | ( (lv_anonymousField_2_0= ruleanonymousField ) ) ) (this_STRING_LIT_3= RULE_STRING_LIT )? ) )
            // InternalGo.g:6726:2: ( ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) ) | ( (lv_anonymousField_2_0= ruleanonymousField ) ) ) (this_STRING_LIT_3= RULE_STRING_LIT )? )
            {
            // InternalGo.g:6726:2: ( ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) ) | ( (lv_anonymousField_2_0= ruleanonymousField ) ) ) (this_STRING_LIT_3= RULE_STRING_LIT )? )
            // InternalGo.g:6727:3: ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) ) | ( (lv_anonymousField_2_0= ruleanonymousField ) ) ) (this_STRING_LIT_3= RULE_STRING_LIT )?
            {
            // InternalGo.g:6727:3: ( ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) ) | ( (lv_anonymousField_2_0= ruleanonymousField ) ) )
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==RULE_IDENTIFIER) ) {
                int LA80_1 = input.LA(2);

                if ( (LA80_1==RULE_IDENTIFIER||LA80_1==45||LA80_1==50||LA80_1==52||LA80_1==56||LA80_1==63||LA80_1==95||(LA80_1>=97 && LA80_1<=99)||LA80_1==101) ) {
                    alt80=1;
                }
                else if ( (LA80_1==EOF||LA80_1==RULE_STRING_LIT||LA80_1==47||LA80_1==103) ) {
                    alt80=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA80_0==63) ) {
                alt80=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 80, 0, input);

                throw nvae;
            }
            switch (alt80) {
                case 1 :
                    // InternalGo.g:6728:4: ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) )
                    {
                    // InternalGo.g:6728:4: ( ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) ) )
                    // InternalGo.g:6729:5: ( (lv_identifierList_0_0= ruleidentifierList ) ) ( (lv_type_1_0= ruletype ) )
                    {
                    // InternalGo.g:6729:5: ( (lv_identifierList_0_0= ruleidentifierList ) )
                    // InternalGo.g:6730:6: (lv_identifierList_0_0= ruleidentifierList )
                    {
                    // InternalGo.g:6730:6: (lv_identifierList_0_0= ruleidentifierList )
                    // InternalGo.g:6731:7: lv_identifierList_0_0= ruleidentifierList
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFieldDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_18);
                    lv_identifierList_0_0=ruleidentifierList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      							}
                      							set(
                      								current,
                      								"identifierList",
                      								lv_identifierList_0_0,
                      								"org.xtext.Go.identifierList");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalGo.g:6748:5: ( (lv_type_1_0= ruletype ) )
                    // InternalGo.g:6749:6: (lv_type_1_0= ruletype )
                    {
                    // InternalGo.g:6749:6: (lv_type_1_0= ruletype )
                    // InternalGo.g:6750:7: lv_type_1_0= ruletype
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_68);
                    lv_type_1_0=ruletype();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_1_0,
                      								"org.xtext.Go.type");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6769:4: ( (lv_anonymousField_2_0= ruleanonymousField ) )
                    {
                    // InternalGo.g:6769:4: ( (lv_anonymousField_2_0= ruleanonymousField ) )
                    // InternalGo.g:6770:5: (lv_anonymousField_2_0= ruleanonymousField )
                    {
                    // InternalGo.g:6770:5: (lv_anonymousField_2_0= ruleanonymousField )
                    // InternalGo.g:6771:6: lv_anonymousField_2_0= ruleanonymousField
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFieldDeclAccess().getAnonymousFieldAnonymousFieldParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_68);
                    lv_anonymousField_2_0=ruleanonymousField();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFieldDeclRule());
                      						}
                      						set(
                      							current,
                      							"anonymousField",
                      							lv_anonymousField_2_0,
                      							"org.xtext.Go.anonymousField");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalGo.g:6789:3: (this_STRING_LIT_3= RULE_STRING_LIT )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==RULE_STRING_LIT) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalGo.g:6790:4: this_STRING_LIT_3= RULE_STRING_LIT
                    {
                    this_STRING_LIT_3=(Token)match(input,RULE_STRING_LIT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_STRING_LIT_3, grammarAccess.getFieldDeclAccess().getSTRING_LITTerminalRuleCall_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefieldDecl"


    // $ANTLR start "entryRuleanonymousField"
    // InternalGo.g:6799:1: entryRuleanonymousField returns [EObject current=null] : iv_ruleanonymousField= ruleanonymousField EOF ;
    public final EObject entryRuleanonymousField() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleanonymousField = null;


        try {
            // InternalGo.g:6799:55: (iv_ruleanonymousField= ruleanonymousField EOF )
            // InternalGo.g:6800:2: iv_ruleanonymousField= ruleanonymousField EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnonymousFieldRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleanonymousField=ruleanonymousField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleanonymousField; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleanonymousField"


    // $ANTLR start "ruleanonymousField"
    // InternalGo.g:6806:1: ruleanonymousField returns [EObject current=null] : ( (otherlv_0= '*' )? ( (lv_typeName_1_0= ruletypeName ) ) ) ;
    public final EObject ruleanonymousField() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeName_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6812:2: ( ( (otherlv_0= '*' )? ( (lv_typeName_1_0= ruletypeName ) ) ) )
            // InternalGo.g:6813:2: ( (otherlv_0= '*' )? ( (lv_typeName_1_0= ruletypeName ) ) )
            {
            // InternalGo.g:6813:2: ( (otherlv_0= '*' )? ( (lv_typeName_1_0= ruletypeName ) ) )
            // InternalGo.g:6814:3: (otherlv_0= '*' )? ( (lv_typeName_1_0= ruletypeName ) )
            {
            // InternalGo.g:6814:3: (otherlv_0= '*' )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==63) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalGo.g:6815:4: otherlv_0= '*'
                    {
                    otherlv_0=(Token)match(input,63,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getAnonymousFieldAccess().getAsteriskKeyword_0());
                      			
                    }

                    }
                    break;

            }

            // InternalGo.g:6820:3: ( (lv_typeName_1_0= ruletypeName ) )
            // InternalGo.g:6821:4: (lv_typeName_1_0= ruletypeName )
            {
            // InternalGo.g:6821:4: (lv_typeName_1_0= ruletypeName )
            // InternalGo.g:6822:5: lv_typeName_1_0= ruletypeName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnonymousFieldAccess().getTypeNameTypeNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeName_1_0=ruletypeName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnonymousFieldRule());
              					}
              					set(
              						current,
              						"typeName",
              						lv_typeName_1_0,
              						"org.xtext.Go.typeName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleanonymousField"


    // $ANTLR start "entryRulefunctionLit"
    // InternalGo.g:6843:1: entryRulefunctionLit returns [EObject current=null] : iv_rulefunctionLit= rulefunctionLit EOF ;
    public final EObject entryRulefunctionLit() throws RecognitionException {
        EObject current = null;

        EObject iv_rulefunctionLit = null;


        try {
            // InternalGo.g:6843:52: (iv_rulefunctionLit= rulefunctionLit EOF )
            // InternalGo.g:6844:2: iv_rulefunctionLit= rulefunctionLit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionLitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulefunctionLit=rulefunctionLit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulefunctionLit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulefunctionLit"


    // $ANTLR start "rulefunctionLit"
    // InternalGo.g:6850:1: rulefunctionLit returns [EObject current=null] : (otherlv_0= 'func' ( (lv_function_1_0= rulefunction ) ) ) ;
    public final EObject rulefunctionLit() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_function_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6856:2: ( (otherlv_0= 'func' ( (lv_function_1_0= rulefunction ) ) ) )
            // InternalGo.g:6857:2: (otherlv_0= 'func' ( (lv_function_1_0= rulefunction ) ) )
            {
            // InternalGo.g:6857:2: (otherlv_0= 'func' ( (lv_function_1_0= rulefunction ) ) )
            // InternalGo.g:6858:3: otherlv_0= 'func' ( (lv_function_1_0= rulefunction ) )
            {
            otherlv_0=(Token)match(input,52,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionLitAccess().getFuncKeyword_0());
              		
            }
            // InternalGo.g:6862:3: ( (lv_function_1_0= rulefunction ) )
            // InternalGo.g:6863:4: (lv_function_1_0= rulefunction )
            {
            // InternalGo.g:6863:4: (lv_function_1_0= rulefunction )
            // InternalGo.g:6864:5: lv_function_1_0= rulefunction
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionLitAccess().getFunctionFunctionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_function_1_0=rulefunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionLitRule());
              					}
              					set(
              						current,
              						"function",
              						lv_function_1_0,
              						"org.xtext.Go.function");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulefunctionLit"


    // $ANTLR start "entryRuleprimaryExpr"
    // InternalGo.g:6885:1: entryRuleprimaryExpr returns [EObject current=null] : iv_ruleprimaryExpr= ruleprimaryExpr EOF ;
    public final EObject entryRuleprimaryExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExpr = null;


        try {
            // InternalGo.g:6885:52: (iv_ruleprimaryExpr= ruleprimaryExpr EOF )
            // InternalGo.g:6886:2: iv_ruleprimaryExpr= ruleprimaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExpr=ruleprimaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExpr"


    // $ANTLR start "ruleprimaryExpr"
    // InternalGo.g:6892:1: ruleprimaryExpr returns [EObject current=null] : ( ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) ) | ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) ) | ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) ) | ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) ) | ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) ) | ( (lv_primaryExprArguments_6_0= ruleprimaryExprArguments ) ) ) ;
    public final EObject ruleprimaryExpr() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_0_0 = null;

        EObject lv_conversion_1_0 = null;

        EObject lv_primaryExprSelector_2_0 = null;

        EObject lv_primaryExprIndex_3_0 = null;

        EObject lv_primaryExprSlice_4_0 = null;

        EObject lv_primaryExprTypeAssertion_5_0 = null;

        EObject lv_primaryExprArguments_6_0 = null;



        	enterRule();

        try {
            // InternalGo.g:6898:2: ( ( ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) ) | ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) ) | ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) ) | ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) ) | ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) ) | ( (lv_primaryExprArguments_6_0= ruleprimaryExprArguments ) ) ) )
            // InternalGo.g:6899:2: ( ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) ) | ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) ) | ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) ) | ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) ) | ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) ) | ( (lv_primaryExprArguments_6_0= ruleprimaryExprArguments ) ) )
            {
            // InternalGo.g:6899:2: ( ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) ) | ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) ) | ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) ) | ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) ) | ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) ) | ( (lv_primaryExprArguments_6_0= ruleprimaryExprArguments ) ) )
            int alt84=6;
            alt84 = dfa84.predict(input);
            switch (alt84) {
                case 1 :
                    // InternalGo.g:6900:3: ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) )
                    {
                    // InternalGo.g:6900:3: ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) )
                    int alt83=2;
                    alt83 = dfa83.predict(input);
                    switch (alt83) {
                        case 1 :
                            // InternalGo.g:6901:4: ( (lv_operand_0_0= ruleoperand ) )
                            {
                            // InternalGo.g:6901:4: ( (lv_operand_0_0= ruleoperand ) )
                            // InternalGo.g:6902:5: (lv_operand_0_0= ruleoperand )
                            {
                            // InternalGo.g:6902:5: (lv_operand_0_0= ruleoperand )
                            // InternalGo.g:6903:6: lv_operand_0_0= ruleoperand
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExprAccess().getOperandOperandParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_operand_0_0=ruleoperand();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                              						}
                              						set(
                              							current,
                              							"operand",
                              							lv_operand_0_0,
                              							"org.xtext.Go.operand");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:6921:4: ( (lv_conversion_1_0= ruleconversion ) )
                            {
                            // InternalGo.g:6921:4: ( (lv_conversion_1_0= ruleconversion ) )
                            // InternalGo.g:6922:5: (lv_conversion_1_0= ruleconversion )
                            {
                            // InternalGo.g:6922:5: (lv_conversion_1_0= ruleconversion )
                            // InternalGo.g:6923:6: lv_conversion_1_0= ruleconversion
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExprAccess().getConversionConversionParserRuleCall_0_1_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_conversion_1_0=ruleconversion();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                              						}
                              						set(
                              							current,
                              							"conversion",
                              							lv_conversion_1_0,
                              							"org.xtext.Go.conversion");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:6942:3: ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) )
                    {
                    // InternalGo.g:6942:3: ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) )
                    // InternalGo.g:6943:4: (lv_primaryExprSelector_2_0= ruleprimaryExprSelector )
                    {
                    // InternalGo.g:6943:4: (lv_primaryExprSelector_2_0= ruleprimaryExprSelector )
                    // InternalGo.g:6944:5: lv_primaryExprSelector_2_0= ruleprimaryExprSelector
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprSelectorPrimaryExprSelectorParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprSelector_2_0=ruleprimaryExprSelector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprSelector",
                      						lv_primaryExprSelector_2_0,
                      						"org.xtext.Go.primaryExprSelector");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:6962:3: ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) )
                    {
                    // InternalGo.g:6962:3: ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) )
                    // InternalGo.g:6963:4: (lv_primaryExprIndex_3_0= ruleprimaryExprIndex )
                    {
                    // InternalGo.g:6963:4: (lv_primaryExprIndex_3_0= ruleprimaryExprIndex )
                    // InternalGo.g:6964:5: lv_primaryExprIndex_3_0= ruleprimaryExprIndex
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprIndexPrimaryExprIndexParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprIndex_3_0=ruleprimaryExprIndex();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprIndex",
                      						lv_primaryExprIndex_3_0,
                      						"org.xtext.Go.primaryExprIndex");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:6982:3: ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) )
                    {
                    // InternalGo.g:6982:3: ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) )
                    // InternalGo.g:6983:4: (lv_primaryExprSlice_4_0= ruleprimaryExprSlice )
                    {
                    // InternalGo.g:6983:4: (lv_primaryExprSlice_4_0= ruleprimaryExprSlice )
                    // InternalGo.g:6984:5: lv_primaryExprSlice_4_0= ruleprimaryExprSlice
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprSlicePrimaryExprSliceParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprSlice_4_0=ruleprimaryExprSlice();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprSlice",
                      						lv_primaryExprSlice_4_0,
                      						"org.xtext.Go.primaryExprSlice");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:7002:3: ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) )
                    {
                    // InternalGo.g:7002:3: ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) )
                    // InternalGo.g:7003:4: (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion )
                    {
                    // InternalGo.g:7003:4: (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion )
                    // InternalGo.g:7004:5: lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprTypeAssertionPrimaryExprTypeAssertionParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprTypeAssertion_5_0=ruleprimaryExprTypeAssertion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprTypeAssertion",
                      						lv_primaryExprTypeAssertion_5_0,
                      						"org.xtext.Go.primaryExprTypeAssertion");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:7022:3: ( (lv_primaryExprArguments_6_0= ruleprimaryExprArguments ) )
                    {
                    // InternalGo.g:7022:3: ( (lv_primaryExprArguments_6_0= ruleprimaryExprArguments ) )
                    // InternalGo.g:7023:4: (lv_primaryExprArguments_6_0= ruleprimaryExprArguments )
                    {
                    // InternalGo.g:7023:4: (lv_primaryExprArguments_6_0= ruleprimaryExprArguments )
                    // InternalGo.g:7024:5: lv_primaryExprArguments_6_0= ruleprimaryExprArguments
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprArgumentsPrimaryExprArgumentsParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprArguments_6_0=ruleprimaryExprArguments();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprRule());
                      					}
                      					set(
                      						current,
                      						"primaryExprArguments",
                      						lv_primaryExprArguments_6_0,
                      						"org.xtext.Go.primaryExprArguments");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExpr"


    // $ANTLR start "entryRuleprimaryExprStuff"
    // InternalGo.g:7045:1: entryRuleprimaryExprStuff returns [EObject current=null] : iv_ruleprimaryExprStuff= ruleprimaryExprStuff EOF ;
    public final EObject entryRuleprimaryExprStuff() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExprStuff = null;


        try {
            // InternalGo.g:7045:57: (iv_ruleprimaryExprStuff= ruleprimaryExprStuff EOF )
            // InternalGo.g:7046:2: iv_ruleprimaryExprStuff= ruleprimaryExprStuff EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprStuffRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExprStuff=ruleprimaryExprStuff();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExprStuff; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExprStuff"


    // $ANTLR start "ruleprimaryExprStuff"
    // InternalGo.g:7052:1: ruleprimaryExprStuff returns [EObject current=null] : ( ( (lv_selector_0_0= ruleselector ) ) | ( (lv_index_1_0= ruleindex ) ) | ( (lv_slice_2_0= ruleslice ) ) | ( (lv_typeAssertion_3_0= ruletypeAssertion ) ) | ( (lv_arguments_4_0= rulearguments ) ) ) ;
    public final EObject ruleprimaryExprStuff() throws RecognitionException {
        EObject current = null;

        EObject lv_selector_0_0 = null;

        EObject lv_index_1_0 = null;

        EObject lv_slice_2_0 = null;

        EObject lv_typeAssertion_3_0 = null;

        EObject lv_arguments_4_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7058:2: ( ( ( (lv_selector_0_0= ruleselector ) ) | ( (lv_index_1_0= ruleindex ) ) | ( (lv_slice_2_0= ruleslice ) ) | ( (lv_typeAssertion_3_0= ruletypeAssertion ) ) | ( (lv_arguments_4_0= rulearguments ) ) ) )
            // InternalGo.g:7059:2: ( ( (lv_selector_0_0= ruleselector ) ) | ( (lv_index_1_0= ruleindex ) ) | ( (lv_slice_2_0= ruleslice ) ) | ( (lv_typeAssertion_3_0= ruletypeAssertion ) ) | ( (lv_arguments_4_0= rulearguments ) ) )
            {
            // InternalGo.g:7059:2: ( ( (lv_selector_0_0= ruleselector ) ) | ( (lv_index_1_0= ruleindex ) ) | ( (lv_slice_2_0= ruleslice ) ) | ( (lv_typeAssertion_3_0= ruletypeAssertion ) ) | ( (lv_arguments_4_0= rulearguments ) ) )
            int alt85=5;
            switch ( input.LA(1) ) {
            case 47:
                {
                int LA85_1 = input.LA(2);

                if ( (synpred142_InternalGo()) ) {
                    alt85=1;
                }
                else if ( (synpred145_InternalGo()) ) {
                    alt85=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 85, 1, input);

                    throw nvae;
                }
                }
                break;
            case 95:
                {
                int LA85_2 = input.LA(2);

                if ( (synpred143_InternalGo()) ) {
                    alt85=2;
                }
                else if ( (synpred144_InternalGo()) ) {
                    alt85=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 85, 2, input);

                    throw nvae;
                }
                }
                break;
            case 45:
                {
                alt85=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }

            switch (alt85) {
                case 1 :
                    // InternalGo.g:7060:3: ( (lv_selector_0_0= ruleselector ) )
                    {
                    // InternalGo.g:7060:3: ( (lv_selector_0_0= ruleselector ) )
                    // InternalGo.g:7061:4: (lv_selector_0_0= ruleselector )
                    {
                    // InternalGo.g:7061:4: (lv_selector_0_0= ruleselector )
                    // InternalGo.g:7062:5: lv_selector_0_0= ruleselector
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getSelectorSelectorParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_selector_0_0=ruleselector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprStuffRule());
                      					}
                      					set(
                      						current,
                      						"selector",
                      						lv_selector_0_0,
                      						"org.xtext.Go.selector");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7080:3: ( (lv_index_1_0= ruleindex ) )
                    {
                    // InternalGo.g:7080:3: ( (lv_index_1_0= ruleindex ) )
                    // InternalGo.g:7081:4: (lv_index_1_0= ruleindex )
                    {
                    // InternalGo.g:7081:4: (lv_index_1_0= ruleindex )
                    // InternalGo.g:7082:5: lv_index_1_0= ruleindex
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getIndexIndexParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_index_1_0=ruleindex();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprStuffRule());
                      					}
                      					set(
                      						current,
                      						"index",
                      						lv_index_1_0,
                      						"org.xtext.Go.index");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:7100:3: ( (lv_slice_2_0= ruleslice ) )
                    {
                    // InternalGo.g:7100:3: ( (lv_slice_2_0= ruleslice ) )
                    // InternalGo.g:7101:4: (lv_slice_2_0= ruleslice )
                    {
                    // InternalGo.g:7101:4: (lv_slice_2_0= ruleslice )
                    // InternalGo.g:7102:5: lv_slice_2_0= ruleslice
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getSliceSliceParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_slice_2_0=ruleslice();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprStuffRule());
                      					}
                      					set(
                      						current,
                      						"slice",
                      						lv_slice_2_0,
                      						"org.xtext.Go.slice");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:7120:3: ( (lv_typeAssertion_3_0= ruletypeAssertion ) )
                    {
                    // InternalGo.g:7120:3: ( (lv_typeAssertion_3_0= ruletypeAssertion ) )
                    // InternalGo.g:7121:4: (lv_typeAssertion_3_0= ruletypeAssertion )
                    {
                    // InternalGo.g:7121:4: (lv_typeAssertion_3_0= ruletypeAssertion )
                    // InternalGo.g:7122:5: lv_typeAssertion_3_0= ruletypeAssertion
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getTypeAssertionTypeAssertionParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeAssertion_3_0=ruletypeAssertion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprStuffRule());
                      					}
                      					set(
                      						current,
                      						"typeAssertion",
                      						lv_typeAssertion_3_0,
                      						"org.xtext.Go.typeAssertion");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:7140:3: ( (lv_arguments_4_0= rulearguments ) )
                    {
                    // InternalGo.g:7140:3: ( (lv_arguments_4_0= rulearguments ) )
                    // InternalGo.g:7141:4: (lv_arguments_4_0= rulearguments )
                    {
                    // InternalGo.g:7141:4: (lv_arguments_4_0= rulearguments )
                    // InternalGo.g:7142:5: lv_arguments_4_0= rulearguments
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getArgumentsArgumentsParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arguments_4_0=rulearguments();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getPrimaryExprStuffRule());
                      					}
                      					set(
                      						current,
                      						"arguments",
                      						lv_arguments_4_0,
                      						"org.xtext.Go.arguments");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExprStuff"


    // $ANTLR start "entryRuleprimaryExprSelector"
    // InternalGo.g:7163:1: entryRuleprimaryExprSelector returns [EObject current=null] : iv_ruleprimaryExprSelector= ruleprimaryExprSelector EOF ;
    public final EObject entryRuleprimaryExprSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExprSelector = null;


        try {
            // InternalGo.g:7163:60: (iv_ruleprimaryExprSelector= ruleprimaryExprSelector EOF )
            // InternalGo.g:7164:2: iv_ruleprimaryExprSelector= ruleprimaryExprSelector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprSelectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExprSelector=ruleprimaryExprSelector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExprSelector; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExprSelector"


    // $ANTLR start "ruleprimaryExprSelector"
    // InternalGo.g:7170:1: ruleprimaryExprSelector returns [EObject current=null] : ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) ) )? ) ;
    public final EObject ruleprimaryExprSelector() throws RecognitionException {
        EObject current = null;

        EObject lv_content_1_0 = null;

        EObject lv_primaryExprSelector_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7176:2: ( ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) ) )? ) )
            // InternalGo.g:7177:2: ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) ) )? )
            {
            // InternalGo.g:7177:2: ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) ) )? )
            // InternalGo.g:7178:3: () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) ) )?
            {
            // InternalGo.g:7178:3: ()
            // InternalGo.g:7179:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprSelectorAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:7188:3: ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) ) )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==47) ) {
                int LA86_1 = input.LA(2);

                if ( (LA86_1==45) ) {
                    int LA86_4 = input.LA(3);

                    if ( (LA86_4==RULE_IDENTIFIER||LA86_4==45||LA86_4==52||LA86_4==56||LA86_4==63||LA86_4==95||(LA86_4>=97 && LA86_4<=99)||LA86_4==101) ) {
                        alt86=1;
                    }
                }
                else if ( (LA86_1==RULE_IDENTIFIER) ) {
                    alt86=1;
                }
            }
            else if ( (LA86_0==45||LA86_0==95) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalGo.g:7189:4: ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) )
                    {
                    // InternalGo.g:7189:4: ( (lv_content_1_0= ruleprimaryExprStuff ) )
                    // InternalGo.g:7190:5: (lv_content_1_0= ruleprimaryExprStuff )
                    {
                    // InternalGo.g:7190:5: (lv_content_1_0= ruleprimaryExprStuff )
                    // InternalGo.g:7191:6: lv_content_1_0= ruleprimaryExprStuff
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprSelectorAccess().getContentPrimaryExprStuffParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_69);
                    lv_content_1_0=ruleprimaryExprStuff();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprSelectorRule());
                      						}
                      						set(
                      							current,
                      							"content",
                      							lv_content_1_0,
                      							"org.xtext.Go.primaryExprStuff");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:7208:4: ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) )
                    // InternalGo.g:7209:5: (lv_primaryExprSelector_2_0= ruleprimaryExprSelector )
                    {
                    // InternalGo.g:7209:5: (lv_primaryExprSelector_2_0= ruleprimaryExprSelector )
                    // InternalGo.g:7210:6: lv_primaryExprSelector_2_0= ruleprimaryExprSelector
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprSelectorPrimaryExprSelectorParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprSelector_2_0=ruleprimaryExprSelector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprSelectorRule());
                      						}
                      						set(
                      							current,
                      							"primaryExprSelector",
                      							lv_primaryExprSelector_2_0,
                      							"org.xtext.Go.primaryExprSelector");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExprSelector"


    // $ANTLR start "entryRuleprimaryExprIndex"
    // InternalGo.g:7232:1: entryRuleprimaryExprIndex returns [EObject current=null] : iv_ruleprimaryExprIndex= ruleprimaryExprIndex EOF ;
    public final EObject entryRuleprimaryExprIndex() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExprIndex = null;


        try {
            // InternalGo.g:7232:57: (iv_ruleprimaryExprIndex= ruleprimaryExprIndex EOF )
            // InternalGo.g:7233:2: iv_ruleprimaryExprIndex= ruleprimaryExprIndex EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprIndexRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExprIndex=ruleprimaryExprIndex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExprIndex; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExprIndex"


    // $ANTLR start "ruleprimaryExprIndex"
    // InternalGo.g:7239:1: ruleprimaryExprIndex returns [EObject current=null] : ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprIndex_2_0= ruleprimaryExprIndex ) ) )? ) ;
    public final EObject ruleprimaryExprIndex() throws RecognitionException {
        EObject current = null;

        EObject lv_content_1_0 = null;

        EObject lv_primaryExprIndex_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7245:2: ( ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprIndex_2_0= ruleprimaryExprIndex ) ) )? ) )
            // InternalGo.g:7246:2: ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprIndex_2_0= ruleprimaryExprIndex ) ) )? )
            {
            // InternalGo.g:7246:2: ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprIndex_2_0= ruleprimaryExprIndex ) ) )? )
            // InternalGo.g:7247:3: () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprIndex_2_0= ruleprimaryExprIndex ) ) )?
            {
            // InternalGo.g:7247:3: ()
            // InternalGo.g:7248:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprIndexAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:7257:3: ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprIndex_2_0= ruleprimaryExprIndex ) ) )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==47) ) {
                int LA87_1 = input.LA(2);

                if ( (LA87_1==45) ) {
                    int LA87_4 = input.LA(3);

                    if ( (LA87_4==RULE_IDENTIFIER||LA87_4==45||LA87_4==52||LA87_4==56||LA87_4==63||LA87_4==95||(LA87_4>=97 && LA87_4<=99)||LA87_4==101) ) {
                        alt87=1;
                    }
                }
                else if ( (LA87_1==RULE_IDENTIFIER) ) {
                    alt87=1;
                }
            }
            else if ( (LA87_0==45||LA87_0==95) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalGo.g:7258:4: ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprIndex_2_0= ruleprimaryExprIndex ) )
                    {
                    // InternalGo.g:7258:4: ( (lv_content_1_0= ruleprimaryExprStuff ) )
                    // InternalGo.g:7259:5: (lv_content_1_0= ruleprimaryExprStuff )
                    {
                    // InternalGo.g:7259:5: (lv_content_1_0= ruleprimaryExprStuff )
                    // InternalGo.g:7260:6: lv_content_1_0= ruleprimaryExprStuff
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprIndexAccess().getContentPrimaryExprStuffParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_69);
                    lv_content_1_0=ruleprimaryExprStuff();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprIndexRule());
                      						}
                      						set(
                      							current,
                      							"content",
                      							lv_content_1_0,
                      							"org.xtext.Go.primaryExprStuff");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:7277:4: ( (lv_primaryExprIndex_2_0= ruleprimaryExprIndex ) )
                    // InternalGo.g:7278:5: (lv_primaryExprIndex_2_0= ruleprimaryExprIndex )
                    {
                    // InternalGo.g:7278:5: (lv_primaryExprIndex_2_0= ruleprimaryExprIndex )
                    // InternalGo.g:7279:6: lv_primaryExprIndex_2_0= ruleprimaryExprIndex
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprIndexPrimaryExprIndexParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprIndex_2_0=ruleprimaryExprIndex();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprIndexRule());
                      						}
                      						set(
                      							current,
                      							"primaryExprIndex",
                      							lv_primaryExprIndex_2_0,
                      							"org.xtext.Go.primaryExprIndex");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExprIndex"


    // $ANTLR start "entryRuleprimaryExprSlice"
    // InternalGo.g:7301:1: entryRuleprimaryExprSlice returns [EObject current=null] : iv_ruleprimaryExprSlice= ruleprimaryExprSlice EOF ;
    public final EObject entryRuleprimaryExprSlice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExprSlice = null;


        try {
            // InternalGo.g:7301:57: (iv_ruleprimaryExprSlice= ruleprimaryExprSlice EOF )
            // InternalGo.g:7302:2: iv_ruleprimaryExprSlice= ruleprimaryExprSlice EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprSliceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExprSlice=ruleprimaryExprSlice();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExprSlice; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExprSlice"


    // $ANTLR start "ruleprimaryExprSlice"
    // InternalGo.g:7308:1: ruleprimaryExprSlice returns [EObject current=null] : ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSlice_2_0= ruleprimaryExprSlice ) ) )? ) ;
    public final EObject ruleprimaryExprSlice() throws RecognitionException {
        EObject current = null;

        EObject lv_content_1_0 = null;

        EObject lv_primaryExprSlice_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7314:2: ( ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSlice_2_0= ruleprimaryExprSlice ) ) )? ) )
            // InternalGo.g:7315:2: ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSlice_2_0= ruleprimaryExprSlice ) ) )? )
            {
            // InternalGo.g:7315:2: ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSlice_2_0= ruleprimaryExprSlice ) ) )? )
            // InternalGo.g:7316:3: () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSlice_2_0= ruleprimaryExprSlice ) ) )?
            {
            // InternalGo.g:7316:3: ()
            // InternalGo.g:7317:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprSliceAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:7326:3: ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSlice_2_0= ruleprimaryExprSlice ) ) )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==47) ) {
                int LA88_1 = input.LA(2);

                if ( (LA88_1==45) ) {
                    int LA88_4 = input.LA(3);

                    if ( (LA88_4==RULE_IDENTIFIER||LA88_4==45||LA88_4==52||LA88_4==56||LA88_4==63||LA88_4==95||(LA88_4>=97 && LA88_4<=99)||LA88_4==101) ) {
                        alt88=1;
                    }
                }
                else if ( (LA88_1==RULE_IDENTIFIER) ) {
                    alt88=1;
                }
            }
            else if ( (LA88_0==45||LA88_0==95) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalGo.g:7327:4: ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprSlice_2_0= ruleprimaryExprSlice ) )
                    {
                    // InternalGo.g:7327:4: ( (lv_content_1_0= ruleprimaryExprStuff ) )
                    // InternalGo.g:7328:5: (lv_content_1_0= ruleprimaryExprStuff )
                    {
                    // InternalGo.g:7328:5: (lv_content_1_0= ruleprimaryExprStuff )
                    // InternalGo.g:7329:6: lv_content_1_0= ruleprimaryExprStuff
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprSliceAccess().getContentPrimaryExprStuffParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_69);
                    lv_content_1_0=ruleprimaryExprStuff();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprSliceRule());
                      						}
                      						set(
                      							current,
                      							"content",
                      							lv_content_1_0,
                      							"org.xtext.Go.primaryExprStuff");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:7346:4: ( (lv_primaryExprSlice_2_0= ruleprimaryExprSlice ) )
                    // InternalGo.g:7347:5: (lv_primaryExprSlice_2_0= ruleprimaryExprSlice )
                    {
                    // InternalGo.g:7347:5: (lv_primaryExprSlice_2_0= ruleprimaryExprSlice )
                    // InternalGo.g:7348:6: lv_primaryExprSlice_2_0= ruleprimaryExprSlice
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprSlicePrimaryExprSliceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprSlice_2_0=ruleprimaryExprSlice();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprSliceRule());
                      						}
                      						set(
                      							current,
                      							"primaryExprSlice",
                      							lv_primaryExprSlice_2_0,
                      							"org.xtext.Go.primaryExprSlice");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExprSlice"


    // $ANTLR start "entryRuleprimaryExprTypeAssertion"
    // InternalGo.g:7370:1: entryRuleprimaryExprTypeAssertion returns [EObject current=null] : iv_ruleprimaryExprTypeAssertion= ruleprimaryExprTypeAssertion EOF ;
    public final EObject entryRuleprimaryExprTypeAssertion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExprTypeAssertion = null;


        try {
            // InternalGo.g:7370:65: (iv_ruleprimaryExprTypeAssertion= ruleprimaryExprTypeAssertion EOF )
            // InternalGo.g:7371:2: iv_ruleprimaryExprTypeAssertion= ruleprimaryExprTypeAssertion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprTypeAssertionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExprTypeAssertion=ruleprimaryExprTypeAssertion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExprTypeAssertion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExprTypeAssertion"


    // $ANTLR start "ruleprimaryExprTypeAssertion"
    // InternalGo.g:7377:1: ruleprimaryExprTypeAssertion returns [EObject current=null] : ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprTypeAssertion_2_0= ruleprimaryExprTypeAssertion ) ) )? ) ;
    public final EObject ruleprimaryExprTypeAssertion() throws RecognitionException {
        EObject current = null;

        EObject lv_content_1_0 = null;

        EObject lv_primaryExprTypeAssertion_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7383:2: ( ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprTypeAssertion_2_0= ruleprimaryExprTypeAssertion ) ) )? ) )
            // InternalGo.g:7384:2: ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprTypeAssertion_2_0= ruleprimaryExprTypeAssertion ) ) )? )
            {
            // InternalGo.g:7384:2: ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprTypeAssertion_2_0= ruleprimaryExprTypeAssertion ) ) )? )
            // InternalGo.g:7385:3: () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprTypeAssertion_2_0= ruleprimaryExprTypeAssertion ) ) )?
            {
            // InternalGo.g:7385:3: ()
            // InternalGo.g:7386:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprTypeAssertionAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:7395:3: ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprTypeAssertion_2_0= ruleprimaryExprTypeAssertion ) ) )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==47) ) {
                int LA89_1 = input.LA(2);

                if ( (LA89_1==45) ) {
                    int LA89_4 = input.LA(3);

                    if ( (LA89_4==RULE_IDENTIFIER||LA89_4==45||LA89_4==52||LA89_4==56||LA89_4==63||LA89_4==95||(LA89_4>=97 && LA89_4<=99)||LA89_4==101) ) {
                        alt89=1;
                    }
                }
                else if ( (LA89_1==RULE_IDENTIFIER) ) {
                    alt89=1;
                }
            }
            else if ( (LA89_0==45||LA89_0==95) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalGo.g:7396:4: ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprTypeAssertion_2_0= ruleprimaryExprTypeAssertion ) )
                    {
                    // InternalGo.g:7396:4: ( (lv_content_1_0= ruleprimaryExprStuff ) )
                    // InternalGo.g:7397:5: (lv_content_1_0= ruleprimaryExprStuff )
                    {
                    // InternalGo.g:7397:5: (lv_content_1_0= ruleprimaryExprStuff )
                    // InternalGo.g:7398:6: lv_content_1_0= ruleprimaryExprStuff
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprTypeAssertionAccess().getContentPrimaryExprStuffParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_69);
                    lv_content_1_0=ruleprimaryExprStuff();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprTypeAssertionRule());
                      						}
                      						set(
                      							current,
                      							"content",
                      							lv_content_1_0,
                      							"org.xtext.Go.primaryExprStuff");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:7415:4: ( (lv_primaryExprTypeAssertion_2_0= ruleprimaryExprTypeAssertion ) )
                    // InternalGo.g:7416:5: (lv_primaryExprTypeAssertion_2_0= ruleprimaryExprTypeAssertion )
                    {
                    // InternalGo.g:7416:5: (lv_primaryExprTypeAssertion_2_0= ruleprimaryExprTypeAssertion )
                    // InternalGo.g:7417:6: lv_primaryExprTypeAssertion_2_0= ruleprimaryExprTypeAssertion
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprTypeAssertionPrimaryExprTypeAssertionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprTypeAssertion_2_0=ruleprimaryExprTypeAssertion();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprTypeAssertionRule());
                      						}
                      						set(
                      							current,
                      							"primaryExprTypeAssertion",
                      							lv_primaryExprTypeAssertion_2_0,
                      							"org.xtext.Go.primaryExprTypeAssertion");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExprTypeAssertion"


    // $ANTLR start "entryRuleprimaryExprArguments"
    // InternalGo.g:7439:1: entryRuleprimaryExprArguments returns [EObject current=null] : iv_ruleprimaryExprArguments= ruleprimaryExprArguments EOF ;
    public final EObject entryRuleprimaryExprArguments() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleprimaryExprArguments = null;


        try {
            // InternalGo.g:7439:61: (iv_ruleprimaryExprArguments= ruleprimaryExprArguments EOF )
            // InternalGo.g:7440:2: iv_ruleprimaryExprArguments= ruleprimaryExprArguments EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleprimaryExprArguments=ruleprimaryExprArguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleprimaryExprArguments; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleprimaryExprArguments"


    // $ANTLR start "ruleprimaryExprArguments"
    // InternalGo.g:7446:1: ruleprimaryExprArguments returns [EObject current=null] : ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprArguments_2_0= ruleprimaryExprArguments ) ) )? ) ;
    public final EObject ruleprimaryExprArguments() throws RecognitionException {
        EObject current = null;

        EObject lv_content_1_0 = null;

        EObject lv_primaryExprArguments_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7452:2: ( ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprArguments_2_0= ruleprimaryExprArguments ) ) )? ) )
            // InternalGo.g:7453:2: ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprArguments_2_0= ruleprimaryExprArguments ) ) )? )
            {
            // InternalGo.g:7453:2: ( () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprArguments_2_0= ruleprimaryExprArguments ) ) )? )
            // InternalGo.g:7454:3: () ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprArguments_2_0= ruleprimaryExprArguments ) ) )?
            {
            // InternalGo.g:7454:3: ()
            // InternalGo.g:7455:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprArgumentsAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:7464:3: ( ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprArguments_2_0= ruleprimaryExprArguments ) ) )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==47) ) {
                int LA90_1 = input.LA(2);

                if ( (LA90_1==45) ) {
                    int LA90_4 = input.LA(3);

                    if ( (LA90_4==RULE_IDENTIFIER||LA90_4==45||LA90_4==52||LA90_4==56||LA90_4==63||LA90_4==95||(LA90_4>=97 && LA90_4<=99)||LA90_4==101) ) {
                        alt90=1;
                    }
                }
                else if ( (LA90_1==RULE_IDENTIFIER) ) {
                    alt90=1;
                }
            }
            else if ( (LA90_0==45||LA90_0==95) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalGo.g:7465:4: ( (lv_content_1_0= ruleprimaryExprStuff ) ) ( (lv_primaryExprArguments_2_0= ruleprimaryExprArguments ) )
                    {
                    // InternalGo.g:7465:4: ( (lv_content_1_0= ruleprimaryExprStuff ) )
                    // InternalGo.g:7466:5: (lv_content_1_0= ruleprimaryExprStuff )
                    {
                    // InternalGo.g:7466:5: (lv_content_1_0= ruleprimaryExprStuff )
                    // InternalGo.g:7467:6: lv_content_1_0= ruleprimaryExprStuff
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprArgumentsAccess().getContentPrimaryExprStuffParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_69);
                    lv_content_1_0=ruleprimaryExprStuff();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprArgumentsRule());
                      						}
                      						set(
                      							current,
                      							"content",
                      							lv_content_1_0,
                      							"org.xtext.Go.primaryExprStuff");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalGo.g:7484:4: ( (lv_primaryExprArguments_2_0= ruleprimaryExprArguments ) )
                    // InternalGo.g:7485:5: (lv_primaryExprArguments_2_0= ruleprimaryExprArguments )
                    {
                    // InternalGo.g:7485:5: (lv_primaryExprArguments_2_0= ruleprimaryExprArguments )
                    // InternalGo.g:7486:6: lv_primaryExprArguments_2_0= ruleprimaryExprArguments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprArgumentsPrimaryExprArgumentsParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExprArguments_2_0=ruleprimaryExprArguments();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExprArgumentsRule());
                      						}
                      						set(
                      							current,
                      							"primaryExprArguments",
                      							lv_primaryExprArguments_2_0,
                      							"org.xtext.Go.primaryExprArguments");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleprimaryExprArguments"


    // $ANTLR start "entryRuleselector"
    // InternalGo.g:7508:1: entryRuleselector returns [EObject current=null] : iv_ruleselector= ruleselector EOF ;
    public final EObject entryRuleselector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleselector = null;


        try {
            // InternalGo.g:7508:49: (iv_ruleselector= ruleselector EOF )
            // InternalGo.g:7509:2: iv_ruleselector= ruleselector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleselector=ruleselector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleselector; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleselector"


    // $ANTLR start "ruleselector"
    // InternalGo.g:7515:1: ruleselector returns [EObject current=null] : (otherlv_0= '.' ( (lv_name_1_0= RULE_IDENTIFIER ) ) ) ;
    public final EObject ruleselector() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;


        	enterRule();

        try {
            // InternalGo.g:7521:2: ( (otherlv_0= '.' ( (lv_name_1_0= RULE_IDENTIFIER ) ) ) )
            // InternalGo.g:7522:2: (otherlv_0= '.' ( (lv_name_1_0= RULE_IDENTIFIER ) ) )
            {
            // InternalGo.g:7522:2: (otherlv_0= '.' ( (lv_name_1_0= RULE_IDENTIFIER ) ) )
            // InternalGo.g:7523:3: otherlv_0= '.' ( (lv_name_1_0= RULE_IDENTIFIER ) )
            {
            otherlv_0=(Token)match(input,47,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSelectorAccess().getFullStopKeyword_0());
              		
            }
            // InternalGo.g:7527:3: ( (lv_name_1_0= RULE_IDENTIFIER ) )
            // InternalGo.g:7528:4: (lv_name_1_0= RULE_IDENTIFIER )
            {
            // InternalGo.g:7528:4: (lv_name_1_0= RULE_IDENTIFIER )
            // InternalGo.g:7529:5: lv_name_1_0= RULE_IDENTIFIER
            {
            lv_name_1_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getSelectorAccess().getNameIDENTIFIERTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSelectorRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.xtext.Go.IDENTIFIER");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleselector"


    // $ANTLR start "entryRuleindex"
    // InternalGo.g:7549:1: entryRuleindex returns [EObject current=null] : iv_ruleindex= ruleindex EOF ;
    public final EObject entryRuleindex() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleindex = null;


        try {
            // InternalGo.g:7549:46: (iv_ruleindex= ruleindex EOF )
            // InternalGo.g:7550:2: iv_ruleindex= ruleindex EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIndexRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleindex=ruleindex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleindex; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleindex"


    // $ANTLR start "ruleindex"
    // InternalGo.g:7556:1: ruleindex returns [EObject current=null] : (otherlv_0= '[' ( (lv_expr_1_0= ruleexpression ) ) otherlv_2= ']' ) ;
    public final EObject ruleindex() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expr_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7562:2: ( (otherlv_0= '[' ( (lv_expr_1_0= ruleexpression ) ) otherlv_2= ']' ) )
            // InternalGo.g:7563:2: (otherlv_0= '[' ( (lv_expr_1_0= ruleexpression ) ) otherlv_2= ']' )
            {
            // InternalGo.g:7563:2: (otherlv_0= '[' ( (lv_expr_1_0= ruleexpression ) ) otherlv_2= ']' )
            // InternalGo.g:7564:3: otherlv_0= '[' ( (lv_expr_1_0= ruleexpression ) ) otherlv_2= ']'
            {
            otherlv_0=(Token)match(input,95,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalGo.g:7568:3: ( (lv_expr_1_0= ruleexpression ) )
            // InternalGo.g:7569:4: (lv_expr_1_0= ruleexpression )
            {
            // InternalGo.g:7569:4: (lv_expr_1_0= ruleexpression )
            // InternalGo.g:7570:5: lv_expr_1_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIndexAccess().getExprExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_56);
            lv_expr_1_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIndexRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_1_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleindex"


    // $ANTLR start "entryRuleslice"
    // InternalGo.g:7595:1: entryRuleslice returns [EObject current=null] : iv_ruleslice= ruleslice EOF ;
    public final EObject entryRuleslice() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleslice = null;


        try {
            // InternalGo.g:7595:46: (iv_ruleslice= ruleslice EOF )
            // InternalGo.g:7596:2: iv_ruleslice= ruleslice EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSliceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleslice=ruleslice();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleslice; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleslice"


    // $ANTLR start "ruleslice"
    // InternalGo.g:7602:1: ruleslice returns [EObject current=null] : ( () otherlv_1= '[' ( ( ( (lv_expr1_2_0= ruleexpression ) )? otherlv_3= ':' ( (lv_expr2_4_0= ruleexpression ) )? ) | ( ( (lv_expr1_5_0= ruleexpression ) )? otherlv_6= ':' ( (lv_expr2_7_0= ruleexpression ) ) otherlv_8= ':' ( (lv_expr3_9_0= ruleexpression ) ) ) ) otherlv_10= ']' ) ;
    public final EObject ruleslice() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_expr1_2_0 = null;

        EObject lv_expr2_4_0 = null;

        EObject lv_expr1_5_0 = null;

        EObject lv_expr2_7_0 = null;

        EObject lv_expr3_9_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7608:2: ( ( () otherlv_1= '[' ( ( ( (lv_expr1_2_0= ruleexpression ) )? otherlv_3= ':' ( (lv_expr2_4_0= ruleexpression ) )? ) | ( ( (lv_expr1_5_0= ruleexpression ) )? otherlv_6= ':' ( (lv_expr2_7_0= ruleexpression ) ) otherlv_8= ':' ( (lv_expr3_9_0= ruleexpression ) ) ) ) otherlv_10= ']' ) )
            // InternalGo.g:7609:2: ( () otherlv_1= '[' ( ( ( (lv_expr1_2_0= ruleexpression ) )? otherlv_3= ':' ( (lv_expr2_4_0= ruleexpression ) )? ) | ( ( (lv_expr1_5_0= ruleexpression ) )? otherlv_6= ':' ( (lv_expr2_7_0= ruleexpression ) ) otherlv_8= ':' ( (lv_expr3_9_0= ruleexpression ) ) ) ) otherlv_10= ']' )
            {
            // InternalGo.g:7609:2: ( () otherlv_1= '[' ( ( ( (lv_expr1_2_0= ruleexpression ) )? otherlv_3= ':' ( (lv_expr2_4_0= ruleexpression ) )? ) | ( ( (lv_expr1_5_0= ruleexpression ) )? otherlv_6= ':' ( (lv_expr2_7_0= ruleexpression ) ) otherlv_8= ':' ( (lv_expr3_9_0= ruleexpression ) ) ) ) otherlv_10= ']' )
            // InternalGo.g:7610:3: () otherlv_1= '[' ( ( ( (lv_expr1_2_0= ruleexpression ) )? otherlv_3= ':' ( (lv_expr2_4_0= ruleexpression ) )? ) | ( ( (lv_expr1_5_0= ruleexpression ) )? otherlv_6= ':' ( (lv_expr2_7_0= ruleexpression ) ) otherlv_8= ':' ( (lv_expr3_9_0= ruleexpression ) ) ) ) otherlv_10= ']'
            {
            // InternalGo.g:7610:3: ()
            // InternalGo.g:7611:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSliceAccess().getSliceAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,95,FOLLOW_70); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalGo.g:7624:3: ( ( ( (lv_expr1_2_0= ruleexpression ) )? otherlv_3= ':' ( (lv_expr2_4_0= ruleexpression ) )? ) | ( ( (lv_expr1_5_0= ruleexpression ) )? otherlv_6= ':' ( (lv_expr2_7_0= ruleexpression ) ) otherlv_8= ':' ( (lv_expr3_9_0= ruleexpression ) ) ) )
            int alt94=2;
            alt94 = dfa94.predict(input);
            switch (alt94) {
                case 1 :
                    // InternalGo.g:7625:4: ( ( (lv_expr1_2_0= ruleexpression ) )? otherlv_3= ':' ( (lv_expr2_4_0= ruleexpression ) )? )
                    {
                    // InternalGo.g:7625:4: ( ( (lv_expr1_2_0= ruleexpression ) )? otherlv_3= ':' ( (lv_expr2_4_0= ruleexpression ) )? )
                    // InternalGo.g:7626:5: ( (lv_expr1_2_0= ruleexpression ) )? otherlv_3= ':' ( (lv_expr2_4_0= ruleexpression ) )?
                    {
                    // InternalGo.g:7626:5: ( (lv_expr1_2_0= ruleexpression ) )?
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( ((LA91_0>=RULE_IDENTIFIER && LA91_0<=RULE_STRING_LIT)||(LA91_0>=RULE_INT_LIT && LA91_0<=RULE_BINARY_OP)||LA91_0==45||LA91_0==47||LA91_0==52||LA91_0==56||(LA91_0>=59 && LA91_0<=60)||(LA91_0>=62 && LA91_0<=63)||LA91_0==68||LA91_0==95||(LA91_0>=97 && LA91_0<=99)||(LA91_0>=101 && LA91_0<=102)) ) {
                        alt91=1;
                    }
                    else if ( (LA91_0==71) ) {
                        int LA91_2 = input.LA(2);

                        if ( (synpred151_InternalGo()) ) {
                            alt91=1;
                        }
                    }
                    switch (alt91) {
                        case 1 :
                            // InternalGo.g:7627:6: (lv_expr1_2_0= ruleexpression )
                            {
                            // InternalGo.g:7627:6: (lv_expr1_2_0= ruleexpression )
                            // InternalGo.g:7628:7: lv_expr1_2_0= ruleexpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSliceAccess().getExpr1ExpressionParserRuleCall_2_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_30);
                            lv_expr1_2_0=ruleexpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSliceRule());
                              							}
                              							set(
                              								current,
                              								"expr1",
                              								lv_expr1_2_0,
                              								"org.xtext.Go.expression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,71,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getSliceAccess().getColonKeyword_2_0_1());
                      				
                    }
                    // InternalGo.g:7649:5: ( (lv_expr2_4_0= ruleexpression ) )?
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( ((LA92_0>=RULE_IDENTIFIER && LA92_0<=RULE_STRING_LIT)||(LA92_0>=RULE_INT_LIT && LA92_0<=RULE_BINARY_OP)||LA92_0==45||LA92_0==47||LA92_0==52||LA92_0==56||(LA92_0>=59 && LA92_0<=60)||(LA92_0>=62 && LA92_0<=63)||LA92_0==68||LA92_0==95||(LA92_0>=97 && LA92_0<=99)||(LA92_0>=101 && LA92_0<=102)) ) {
                        alt92=1;
                    }
                    else if ( (LA92_0==96) ) {
                        int LA92_2 = input.LA(2);

                        if ( (synpred152_InternalGo()) ) {
                            alt92=1;
                        }
                    }
                    switch (alt92) {
                        case 1 :
                            // InternalGo.g:7650:6: (lv_expr2_4_0= ruleexpression )
                            {
                            // InternalGo.g:7650:6: (lv_expr2_4_0= ruleexpression )
                            // InternalGo.g:7651:7: lv_expr2_4_0= ruleexpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSliceAccess().getExpr2ExpressionParserRuleCall_2_0_2_0());
                              						
                            }
                            pushFollow(FOLLOW_56);
                            lv_expr2_4_0=ruleexpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSliceRule());
                              							}
                              							set(
                              								current,
                              								"expr2",
                              								lv_expr2_4_0,
                              								"org.xtext.Go.expression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7670:4: ( ( (lv_expr1_5_0= ruleexpression ) )? otherlv_6= ':' ( (lv_expr2_7_0= ruleexpression ) ) otherlv_8= ':' ( (lv_expr3_9_0= ruleexpression ) ) )
                    {
                    // InternalGo.g:7670:4: ( ( (lv_expr1_5_0= ruleexpression ) )? otherlv_6= ':' ( (lv_expr2_7_0= ruleexpression ) ) otherlv_8= ':' ( (lv_expr3_9_0= ruleexpression ) ) )
                    // InternalGo.g:7671:5: ( (lv_expr1_5_0= ruleexpression ) )? otherlv_6= ':' ( (lv_expr2_7_0= ruleexpression ) ) otherlv_8= ':' ( (lv_expr3_9_0= ruleexpression ) )
                    {
                    // InternalGo.g:7671:5: ( (lv_expr1_5_0= ruleexpression ) )?
                    int alt93=2;
                    int LA93_0 = input.LA(1);

                    if ( ((LA93_0>=RULE_IDENTIFIER && LA93_0<=RULE_STRING_LIT)||(LA93_0>=RULE_INT_LIT && LA93_0<=RULE_BINARY_OP)||LA93_0==45||LA93_0==47||LA93_0==52||LA93_0==56||(LA93_0>=59 && LA93_0<=60)||(LA93_0>=62 && LA93_0<=63)||LA93_0==68||LA93_0==95||(LA93_0>=97 && LA93_0<=99)||(LA93_0>=101 && LA93_0<=102)) ) {
                        alt93=1;
                    }
                    else if ( (LA93_0==71) ) {
                        int LA93_2 = input.LA(2);

                        if ( (synpred154_InternalGo()) ) {
                            alt93=1;
                        }
                    }
                    switch (alt93) {
                        case 1 :
                            // InternalGo.g:7672:6: (lv_expr1_5_0= ruleexpression )
                            {
                            // InternalGo.g:7672:6: (lv_expr1_5_0= ruleexpression )
                            // InternalGo.g:7673:7: lv_expr1_5_0= ruleexpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSliceAccess().getExpr1ExpressionParserRuleCall_2_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_30);
                            lv_expr1_5_0=ruleexpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSliceRule());
                              							}
                              							set(
                              								current,
                              								"expr1",
                              								lv_expr1_5_0,
                              								"org.xtext.Go.expression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,71,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getSliceAccess().getColonKeyword_2_1_1());
                      				
                    }
                    // InternalGo.g:7694:5: ( (lv_expr2_7_0= ruleexpression ) )
                    // InternalGo.g:7695:6: (lv_expr2_7_0= ruleexpression )
                    {
                    // InternalGo.g:7695:6: (lv_expr2_7_0= ruleexpression )
                    // InternalGo.g:7696:7: lv_expr2_7_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSliceAccess().getExpr2ExpressionParserRuleCall_2_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_30);
                    lv_expr2_7_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSliceRule());
                      							}
                      							set(
                      								current,
                      								"expr2",
                      								lv_expr2_7_0,
                      								"org.xtext.Go.expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_8=(Token)match(input,71,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getSliceAccess().getColonKeyword_2_1_3());
                      				
                    }
                    // InternalGo.g:7717:5: ( (lv_expr3_9_0= ruleexpression ) )
                    // InternalGo.g:7718:6: (lv_expr3_9_0= ruleexpression )
                    {
                    // InternalGo.g:7718:6: (lv_expr3_9_0= ruleexpression )
                    // InternalGo.g:7719:7: lv_expr3_9_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSliceAccess().getExpr3ExpressionParserRuleCall_2_1_4_0());
                      						
                    }
                    pushFollow(FOLLOW_56);
                    lv_expr3_9_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSliceRule());
                      							}
                      							set(
                      								current,
                      								"expr3",
                      								lv_expr3_9_0,
                      								"org.xtext.Go.expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getSliceAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleslice"


    // $ANTLR start "entryRuletypeAssertion"
    // InternalGo.g:7746:1: entryRuletypeAssertion returns [EObject current=null] : iv_ruletypeAssertion= ruletypeAssertion EOF ;
    public final EObject entryRuletypeAssertion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruletypeAssertion = null;


        try {
            // InternalGo.g:7746:54: (iv_ruletypeAssertion= ruletypeAssertion EOF )
            // InternalGo.g:7747:2: iv_ruletypeAssertion= ruletypeAssertion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeAssertionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruletypeAssertion=ruletypeAssertion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruletypeAssertion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuletypeAssertion"


    // $ANTLR start "ruletypeAssertion"
    // InternalGo.g:7753:1: ruletypeAssertion returns [EObject current=null] : (otherlv_0= '.' otherlv_1= '(' ( (lv_type_2_0= ruletype ) ) otherlv_3= ')' ) ;
    public final EObject ruletypeAssertion() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_type_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7759:2: ( (otherlv_0= '.' otherlv_1= '(' ( (lv_type_2_0= ruletype ) ) otherlv_3= ')' ) )
            // InternalGo.g:7760:2: (otherlv_0= '.' otherlv_1= '(' ( (lv_type_2_0= ruletype ) ) otherlv_3= ')' )
            {
            // InternalGo.g:7760:2: (otherlv_0= '.' otherlv_1= '(' ( (lv_type_2_0= ruletype ) ) otherlv_3= ')' )
            // InternalGo.g:7761:3: otherlv_0= '.' otherlv_1= '(' ( (lv_type_2_0= ruletype ) ) otherlv_3= ')'
            {
            otherlv_0=(Token)match(input,47,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,45,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:7769:3: ( (lv_type_2_0= ruletype ) )
            // InternalGo.g:7770:4: (lv_type_2_0= ruletype )
            {
            // InternalGo.g:7770:4: (lv_type_2_0= ruletype )
            // InternalGo.g:7771:5: lv_type_2_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeAssertionAccess().getTypeTypeParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_43);
            lv_type_2_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeAssertionRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruletypeAssertion"


    // $ANTLR start "entryRulearguments"
    // InternalGo.g:7796:1: entryRulearguments returns [EObject current=null] : iv_rulearguments= rulearguments EOF ;
    public final EObject entryRulearguments() throws RecognitionException {
        EObject current = null;

        EObject iv_rulearguments = null;


        try {
            // InternalGo.g:7796:50: (iv_rulearguments= rulearguments EOF )
            // InternalGo.g:7797:2: iv_rulearguments= rulearguments EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulearguments=rulearguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulearguments; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulearguments"


    // $ANTLR start "rulearguments"
    // InternalGo.g:7803:1: rulearguments returns [EObject current=null] : ( () otherlv_1= '(' ( ( ( (lv_expressionList_2_0= ruleexpressionList ) ) | ( ( (lv_type_3_0= ruletype ) ) (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' ) ;
    public final EObject rulearguments() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_expressionList_2_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_expressionList_5_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7809:2: ( ( () otherlv_1= '(' ( ( ( (lv_expressionList_2_0= ruleexpressionList ) ) | ( ( (lv_type_3_0= ruletype ) ) (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' ) )
            // InternalGo.g:7810:2: ( () otherlv_1= '(' ( ( ( (lv_expressionList_2_0= ruleexpressionList ) ) | ( ( (lv_type_3_0= ruletype ) ) (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' )
            {
            // InternalGo.g:7810:2: ( () otherlv_1= '(' ( ( ( (lv_expressionList_2_0= ruleexpressionList ) ) | ( ( (lv_type_3_0= ruletype ) ) (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')' )
            // InternalGo.g:7811:3: () otherlv_1= '(' ( ( ( (lv_expressionList_2_0= ruleexpressionList ) ) | ( ( (lv_type_3_0= ruletype ) ) (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )? otherlv_8= ')'
            {
            // InternalGo.g:7811:3: ()
            // InternalGo.g:7812:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getArgumentsAccess().getArgumentsAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,45,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:7825:3: ( ( ( (lv_expressionList_2_0= ruleexpressionList ) ) | ( ( (lv_type_3_0= ruletype ) ) (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( ((LA99_0>=RULE_IDENTIFIER && LA99_0<=RULE_STRING_LIT)||(LA99_0>=RULE_INT_LIT && LA99_0<=RULE_BINARY_OP)||LA99_0==45||LA99_0==47||LA99_0==50||LA99_0==52||LA99_0==56||(LA99_0>=59 && LA99_0<=60)||(LA99_0>=62 && LA99_0<=63)||LA99_0==68||LA99_0==95||(LA99_0>=97 && LA99_0<=102)) ) {
                alt99=1;
            }
            else if ( (LA99_0==46) ) {
                int LA99_2 = input.LA(2);

                if ( (synpred159_InternalGo()) ) {
                    alt99=1;
                }
            }
            switch (alt99) {
                case 1 :
                    // InternalGo.g:7826:4: ( ( (lv_expressionList_2_0= ruleexpressionList ) ) | ( ( (lv_type_3_0= ruletype ) ) (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )?
                    {
                    // InternalGo.g:7826:4: ( ( (lv_expressionList_2_0= ruleexpressionList ) ) | ( ( (lv_type_3_0= ruletype ) ) (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )? ) )
                    int alt96=2;
                    alt96 = dfa96.predict(input);
                    switch (alt96) {
                        case 1 :
                            // InternalGo.g:7827:5: ( (lv_expressionList_2_0= ruleexpressionList ) )
                            {
                            // InternalGo.g:7827:5: ( (lv_expressionList_2_0= ruleexpressionList ) )
                            // InternalGo.g:7828:6: (lv_expressionList_2_0= ruleexpressionList )
                            {
                            // InternalGo.g:7828:6: (lv_expressionList_2_0= ruleexpressionList )
                            // InternalGo.g:7829:7: lv_expressionList_2_0= ruleexpressionList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_73);
                            lv_expressionList_2_0=ruleexpressionList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getArgumentsRule());
                              							}
                              							set(
                              								current,
                              								"expressionList",
                              								lv_expressionList_2_0,
                              								"org.xtext.Go.expressionList");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalGo.g:7847:5: ( ( (lv_type_3_0= ruletype ) ) (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )? )
                            {
                            // InternalGo.g:7847:5: ( ( (lv_type_3_0= ruletype ) ) (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )? )
                            // InternalGo.g:7848:6: ( (lv_type_3_0= ruletype ) ) (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )?
                            {
                            // InternalGo.g:7848:6: ( (lv_type_3_0= ruletype ) )
                            // InternalGo.g:7849:7: (lv_type_3_0= ruletype )
                            {
                            // InternalGo.g:7849:7: (lv_type_3_0= ruletype )
                            // InternalGo.g:7850:8: lv_type_3_0= ruletype
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_73);
                            lv_type_3_0=ruletype();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getArgumentsRule());
                              								}
                              								set(
                              									current,
                              									"type",
                              									lv_type_3_0,
                              									"org.xtext.Go.type");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalGo.g:7867:6: (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )?
                            int alt95=2;
                            int LA95_0 = input.LA(1);

                            if ( (LA95_0==50) ) {
                                int LA95_1 = input.LA(2);

                                if ( (synpred156_InternalGo()) ) {
                                    alt95=1;
                                }
                            }
                            switch (alt95) {
                                case 1 :
                                    // InternalGo.g:7868:7: otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) )
                                    {
                                    otherlv_4=(Token)match(input,50,FOLLOW_16); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_4, grammarAccess.getArgumentsAccess().getCommaKeyword_2_0_1_1_0());
                                      						
                                    }
                                    // InternalGo.g:7872:7: ( (lv_expressionList_5_0= ruleexpressionList ) )
                                    // InternalGo.g:7873:8: (lv_expressionList_5_0= ruleexpressionList )
                                    {
                                    // InternalGo.g:7873:8: (lv_expressionList_5_0= ruleexpressionList )
                                    // InternalGo.g:7874:9: lv_expressionList_5_0= ruleexpressionList
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_1_1_1_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_73);
                                    lv_expressionList_5_0=ruleexpressionList();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getArgumentsRule());
                                      									}
                                      									set(
                                      										current,
                                      										"expressionList",
                                      										lv_expressionList_5_0,
                                      										"org.xtext.Go.expressionList");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalGo.g:7894:4: (otherlv_6= '...' )?
                    int alt97=2;
                    int LA97_0 = input.LA(1);

                    if ( (LA97_0==100) ) {
                        alt97=1;
                    }
                    switch (alt97) {
                        case 1 :
                            // InternalGo.g:7895:5: otherlv_6= '...'
                            {
                            otherlv_6=(Token)match(input,100,FOLLOW_62); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_2_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalGo.g:7900:4: (otherlv_7= ',' )?
                    int alt98=2;
                    int LA98_0 = input.LA(1);

                    if ( (LA98_0==50) ) {
                        alt98=1;
                    }
                    switch (alt98) {
                        case 1 :
                            // InternalGo.g:7901:5: otherlv_7= ','
                            {
                            otherlv_7=(Token)match(input,50,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getArgumentsAccess().getCommaKeyword_2_2());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulearguments"


    // $ANTLR start "entryRulemethodExpr"
    // InternalGo.g:7915:1: entryRulemethodExpr returns [EObject current=null] : iv_rulemethodExpr= rulemethodExpr EOF ;
    public final EObject entryRulemethodExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_rulemethodExpr = null;


        try {
            // InternalGo.g:7915:51: (iv_rulemethodExpr= rulemethodExpr EOF )
            // InternalGo.g:7916:2: iv_rulemethodExpr= rulemethodExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulemethodExpr=rulemethodExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulemethodExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulemethodExpr"


    // $ANTLR start "rulemethodExpr"
    // InternalGo.g:7922:1: rulemethodExpr returns [EObject current=null] : ( ( (lv_receiverType_0_0= rulereceiverType ) ) otherlv_1= '.' this_IDENTIFIER_2= RULE_IDENTIFIER ) ;
    public final EObject rulemethodExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token this_IDENTIFIER_2=null;
        EObject lv_receiverType_0_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7928:2: ( ( ( (lv_receiverType_0_0= rulereceiverType ) ) otherlv_1= '.' this_IDENTIFIER_2= RULE_IDENTIFIER ) )
            // InternalGo.g:7929:2: ( ( (lv_receiverType_0_0= rulereceiverType ) ) otherlv_1= '.' this_IDENTIFIER_2= RULE_IDENTIFIER )
            {
            // InternalGo.g:7929:2: ( ( (lv_receiverType_0_0= rulereceiverType ) ) otherlv_1= '.' this_IDENTIFIER_2= RULE_IDENTIFIER )
            // InternalGo.g:7930:3: ( (lv_receiverType_0_0= rulereceiverType ) ) otherlv_1= '.' this_IDENTIFIER_2= RULE_IDENTIFIER
            {
            // InternalGo.g:7930:3: ( (lv_receiverType_0_0= rulereceiverType ) )
            // InternalGo.g:7931:4: (lv_receiverType_0_0= rulereceiverType )
            {
            // InternalGo.g:7931:4: (lv_receiverType_0_0= rulereceiverType )
            // InternalGo.g:7932:5: lv_receiverType_0_0= rulereceiverType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodExprAccess().getReceiverTypeReceiverTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_41);
            lv_receiverType_0_0=rulereceiverType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodExprRule());
              					}
              					set(
              						current,
              						"receiverType",
              						lv_receiverType_0_0,
              						"org.xtext.Go.receiverType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,47,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMethodExprAccess().getFullStopKeyword_1());
              		
            }
            this_IDENTIFIER_2=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_IDENTIFIER_2, grammarAccess.getMethodExprAccess().getIDENTIFIERTerminalRuleCall_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulemethodExpr"


    // $ANTLR start "entryRulereceiverType"
    // InternalGo.g:7961:1: entryRulereceiverType returns [EObject current=null] : iv_rulereceiverType= rulereceiverType EOF ;
    public final EObject entryRulereceiverType() throws RecognitionException {
        EObject current = null;

        EObject iv_rulereceiverType = null;


        try {
            // InternalGo.g:7961:53: (iv_rulereceiverType= rulereceiverType EOF )
            // InternalGo.g:7962:2: iv_rulereceiverType= rulereceiverType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReceiverTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulereceiverType=rulereceiverType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulereceiverType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulereceiverType"


    // $ANTLR start "rulereceiverType"
    // InternalGo.g:7968:1: rulereceiverType returns [EObject current=null] : ( ( (lv_typeName_0_0= ruletypeName ) ) | (otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')' ) | (otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')' ) ) ;
    public final EObject rulereceiverType() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_typeName_0_0 = null;

        EObject lv_typeName_3_0 = null;

        EObject lv_receiverType_6_0 = null;



        	enterRule();

        try {
            // InternalGo.g:7974:2: ( ( ( (lv_typeName_0_0= ruletypeName ) ) | (otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')' ) | (otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')' ) ) )
            // InternalGo.g:7975:2: ( ( (lv_typeName_0_0= ruletypeName ) ) | (otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')' ) | (otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')' ) )
            {
            // InternalGo.g:7975:2: ( ( (lv_typeName_0_0= ruletypeName ) ) | (otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')' ) | (otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')' ) )
            int alt100=3;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==RULE_IDENTIFIER) ) {
                alt100=1;
            }
            else if ( (LA100_0==45) ) {
                int LA100_2 = input.LA(2);

                if ( (LA100_2==63) ) {
                    alt100=2;
                }
                else if ( (LA100_2==RULE_IDENTIFIER||LA100_2==45) ) {
                    alt100=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 100, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }
            switch (alt100) {
                case 1 :
                    // InternalGo.g:7976:3: ( (lv_typeName_0_0= ruletypeName ) )
                    {
                    // InternalGo.g:7976:3: ( (lv_typeName_0_0= ruletypeName ) )
                    // InternalGo.g:7977:4: (lv_typeName_0_0= ruletypeName )
                    {
                    // InternalGo.g:7977:4: (lv_typeName_0_0= ruletypeName )
                    // InternalGo.g:7978:5: lv_typeName_0_0= ruletypeName
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReceiverTypeAccess().getTypeNameTypeNameParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeName_0_0=ruletypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReceiverTypeRule());
                      					}
                      					set(
                      						current,
                      						"typeName",
                      						lv_typeName_0_0,
                      						"org.xtext.Go.typeName");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:7996:3: (otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')' )
                    {
                    // InternalGo.g:7996:3: (otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')' )
                    // InternalGo.g:7997:4: otherlv_1= '(' otherlv_2= '*' ( (lv_typeName_3_0= ruletypeName ) ) otherlv_4= ')'
                    {
                    otherlv_1=(Token)match(input,45,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getReceiverTypeAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    otherlv_2=(Token)match(input,63,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getReceiverTypeAccess().getAsteriskKeyword_1_1());
                      			
                    }
                    // InternalGo.g:8005:4: ( (lv_typeName_3_0= ruletypeName ) )
                    // InternalGo.g:8006:5: (lv_typeName_3_0= ruletypeName )
                    {
                    // InternalGo.g:8006:5: (lv_typeName_3_0= ruletypeName )
                    // InternalGo.g:8007:6: lv_typeName_3_0= ruletypeName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReceiverTypeAccess().getTypeNameTypeNameParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    lv_typeName_3_0=ruletypeName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReceiverTypeRule());
                      						}
                      						set(
                      							current,
                      							"typeName",
                      							lv_typeName_3_0,
                      							"org.xtext.Go.typeName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getReceiverTypeAccess().getRightParenthesisKeyword_1_3());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:8030:3: (otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')' )
                    {
                    // InternalGo.g:8030:3: (otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')' )
                    // InternalGo.g:8031:4: otherlv_5= '(' ( (lv_receiverType_6_0= rulereceiverType ) ) otherlv_7= ')'
                    {
                    otherlv_5=(Token)match(input,45,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getReceiverTypeAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalGo.g:8035:4: ( (lv_receiverType_6_0= rulereceiverType ) )
                    // InternalGo.g:8036:5: (lv_receiverType_6_0= rulereceiverType )
                    {
                    // InternalGo.g:8036:5: (lv_receiverType_6_0= rulereceiverType )
                    // InternalGo.g:8037:6: lv_receiverType_6_0= rulereceiverType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReceiverTypeAccess().getReceiverTypeReceiverTypeParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    lv_receiverType_6_0=rulereceiverType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReceiverTypeRule());
                      						}
                      						set(
                      							current,
                      							"receiverType",
                      							lv_receiverType_6_0,
                      							"org.xtext.Go.receiverType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getReceiverTypeAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulereceiverType"


    // $ANTLR start "entryRuleexpression"
    // InternalGo.g:8063:1: entryRuleexpression returns [EObject current=null] : iv_ruleexpression= ruleexpression EOF ;
    public final EObject entryRuleexpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexpression = null;


        try {
            // InternalGo.g:8063:51: (iv_ruleexpression= ruleexpression EOF )
            // InternalGo.g:8064:2: iv_ruleexpression= ruleexpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexpression=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexpression"


    // $ANTLR start "ruleexpression"
    // InternalGo.g:8070:1: ruleexpression returns [EObject current=null] : ( ( (lv_unaryExpr_0_0= ruleunaryExpr ) ) ( (lv_expressionMatched_1_0= ruleexpressionMatched ) ) ) ;
    public final EObject ruleexpression() throws RecognitionException {
        EObject current = null;

        EObject lv_unaryExpr_0_0 = null;

        EObject lv_expressionMatched_1_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8076:2: ( ( ( (lv_unaryExpr_0_0= ruleunaryExpr ) ) ( (lv_expressionMatched_1_0= ruleexpressionMatched ) ) ) )
            // InternalGo.g:8077:2: ( ( (lv_unaryExpr_0_0= ruleunaryExpr ) ) ( (lv_expressionMatched_1_0= ruleexpressionMatched ) ) )
            {
            // InternalGo.g:8077:2: ( ( (lv_unaryExpr_0_0= ruleunaryExpr ) ) ( (lv_expressionMatched_1_0= ruleexpressionMatched ) ) )
            // InternalGo.g:8078:3: ( (lv_unaryExpr_0_0= ruleunaryExpr ) ) ( (lv_expressionMatched_1_0= ruleexpressionMatched ) )
            {
            // InternalGo.g:8078:3: ( (lv_unaryExpr_0_0= ruleunaryExpr ) )
            // InternalGo.g:8079:4: (lv_unaryExpr_0_0= ruleunaryExpr )
            {
            // InternalGo.g:8079:4: (lv_unaryExpr_0_0= ruleunaryExpr )
            // InternalGo.g:8080:5: lv_unaryExpr_0_0= ruleunaryExpr
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionAccess().getUnaryExprUnaryExprParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_75);
            lv_unaryExpr_0_0=ruleunaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionRule());
              					}
              					set(
              						current,
              						"unaryExpr",
              						lv_unaryExpr_0_0,
              						"org.xtext.Go.unaryExpr");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:8097:3: ( (lv_expressionMatched_1_0= ruleexpressionMatched ) )
            // InternalGo.g:8098:4: (lv_expressionMatched_1_0= ruleexpressionMatched )
            {
            // InternalGo.g:8098:4: (lv_expressionMatched_1_0= ruleexpressionMatched )
            // InternalGo.g:8099:5: lv_expressionMatched_1_0= ruleexpressionMatched
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExpressionAccess().getExpressionMatchedExpressionMatchedParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expressionMatched_1_0=ruleexpressionMatched();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExpressionRule());
              					}
              					set(
              						current,
              						"expressionMatched",
              						lv_expressionMatched_1_0,
              						"org.xtext.Go.expressionMatched");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexpression"


    // $ANTLR start "entryRuleexpressionMatched"
    // InternalGo.g:8120:1: entryRuleexpressionMatched returns [EObject current=null] : iv_ruleexpressionMatched= ruleexpressionMatched EOF ;
    public final EObject entryRuleexpressionMatched() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleexpressionMatched = null;


        try {
            // InternalGo.g:8120:58: (iv_ruleexpressionMatched= ruleexpressionMatched EOF )
            // InternalGo.g:8121:2: iv_ruleexpressionMatched= ruleexpressionMatched EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionMatchedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleexpressionMatched=ruleexpressionMatched();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleexpressionMatched; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleexpressionMatched"


    // $ANTLR start "ruleexpressionMatched"
    // InternalGo.g:8127:1: ruleexpressionMatched returns [EObject current=null] : ( () ( ( (lv_operator_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleexpression ) ) )? ) ;
    public final EObject ruleexpressionMatched() throws RecognitionException {
        EObject current = null;

        Token lv_operator_1_0=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8133:2: ( ( () ( ( (lv_operator_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleexpression ) ) )? ) )
            // InternalGo.g:8134:2: ( () ( ( (lv_operator_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleexpression ) ) )? )
            {
            // InternalGo.g:8134:2: ( () ( ( (lv_operator_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleexpression ) ) )? )
            // InternalGo.g:8135:3: () ( ( (lv_operator_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleexpression ) ) )?
            {
            // InternalGo.g:8135:3: ()
            // InternalGo.g:8136:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExpressionMatchedAccess().getExpressionMatchedAction_0(),
              					current);
              			
            }

            }

            // InternalGo.g:8145:3: ( ( (lv_operator_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleexpression ) ) )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==RULE_BINARY_OP) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalGo.g:8146:4: ( (lv_operator_1_0= RULE_BINARY_OP ) ) ( (lv_expression_2_0= ruleexpression ) )
                    {
                    // InternalGo.g:8146:4: ( (lv_operator_1_0= RULE_BINARY_OP ) )
                    // InternalGo.g:8147:5: (lv_operator_1_0= RULE_BINARY_OP )
                    {
                    // InternalGo.g:8147:5: (lv_operator_1_0= RULE_BINARY_OP )
                    // InternalGo.g:8148:6: lv_operator_1_0= RULE_BINARY_OP
                    {
                    lv_operator_1_0=(Token)match(input,RULE_BINARY_OP,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_operator_1_0, grammarAccess.getExpressionMatchedAccess().getOperatorBINARY_OPTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExpressionMatchedRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"org.xtext.Go.BINARY_OP");
                      					
                    }

                    }


                    }

                    // InternalGo.g:8164:4: ( (lv_expression_2_0= ruleexpression ) )
                    // InternalGo.g:8165:5: (lv_expression_2_0= ruleexpression )
                    {
                    // InternalGo.g:8165:5: (lv_expression_2_0= ruleexpression )
                    // InternalGo.g:8166:6: lv_expression_2_0= ruleexpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionMatchedAccess().getExpressionExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleexpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionMatchedRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_2_0,
                      							"org.xtext.Go.expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleexpressionMatched"


    // $ANTLR start "entryRuleunaryExpr"
    // InternalGo.g:8188:1: entryRuleunaryExpr returns [EObject current=null] : iv_ruleunaryExpr= ruleunaryExpr EOF ;
    public final EObject entryRuleunaryExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleunaryExpr = null;


        try {
            // InternalGo.g:8188:50: (iv_ruleunaryExpr= ruleunaryExpr EOF )
            // InternalGo.g:8189:2: iv_ruleunaryExpr= ruleunaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleunaryExpr=ruleunaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleunaryExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleunaryExpr"


    // $ANTLR start "ruleunaryExpr"
    // InternalGo.g:8195:1: ruleunaryExpr returns [EObject current=null] : ( ( (lv_primaryExpr_0_0= ruleprimaryExpr ) ) | ( (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) ) ) ) ;
    public final EObject ruleunaryExpr() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_primaryExpr_0_0 = null;

        EObject lv_unaryExpr_8_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8201:2: ( ( ( (lv_primaryExpr_0_0= ruleprimaryExpr ) ) | ( (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) ) ) ) )
            // InternalGo.g:8202:2: ( ( (lv_primaryExpr_0_0= ruleprimaryExpr ) ) | ( (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) ) ) )
            {
            // InternalGo.g:8202:2: ( ( (lv_primaryExpr_0_0= ruleprimaryExpr ) ) | ( (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) ) ) )
            int alt103=2;
            switch ( input.LA(1) ) {
            case EOF:
            case RULE_IDENTIFIER:
            case RULE_STRING_LIT:
            case RULE_INT_LIT:
            case RULE_FLOAT_LIT:
            case RULE_IMAGINARY_LIT:
            case RULE_RUNE_LIT:
            case RULE_BINARY_OP:
            case 45:
            case 46:
            case 47:
            case 49:
            case 50:
            case 52:
            case 54:
            case 55:
            case 57:
            case 58:
            case 61:
            case 64:
            case 65:
            case 66:
            case 67:
            case 69:
            case 71:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 103:
                {
                alt103=1;
                }
                break;
            case 63:
                {
                int LA103_2 = input.LA(2);

                if ( (synpred163_InternalGo()) ) {
                    alt103=1;
                }
                else if ( (true) ) {
                    alt103=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 103, 2, input);

                    throw nvae;
                }
                }
                break;
            case 56:
                {
                int LA103_3 = input.LA(2);

                if ( (synpred163_InternalGo()) ) {
                    alt103=1;
                }
                else if ( (true) ) {
                    alt103=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 103, 3, input);

                    throw nvae;
                }
                }
                break;
            case 59:
                {
                int LA103_4 = input.LA(2);

                if ( (synpred163_InternalGo()) ) {
                    alt103=1;
                }
                else if ( (true) ) {
                    alt103=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 103, 4, input);

                    throw nvae;
                }
                }
                break;
            case 60:
                {
                int LA103_5 = input.LA(2);

                if ( (synpred163_InternalGo()) ) {
                    alt103=1;
                }
                else if ( (true) ) {
                    alt103=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 103, 5, input);

                    throw nvae;
                }
                }
                break;
            case 62:
                {
                int LA103_6 = input.LA(2);

                if ( (synpred163_InternalGo()) ) {
                    alt103=1;
                }
                else if ( (true) ) {
                    alt103=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 103, 6, input);

                    throw nvae;
                }
                }
                break;
            case 68:
                {
                int LA103_7 = input.LA(2);

                if ( (synpred163_InternalGo()) ) {
                    alt103=1;
                }
                else if ( (true) ) {
                    alt103=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 103, 7, input);

                    throw nvae;
                }
                }
                break;
            case 102:
                {
                alt103=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 103, 0, input);

                throw nvae;
            }

            switch (alt103) {
                case 1 :
                    // InternalGo.g:8203:3: ( (lv_primaryExpr_0_0= ruleprimaryExpr ) )
                    {
                    // InternalGo.g:8203:3: ( (lv_primaryExpr_0_0= ruleprimaryExpr ) )
                    // InternalGo.g:8204:4: (lv_primaryExpr_0_0= ruleprimaryExpr )
                    {
                    // InternalGo.g:8204:4: (lv_primaryExpr_0_0= ruleprimaryExpr )
                    // InternalGo.g:8205:5: lv_primaryExpr_0_0= ruleprimaryExpr
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_primaryExpr_0_0=ruleprimaryExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnaryExprRule());
                      					}
                      					set(
                      						current,
                      						"primaryExpr",
                      						lv_primaryExpr_0_0,
                      						"org.xtext.Go.primaryExpr");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:8223:3: ( (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) ) )
                    {
                    // InternalGo.g:8223:3: ( (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) ) )
                    // InternalGo.g:8224:4: (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' ) ( (lv_unaryExpr_8_0= ruleunaryExpr ) )
                    {
                    // InternalGo.g:8224:4: (otherlv_1= '+' | otherlv_2= '-' | otherlv_3= '!' | otherlv_4= '^' | otherlv_5= '*' | otherlv_6= '&' | otherlv_7= '<-' )
                    int alt102=7;
                    switch ( input.LA(1) ) {
                    case 59:
                        {
                        alt102=1;
                        }
                        break;
                    case 60:
                        {
                        alt102=2;
                        }
                        break;
                    case 102:
                        {
                        alt102=3;
                        }
                        break;
                    case 62:
                        {
                        alt102=4;
                        }
                        break;
                    case 63:
                        {
                        alt102=5;
                        }
                        break;
                    case 68:
                        {
                        alt102=6;
                        }
                        break;
                    case 56:
                        {
                        alt102=7;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 102, 0, input);

                        throw nvae;
                    }

                    switch (alt102) {
                        case 1 :
                            // InternalGo.g:8225:5: otherlv_1= '+'
                            {
                            otherlv_1=(Token)match(input,59,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getUnaryExprAccess().getPlusSignKeyword_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalGo.g:8230:5: otherlv_2= '-'
                            {
                            otherlv_2=(Token)match(input,60,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getUnaryExprAccess().getHyphenMinusKeyword_1_0_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalGo.g:8235:5: otherlv_3= '!'
                            {
                            otherlv_3=(Token)match(input,102,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getUnaryExprAccess().getExclamationMarkKeyword_1_0_2());
                              				
                            }

                            }
                            break;
                        case 4 :
                            // InternalGo.g:8240:5: otherlv_4= '^'
                            {
                            otherlv_4=(Token)match(input,62,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getUnaryExprAccess().getCircumflexAccentKeyword_1_0_3());
                              				
                            }

                            }
                            break;
                        case 5 :
                            // InternalGo.g:8245:5: otherlv_5= '*'
                            {
                            otherlv_5=(Token)match(input,63,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getUnaryExprAccess().getAsteriskKeyword_1_0_4());
                              				
                            }

                            }
                            break;
                        case 6 :
                            // InternalGo.g:8250:5: otherlv_6= '&'
                            {
                            otherlv_6=(Token)match(input,68,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getUnaryExprAccess().getAmpersandKeyword_1_0_5());
                              				
                            }

                            }
                            break;
                        case 7 :
                            // InternalGo.g:8255:5: otherlv_7= '<-'
                            {
                            otherlv_7=(Token)match(input,56,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getUnaryExprAccess().getLessThanSignHyphenMinusKeyword_1_0_6());
                              				
                            }

                            }
                            break;

                    }

                    // InternalGo.g:8260:4: ( (lv_unaryExpr_8_0= ruleunaryExpr ) )
                    // InternalGo.g:8261:5: (lv_unaryExpr_8_0= ruleunaryExpr )
                    {
                    // InternalGo.g:8261:5: (lv_unaryExpr_8_0= ruleunaryExpr )
                    // InternalGo.g:8262:6: lv_unaryExpr_8_0= ruleunaryExpr
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExprAccess().getUnaryExprUnaryExprParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_unaryExpr_8_0=ruleunaryExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExprRule());
                      						}
                      						set(
                      							current,
                      							"unaryExpr",
                      							lv_unaryExpr_8_0,
                      							"org.xtext.Go.unaryExpr");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleunaryExpr"


    // $ANTLR start "entryRuleconversion"
    // InternalGo.g:8284:1: entryRuleconversion returns [EObject current=null] : iv_ruleconversion= ruleconversion EOF ;
    public final EObject entryRuleconversion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleconversion = null;


        try {
            // InternalGo.g:8284:51: (iv_ruleconversion= ruleconversion EOF )
            // InternalGo.g:8285:2: iv_ruleconversion= ruleconversion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConversionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleconversion=ruleconversion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleconversion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleconversion"


    // $ANTLR start "ruleconversion"
    // InternalGo.g:8291:1: ruleconversion returns [EObject current=null] : ( ( (lv_type_0_0= ruletype ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) (otherlv_3= ',' )? otherlv_4= ')' ) ;
    public final EObject ruleconversion() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_type_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalGo.g:8297:2: ( ( ( (lv_type_0_0= ruletype ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) (otherlv_3= ',' )? otherlv_4= ')' ) )
            // InternalGo.g:8298:2: ( ( (lv_type_0_0= ruletype ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) (otherlv_3= ',' )? otherlv_4= ')' )
            {
            // InternalGo.g:8298:2: ( ( (lv_type_0_0= ruletype ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) (otherlv_3= ',' )? otherlv_4= ')' )
            // InternalGo.g:8299:3: ( (lv_type_0_0= ruletype ) ) otherlv_1= '(' ( (lv_expression_2_0= ruleexpression ) ) (otherlv_3= ',' )? otherlv_4= ')'
            {
            // InternalGo.g:8299:3: ( (lv_type_0_0= ruletype ) )
            // InternalGo.g:8300:4: (lv_type_0_0= ruletype )
            {
            // InternalGo.g:8300:4: (lv_type_0_0= ruletype )
            // InternalGo.g:8301:5: lv_type_0_0= ruletype
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_type_0_0=ruletype();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConversionRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_0_0,
              						"org.xtext.Go.type");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,45,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalGo.g:8322:3: ( (lv_expression_2_0= ruleexpression ) )
            // InternalGo.g:8323:4: (lv_expression_2_0= ruleexpression )
            {
            // InternalGo.g:8323:4: (lv_expression_2_0= ruleexpression )
            // InternalGo.g:8324:5: lv_expression_2_0= ruleexpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_62);
            lv_expression_2_0=ruleexpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConversionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.xtext.Go.expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalGo.g:8341:3: (otherlv_3= ',' )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==50) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalGo.g:8342:4: otherlv_3= ','
                    {
                    otherlv_3=(Token)match(input,50,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getConversionAccess().getCommaKeyword_3());
                      			
                    }

                    }
                    break;

            }

            otherlv_4=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getConversionAccess().getRightParenthesisKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleconversion"


    // $ANTLR start "entryRuleeos"
    // InternalGo.g:8355:1: entryRuleeos returns [String current=null] : iv_ruleeos= ruleeos EOF ;
    public final String entryRuleeos() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleeos = null;


        try {
            // InternalGo.g:8355:43: (iv_ruleeos= ruleeos EOF )
            // InternalGo.g:8356:2: iv_ruleeos= ruleeos EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEosRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleeos=ruleeos();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleeos.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleeos"


    // $ANTLR start "ruleeos"
    // InternalGo.g:8362:1: ruleeos returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= ';' ;
    public final AntlrDatatypeRuleToken ruleeos() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalGo.g:8368:2: (kw= ';' )
            // InternalGo.g:8369:2: kw= ';'
            {
            kw=(Token)match(input,103,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getEosAccess().getSemicolonKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleeos"

    // $ANTLR start synpred19_InternalGo
    public final void synpred19_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_expr_2_0 = null;


        // InternalGo.g:862:4: (otherlv_1= ',' ( (lv_expr_2_0= ruleexpression ) ) )
        // InternalGo.g:862:4: otherlv_1= ',' ( (lv_expr_2_0= ruleexpression ) )
        {
        otherlv_1=(Token)match(input,50,FOLLOW_16); if (state.failed) return ;
        // InternalGo.g:866:4: ( (lv_expr_2_0= ruleexpression ) )
        // InternalGo.g:867:5: (lv_expr_2_0= ruleexpression )
        {
        // InternalGo.g:867:5: (lv_expr_2_0= ruleexpression )
        // InternalGo.g:868:6: lv_expr_2_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExpressionListAccess().getExprExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_expr_2_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred19_InternalGo

    // $ANTLR start synpred22_InternalGo
    public final void synpred22_InternalGo_fragment() throws RecognitionException {   
        EObject lv_func_2_0 = null;


        // InternalGo.g:1080:4: ( ( (lv_func_2_0= rulefunction ) ) )
        // InternalGo.g:1080:4: ( (lv_func_2_0= rulefunction ) )
        {
        // InternalGo.g:1080:4: ( (lv_func_2_0= rulefunction ) )
        // InternalGo.g:1081:5: (lv_func_2_0= rulefunction )
        {
        // InternalGo.g:1081:5: (lv_func_2_0= rulefunction )
        // InternalGo.g:1082:6: lv_func_2_0= rulefunction
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFunctionDeclAccess().getFuncFunctionParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_func_2_0=rulefunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred22_InternalGo

    // $ANTLR start synpred23_InternalGo
    public final void synpred23_InternalGo_fragment() throws RecognitionException {   
        EObject lv_func_3_0 = null;


        // InternalGo.g:1238:4: ( ( (lv_func_3_0= rulefunction ) ) )
        // InternalGo.g:1238:4: ( (lv_func_3_0= rulefunction ) )
        {
        // InternalGo.g:1238:4: ( (lv_func_3_0= rulefunction ) )
        // InternalGo.g:1239:5: (lv_func_3_0= rulefunction )
        {
        // InternalGo.g:1239:5: (lv_func_3_0= rulefunction )
        // InternalGo.g:1240:6: lv_func_3_0= rulefunction
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getMethodDeclAccess().getFuncFunctionParserRuleCall_3_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_func_3_0=rulefunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred23_InternalGo

    // $ANTLR start synpred43_InternalGo
    public final void synpred43_InternalGo_fragment() throws RecognitionException {   
        EObject lv_sendStmt_0_0 = null;


        // InternalGo.g:1965:3: ( ( (lv_sendStmt_0_0= rulesendStmt ) ) )
        // InternalGo.g:1965:3: ( (lv_sendStmt_0_0= rulesendStmt ) )
        {
        // InternalGo.g:1965:3: ( (lv_sendStmt_0_0= rulesendStmt ) )
        // InternalGo.g:1966:4: (lv_sendStmt_0_0= rulesendStmt )
        {
        // InternalGo.g:1966:4: (lv_sendStmt_0_0= rulesendStmt )
        // InternalGo.g:1967:5: lv_sendStmt_0_0= rulesendStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getSendStmtSendStmtParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_sendStmt_0_0=rulesendStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred43_InternalGo

    // $ANTLR start synpred44_InternalGo
    public final void synpred44_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expressionStmt_1_0 = null;


        // InternalGo.g:1985:3: ( ( (lv_expressionStmt_1_0= ruleexpressionStmt ) ) )
        // InternalGo.g:1985:3: ( (lv_expressionStmt_1_0= ruleexpressionStmt ) )
        {
        // InternalGo.g:1985:3: ( (lv_expressionStmt_1_0= ruleexpressionStmt ) )
        // InternalGo.g:1986:4: (lv_expressionStmt_1_0= ruleexpressionStmt )
        {
        // InternalGo.g:1986:4: (lv_expressionStmt_1_0= ruleexpressionStmt )
        // InternalGo.g:1987:5: lv_expressionStmt_1_0= ruleexpressionStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getExpressionStmtExpressionStmtParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_expressionStmt_1_0=ruleexpressionStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred44_InternalGo

    // $ANTLR start synpred45_InternalGo
    public final void synpred45_InternalGo_fragment() throws RecognitionException {   
        EObject lv_incDecStmt_2_0 = null;


        // InternalGo.g:2005:3: ( ( (lv_incDecStmt_2_0= ruleincDecStmt ) ) )
        // InternalGo.g:2005:3: ( (lv_incDecStmt_2_0= ruleincDecStmt ) )
        {
        // InternalGo.g:2005:3: ( (lv_incDecStmt_2_0= ruleincDecStmt ) )
        // InternalGo.g:2006:4: (lv_incDecStmt_2_0= ruleincDecStmt )
        {
        // InternalGo.g:2006:4: (lv_incDecStmt_2_0= ruleincDecStmt )
        // InternalGo.g:2007:5: lv_incDecStmt_2_0= ruleincDecStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getIncDecStmtIncDecStmtParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_incDecStmt_2_0=ruleincDecStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred45_InternalGo

    // $ANTLR start synpred46_InternalGo
    public final void synpred46_InternalGo_fragment() throws RecognitionException {   
        EObject lv_assignment_3_0 = null;


        // InternalGo.g:2025:3: ( ( (lv_assignment_3_0= ruleassignment ) ) )
        // InternalGo.g:2025:3: ( (lv_assignment_3_0= ruleassignment ) )
        {
        // InternalGo.g:2025:3: ( (lv_assignment_3_0= ruleassignment ) )
        // InternalGo.g:2026:4: (lv_assignment_3_0= ruleassignment )
        {
        // InternalGo.g:2026:4: (lv_assignment_3_0= ruleassignment )
        // InternalGo.g:2027:5: lv_assignment_3_0= ruleassignment
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getAssignmentAssignmentParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_assignment_3_0=ruleassignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred46_InternalGo

    // $ANTLR start synpred47_InternalGo
    public final void synpred47_InternalGo_fragment() throws RecognitionException {   
        EObject lv_shortVarDecl_4_0 = null;


        // InternalGo.g:2045:3: ( ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) ) )
        // InternalGo.g:2045:3: ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) )
        {
        // InternalGo.g:2045:3: ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) )
        // InternalGo.g:2046:4: (lv_shortVarDecl_4_0= ruleshortVarDecl )
        {
        // InternalGo.g:2046:4: (lv_shortVarDecl_4_0= ruleshortVarDecl )
        // InternalGo.g:2047:5: lv_shortVarDecl_4_0= ruleshortVarDecl
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_4_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_shortVarDecl_4_0=ruleshortVarDecl();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred47_InternalGo

    // $ANTLR start synpred60_InternalGo
    public final void synpred60_InternalGo_fragment() throws RecognitionException {   
        EObject lv_exprList_2_0 = null;


        // InternalGo.g:2587:4: ( (lv_exprList_2_0= ruleexpressionList ) )
        // InternalGo.g:2587:4: (lv_exprList_2_0= ruleexpressionList )
        {
        // InternalGo.g:2587:4: (lv_exprList_2_0= ruleexpressionList )
        // InternalGo.g:2588:5: lv_exprList_2_0= ruleexpressionList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getReturnStmtAccess().getExprListExpressionListParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_exprList_2_0=ruleexpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred60_InternalGo

    // $ANTLR start synpred63_InternalGo
    public final void synpred63_InternalGo_fragment() throws RecognitionException {   
        EObject lv_simplStatement_1_0 = null;


        // InternalGo.g:2845:4: ( ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos )
        // InternalGo.g:2845:4: ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos
        {
        // InternalGo.g:2845:4: ( (lv_simplStatement_1_0= rulesimpleStmt ) )
        // InternalGo.g:2846:5: (lv_simplStatement_1_0= rulesimpleStmt )
        {
        // InternalGo.g:2846:5: (lv_simplStatement_1_0= rulesimpleStmt )
        // InternalGo.g:2847:6: lv_simplStatement_1_0= rulesimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getIfStmtAccess().getSimplStatementSimpleStmtParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_5);
        lv_simplStatement_1_0=rulesimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleeos();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred63_InternalGo

    // $ANTLR start synpred66_InternalGo
    public final void synpred66_InternalGo_fragment() throws RecognitionException {   
        EObject lv_statement_0_0 = null;


        // InternalGo.g:2979:3: ( ( (lv_statement_0_0= ruleexprSwitchStmt ) ) )
        // InternalGo.g:2979:3: ( (lv_statement_0_0= ruleexprSwitchStmt ) )
        {
        // InternalGo.g:2979:3: ( (lv_statement_0_0= ruleexprSwitchStmt ) )
        // InternalGo.g:2980:4: (lv_statement_0_0= ruleexprSwitchStmt )
        {
        // InternalGo.g:2980:4: (lv_statement_0_0= ruleexprSwitchStmt )
        // InternalGo.g:2981:5: lv_statement_0_0= ruleexprSwitchStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSwitchStmtAccess().getStatementExprSwitchStmtParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_statement_0_0=ruleexprSwitchStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred66_InternalGo

    // $ANTLR start synpred67_InternalGo
    public final void synpred67_InternalGo_fragment() throws RecognitionException {   
        EObject lv_simpleStmt_2_0 = null;


        // InternalGo.g:3052:4: ( ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) ruleeos )
        // InternalGo.g:3052:4: ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) ruleeos
        {
        // InternalGo.g:3052:4: ( (lv_simpleStmt_2_0= rulesimpleStmt ) )
        // InternalGo.g:3053:5: (lv_simpleStmt_2_0= rulesimpleStmt )
        {
        // InternalGo.g:3053:5: (lv_simpleStmt_2_0= rulesimpleStmt )
        // InternalGo.g:3054:6: lv_simpleStmt_2_0= rulesimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_5);
        lv_simpleStmt_2_0=rulesimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleeos();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred67_InternalGo

    // $ANTLR start synpred68_InternalGo
    public final void synpred68_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expr_4_0 = null;


        // InternalGo.g:3083:4: ( (lv_expr_4_0= ruleexpression ) )
        // InternalGo.g:3083:4: (lv_expr_4_0= ruleexpression )
        {
        // InternalGo.g:3083:4: (lv_expr_4_0= ruleexpression )
        // InternalGo.g:3084:5: lv_expr_4_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getExprSwitchStmtAccess().getExprExpressionParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_expr_4_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred68_InternalGo

    // $ANTLR start synpred71_InternalGo
    public final void synpred71_InternalGo_fragment() throws RecognitionException {   
        EObject lv_simpleStatement_1_0 = null;


        // InternalGo.g:3274:4: ( ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos )
        // InternalGo.g:3274:4: ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos
        {
        // InternalGo.g:3274:4: ( (lv_simpleStatement_1_0= rulesimpleStmt ) )
        // InternalGo.g:3275:5: (lv_simpleStatement_1_0= rulesimpleStmt )
        {
        // InternalGo.g:3275:5: (lv_simpleStatement_1_0= rulesimpleStmt )
        // InternalGo.g:3276:6: lv_simpleStatement_1_0= rulesimpleStmt
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTypeSwitchStmtAccess().getSimpleStatementSimpleStmtParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_5);
        lv_simpleStatement_1_0=rulesimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleeos();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred71_InternalGo

    // $ANTLR start synpred77_InternalGo
    public final void synpred77_InternalGo_fragment() throws RecognitionException {   
        EObject lv_statement_1_0 = null;


        // InternalGo.g:3759:5: ( ( (lv_statement_1_0= rulesendStmt ) ) )
        // InternalGo.g:3759:5: ( (lv_statement_1_0= rulesendStmt ) )
        {
        // InternalGo.g:3759:5: ( (lv_statement_1_0= rulesendStmt ) )
        // InternalGo.g:3760:6: (lv_statement_1_0= rulesendStmt )
        {
        // InternalGo.g:3760:6: (lv_statement_1_0= rulesendStmt )
        // InternalGo.g:3761:7: lv_statement_1_0= rulesendStmt
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getCommCaseAccess().getStatementSendStmtParserRuleCall_0_1_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_statement_1_0=rulesendStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred77_InternalGo

    // $ANTLR start synpred79_InternalGo
    public final void synpred79_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_exprList_0_0 = null;


        // InternalGo.g:3837:4: ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) )
        // InternalGo.g:3837:4: ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' )
        {
        // InternalGo.g:3837:4: ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' )
        // InternalGo.g:3838:5: ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '='
        {
        // InternalGo.g:3838:5: ( (lv_exprList_0_0= ruleexpressionList ) )
        // InternalGo.g:3839:6: (lv_exprList_0_0= ruleexpressionList )
        {
        // InternalGo.g:3839:6: (lv_exprList_0_0= ruleexpressionList )
        // InternalGo.g:3840:7: lv_exprList_0_0= ruleexpressionList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getRecvStmtAccess().getExprListExpressionListParserRuleCall_0_0_0_0());
          						
        }
        pushFollow(FOLLOW_15);
        lv_exprList_0_0=ruleexpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,49,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred79_InternalGo

    // $ANTLR start synpred80_InternalGo
    public final void synpred80_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_idList_2_0 = null;


        // InternalGo.g:3863:4: ( ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )
        // InternalGo.g:3863:4: ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' )
        {
        // InternalGo.g:3863:4: ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' )
        // InternalGo.g:3864:5: ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':='
        {
        // InternalGo.g:3864:5: ( (lv_idList_2_0= ruleidentifierList ) )
        // InternalGo.g:3865:6: (lv_idList_2_0= ruleidentifierList )
        {
        // InternalGo.g:3865:6: (lv_idList_2_0= ruleidentifierList )
        // InternalGo.g:3866:7: lv_idList_2_0= ruleidentifierList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getRecvStmtAccess().getIdListIdentifierListParserRuleCall_0_1_0_0());
          						
        }
        pushFollow(FOLLOW_29);
        lv_idList_2_0=ruleidentifierList();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,70,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred80_InternalGo

    // $ANTLR start synpred81_InternalGo
    public final void synpred81_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expr_1_0 = null;


        // InternalGo.g:3932:4: ( ( (lv_expr_1_0= ruleexpression ) ) )
        // InternalGo.g:3932:4: ( (lv_expr_1_0= ruleexpression ) )
        {
        // InternalGo.g:3932:4: ( (lv_expr_1_0= ruleexpression ) )
        // InternalGo.g:3933:5: (lv_expr_1_0= ruleexpression )
        {
        // InternalGo.g:3933:5: (lv_expr_1_0= ruleexpression )
        // InternalGo.g:3934:6: lv_expr_1_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getExprExpressionParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_expr_1_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred81_InternalGo

    // $ANTLR start synpred82_InternalGo
    public final void synpred82_InternalGo_fragment() throws RecognitionException {   
        EObject lv_clause_2_0 = null;


        // InternalGo.g:3952:4: ( ( (lv_clause_2_0= ruleforClause ) ) )
        // InternalGo.g:3952:4: ( (lv_clause_2_0= ruleforClause ) )
        {
        // InternalGo.g:3952:4: ( (lv_clause_2_0= ruleforClause ) )
        // InternalGo.g:3953:5: (lv_clause_2_0= ruleforClause )
        {
        // InternalGo.g:3953:5: (lv_clause_2_0= ruleforClause )
        // InternalGo.g:3954:6: lv_clause_2_0= ruleforClause
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getClauseForClauseParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_clause_2_0=ruleforClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred82_InternalGo

    // $ANTLR start synpred83_InternalGo
    public final void synpred83_InternalGo_fragment() throws RecognitionException {   
        EObject lv_clause_3_0 = null;


        // InternalGo.g:3972:4: ( ( (lv_clause_3_0= rulerangeClause ) ) )
        // InternalGo.g:3972:4: ( (lv_clause_3_0= rulerangeClause ) )
        {
        // InternalGo.g:3972:4: ( (lv_clause_3_0= rulerangeClause ) )
        // InternalGo.g:3973:5: (lv_clause_3_0= rulerangeClause )
        {
        // InternalGo.g:3973:5: (lv_clause_3_0= rulerangeClause )
        // InternalGo.g:3974:6: lv_clause_3_0= rulerangeClause
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getForStmtAccess().getClauseRangeClauseParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_clause_3_0=rulerangeClause();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred83_InternalGo

    // $ANTLR start synpred84_InternalGo
    public final void synpred84_InternalGo_fragment() throws RecognitionException {   
        EObject lv_statement1_1_0 = null;


        // InternalGo.g:4041:4: ( (lv_statement1_1_0= rulesimpleStmt ) )
        // InternalGo.g:4041:4: (lv_statement1_1_0= rulesimpleStmt )
        {
        // InternalGo.g:4041:4: (lv_statement1_1_0= rulesimpleStmt )
        // InternalGo.g:4042:5: lv_statement1_1_0= rulesimpleStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getForClauseAccess().getStatement1SimpleStmtParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_statement1_1_0=rulesimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred84_InternalGo

    // $ANTLR start synpred85_InternalGo
    public final void synpred85_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expr_3_0 = null;


        // InternalGo.g:4070:4: ( (lv_expr_3_0= ruleexpression ) )
        // InternalGo.g:4070:4: (lv_expr_3_0= ruleexpression )
        {
        // InternalGo.g:4070:4: (lv_expr_3_0= ruleexpression )
        // InternalGo.g:4071:5: lv_expr_3_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getForClauseAccess().getExprExpressionParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_expr_3_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred85_InternalGo

    // $ANTLR start synpred86_InternalGo
    public final void synpred86_InternalGo_fragment() throws RecognitionException {   
        EObject lv_statement2_5_0 = null;


        // InternalGo.g:4099:4: ( (lv_statement2_5_0= rulesimpleStmt ) )
        // InternalGo.g:4099:4: (lv_statement2_5_0= rulesimpleStmt )
        {
        // InternalGo.g:4099:4: (lv_statement2_5_0= rulesimpleStmt )
        // InternalGo.g:4100:5: lv_statement2_5_0= rulesimpleStmt
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getForClauseAccess().getStatement2SimpleStmtParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_statement2_5_0=rulesimpleStmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred86_InternalGo

    // $ANTLR start synpred91_InternalGo
    public final void synpred91_InternalGo_fragment() throws RecognitionException {   
        Token lv_name_0_0=null;

        // InternalGo.g:4361:3: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) )
        // InternalGo.g:4361:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
        {
        // InternalGo.g:4361:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
        // InternalGo.g:4362:4: (lv_name_0_0= RULE_IDENTIFIER )
        {
        // InternalGo.g:4362:4: (lv_name_0_0= RULE_IDENTIFIER )
        // InternalGo.g:4363:5: lv_name_0_0= RULE_IDENTIFIER
        {
        lv_name_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred91_InternalGo

    // $ANTLR start synpred92_InternalGo
    public final void synpred92_InternalGo_fragment() throws RecognitionException {   
        Token lv_contentType_1_0=null;
        EObject lv_lit_0_0 = null;


        // InternalGo.g:4418:3: ( ( ( (lv_lit_0_0= rulearrayType ) ) ( (lv_contentType_1_0= 'Array' ) ) ) )
        // InternalGo.g:4418:3: ( ( (lv_lit_0_0= rulearrayType ) ) ( (lv_contentType_1_0= 'Array' ) ) )
        {
        // InternalGo.g:4418:3: ( ( (lv_lit_0_0= rulearrayType ) ) ( (lv_contentType_1_0= 'Array' ) ) )
        // InternalGo.g:4419:4: ( (lv_lit_0_0= rulearrayType ) ) ( (lv_contentType_1_0= 'Array' ) )
        {
        // InternalGo.g:4419:4: ( (lv_lit_0_0= rulearrayType ) )
        // InternalGo.g:4420:5: (lv_lit_0_0= rulearrayType )
        {
        // InternalGo.g:4420:5: (lv_lit_0_0= rulearrayType )
        // InternalGo.g:4421:6: lv_lit_0_0= rulearrayType
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTypeLitAccess().getLitArrayTypeParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_48);
        lv_lit_0_0=rulearrayType();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:4438:4: ( (lv_contentType_1_0= 'Array' ) )
        // InternalGo.g:4439:5: (lv_contentType_1_0= 'Array' )
        {
        // InternalGo.g:4439:5: (lv_contentType_1_0= 'Array' )
        // InternalGo.g:4440:6: lv_contentType_1_0= 'Array'
        {
        lv_contentType_1_0=(Token)match(input,87,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred92_InternalGo

    // $ANTLR start synpred97_InternalGo
    public final void synpred97_InternalGo_fragment() throws RecognitionException {   
        Token lv_contentType_11_0=null;
        EObject lv_lit_10_0 = null;


        // InternalGo.g:4598:3: ( ( ( (lv_lit_10_0= rulesliceType ) ) ( (lv_contentType_11_0= 'Slice' ) ) ) )
        // InternalGo.g:4598:3: ( ( (lv_lit_10_0= rulesliceType ) ) ( (lv_contentType_11_0= 'Slice' ) ) )
        {
        // InternalGo.g:4598:3: ( ( (lv_lit_10_0= rulesliceType ) ) ( (lv_contentType_11_0= 'Slice' ) ) )
        // InternalGo.g:4599:4: ( (lv_lit_10_0= rulesliceType ) ) ( (lv_contentType_11_0= 'Slice' ) )
        {
        // InternalGo.g:4599:4: ( (lv_lit_10_0= rulesliceType ) )
        // InternalGo.g:4600:5: (lv_lit_10_0= rulesliceType )
        {
        // InternalGo.g:4600:5: (lv_lit_10_0= rulesliceType )
        // InternalGo.g:4601:6: lv_lit_10_0= rulesliceType
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTypeLitAccess().getLitSliceTypeParserRuleCall_5_0_0());
          					
        }
        pushFollow(FOLLOW_53);
        lv_lit_10_0=rulesliceType();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:4618:4: ( (lv_contentType_11_0= 'Slice' ) )
        // InternalGo.g:4619:5: (lv_contentType_11_0= 'Slice' )
        {
        // InternalGo.g:4619:5: (lv_contentType_11_0= 'Slice' )
        // InternalGo.g:4620:6: lv_contentType_11_0= 'Slice'
        {
        lv_contentType_11_0=(Token)match(input,92,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred97_InternalGo

    // $ANTLR start synpred100_InternalGo
    public final void synpred100_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_0=null;

        // InternalGo.g:5091:4: (otherlv_0= 'chan' )
        // InternalGo.g:5091:4: otherlv_0= 'chan'
        {
        otherlv_0=(Token)match(input,99,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred100_InternalGo

    // $ANTLR start synpred101_InternalGo
    public final void synpred101_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_2=null;

        // InternalGo.g:5096:4: ( (otherlv_1= 'chan' otherlv_2= '<-' ) )
        // InternalGo.g:5096:4: (otherlv_1= 'chan' otherlv_2= '<-' )
        {
        // InternalGo.g:5096:4: (otherlv_1= 'chan' otherlv_2= '<-' )
        // InternalGo.g:5097:5: otherlv_1= 'chan' otherlv_2= '<-'
        {
        otherlv_1=(Token)match(input,99,FOLLOW_26); if (state.failed) return ;
        otherlv_2=(Token)match(input,56,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred101_InternalGo

    // $ANTLR start synpred104_InternalGo
    public final void synpred104_InternalGo_fragment() throws RecognitionException {   
        EObject lv_params_0_0 = null;


        // InternalGo.g:5333:3: ( ( (lv_params_0_0= ruleparameters ) ) )
        // InternalGo.g:5333:3: ( (lv_params_0_0= ruleparameters ) )
        {
        // InternalGo.g:5333:3: ( (lv_params_0_0= ruleparameters ) )
        // InternalGo.g:5334:4: (lv_params_0_0= ruleparameters )
        {
        // InternalGo.g:5334:4: (lv_params_0_0= ruleparameters )
        // InternalGo.g:5335:5: lv_params_0_0= ruleparameters
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getResultAccess().getParamsParametersParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_params_0_0=ruleparameters();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred104_InternalGo

    // $ANTLR start synpred108_InternalGo
    public final void synpred108_InternalGo_fragment() throws RecognitionException {   
        EObject lv_identifierList_0_0 = null;


        // InternalGo.g:5519:4: ( (lv_identifierList_0_0= ruleidentifierList ) )
        // InternalGo.g:5519:4: (lv_identifierList_0_0= ruleidentifierList )
        {
        // InternalGo.g:5519:4: (lv_identifierList_0_0= ruleidentifierList )
        // InternalGo.g:5520:5: lv_identifierList_0_0= ruleidentifierList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getParameterDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_identifierList_0_0=ruleidentifierList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred108_InternalGo

    // $ANTLR start synpred110_InternalGo
    public final void synpred110_InternalGo_fragment() throws RecognitionException {   
        EObject lv_literal_0_0 = null;


        // InternalGo.g:5581:3: ( ( (lv_literal_0_0= ruleliteral ) ) )
        // InternalGo.g:5581:3: ( (lv_literal_0_0= ruleliteral ) )
        {
        // InternalGo.g:5581:3: ( (lv_literal_0_0= ruleliteral ) )
        // InternalGo.g:5582:4: (lv_literal_0_0= ruleliteral )
        {
        // InternalGo.g:5582:4: (lv_literal_0_0= ruleliteral )
        // InternalGo.g:5583:5: lv_literal_0_0= ruleliteral
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_literal_0_0=ruleliteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred110_InternalGo

    // $ANTLR start synpred111_InternalGo
    public final void synpred111_InternalGo_fragment() throws RecognitionException {   
        EObject lv_operandName_1_0 = null;


        // InternalGo.g:5601:3: ( ( (lv_operandName_1_0= ruleoperandName ) ) )
        // InternalGo.g:5601:3: ( (lv_operandName_1_0= ruleoperandName ) )
        {
        // InternalGo.g:5601:3: ( (lv_operandName_1_0= ruleoperandName ) )
        // InternalGo.g:5602:4: (lv_operandName_1_0= ruleoperandName )
        {
        // InternalGo.g:5602:4: (lv_operandName_1_0= ruleoperandName )
        // InternalGo.g:5603:5: lv_operandName_1_0= ruleoperandName
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getOperandAccess().getOperandNameOperandNameParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_operandName_1_0=ruleoperandName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred111_InternalGo

    // $ANTLR start synpred112_InternalGo
    public final void synpred112_InternalGo_fragment() throws RecognitionException {   
        EObject lv_methodExpr_2_0 = null;


        // InternalGo.g:5621:3: ( ( (lv_methodExpr_2_0= rulemethodExpr ) ) )
        // InternalGo.g:5621:3: ( (lv_methodExpr_2_0= rulemethodExpr ) )
        {
        // InternalGo.g:5621:3: ( (lv_methodExpr_2_0= rulemethodExpr ) )
        // InternalGo.g:5622:4: (lv_methodExpr_2_0= rulemethodExpr )
        {
        // InternalGo.g:5622:4: (lv_methodExpr_2_0= rulemethodExpr )
        // InternalGo.g:5623:5: lv_methodExpr_2_0= rulemethodExpr
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getOperandAccess().getMethodExprMethodExprParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_methodExpr_2_0=rulemethodExpr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred112_InternalGo

    // $ANTLR start synpred121_InternalGo
    public final void synpred121_InternalGo_fragment() throws RecognitionException {   
        EObject lv_type_1_0 = null;


        // InternalGo.g:6198:3: ( ( (lv_type_1_0= rulearrayType ) ) )
        // InternalGo.g:6198:3: ( (lv_type_1_0= rulearrayType ) )
        {
        // InternalGo.g:6198:3: ( (lv_type_1_0= rulearrayType ) )
        // InternalGo.g:6199:4: (lv_type_1_0= rulearrayType )
        {
        // InternalGo.g:6199:4: (lv_type_1_0= rulearrayType )
        // InternalGo.g:6200:5: lv_type_1_0= rulearrayType
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeArrayTypeParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_type_1_0=rulearrayType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred121_InternalGo

    // $ANTLR start synpred122_InternalGo
    public final void synpred122_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_type_5_0 = null;


        // InternalGo.g:6218:3: ( (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) ) ) )
        // InternalGo.g:6218:3: (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) ) )
        {
        // InternalGo.g:6218:3: (otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) ) )
        // InternalGo.g:6219:4: otherlv_2= '[' otherlv_3= '...' otherlv_4= ']' ( (lv_type_5_0= ruleelementType ) )
        {
        otherlv_2=(Token)match(input,95,FOLLOW_64); if (state.failed) return ;
        otherlv_3=(Token)match(input,100,FOLLOW_56); if (state.failed) return ;
        otherlv_4=(Token)match(input,96,FOLLOW_18); if (state.failed) return ;
        // InternalGo.g:6231:4: ( (lv_type_5_0= ruleelementType ) )
        // InternalGo.g:6232:5: (lv_type_5_0= ruleelementType )
        {
        // InternalGo.g:6232:5: (lv_type_5_0= ruleelementType )
        // InternalGo.g:6233:6: lv_type_5_0= ruleelementType
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeElementTypeParserRuleCall_2_3_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_type_5_0=ruleelementType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred122_InternalGo

    // $ANTLR start synpred123_InternalGo
    public final void synpred123_InternalGo_fragment() throws RecognitionException {   
        EObject lv_type_6_0 = null;


        // InternalGo.g:6252:3: ( ( (lv_type_6_0= rulesliceType ) ) )
        // InternalGo.g:6252:3: ( (lv_type_6_0= rulesliceType ) )
        {
        // InternalGo.g:6252:3: ( (lv_type_6_0= rulesliceType ) )
        // InternalGo.g:6253:4: (lv_type_6_0= rulesliceType )
        {
        // InternalGo.g:6253:4: (lv_type_6_0= rulesliceType )
        // InternalGo.g:6254:5: lv_type_6_0= rulesliceType
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLiteralTypeAccess().getTypeSliceTypeParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_type_6_0=rulesliceType();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred123_InternalGo

    // $ANTLR start synpred126_InternalGo
    public final void synpred126_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_elementList_2_0 = null;


        // InternalGo.g:6345:4: ( ( (lv_elementList_2_0= ruleelementList ) ) (otherlv_3= ',' )? )
        // InternalGo.g:6345:4: ( (lv_elementList_2_0= ruleelementList ) ) (otherlv_3= ',' )?
        {
        // InternalGo.g:6345:4: ( (lv_elementList_2_0= ruleelementList ) )
        // InternalGo.g:6346:5: (lv_elementList_2_0= ruleelementList )
        {
        // InternalGo.g:6346:5: (lv_elementList_2_0= ruleelementList )
        // InternalGo.g:6347:6: lv_elementList_2_0= ruleelementList
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getLiteralValueAccess().getElementListElementListParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_17);
        lv_elementList_2_0=ruleelementList();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalGo.g:6364:4: (otherlv_3= ',' )?
        int alt112=2;
        int LA112_0 = input.LA(1);

        if ( (LA112_0==50) ) {
            alt112=1;
        }
        switch (alt112) {
            case 1 :
                // InternalGo.g:6365:5: otherlv_3= ','
                {
                otherlv_3=(Token)match(input,50,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred126_InternalGo

    // $ANTLR start synpred127_InternalGo
    public final void synpred127_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_keyedElements_2_0 = null;


        // InternalGo.g:6414:4: (otherlv_1= ',' ( (lv_keyedElements_2_0= rulekeyedElement ) ) )
        // InternalGo.g:6414:4: otherlv_1= ',' ( (lv_keyedElements_2_0= rulekeyedElement ) )
        {
        otherlv_1=(Token)match(input,50,FOLLOW_38); if (state.failed) return ;
        // InternalGo.g:6418:4: ( (lv_keyedElements_2_0= rulekeyedElement ) )
        // InternalGo.g:6419:5: (lv_keyedElements_2_0= rulekeyedElement )
        {
        // InternalGo.g:6419:5: (lv_keyedElements_2_0= rulekeyedElement )
        // InternalGo.g:6420:6: lv_keyedElements_2_0= rulekeyedElement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getElementListAccess().getKeyedElementsKeyedElementParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_keyedElements_2_0=rulekeyedElement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred127_InternalGo

    // $ANTLR start synpred128_InternalGo
    public final void synpred128_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_key_0_0 = null;


        // InternalGo.g:6458:4: ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )
        // InternalGo.g:6458:4: ( (lv_key_0_0= rulekey ) ) otherlv_1= ':'
        {
        // InternalGo.g:6458:4: ( (lv_key_0_0= rulekey ) )
        // InternalGo.g:6459:5: (lv_key_0_0= rulekey )
        {
        // InternalGo.g:6459:5: (lv_key_0_0= rulekey )
        // InternalGo.g:6460:6: lv_key_0_0= rulekey
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getKeyedElementAccess().getKeyKeyParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_30);
        lv_key_0_0=rulekey();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,71,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred128_InternalGo

    // $ANTLR start synpred129_InternalGo
    public final void synpred129_InternalGo_fragment() throws RecognitionException {   
        Token lv_name_0_0=null;

        // InternalGo.g:6520:3: ( ( (lv_name_0_0= RULE_IDENTIFIER ) ) )
        // InternalGo.g:6520:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
        {
        // InternalGo.g:6520:3: ( (lv_name_0_0= RULE_IDENTIFIER ) )
        // InternalGo.g:6521:4: (lv_name_0_0= RULE_IDENTIFIER )
        {
        // InternalGo.g:6521:4: (lv_name_0_0= RULE_IDENTIFIER )
        // InternalGo.g:6522:5: lv_name_0_0= RULE_IDENTIFIER
        {
        lv_name_0_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred129_InternalGo

    // $ANTLR start synpred130_InternalGo
    public final void synpred130_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expr_1_0 = null;


        // InternalGo.g:6539:3: ( ( (lv_expr_1_0= ruleexpression ) ) )
        // InternalGo.g:6539:3: ( (lv_expr_1_0= ruleexpression ) )
        {
        // InternalGo.g:6539:3: ( (lv_expr_1_0= ruleexpression ) )
        // InternalGo.g:6540:4: (lv_expr_1_0= ruleexpression )
        {
        // InternalGo.g:6540:4: (lv_expr_1_0= ruleexpression )
        // InternalGo.g:6541:5: lv_expr_1_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getKeyAccess().getExprExpressionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_expr_1_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred130_InternalGo

    // $ANTLR start synpred136_InternalGo
    public final void synpred136_InternalGo_fragment() throws RecognitionException {   
        EObject lv_operand_0_0 = null;


        // InternalGo.g:6901:4: ( ( (lv_operand_0_0= ruleoperand ) ) )
        // InternalGo.g:6901:4: ( (lv_operand_0_0= ruleoperand ) )
        {
        // InternalGo.g:6901:4: ( (lv_operand_0_0= ruleoperand ) )
        // InternalGo.g:6902:5: (lv_operand_0_0= ruleoperand )
        {
        // InternalGo.g:6902:5: (lv_operand_0_0= ruleoperand )
        // InternalGo.g:6903:6: lv_operand_0_0= ruleoperand
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPrimaryExprAccess().getOperandOperandParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operand_0_0=ruleoperand();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred136_InternalGo

    // $ANTLR start synpred137_InternalGo
    public final void synpred137_InternalGo_fragment() throws RecognitionException {   
        EObject lv_operand_0_0 = null;

        EObject lv_conversion_1_0 = null;


        // InternalGo.g:6900:3: ( ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) ) )
        // InternalGo.g:6900:3: ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) )
        {
        // InternalGo.g:6900:3: ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) )
        int alt113=2;
        alt113 = dfa113.predict(input);
        switch (alt113) {
            case 1 :
                // InternalGo.g:6901:4: ( (lv_operand_0_0= ruleoperand ) )
                {
                // InternalGo.g:6901:4: ( (lv_operand_0_0= ruleoperand ) )
                // InternalGo.g:6902:5: (lv_operand_0_0= ruleoperand )
                {
                // InternalGo.g:6902:5: (lv_operand_0_0= ruleoperand )
                // InternalGo.g:6903:6: lv_operand_0_0= ruleoperand
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getPrimaryExprAccess().getOperandOperandParserRuleCall_0_0_0());
                  					
                }
                pushFollow(FOLLOW_2);
                lv_operand_0_0=ruleoperand();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalGo.g:6921:4: ( (lv_conversion_1_0= ruleconversion ) )
                {
                // InternalGo.g:6921:4: ( (lv_conversion_1_0= ruleconversion ) )
                // InternalGo.g:6922:5: (lv_conversion_1_0= ruleconversion )
                {
                // InternalGo.g:6922:5: (lv_conversion_1_0= ruleconversion )
                // InternalGo.g:6923:6: lv_conversion_1_0= ruleconversion
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getPrimaryExprAccess().getConversionConversionParserRuleCall_0_1_0());
                  					
                }
                pushFollow(FOLLOW_2);
                lv_conversion_1_0=ruleconversion();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }
    }
    // $ANTLR end synpred137_InternalGo

    // $ANTLR start synpred138_InternalGo
    public final void synpred138_InternalGo_fragment() throws RecognitionException {   
        EObject lv_primaryExprSelector_2_0 = null;


        // InternalGo.g:6942:3: ( ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) ) )
        // InternalGo.g:6942:3: ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) )
        {
        // InternalGo.g:6942:3: ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) )
        // InternalGo.g:6943:4: (lv_primaryExprSelector_2_0= ruleprimaryExprSelector )
        {
        // InternalGo.g:6943:4: (lv_primaryExprSelector_2_0= ruleprimaryExprSelector )
        // InternalGo.g:6944:5: lv_primaryExprSelector_2_0= ruleprimaryExprSelector
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprSelectorPrimaryExprSelectorParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_primaryExprSelector_2_0=ruleprimaryExprSelector();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred138_InternalGo

    // $ANTLR start synpred139_InternalGo
    public final void synpred139_InternalGo_fragment() throws RecognitionException {   
        EObject lv_primaryExprIndex_3_0 = null;


        // InternalGo.g:6962:3: ( ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) ) )
        // InternalGo.g:6962:3: ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) )
        {
        // InternalGo.g:6962:3: ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) )
        // InternalGo.g:6963:4: (lv_primaryExprIndex_3_0= ruleprimaryExprIndex )
        {
        // InternalGo.g:6963:4: (lv_primaryExprIndex_3_0= ruleprimaryExprIndex )
        // InternalGo.g:6964:5: lv_primaryExprIndex_3_0= ruleprimaryExprIndex
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprIndexPrimaryExprIndexParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_primaryExprIndex_3_0=ruleprimaryExprIndex();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred139_InternalGo

    // $ANTLR start synpred140_InternalGo
    public final void synpred140_InternalGo_fragment() throws RecognitionException {   
        EObject lv_primaryExprSlice_4_0 = null;


        // InternalGo.g:6982:3: ( ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) ) )
        // InternalGo.g:6982:3: ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) )
        {
        // InternalGo.g:6982:3: ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) )
        // InternalGo.g:6983:4: (lv_primaryExprSlice_4_0= ruleprimaryExprSlice )
        {
        // InternalGo.g:6983:4: (lv_primaryExprSlice_4_0= ruleprimaryExprSlice )
        // InternalGo.g:6984:5: lv_primaryExprSlice_4_0= ruleprimaryExprSlice
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprSlicePrimaryExprSliceParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_primaryExprSlice_4_0=ruleprimaryExprSlice();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred140_InternalGo

    // $ANTLR start synpred141_InternalGo
    public final void synpred141_InternalGo_fragment() throws RecognitionException {   
        EObject lv_primaryExprTypeAssertion_5_0 = null;


        // InternalGo.g:7002:3: ( ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) ) )
        // InternalGo.g:7002:3: ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) )
        {
        // InternalGo.g:7002:3: ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) )
        // InternalGo.g:7003:4: (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion )
        {
        // InternalGo.g:7003:4: (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion )
        // InternalGo.g:7004:5: lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprAccess().getPrimaryExprTypeAssertionPrimaryExprTypeAssertionParserRuleCall_4_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_primaryExprTypeAssertion_5_0=ruleprimaryExprTypeAssertion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred141_InternalGo

    // $ANTLR start synpred142_InternalGo
    public final void synpred142_InternalGo_fragment() throws RecognitionException {   
        EObject lv_selector_0_0 = null;


        // InternalGo.g:7060:3: ( ( (lv_selector_0_0= ruleselector ) ) )
        // InternalGo.g:7060:3: ( (lv_selector_0_0= ruleselector ) )
        {
        // InternalGo.g:7060:3: ( (lv_selector_0_0= ruleselector ) )
        // InternalGo.g:7061:4: (lv_selector_0_0= ruleselector )
        {
        // InternalGo.g:7061:4: (lv_selector_0_0= ruleselector )
        // InternalGo.g:7062:5: lv_selector_0_0= ruleselector
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getSelectorSelectorParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_selector_0_0=ruleselector();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred142_InternalGo

    // $ANTLR start synpred143_InternalGo
    public final void synpred143_InternalGo_fragment() throws RecognitionException {   
        EObject lv_index_1_0 = null;


        // InternalGo.g:7080:3: ( ( (lv_index_1_0= ruleindex ) ) )
        // InternalGo.g:7080:3: ( (lv_index_1_0= ruleindex ) )
        {
        // InternalGo.g:7080:3: ( (lv_index_1_0= ruleindex ) )
        // InternalGo.g:7081:4: (lv_index_1_0= ruleindex )
        {
        // InternalGo.g:7081:4: (lv_index_1_0= ruleindex )
        // InternalGo.g:7082:5: lv_index_1_0= ruleindex
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getIndexIndexParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_index_1_0=ruleindex();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred143_InternalGo

    // $ANTLR start synpred144_InternalGo
    public final void synpred144_InternalGo_fragment() throws RecognitionException {   
        EObject lv_slice_2_0 = null;


        // InternalGo.g:7100:3: ( ( (lv_slice_2_0= ruleslice ) ) )
        // InternalGo.g:7100:3: ( (lv_slice_2_0= ruleslice ) )
        {
        // InternalGo.g:7100:3: ( (lv_slice_2_0= ruleslice ) )
        // InternalGo.g:7101:4: (lv_slice_2_0= ruleslice )
        {
        // InternalGo.g:7101:4: (lv_slice_2_0= ruleslice )
        // InternalGo.g:7102:5: lv_slice_2_0= ruleslice
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getSliceSliceParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_slice_2_0=ruleslice();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred144_InternalGo

    // $ANTLR start synpred145_InternalGo
    public final void synpred145_InternalGo_fragment() throws RecognitionException {   
        EObject lv_typeAssertion_3_0 = null;


        // InternalGo.g:7120:3: ( ( (lv_typeAssertion_3_0= ruletypeAssertion ) ) )
        // InternalGo.g:7120:3: ( (lv_typeAssertion_3_0= ruletypeAssertion ) )
        {
        // InternalGo.g:7120:3: ( (lv_typeAssertion_3_0= ruletypeAssertion ) )
        // InternalGo.g:7121:4: (lv_typeAssertion_3_0= ruletypeAssertion )
        {
        // InternalGo.g:7121:4: (lv_typeAssertion_3_0= ruletypeAssertion )
        // InternalGo.g:7122:5: lv_typeAssertion_3_0= ruletypeAssertion
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getPrimaryExprStuffAccess().getTypeAssertionTypeAssertionParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_typeAssertion_3_0=ruletypeAssertion();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred145_InternalGo

    // $ANTLR start synpred151_InternalGo
    public final void synpred151_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expr1_2_0 = null;


        // InternalGo.g:7627:6: ( (lv_expr1_2_0= ruleexpression ) )
        // InternalGo.g:7627:6: (lv_expr1_2_0= ruleexpression )
        {
        // InternalGo.g:7627:6: (lv_expr1_2_0= ruleexpression )
        // InternalGo.g:7628:7: lv_expr1_2_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getSliceAccess().getExpr1ExpressionParserRuleCall_2_0_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_expr1_2_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred151_InternalGo

    // $ANTLR start synpred152_InternalGo
    public final void synpred152_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expr2_4_0 = null;


        // InternalGo.g:7650:6: ( (lv_expr2_4_0= ruleexpression ) )
        // InternalGo.g:7650:6: (lv_expr2_4_0= ruleexpression )
        {
        // InternalGo.g:7650:6: (lv_expr2_4_0= ruleexpression )
        // InternalGo.g:7651:7: lv_expr2_4_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getSliceAccess().getExpr2ExpressionParserRuleCall_2_0_2_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_expr2_4_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred152_InternalGo

    // $ANTLR start synpred153_InternalGo
    public final void synpred153_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_expr1_2_0 = null;

        EObject lv_expr2_4_0 = null;


        // InternalGo.g:7625:4: ( ( ( (lv_expr1_2_0= ruleexpression ) )? otherlv_3= ':' ( (lv_expr2_4_0= ruleexpression ) )? ) )
        // InternalGo.g:7625:4: ( ( (lv_expr1_2_0= ruleexpression ) )? otherlv_3= ':' ( (lv_expr2_4_0= ruleexpression ) )? )
        {
        // InternalGo.g:7625:4: ( ( (lv_expr1_2_0= ruleexpression ) )? otherlv_3= ':' ( (lv_expr2_4_0= ruleexpression ) )? )
        // InternalGo.g:7626:5: ( (lv_expr1_2_0= ruleexpression ) )? otherlv_3= ':' ( (lv_expr2_4_0= ruleexpression ) )?
        {
        // InternalGo.g:7626:5: ( (lv_expr1_2_0= ruleexpression ) )?
        int alt114=2;
        int LA114_0 = input.LA(1);

        if ( ((LA114_0>=RULE_IDENTIFIER && LA114_0<=RULE_STRING_LIT)||(LA114_0>=RULE_INT_LIT && LA114_0<=RULE_BINARY_OP)||LA114_0==45||LA114_0==47||LA114_0==52||LA114_0==56||(LA114_0>=59 && LA114_0<=60)||(LA114_0>=62 && LA114_0<=63)||LA114_0==68||LA114_0==95||(LA114_0>=97 && LA114_0<=99)||(LA114_0>=101 && LA114_0<=102)) ) {
            alt114=1;
        }
        else if ( (LA114_0==71) ) {
            int LA114_2 = input.LA(2);

            if ( (synpred151_InternalGo()) ) {
                alt114=1;
            }
        }
        switch (alt114) {
            case 1 :
                // InternalGo.g:7627:6: (lv_expr1_2_0= ruleexpression )
                {
                // InternalGo.g:7627:6: (lv_expr1_2_0= ruleexpression )
                // InternalGo.g:7628:7: lv_expr1_2_0= ruleexpression
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getSliceAccess().getExpr1ExpressionParserRuleCall_2_0_0_0());
                  						
                }
                pushFollow(FOLLOW_30);
                lv_expr1_2_0=ruleexpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_3=(Token)match(input,71,FOLLOW_32); if (state.failed) return ;
        // InternalGo.g:7649:5: ( (lv_expr2_4_0= ruleexpression ) )?
        int alt115=2;
        int LA115_0 = input.LA(1);

        if ( ((LA115_0>=RULE_IDENTIFIER && LA115_0<=RULE_STRING_LIT)||(LA115_0>=RULE_INT_LIT && LA115_0<=RULE_BINARY_OP)||LA115_0==45||LA115_0==47||LA115_0==52||LA115_0==56||(LA115_0>=59 && LA115_0<=60)||(LA115_0>=62 && LA115_0<=63)||LA115_0==68||LA115_0==95||(LA115_0>=97 && LA115_0<=99)||(LA115_0>=101 && LA115_0<=102)) ) {
            alt115=1;
        }
        else if ( (LA115_0==EOF) ) {
            int LA115_2 = input.LA(2);

            if ( (synpred152_InternalGo()) ) {
                alt115=1;
            }
        }
        switch (alt115) {
            case 1 :
                // InternalGo.g:7650:6: (lv_expr2_4_0= ruleexpression )
                {
                // InternalGo.g:7650:6: (lv_expr2_4_0= ruleexpression )
                // InternalGo.g:7651:7: lv_expr2_4_0= ruleexpression
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getSliceAccess().getExpr2ExpressionParserRuleCall_2_0_2_0());
                  						
                }
                pushFollow(FOLLOW_2);
                lv_expr2_4_0=ruleexpression();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred153_InternalGo

    // $ANTLR start synpred154_InternalGo
    public final void synpred154_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expr1_5_0 = null;


        // InternalGo.g:7672:6: ( (lv_expr1_5_0= ruleexpression ) )
        // InternalGo.g:7672:6: (lv_expr1_5_0= ruleexpression )
        {
        // InternalGo.g:7672:6: (lv_expr1_5_0= ruleexpression )
        // InternalGo.g:7673:7: lv_expr1_5_0= ruleexpression
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getSliceAccess().getExpr1ExpressionParserRuleCall_2_1_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_expr1_5_0=ruleexpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred154_InternalGo

    // $ANTLR start synpred155_InternalGo
    public final void synpred155_InternalGo_fragment() throws RecognitionException {   
        EObject lv_expressionList_2_0 = null;


        // InternalGo.g:7827:5: ( ( (lv_expressionList_2_0= ruleexpressionList ) ) )
        // InternalGo.g:7827:5: ( (lv_expressionList_2_0= ruleexpressionList ) )
        {
        // InternalGo.g:7827:5: ( (lv_expressionList_2_0= ruleexpressionList ) )
        // InternalGo.g:7828:6: (lv_expressionList_2_0= ruleexpressionList )
        {
        // InternalGo.g:7828:6: (lv_expressionList_2_0= ruleexpressionList )
        // InternalGo.g:7829:7: lv_expressionList_2_0= ruleexpressionList
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_expressionList_2_0=ruleexpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred155_InternalGo

    // $ANTLR start synpred156_InternalGo
    public final void synpred156_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_expressionList_5_0 = null;


        // InternalGo.g:7868:7: (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )
        // InternalGo.g:7868:7: otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) )
        {
        otherlv_4=(Token)match(input,50,FOLLOW_16); if (state.failed) return ;
        // InternalGo.g:7872:7: ( (lv_expressionList_5_0= ruleexpressionList ) )
        // InternalGo.g:7873:8: (lv_expressionList_5_0= ruleexpressionList )
        {
        // InternalGo.g:7873:8: (lv_expressionList_5_0= ruleexpressionList )
        // InternalGo.g:7874:9: lv_expressionList_5_0= ruleexpressionList
        {
        if ( state.backtracking==0 ) {

          									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_1_1_1_0());
          								
        }
        pushFollow(FOLLOW_2);
        lv_expressionList_5_0=ruleexpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred156_InternalGo

    // $ANTLR start synpred159_InternalGo
    public final void synpred159_InternalGo_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_expressionList_2_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_expressionList_5_0 = null;


        // InternalGo.g:7826:4: ( ( ( (lv_expressionList_2_0= ruleexpressionList ) ) | ( ( (lv_type_3_0= ruletype ) ) (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )? )
        // InternalGo.g:7826:4: ( ( (lv_expressionList_2_0= ruleexpressionList ) ) | ( ( (lv_type_3_0= ruletype ) ) (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )? ) ) (otherlv_6= '...' )? (otherlv_7= ',' )?
        {
        // InternalGo.g:7826:4: ( ( (lv_expressionList_2_0= ruleexpressionList ) ) | ( ( (lv_type_3_0= ruletype ) ) (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )? ) )
        int alt117=2;
        alt117 = dfa117.predict(input);
        switch (alt117) {
            case 1 :
                // InternalGo.g:7827:5: ( (lv_expressionList_2_0= ruleexpressionList ) )
                {
                // InternalGo.g:7827:5: ( (lv_expressionList_2_0= ruleexpressionList ) )
                // InternalGo.g:7828:6: (lv_expressionList_2_0= ruleexpressionList )
                {
                // InternalGo.g:7828:6: (lv_expressionList_2_0= ruleexpressionList )
                // InternalGo.g:7829:7: lv_expressionList_2_0= ruleexpressionList
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_0_0());
                  						
                }
                pushFollow(FOLLOW_76);
                lv_expressionList_2_0=ruleexpressionList();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalGo.g:7847:5: ( ( (lv_type_3_0= ruletype ) ) (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )? )
                {
                // InternalGo.g:7847:5: ( ( (lv_type_3_0= ruletype ) ) (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )? )
                // InternalGo.g:7848:6: ( (lv_type_3_0= ruletype ) ) (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )?
                {
                // InternalGo.g:7848:6: ( (lv_type_3_0= ruletype ) )
                // InternalGo.g:7849:7: (lv_type_3_0= ruletype )
                {
                // InternalGo.g:7849:7: (lv_type_3_0= ruletype )
                // InternalGo.g:7850:8: lv_type_3_0= ruletype
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0());
                  							
                }
                pushFollow(FOLLOW_76);
                lv_type_3_0=ruletype();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalGo.g:7867:6: (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )?
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==50) ) {
                    int LA116_1 = input.LA(2);

                    if ( (synpred156_InternalGo()) ) {
                        alt116=1;
                    }
                }
                switch (alt116) {
                    case 1 :
                        // InternalGo.g:7868:7: otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) )
                        {
                        otherlv_4=(Token)match(input,50,FOLLOW_16); if (state.failed) return ;
                        // InternalGo.g:7872:7: ( (lv_expressionList_5_0= ruleexpressionList ) )
                        // InternalGo.g:7873:8: (lv_expressionList_5_0= ruleexpressionList )
                        {
                        // InternalGo.g:7873:8: (lv_expressionList_5_0= ruleexpressionList )
                        // InternalGo.g:7874:9: lv_expressionList_5_0= ruleexpressionList
                        {
                        if ( state.backtracking==0 ) {

                          									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_2_0_1_1_1_0());
                          								
                        }
                        pushFollow(FOLLOW_76);
                        lv_expressionList_5_0=ruleexpressionList();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;

        }

        // InternalGo.g:7894:4: (otherlv_6= '...' )?
        int alt118=2;
        int LA118_0 = input.LA(1);

        if ( (LA118_0==100) ) {
            alt118=1;
        }
        switch (alt118) {
            case 1 :
                // InternalGo.g:7895:5: otherlv_6= '...'
                {
                otherlv_6=(Token)match(input,100,FOLLOW_17); if (state.failed) return ;

                }
                break;

        }

        // InternalGo.g:7900:4: (otherlv_7= ',' )?
        int alt119=2;
        int LA119_0 = input.LA(1);

        if ( (LA119_0==50) ) {
            alt119=1;
        }
        switch (alt119) {
            case 1 :
                // InternalGo.g:7901:5: otherlv_7= ','
                {
                otherlv_7=(Token)match(input,50,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred159_InternalGo

    // $ANTLR start synpred163_InternalGo
    public final void synpred163_InternalGo_fragment() throws RecognitionException {   
        EObject lv_primaryExpr_0_0 = null;


        // InternalGo.g:8203:3: ( ( (lv_primaryExpr_0_0= ruleprimaryExpr ) ) )
        // InternalGo.g:8203:3: ( (lv_primaryExpr_0_0= ruleprimaryExpr ) )
        {
        // InternalGo.g:8203:3: ( (lv_primaryExpr_0_0= ruleprimaryExpr ) )
        // InternalGo.g:8204:4: (lv_primaryExpr_0_0= ruleprimaryExpr )
        {
        // InternalGo.g:8204:4: (lv_primaryExpr_0_0= ruleprimaryExpr )
        // InternalGo.g:8205:5: lv_primaryExpr_0_0= ruleprimaryExpr
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_primaryExpr_0_0=ruleprimaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred163_InternalGo

    // Delegated rules

    public final boolean synpred84_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred163_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred91_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred91_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred156_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred156_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred129_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred129_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred159_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred159_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred152_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred152_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred155_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred155_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred145_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred145_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred154_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred154_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA26 dfa26 = new DFA26(this);
    protected DFA27 dfa27 = new DFA27(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA37 dfa37 = new DFA37(this);
    protected DFA41 dfa41 = new DFA41(this);
    protected DFA47 dfa47 = new DFA47(this);
    protected DFA49 dfa49 = new DFA49(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA54 dfa54 = new DFA54(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA62 dfa62 = new DFA62(this);
    protected DFA68 dfa68 = new DFA68(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA94 dfa94 = new DFA94(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA113 dfa113 = new DFA113(this);
    protected DFA117 dfa117 = new DFA117(this);
    static final String dfa_1s = "\21\uffff";
    static final String dfa_2s = "\1\3\1\uffff\1\3\16\uffff";
    static final String dfa_3s = "\1\4\1\uffff\1\13\16\uffff";
    static final String dfa_4s = "\1\147\1\uffff\1\147\16\uffff";
    static final String dfa_5s = "\1\uffff\1\1\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\2";
    static final String dfa_6s = "\21\uffff}>";
    static final String[] dfa_7s = {
            "\1\2\7\3\41\uffff\1\3\1\uffff\1\3\1\1\2\3\1\1\1\3\1\1\1\12\1\uffff\16\3\2\uffff\1\5\1\6\1\7\1\10\1\11\1\17\1\13\1\uffff\1\14\2\uffff\1\15\1\16\1\uffff\1\4\10\uffff\1\3\1\uffff\3\3\1\uffff\3\3",
            "",
            "\1\3\41\uffff\1\3\1\uffff\1\3\1\uffff\2\3\3\uffff\1\3\1\uffff\17\3\1\20\37\uffff\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "1646:2: ( ( (lv_declaration_0_0= ruledeclaration ) ) | ( (lv_labeledStmt_1_0= rulelabeledStmt ) ) | ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) | ( (lv_goStmt_3_0= rulegoStmt ) ) | ( (lv_returnStmt_4_0= rulereturnStmt ) ) | ( (lv_breakStmt_5_0= rulebreakStmt ) ) | ( (lv_continueStmt_6_0= rulecontinueStmt ) ) | ( (lv_gotoStmt_7_0= rulegotoStmt ) ) | ( (lv_fallthroughStmt_8_0= rulefallthroughStmt ) ) | ( (lv_block_9_0= ruleblock ) ) | ( (lv_ifStmt_10_0= ruleifStmt ) ) | ( (lv_switchStmt_11_0= ruleswitchStmt ) ) | ( (lv_selectStmt_12_0= ruleselectStmt ) ) | ( (lv_forStmt_13_0= ruleforStmt ) ) | ( (lv_deferStmt_14_0= ruledeferStmt ) ) )";
        }
    }
    static final String dfa_8s = "\47\uffff";
    static final String dfa_9s = "\1\27\46\uffff";
    static final String dfa_10s = "\1\4\26\0\20\uffff";
    static final String dfa_11s = "\1\147\26\0\20\uffff";
    static final String dfa_12s = "\27\uffff\1\2\2\uffff\1\3\1\uffff\1\4\7\uffff\1\6\1\1\1\5";
    static final String dfa_13s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\20\uffff}>";
    static final String[] dfa_14s = {
            "\1\11\1\5\1\44\1\1\1\2\1\3\1\4\1\21\41\uffff\1\13\1\uffff\1\20\1\uffff\2\34\1\uffff\1\12\1\uffff\1\27\1\uffff\1\17\2\32\1\22\1\23\1\34\1\25\1\14\4\34\1\26\1\34\31\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\1\24\1\27",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "1964:2: ( ( (lv_sendStmt_0_0= rulesendStmt ) ) | ( (lv_expressionStmt_1_0= ruleexpressionStmt ) ) | ( (lv_incDecStmt_2_0= ruleincDecStmt ) ) | ( (lv_assignment_3_0= ruleassignment ) ) | ( (lv_shortVarDecl_4_0= ruleshortVarDecl ) ) | ( (lv_emptyStmt_5_0= ruleemptyStmt ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA27_1 = input.LA(1);

                         
                        int index27_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA27_2 = input.LA(1);

                         
                        int index27_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA27_3 = input.LA(1);

                         
                        int index27_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA27_4 = input.LA(1);

                         
                        int index27_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA27_5 = input.LA(1);

                         
                        int index27_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA27_6 = input.LA(1);

                         
                        int index27_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA27_7 = input.LA(1);

                         
                        int index27_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA27_8 = input.LA(1);

                         
                        int index27_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA27_9 = input.LA(1);

                         
                        int index27_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                        else if ( (synpred47_InternalGo()) ) {s = 38;}

                         
                        input.seek(index27_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA27_10 = input.LA(1);

                         
                        int index27_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA27_11 = input.LA(1);

                         
                        int index27_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA27_12 = input.LA(1);

                         
                        int index27_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA27_13 = input.LA(1);

                         
                        int index27_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA27_14 = input.LA(1);

                         
                        int index27_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA27_15 = input.LA(1);

                         
                        int index27_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA27_16 = input.LA(1);

                         
                        int index27_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA27_17 = input.LA(1);

                         
                        int index27_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA27_18 = input.LA(1);

                         
                        int index27_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA27_19 = input.LA(1);

                         
                        int index27_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA27_20 = input.LA(1);

                         
                        int index27_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA27_21 = input.LA(1);

                         
                        int index27_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA27_22 = input.LA(1);

                         
                        int index27_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred43_InternalGo()) ) {s = 37;}

                        else if ( (synpred44_InternalGo()) ) {s = 23;}

                        else if ( (synpred45_InternalGo()) ) {s = 26;}

                        else if ( (synpred46_InternalGo()) ) {s = 28;}

                         
                        input.seek(index27_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 27, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_15s = "\44\uffff";
    static final String dfa_16s = "\1\4\26\0\15\uffff";
    static final String dfa_17s = "\1\147\26\0\15\uffff";
    static final String dfa_18s = "\27\uffff\1\1\13\uffff\1\2";
    static final String dfa_19s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\15\uffff}>";
    static final String[] dfa_20s = {
            "\1\11\1\5\1\27\1\1\1\2\1\3\1\4\1\21\41\uffff\1\13\1\uffff\1\20\1\uffff\2\27\1\uffff\1\12\1\uffff\1\43\1\uffff\1\17\2\27\1\22\1\23\1\27\1\25\1\14\4\27\1\26\1\27\31\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\1\24\1\27",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "2844:3: ( ( (lv_simplStatement_1_0= rulesimpleStmt ) ) ruleeos )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA33_1 = input.LA(1);

                         
                        int index33_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA33_2 = input.LA(1);

                         
                        int index33_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA33_3 = input.LA(1);

                         
                        int index33_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA33_4 = input.LA(1);

                         
                        int index33_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA33_5 = input.LA(1);

                         
                        int index33_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA33_6 = input.LA(1);

                         
                        int index33_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA33_7 = input.LA(1);

                         
                        int index33_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA33_8 = input.LA(1);

                         
                        int index33_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA33_9 = input.LA(1);

                         
                        int index33_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA33_10 = input.LA(1);

                         
                        int index33_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA33_11 = input.LA(1);

                         
                        int index33_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA33_12 = input.LA(1);

                         
                        int index33_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA33_13 = input.LA(1);

                         
                        int index33_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA33_14 = input.LA(1);

                         
                        int index33_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA33_15 = input.LA(1);

                         
                        int index33_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA33_16 = input.LA(1);

                         
                        int index33_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA33_17 = input.LA(1);

                         
                        int index33_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA33_18 = input.LA(1);

                         
                        int index33_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA33_19 = input.LA(1);

                         
                        int index33_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA33_20 = input.LA(1);

                         
                        int index33_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA33_21 = input.LA(1);

                         
                        int index33_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA33_22 = input.LA(1);

                         
                        int index33_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index33_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 33, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA37 extends DFA {

        public DFA37(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 37;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "3051:3: ( ( (lv_simpleStmt_2_0= rulesimpleStmt ) ) ruleeos )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA37_1 = input.LA(1);

                         
                        int index37_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA37_2 = input.LA(1);

                         
                        int index37_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA37_3 = input.LA(1);

                         
                        int index37_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA37_4 = input.LA(1);

                         
                        int index37_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA37_5 = input.LA(1);

                         
                        int index37_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA37_6 = input.LA(1);

                         
                        int index37_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA37_7 = input.LA(1);

                         
                        int index37_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA37_8 = input.LA(1);

                         
                        int index37_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA37_9 = input.LA(1);

                         
                        int index37_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA37_10 = input.LA(1);

                         
                        int index37_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA37_11 = input.LA(1);

                         
                        int index37_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA37_12 = input.LA(1);

                         
                        int index37_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA37_13 = input.LA(1);

                         
                        int index37_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA37_14 = input.LA(1);

                         
                        int index37_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA37_15 = input.LA(1);

                         
                        int index37_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA37_16 = input.LA(1);

                         
                        int index37_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA37_17 = input.LA(1);

                         
                        int index37_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA37_18 = input.LA(1);

                         
                        int index37_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA37_19 = input.LA(1);

                         
                        int index37_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA37_20 = input.LA(1);

                         
                        int index37_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA37_21 = input.LA(1);

                         
                        int index37_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA37_22 = input.LA(1);

                         
                        int index37_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index37_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 37, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_21s = "\1\4\20\0\23\uffff";
    static final String dfa_22s = "\1\147\20\0\23\uffff";
    static final String dfa_23s = "\21\uffff\1\1\21\uffff\1\2";
    static final String dfa_24s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\23\uffff}>";
    static final String[] dfa_25s = {
            "\1\11\1\5\1\21\1\1\1\2\1\3\1\4\1\21\41\uffff\1\13\1\uffff\1\20\1\uffff\2\21\1\uffff\1\12\3\uffff\1\17\6\21\1\14\6\21\31\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\2\21",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA41 extends DFA {

        public DFA41(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 41;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "3273:3: ( ( (lv_simpleStatement_1_0= rulesimpleStmt ) ) ruleeos )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA41_1 = input.LA(1);

                         
                        int index41_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index41_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA41_2 = input.LA(1);

                         
                        int index41_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index41_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA41_3 = input.LA(1);

                         
                        int index41_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index41_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA41_4 = input.LA(1);

                         
                        int index41_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index41_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA41_5 = input.LA(1);

                         
                        int index41_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index41_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA41_6 = input.LA(1);

                         
                        int index41_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index41_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA41_7 = input.LA(1);

                         
                        int index41_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index41_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA41_8 = input.LA(1);

                         
                        int index41_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index41_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA41_9 = input.LA(1);

                         
                        int index41_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index41_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA41_10 = input.LA(1);

                         
                        int index41_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index41_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA41_11 = input.LA(1);

                         
                        int index41_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index41_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA41_12 = input.LA(1);

                         
                        int index41_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index41_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA41_13 = input.LA(1);

                         
                        int index41_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index41_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA41_14 = input.LA(1);

                         
                        int index41_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index41_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA41_15 = input.LA(1);

                         
                        int index41_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index41_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA41_16 = input.LA(1);

                         
                        int index41_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index41_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 41, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\34\uffff";
    static final String dfa_27s = "\1\27\33\uffff";
    static final String dfa_28s = "\1\4\26\0\5\uffff";
    static final String dfa_29s = "\1\146\26\0\5\uffff";
    static final String dfa_30s = "\27\uffff\1\2\3\uffff\1\1";
    static final String dfa_31s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\5\uffff}>";
    static final String[] dfa_32s = {
            "\1\11\1\5\1\uffff\1\1\1\2\1\3\1\4\1\21\41\uffff\1\13\1\uffff\1\20\1\uffff\2\27\1\uffff\1\12\3\uffff\1\17\2\uffff\1\22\1\23\1\uffff\1\25\1\14\4\uffff\1\26\2\uffff\1\27\27\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\1\24",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA47 extends DFA {

        public DFA47(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 47;
            this.eot = dfa_26;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "3758:4: ( ( (lv_statement_1_0= rulesendStmt ) ) | ( (lv_statement_2_0= rulerecvStmt ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA47_1 = input.LA(1);

                         
                        int index47_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA47_2 = input.LA(1);

                         
                        int index47_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA47_3 = input.LA(1);

                         
                        int index47_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA47_4 = input.LA(1);

                         
                        int index47_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA47_5 = input.LA(1);

                         
                        int index47_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA47_6 = input.LA(1);

                         
                        int index47_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA47_7 = input.LA(1);

                         
                        int index47_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA47_8 = input.LA(1);

                         
                        int index47_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA47_9 = input.LA(1);

                         
                        int index47_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA47_10 = input.LA(1);

                         
                        int index47_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA47_11 = input.LA(1);

                         
                        int index47_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA47_12 = input.LA(1);

                         
                        int index47_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA47_13 = input.LA(1);

                         
                        int index47_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA47_14 = input.LA(1);

                         
                        int index47_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA47_15 = input.LA(1);

                         
                        int index47_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA47_16 = input.LA(1);

                         
                        int index47_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA47_17 = input.LA(1);

                         
                        int index47_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA47_18 = input.LA(1);

                         
                        int index47_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA47_19 = input.LA(1);

                         
                        int index47_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA47_20 = input.LA(1);

                         
                        int index47_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA47_21 = input.LA(1);

                         
                        int index47_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA47_22 = input.LA(1);

                         
                        int index47_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index47_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 47, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_33s = "\1\31\33\uffff";
    static final String dfa_34s = "\1\4\21\0\2\uffff\5\0\3\uffff";
    static final String dfa_35s = "\1\146\21\0\2\uffff\5\0\3\uffff";
    static final String dfa_36s = "\22\uffff\1\1\6\uffff\1\3\1\uffff\1\2";
    static final String dfa_37s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\2\uffff\1\21\1\22\1\23\1\24\1\25\3\uffff}>";
    static final String[] dfa_38s = {
            "\1\11\1\5\1\uffff\1\1\1\2\1\3\1\4\1\21\41\uffff\1\13\1\uffff\1\20\1\uffff\2\22\1\uffff\1\12\3\uffff\1\17\2\uffff\1\24\1\25\1\uffff\1\27\1\14\4\uffff\1\30\2\uffff\1\31\27\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\1\26",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA49 extends DFA {

        public DFA49(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 49;
            this.eot = dfa_26;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "3836:3: ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA49_1 = input.LA(1);

                         
                        int index49_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA49_2 = input.LA(1);

                         
                        int index49_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA49_3 = input.LA(1);

                         
                        int index49_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA49_4 = input.LA(1);

                         
                        int index49_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA49_5 = input.LA(1);

                         
                        int index49_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA49_6 = input.LA(1);

                         
                        int index49_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA49_7 = input.LA(1);

                         
                        int index49_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA49_8 = input.LA(1);

                         
                        int index49_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA49_9 = input.LA(1);

                         
                        int index49_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (synpred80_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA49_10 = input.LA(1);

                         
                        int index49_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA49_11 = input.LA(1);

                         
                        int index49_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA49_12 = input.LA(1);

                         
                        int index49_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA49_13 = input.LA(1);

                         
                        int index49_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA49_14 = input.LA(1);

                         
                        int index49_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA49_15 = input.LA(1);

                         
                        int index49_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA49_16 = input.LA(1);

                         
                        int index49_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA49_17 = input.LA(1);

                         
                        int index49_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA49_20 = input.LA(1);

                         
                        int index49_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_20);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA49_21 = input.LA(1);

                         
                        int index49_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_21);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA49_22 = input.LA(1);

                         
                        int index49_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_22);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA49_23 = input.LA(1);

                         
                        int index49_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_23);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA49_24 = input.LA(1);

                         
                        int index49_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index49_24);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 49, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_39s = "\1\4\27\0\3\uffff\1\0\6\uffff\1\0\4\uffff";
    static final String dfa_40s = "\1\147\27\0\3\uffff\1\0\6\uffff\1\0\4\uffff";
    static final String dfa_41s = "\30\uffff\1\2\13\uffff\1\3\1\1\1\4";
    static final String dfa_42s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\3\uffff\1\27\6\uffff\1\30\4\uffff}>";
    static final String[] dfa_43s = {
            "\1\11\1\5\1\30\1\1\1\2\1\3\1\4\1\21\41\uffff\1\13\1\uffff\1\20\1\uffff\1\42\1\33\1\uffff\1\12\1\uffff\1\22\1\uffff\1\17\2\30\1\23\1\24\1\30\1\26\1\14\4\30\1\27\1\30\17\uffff\1\44\11\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\1\25\1\30",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[][] dfa_43 = unpackEncodedStringArray(dfa_43s);

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_39;
            this.max = dfa_40;
            this.accept = dfa_41;
            this.special = dfa_42;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "3931:3: ( ( (lv_expr_1_0= ruleexpression ) ) | ( (lv_clause_2_0= ruleforClause ) ) | ( (lv_clause_3_0= rulerangeClause ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA50_1 = input.LA(1);

                         
                        int index50_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA50_2 = input.LA(1);

                         
                        int index50_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA50_3 = input.LA(1);

                         
                        int index50_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA50_4 = input.LA(1);

                         
                        int index50_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA50_5 = input.LA(1);

                         
                        int index50_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA50_6 = input.LA(1);

                         
                        int index50_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA50_7 = input.LA(1);

                         
                        int index50_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA50_8 = input.LA(1);

                         
                        int index50_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA50_9 = input.LA(1);

                         
                        int index50_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA50_10 = input.LA(1);

                         
                        int index50_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA50_11 = input.LA(1);

                         
                        int index50_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA50_12 = input.LA(1);

                         
                        int index50_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA50_13 = input.LA(1);

                         
                        int index50_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA50_14 = input.LA(1);

                         
                        int index50_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA50_15 = input.LA(1);

                         
                        int index50_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA50_16 = input.LA(1);

                         
                        int index50_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA50_17 = input.LA(1);

                         
                        int index50_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA50_18 = input.LA(1);

                         
                        int index50_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index50_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA50_19 = input.LA(1);

                         
                        int index50_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA50_20 = input.LA(1);

                         
                        int index50_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA50_21 = input.LA(1);

                         
                        int index50_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA50_22 = input.LA(1);

                         
                        int index50_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA50_23 = input.LA(1);

                         
                        int index50_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalGo()) ) {s = 37;}

                        else if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA50_27 = input.LA(1);

                         
                        int index50_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_27);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA50_34 = input.LA(1);

                         
                        int index50_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred82_InternalGo()) ) {s = 24;}

                        else if ( (synpred83_InternalGo()) ) {s = 36;}

                         
                        input.seek(index50_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 50, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_44s = "\7\uffff";
    static final String dfa_45s = "\1\4\1\uffff\1\13\1\uffff\1\4\1\uffff\1\13";
    static final String dfa_46s = "\1\146\1\uffff\1\106\1\uffff\1\146\1\uffff\1\106";
    static final String dfa_47s = "\1\uffff\1\1\1\uffff\1\3\1\uffff\1\2\1\uffff";
    static final String dfa_48s = "\7\uffff}>";
    static final String[] dfa_49s = {
            "\1\2\1\1\1\uffff\5\1\41\uffff\1\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\1\uffff\2\1\4\uffff\1\1\20\uffff\1\3\11\uffff\1\1\1\uffff\3\1\1\uffff\2\1",
            "",
            "\1\1\41\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\4\3\uffff\1\1\17\uffff\1\5",
            "",
            "\1\6\1\1\1\uffff\5\1\41\uffff\1\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1\3\uffff\1\1\2\uffff\2\1\1\uffff\2\1\4\uffff\1\1\32\uffff\1\1\1\uffff\3\1\1\uffff\2\1",
            "",
            "\1\1\41\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\4\3\uffff\1\1\17\uffff\1\5"
    };

    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[][] dfa_49 = unpackEncodedStringArray(dfa_49s);

    class DFA54 extends DFA {

        public DFA54(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 54;
            this.eot = dfa_44;
            this.eof = dfa_44;
            this.min = dfa_45;
            this.max = dfa_46;
            this.accept = dfa_47;
            this.special = dfa_48;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "4136:3: ( ( ( (lv_exprList_0_0= ruleexpressionList ) ) otherlv_1= '=' ) | ( ( (lv_idList_2_0= ruleidentifierList ) ) otherlv_3= ':=' ) )?";
        }
    }
    static final String dfa_50s = "\13\uffff";
    static final String dfa_51s = "\1\64\1\0\11\uffff";
    static final String dfa_52s = "\1\145\1\0\11\uffff";
    static final String dfa_53s = "\2\uffff\1\2\1\3\1\4\1\5\1\7\1\10\1\uffff\1\1\1\6";
    static final String dfa_54s = "\1\uffff\1\0\11\uffff}>";
    static final String[] dfa_55s = {
            "\1\4\3\uffff\1\7\6\uffff\1\3\37\uffff\1\1\1\uffff\1\5\1\6\1\7\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final char[] dfa_51 = DFA.unpackEncodedStringToUnsignedChars(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[][] dfa_55 = unpackEncodedStringArray(dfa_55s);

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_51;
            this.max = dfa_52;
            this.accept = dfa_53;
            this.special = dfa_54;
            this.transition = dfa_55;
        }
        public String getDescription() {
            return "4417:2: ( ( ( (lv_lit_0_0= rulearrayType ) ) ( (lv_contentType_1_0= 'Array' ) ) ) | ( ( (lv_lit_2_0= rulestructType ) ) ( (lv_contentType_3_0= 'StructType' ) ) ) | ( ( (lv_lit_4_0= rulepointerType ) ) ( (lv_contentType_5_0= 'Pointer' ) ) ) | ( ( (lv_lit_6_0= rulefunctionType ) ) ( (lv_contentType_7_0= 'Function' ) ) ) | ( ( (lv_lit_8_0= ruleinterfaceType ) ) ( (lv_contentType_9_0= 'Interface' ) ) ) | ( ( (lv_lit_10_0= rulesliceType ) ) ( (lv_contentType_11_0= 'Slice' ) ) ) | ( ( (lv_lit_12_0= rulemapType ) ) ( (lv_contentType_13_0= 'Map' ) ) ) | ( ( (lv_lit_14_0= rulechannelType ) ) ( (lv_contentType_15_0= 'Channel' ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA57_1 = input.LA(1);

                         
                        int index57_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalGo()) ) {s = 9;}

                        else if ( (synpred97_InternalGo()) ) {s = 10;}

                         
                        input.seek(index57_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 57, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_56s = "\14\uffff";
    static final String dfa_57s = "\1\4\1\0\12\uffff";
    static final String dfa_58s = "\1\145\1\0\12\uffff";
    static final String dfa_59s = "\2\uffff\1\2\10\uffff\1\1";
    static final String dfa_60s = "\1\uffff\1\0\12\uffff}>";
    static final String[] dfa_61s = {
            "\1\2\50\uffff\1\1\6\uffff\1\2\3\uffff\1\2\6\uffff\1\2\37\uffff\1\2\1\uffff\3\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final char[] dfa_58 = DFA.unpackEncodedStringToUnsignedChars(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[][] dfa_61 = unpackEncodedStringArray(dfa_61s);

    class DFA62 extends DFA {

        public DFA62(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 62;
            this.eot = dfa_56;
            this.eof = dfa_56;
            this.min = dfa_57;
            this.max = dfa_58;
            this.accept = dfa_59;
            this.special = dfa_60;
            this.transition = dfa_61;
        }
        public String getDescription() {
            return "5332:2: ( ( (lv_params_0_0= ruleparameters ) ) | ( (lv_type_1_0= ruletype ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA62_1 = input.LA(1);

                         
                        int index62_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index62_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 62, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_62s = "\17\uffff";
    static final String dfa_63s = "\1\4\10\uffff\1\0\1\uffff\1\0\3\uffff";
    static final String dfa_64s = "\1\145\10\uffff\1\0\1\uffff\1\0\3\uffff";
    static final String dfa_65s = "\1\uffff\1\1\12\uffff\1\2\1\3\1\4";
    static final String dfa_66s = "\11\uffff\1\0\1\uffff\1\1\3\uffff}>";
    static final String[] dfa_67s = {
            "\1\11\1\1\1\uffff\4\1\42\uffff\1\13\6\uffff\1\1\52\uffff\1\1\2\uffff\1\1\2\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final char[] dfa_64 = DFA.unpackEncodedStringToUnsignedChars(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final short[][] dfa_67 = unpackEncodedStringArray(dfa_67s);

    class DFA68 extends DFA {

        public DFA68(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 68;
            this.eot = dfa_62;
            this.eof = dfa_62;
            this.min = dfa_63;
            this.max = dfa_64;
            this.accept = dfa_65;
            this.special = dfa_66;
            this.transition = dfa_67;
        }
        public String getDescription() {
            return "5580:2: ( ( (lv_literal_0_0= ruleliteral ) ) | ( (lv_operandName_1_0= ruleoperandName ) ) | ( (lv_methodExpr_2_0= rulemethodExpr ) ) | (otherlv_3= '(' ( (lv_expr_4_0= ruleexpression ) ) otherlv_5= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA68_9 = input.LA(1);

                         
                        int index68_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred110_InternalGo()) ) {s = 1;}

                        else if ( (synpred111_InternalGo()) ) {s = 12;}

                        else if ( (synpred112_InternalGo()) ) {s = 13;}

                         
                        input.seek(index68_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA68_11 = input.LA(1);

                         
                        int index68_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalGo()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index68_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 68, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_68s = "\1\4\21\0\1\uffff\6\0\3\uffff";
    static final String dfa_69s = "\1\146\21\0\1\uffff\6\0\3\uffff";
    static final String dfa_70s = "\22\uffff\1\1\6\uffff\1\2\2\uffff";
    static final String dfa_71s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\uffff\1\21\1\22\1\23\1\24\1\25\1\26\3\uffff}>";
    static final String[] dfa_72s = {
            "\1\1\1\6\1\uffff\1\2\1\3\1\4\1\5\1\21\41\uffff\1\13\1\uffff\1\20\2\uffff\1\31\1\uffff\1\12\1\uffff\1\30\1\31\1\17\2\uffff\1\23\1\24\1\uffff\1\26\1\14\4\uffff\1\27\2\uffff\1\22\27\uffff\1\10\1\uffff\1\15\1\11\1\16\1\uffff\1\7\1\25",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[][] dfa_72 = unpackEncodedStringArray(dfa_72s);

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = dfa_26;
            this.eof = dfa_33;
            this.min = dfa_68;
            this.max = dfa_69;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "6457:3: ( ( (lv_key_0_0= rulekey ) ) otherlv_1= ':' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA76_1 = input.LA(1);

                         
                        int index76_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA76_2 = input.LA(1);

                         
                        int index76_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA76_3 = input.LA(1);

                         
                        int index76_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA76_4 = input.LA(1);

                         
                        int index76_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA76_5 = input.LA(1);

                         
                        int index76_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA76_6 = input.LA(1);

                         
                        int index76_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA76_7 = input.LA(1);

                         
                        int index76_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA76_8 = input.LA(1);

                         
                        int index76_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA76_9 = input.LA(1);

                         
                        int index76_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA76_10 = input.LA(1);

                         
                        int index76_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA76_11 = input.LA(1);

                         
                        int index76_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA76_12 = input.LA(1);

                         
                        int index76_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA76_13 = input.LA(1);

                         
                        int index76_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA76_14 = input.LA(1);

                         
                        int index76_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA76_15 = input.LA(1);

                         
                        int index76_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA76_16 = input.LA(1);

                         
                        int index76_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA76_17 = input.LA(1);

                         
                        int index76_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA76_19 = input.LA(1);

                         
                        int index76_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA76_20 = input.LA(1);

                         
                        int index76_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA76_21 = input.LA(1);

                         
                        int index76_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA76_22 = input.LA(1);

                         
                        int index76_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA76_23 = input.LA(1);

                         
                        int index76_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA76_24 = input.LA(1);

                         
                        int index76_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index76_24);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_73s = "\55\uffff";
    static final String dfa_74s = "\1\21\54\uffff";
    static final String dfa_75s = "\1\4\6\uffff\1\0\3\uffff\2\0\2\uffff\31\0\5\uffff";
    static final String dfa_76s = "\1\147\6\uffff\1\0\3\uffff\2\0\2\uffff\31\0\5\uffff";
    static final String dfa_77s = "\1\uffff\1\1\46\uffff\1\2\1\3\1\4\1\5\1\6";
    static final String dfa_78s = "\7\uffff\1\0\3\uffff\1\1\1\2\2\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\5\uffff}>";
    static final String[] dfa_79s = {
            "\2\1\1\uffff\4\1\1\22\41\uffff\1\13\1\43\1\20\1\uffff\1\37\1\23\1\uffff\1\1\1\uffff\1\40\1\47\1\17\1\44\1\45\1\25\1\26\1\27\1\30\1\14\1\31\1\32\1\33\1\34\1\35\1\36\1\uffff\1\41\27\uffff\1\7\1\46\3\1\1\42\1\1\1\uffff\1\24",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[][] dfa_79 = unpackEncodedStringArray(dfa_79s);

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = dfa_73;
            this.eof = dfa_74;
            this.min = dfa_75;
            this.max = dfa_76;
            this.accept = dfa_77;
            this.special = dfa_78;
            this.transition = dfa_79;
        }
        public String getDescription() {
            return "6899:2: ( ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) ) | ( (lv_primaryExprSelector_2_0= ruleprimaryExprSelector ) ) | ( (lv_primaryExprIndex_3_0= ruleprimaryExprIndex ) ) | ( (lv_primaryExprSlice_4_0= ruleprimaryExprSlice ) ) | ( (lv_primaryExprTypeAssertion_5_0= ruleprimaryExprTypeAssertion ) ) | ( (lv_primaryExprArguments_6_0= ruleprimaryExprArguments ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA84_7 = input.LA(1);

                         
                        int index84_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 1;}

                        else if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA84_11 = input.LA(1);

                         
                        int index84_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 1;}

                        else if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_11);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA84_12 = input.LA(1);

                         
                        int index84_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 1;}

                        else if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA84_15 = input.LA(1);

                         
                        int index84_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred137_InternalGo()) ) {s = 1;}

                        else if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_15);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA84_16 = input.LA(1);

                         
                        int index84_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_16);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA84_17 = input.LA(1);

                         
                        int index84_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_17);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA84_18 = input.LA(1);

                         
                        int index84_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_18);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA84_19 = input.LA(1);

                         
                        int index84_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_19);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA84_20 = input.LA(1);

                         
                        int index84_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_20);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA84_21 = input.LA(1);

                         
                        int index84_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_21);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA84_22 = input.LA(1);

                         
                        int index84_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_22);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA84_23 = input.LA(1);

                         
                        int index84_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_23);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA84_24 = input.LA(1);

                         
                        int index84_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_24);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA84_25 = input.LA(1);

                         
                        int index84_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_25);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA84_26 = input.LA(1);

                         
                        int index84_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_26);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA84_27 = input.LA(1);

                         
                        int index84_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_27);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA84_28 = input.LA(1);

                         
                        int index84_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_28);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA84_29 = input.LA(1);

                         
                        int index84_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_29);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA84_30 = input.LA(1);

                         
                        int index84_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_30);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA84_31 = input.LA(1);

                         
                        int index84_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_31);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA84_32 = input.LA(1);

                         
                        int index84_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_32);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA84_33 = input.LA(1);

                         
                        int index84_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_33);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA84_34 = input.LA(1);

                         
                        int index84_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_34);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA84_35 = input.LA(1);

                         
                        int index84_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_35);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA84_36 = input.LA(1);

                         
                        int index84_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_36);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA84_37 = input.LA(1);

                         
                        int index84_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_37);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA84_38 = input.LA(1);

                         
                        int index84_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_38);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA84_39 = input.LA(1);

                         
                        int index84_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalGo()) ) {s = 40;}

                        else if ( (synpred139_InternalGo()) ) {s = 41;}

                        else if ( (synpred140_InternalGo()) ) {s = 42;}

                        else if ( (synpred141_InternalGo()) ) {s = 43;}

                        else if ( (true) ) {s = 44;}

                         
                        input.seek(index84_39);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 84, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_80s = "\20\uffff";
    static final String dfa_81s = "\1\4\5\uffff\6\0\4\uffff";
    static final String dfa_82s = "\1\145\5\uffff\6\0\4\uffff";
    static final String dfa_83s = "\1\uffff\1\1\12\uffff\1\2\3\uffff";
    static final String dfa_84s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\4\uffff}>";
    static final String[] dfa_85s = {
            "\1\11\1\1\1\uffff\4\1\42\uffff\1\13\6\uffff\1\12\3\uffff\1\14\6\uffff\1\14\37\uffff\1\7\1\uffff\1\14\1\10\1\14\1\uffff\1\6",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[][] dfa_85 = unpackEncodedStringArray(dfa_85s);

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = dfa_80;
            this.eof = dfa_80;
            this.min = dfa_81;
            this.max = dfa_82;
            this.accept = dfa_83;
            this.special = dfa_84;
            this.transition = dfa_85;
        }
        public String getDescription() {
            return "6900:3: ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA83_6 = input.LA(1);

                         
                        int index83_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index83_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA83_7 = input.LA(1);

                         
                        int index83_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index83_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA83_8 = input.LA(1);

                         
                        int index83_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index83_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA83_9 = input.LA(1);

                         
                        int index83_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index83_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA83_10 = input.LA(1);

                         
                        int index83_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index83_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA83_11 = input.LA(1);

                         
                        int index83_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index83_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_86s = "\32\uffff";
    static final String dfa_87s = "\1\4\27\0\2\uffff";
    static final String dfa_88s = "\1\146\27\0\2\uffff";
    static final String dfa_89s = "\30\uffff\1\1\1\2";
    static final String dfa_90s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\2\uffff}>";
    static final String[] dfa_91s = {
            "\1\11\1\5\1\uffff\1\1\1\2\1\3\1\4\1\21\41\uffff\1\13\1\uffff\1\20\4\uffff\1\12\3\uffff\1\17\2\uffff\1\23\1\24\1\uffff\1\26\1\14\4\uffff\1\27\2\uffff\1\22\27\uffff\1\7\1\uffff\1\15\1\10\1\16\1\uffff\1\6\1\25",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final char[] dfa_87 = DFA.unpackEncodedStringToUnsignedChars(dfa_87s);
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[][] dfa_91 = unpackEncodedStringArray(dfa_91s);

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = dfa_86;
            this.eof = dfa_86;
            this.min = dfa_87;
            this.max = dfa_88;
            this.accept = dfa_89;
            this.special = dfa_90;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "7624:3: ( ( ( (lv_expr1_2_0= ruleexpression ) )? otherlv_3= ':' ( (lv_expr2_4_0= ruleexpression ) )? ) | ( ( (lv_expr1_5_0= ruleexpression ) )? otherlv_6= ':' ( (lv_expr2_7_0= ruleexpression ) ) otherlv_8= ':' ( (lv_expr3_9_0= ruleexpression ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA94_1 = input.LA(1);

                         
                        int index94_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA94_2 = input.LA(1);

                         
                        int index94_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA94_3 = input.LA(1);

                         
                        int index94_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA94_4 = input.LA(1);

                         
                        int index94_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA94_5 = input.LA(1);

                         
                        int index94_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA94_6 = input.LA(1);

                         
                        int index94_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA94_7 = input.LA(1);

                         
                        int index94_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA94_8 = input.LA(1);

                         
                        int index94_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA94_9 = input.LA(1);

                         
                        int index94_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA94_10 = input.LA(1);

                         
                        int index94_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA94_11 = input.LA(1);

                         
                        int index94_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA94_12 = input.LA(1);

                         
                        int index94_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA94_13 = input.LA(1);

                         
                        int index94_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA94_14 = input.LA(1);

                         
                        int index94_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA94_15 = input.LA(1);

                         
                        int index94_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA94_16 = input.LA(1);

                         
                        int index94_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA94_17 = input.LA(1);

                         
                        int index94_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA94_18 = input.LA(1);

                         
                        int index94_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA94_19 = input.LA(1);

                         
                        int index94_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA94_20 = input.LA(1);

                         
                        int index94_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA94_21 = input.LA(1);

                         
                        int index94_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA94_22 = input.LA(1);

                         
                        int index94_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA94_23 = input.LA(1);

                         
                        int index94_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index94_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 94, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_92s = "\33\uffff";
    static final String dfa_93s = "\1\4\5\uffff\12\0\13\uffff";
    static final String dfa_94s = "\1\146\5\uffff\12\0\13\uffff";
    static final String dfa_95s = "\1\uffff\1\1\30\uffff\1\2";
    static final String dfa_96s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\13\uffff}>";
    static final String[] dfa_97s = {
            "\1\11\1\1\1\uffff\5\1\41\uffff\1\13\2\1\2\uffff\1\1\1\uffff\1\12\3\uffff\1\17\2\uffff\2\1\1\uffff\1\1\1\14\4\uffff\1\1\32\uffff\1\7\1\uffff\1\15\1\10\1\16\1\1\1\6\1\1",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final char[] dfa_93 = DFA.unpackEncodedStringToUnsignedChars(dfa_93s);
    static final char[] dfa_94 = DFA.unpackEncodedStringToUnsignedChars(dfa_94s);
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[][] dfa_97 = unpackEncodedStringArray(dfa_97s);

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_92;
            this.eof = dfa_92;
            this.min = dfa_93;
            this.max = dfa_94;
            this.accept = dfa_95;
            this.special = dfa_96;
            this.transition = dfa_97;
        }
        public String getDescription() {
            return "7826:4: ( ( (lv_expressionList_2_0= ruleexpressionList ) ) | ( ( (lv_type_3_0= ruletype ) ) (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_6 = input.LA(1);

                         
                        int index96_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index96_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA96_7 = input.LA(1);

                         
                        int index96_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index96_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA96_8 = input.LA(1);

                         
                        int index96_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index96_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA96_9 = input.LA(1);

                         
                        int index96_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index96_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA96_10 = input.LA(1);

                         
                        int index96_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index96_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA96_11 = input.LA(1);

                         
                        int index96_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index96_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA96_12 = input.LA(1);

                         
                        int index96_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index96_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA96_13 = input.LA(1);

                         
                        int index96_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index96_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA96_14 = input.LA(1);

                         
                        int index96_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index96_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA96_15 = input.LA(1);

                         
                        int index96_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index96_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA113 extends DFA {

        public DFA113(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 113;
            this.eot = dfa_80;
            this.eof = dfa_80;
            this.min = dfa_81;
            this.max = dfa_82;
            this.accept = dfa_83;
            this.special = dfa_84;
            this.transition = dfa_85;
        }
        public String getDescription() {
            return "6900:3: ( ( (lv_operand_0_0= ruleoperand ) ) | ( (lv_conversion_1_0= ruleconversion ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA113_6 = input.LA(1);

                         
                        int index113_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index113_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA113_7 = input.LA(1);

                         
                        int index113_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index113_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA113_8 = input.LA(1);

                         
                        int index113_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index113_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA113_9 = input.LA(1);

                         
                        int index113_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index113_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA113_10 = input.LA(1);

                         
                        int index113_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index113_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA113_11 = input.LA(1);

                         
                        int index113_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index113_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 113, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_98s = "\1\1\32\uffff";
    static final String[] dfa_99s = {
            "\1\11\1\1\1\uffff\5\1\41\uffff\1\13\1\uffff\1\1\2\uffff\1\1\1\uffff\1\12\3\uffff\1\17\2\uffff\2\1\1\uffff\1\1\1\14\4\uffff\1\1\32\uffff\1\7\1\uffff\1\15\1\10\1\16\1\1\1\6\1\1",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final short[][] dfa_99 = unpackEncodedStringArray(dfa_99s);

    class DFA117 extends DFA {

        public DFA117(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 117;
            this.eot = dfa_92;
            this.eof = dfa_98;
            this.min = dfa_93;
            this.max = dfa_94;
            this.accept = dfa_95;
            this.special = dfa_96;
            this.transition = dfa_99;
        }
        public String getDescription() {
            return "7826:4: ( ( (lv_expressionList_2_0= ruleexpressionList ) ) | ( ( (lv_type_3_0= ruletype ) ) (otherlv_4= ',' ( (lv_expressionList_5_0= ruleexpressionList ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA117_6 = input.LA(1);

                         
                        int index117_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index117_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA117_7 = input.LA(1);

                         
                        int index117_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index117_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA117_8 = input.LA(1);

                         
                        int index117_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index117_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA117_9 = input.LA(1);

                         
                        int index117_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index117_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA117_10 = input.LA(1);

                         
                        int index117_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index117_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA117_11 = input.LA(1);

                         
                        int index117_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index117_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA117_12 = input.LA(1);

                         
                        int index117_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index117_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA117_13 = input.LA(1);

                         
                        int index117_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index117_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA117_14 = input.LA(1);

                         
                        int index117_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index117_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA117_15 = input.LA(1);

                         
                        int index117_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index117_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 117, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0039100000000002L,0x0000008000000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0039100000000002L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0039000000000002L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000A00000000030L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000C00000000030L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000C00000000030L,0x0000008000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000800000000030L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000200000000010L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000400000000010L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x8112200000000012L,0x0000002E80000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0xD910A000000007B0L,0x0000006E80000010L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0004000000000002L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x8110200000000010L,0x0000002E80000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x8112200000000010L,0x0000002E80000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0xD9F9A000000007F0L,0x0000006E80597F10L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0xD979A000000007F2L,0x0000006E80597F10L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0600000000000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0xF802000000000000L,0x000000000000003FL});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0xD979A000000007F0L,0x0000006E80597F10L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0xD910A000000007B2L,0x0000006E80000010L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0xD910A000000007F0L,0x0000006E80000010L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0040000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0xD950A000000007F0L,0x0000006E80000010L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0xD950A000000007B0L,0x0000006E80000010L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0080000000000000L,0x0000000000060000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x8110A000000007B0L,0x0000002E80000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0xD950A000000007F0L,0x000000EE80200010L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0xD910A000000007B0L,0x000000EE80000010L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0xD910A000000007F2L,0x0000006E80000010L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0080000000000010L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x8110200000000012L,0x0000002E80000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x8110600000000010L,0x0000003E80000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0004400000000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x8110200000000010L,0x0000003E80000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0xD9D0A000000007B0L,0x0000006E80000010L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0084000000000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x8080000000000010L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000A00000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0xD910A000000007B0L,0x0000006E80000090L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0xD910A000000007B0L,0x0000006F80000010L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0xD910E000000007B0L,0x0000006E80000010L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0004400000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0004000000000002L,0x0000001000000000L});

}