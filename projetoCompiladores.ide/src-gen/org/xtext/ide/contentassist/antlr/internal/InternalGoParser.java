package org.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.GoGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalGoParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING_LIT", "RULE_WS", "RULE_IDENTIFIER", "RULE_INT_LIT", "RULE_FLOAT_LIT", "RULE_IMAGINARY_LIT", "RULE_RUNE_LIT", "RULE_BINARY_OP", "RULE_LETTER", "RULE_UNICODE_DIGIT", "RULE_REL_OP", "RULE_ADD_OP", "RULE_MUL_OP", "RULE_UNARY_OP", "RULE_DECIMAL_LIT", "RULE_OCTAL_LIT", "RULE_HEX_LIT", "RULE_DECIMAL_DIGIT", "RULE_OCTAL_DIGIT", "RULE_HEX_DIGIT", "RULE_DECIMALS", "RULE_EXPONENT", "RULE_UNICODE_VALUE", "RULE_BYTE_VALUE", "RULE_UNICODE_CHAR", "RULE_LITTLE_U_VALUE", "RULE_BIG_U_VALUE", "RULE_ESCAPED_CHAR", "RULE_OCTAL_BYTE_VALUE", "RULE_HEX_BYTE_VALUE", "RULE_RAW_STRING_LIT", "RULE_INTERPRETED_STRING_LIT", "RULE_NEWLINE", "RULE_UNICODE_LETTER", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_ANY_OTHER", "'fallthrough'", "'.'", "'++'", "'--'", "'+'", "'-'", "'|'", "'^'", "'*'", "'/'", "'%'", "'<<'", "'>>'", "'&'", "'&^'", "'default'", "'chan'", "'!'", "'<-'", "'package'", "'import'", "'('", "')'", "'const'", "'='", "','", "'type'", "'func'", "'var'", "'{'", "'}'", "':='", "':'", "'return'", "'break'", "'continue'", "'goto'", "'defer'", "'if'", "'else'", "'switch'", "'case'", "'select'", "'for'", "'range'", "'go'", "'['", "']'", "'interface'", "'map'", "'...'", "'struct'"
    };
    public static final int T__50=50;
    public static final int RULE_DECIMAL_DIGIT=21;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=38;
    public static final int RULE_INT=39;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=41;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int RULE_DECIMALS=24;
    public static final int RULE_NEWLINE=36;
    public static final int RULE_BIG_U_VALUE=30;
    public static final int RULE_ESCAPED_CHAR=31;
    public static final int RULE_BYTE_VALUE=27;
    public static final int RULE_UNICODE_LETTER=37;
    public static final int RULE_UNICODE_CHAR=28;
    public static final int RULE_OCTAL_DIGIT=22;
    public static final int RULE_LETTER=12;
    public static final int RULE_EXPONENT=25;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_RAW_STRING_LIT=34;
    public static final int T__44=44;
    public static final int RULE_UNARY_OP=17;
    public static final int T__45=45;
    public static final int RULE_HEX_DIGIT=23;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int RULE_RUNE_LIT=10;
    public static final int RULE_DECIMAL_LIT=18;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__90=90;
    public static final int RULE_BINARY_OP=11;
    public static final int T__95=95;
    public static final int RULE_IMAGINARY_LIT=9;
    public static final int RULE_STRING_LIT=4;
    public static final int RULE_INTERPRETED_STRING_LIT=35;
    public static final int RULE_UNICODE_VALUE=26;
    public static final int RULE_LITTLE_U_VALUE=29;
    public static final int RULE_HEX_BYTE_VALUE=33;
    public static final int RULE_OCTAL_BYTE_VALUE=32;
    public static final int RULE_MUL_OP=16;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_IDENTIFIER=6;
    public static final int RULE_STRING=40;
    public static final int RULE_SL_COMMENT=42;
    public static final int T__77=77;
    public static final int RULE_HEX_LIT=20;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int RULE_ADD_OP=15;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int RULE_UNICODE_DIGIT=13;
    public static final int T__83=83;
    public static final int RULE_WS=5;
    public static final int RULE_ANY_OTHER=43;
    public static final int RULE_OCTAL_LIT=19;
    public static final int RULE_FLOAT_LIT=8;
    public static final int RULE_INT_LIT=7;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int RULE_REL_OP=14;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalGoParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalGoParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalGoParser.tokenNames; }
    public String getGrammarFileName() { return "InternalGo.g"; }


    	private GoGrammarAccess grammarAccess;

    	public void setGrammarAccess(GoGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleModel"
    // InternalGo.g:54:1: entryRuleModel : ruleModel EOF ;
    public final void entryRuleModel() throws RecognitionException {
        try {
            // InternalGo.g:55:1: ( ruleModel EOF )
            // InternalGo.g:56:1: ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleModel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalGo.g:63:1: ruleModel : ( ( rule__Model__GreetingsAssignment ) ) ;
    public final void ruleModel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:67:2: ( ( ( rule__Model__GreetingsAssignment ) ) )
            // InternalGo.g:68:2: ( ( rule__Model__GreetingsAssignment ) )
            {
            // InternalGo.g:68:2: ( ( rule__Model__GreetingsAssignment ) )
            // InternalGo.g:69:3: ( rule__Model__GreetingsAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getGreetingsAssignment()); 
            }
            // InternalGo.g:70:3: ( rule__Model__GreetingsAssignment )
            // InternalGo.g:70:4: rule__Model__GreetingsAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Model__GreetingsAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getGreetingsAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRulesourceFile"
    // InternalGo.g:79:1: entryRulesourceFile : rulesourceFile EOF ;
    public final void entryRulesourceFile() throws RecognitionException {
        try {
            // InternalGo.g:80:1: ( rulesourceFile EOF )
            // InternalGo.g:81:1: rulesourceFile EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSourceFileRule()); 
            }
            pushFollow(FOLLOW_1);
            rulesourceFile();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSourceFileRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulesourceFile"


    // $ANTLR start "rulesourceFile"
    // InternalGo.g:88:1: rulesourceFile : ( ( rule__SourceFile__Group__0 ) ) ;
    public final void rulesourceFile() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:92:2: ( ( ( rule__SourceFile__Group__0 ) ) )
            // InternalGo.g:93:2: ( ( rule__SourceFile__Group__0 ) )
            {
            // InternalGo.g:93:2: ( ( rule__SourceFile__Group__0 ) )
            // InternalGo.g:94:3: ( rule__SourceFile__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSourceFileAccess().getGroup()); 
            }
            // InternalGo.g:95:3: ( rule__SourceFile__Group__0 )
            // InternalGo.g:95:4: rule__SourceFile__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SourceFile__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSourceFileAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulesourceFile"


    // $ANTLR start "entryRulepackageClause"
    // InternalGo.g:104:1: entryRulepackageClause : rulepackageClause EOF ;
    public final void entryRulepackageClause() throws RecognitionException {
        try {
            // InternalGo.g:105:1: ( rulepackageClause EOF )
            // InternalGo.g:106:1: rulepackageClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPackageClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            rulepackageClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPackageClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulepackageClause"


    // $ANTLR start "rulepackageClause"
    // InternalGo.g:113:1: rulepackageClause : ( ( rule__PackageClause__Group__0 ) ) ;
    public final void rulepackageClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:117:2: ( ( ( rule__PackageClause__Group__0 ) ) )
            // InternalGo.g:118:2: ( ( rule__PackageClause__Group__0 ) )
            {
            // InternalGo.g:118:2: ( ( rule__PackageClause__Group__0 ) )
            // InternalGo.g:119:3: ( rule__PackageClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPackageClauseAccess().getGroup()); 
            }
            // InternalGo.g:120:3: ( rule__PackageClause__Group__0 )
            // InternalGo.g:120:4: rule__PackageClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PackageClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPackageClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulepackageClause"


    // $ANTLR start "entryRuleimportDecl"
    // InternalGo.g:129:1: entryRuleimportDecl : ruleimportDecl EOF ;
    public final void entryRuleimportDecl() throws RecognitionException {
        try {
            // InternalGo.g:130:1: ( ruleimportDecl EOF )
            // InternalGo.g:131:1: ruleimportDecl EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleimportDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportDeclRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleimportDecl"


    // $ANTLR start "ruleimportDecl"
    // InternalGo.g:138:1: ruleimportDecl : ( ( rule__ImportDecl__Group__0 ) ) ;
    public final void ruleimportDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:142:2: ( ( ( rule__ImportDecl__Group__0 ) ) )
            // InternalGo.g:143:2: ( ( rule__ImportDecl__Group__0 ) )
            {
            // InternalGo.g:143:2: ( ( rule__ImportDecl__Group__0 ) )
            // InternalGo.g:144:3: ( rule__ImportDecl__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportDeclAccess().getGroup()); 
            }
            // InternalGo.g:145:3: ( rule__ImportDecl__Group__0 )
            // InternalGo.g:145:4: rule__ImportDecl__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ImportDecl__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportDeclAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleimportDecl"


    // $ANTLR start "entryRuleimportSpec"
    // InternalGo.g:154:1: entryRuleimportSpec : ruleimportSpec EOF ;
    public final void entryRuleimportSpec() throws RecognitionException {
        try {
            // InternalGo.g:155:1: ( ruleimportSpec EOF )
            // InternalGo.g:156:1: ruleimportSpec EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleimportSpec();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportSpecRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleimportSpec"


    // $ANTLR start "ruleimportSpec"
    // InternalGo.g:163:1: ruleimportSpec : ( ( rule__ImportSpec__Group__0 ) ) ;
    public final void ruleimportSpec() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:167:2: ( ( ( rule__ImportSpec__Group__0 ) ) )
            // InternalGo.g:168:2: ( ( rule__ImportSpec__Group__0 ) )
            {
            // InternalGo.g:168:2: ( ( rule__ImportSpec__Group__0 ) )
            // InternalGo.g:169:3: ( rule__ImportSpec__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportSpecAccess().getGroup()); 
            }
            // InternalGo.g:170:3: ( rule__ImportSpec__Group__0 )
            // InternalGo.g:170:4: rule__ImportSpec__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ImportSpec__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportSpecAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleimportSpec"


    // $ANTLR start "entryRuleimportPath"
    // InternalGo.g:179:1: entryRuleimportPath : ruleimportPath EOF ;
    public final void entryRuleimportPath() throws RecognitionException {
        try {
            // InternalGo.g:180:1: ( ruleimportPath EOF )
            // InternalGo.g:181:1: ruleimportPath EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportPathRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleimportPath();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportPathRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleimportPath"


    // $ANTLR start "ruleimportPath"
    // InternalGo.g:188:1: ruleimportPath : ( RULE_STRING_LIT ) ;
    public final void ruleimportPath() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:192:2: ( ( RULE_STRING_LIT ) )
            // InternalGo.g:193:2: ( RULE_STRING_LIT )
            {
            // InternalGo.g:193:2: ( RULE_STRING_LIT )
            // InternalGo.g:194:3: RULE_STRING_LIT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportPathAccess().getSTRING_LITTerminalRuleCall()); 
            }
            match(input,RULE_STRING_LIT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportPathAccess().getSTRING_LITTerminalRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleimportPath"


    // $ANTLR start "entryRuletopLevelDecl"
    // InternalGo.g:204:1: entryRuletopLevelDecl : ruletopLevelDecl EOF ;
    public final void entryRuletopLevelDecl() throws RecognitionException {
        try {
            // InternalGo.g:205:1: ( ruletopLevelDecl EOF )
            // InternalGo.g:206:1: ruletopLevelDecl EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTopLevelDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            ruletopLevelDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTopLevelDeclRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuletopLevelDecl"


    // $ANTLR start "ruletopLevelDecl"
    // InternalGo.g:213:1: ruletopLevelDecl : ( ( rule__TopLevelDecl__Alternatives ) ) ;
    public final void ruletopLevelDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:217:2: ( ( ( rule__TopLevelDecl__Alternatives ) ) )
            // InternalGo.g:218:2: ( ( rule__TopLevelDecl__Alternatives ) )
            {
            // InternalGo.g:218:2: ( ( rule__TopLevelDecl__Alternatives ) )
            // InternalGo.g:219:3: ( rule__TopLevelDecl__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTopLevelDeclAccess().getAlternatives()); 
            }
            // InternalGo.g:220:3: ( rule__TopLevelDecl__Alternatives )
            // InternalGo.g:220:4: rule__TopLevelDecl__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__TopLevelDecl__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTopLevelDeclAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruletopLevelDecl"


    // $ANTLR start "entryRuledeclaration"
    // InternalGo.g:229:1: entryRuledeclaration : ruledeclaration EOF ;
    public final void entryRuledeclaration() throws RecognitionException {
        try {
            // InternalGo.g:230:1: ( ruledeclaration EOF )
            // InternalGo.g:231:1: ruledeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruledeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuledeclaration"


    // $ANTLR start "ruledeclaration"
    // InternalGo.g:238:1: ruledeclaration : ( ( rule__Declaration__Alternatives ) ) ;
    public final void ruledeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:242:2: ( ( ( rule__Declaration__Alternatives ) ) )
            // InternalGo.g:243:2: ( ( rule__Declaration__Alternatives ) )
            {
            // InternalGo.g:243:2: ( ( rule__Declaration__Alternatives ) )
            // InternalGo.g:244:3: ( rule__Declaration__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationAccess().getAlternatives()); 
            }
            // InternalGo.g:245:3: ( rule__Declaration__Alternatives )
            // InternalGo.g:245:4: rule__Declaration__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Declaration__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruledeclaration"


    // $ANTLR start "entryRuleconstDecl"
    // InternalGo.g:254:1: entryRuleconstDecl : ruleconstDecl EOF ;
    public final void entryRuleconstDecl() throws RecognitionException {
        try {
            // InternalGo.g:255:1: ( ruleconstDecl EOF )
            // InternalGo.g:256:1: ruleconstDecl EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleconstDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstDeclRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleconstDecl"


    // $ANTLR start "ruleconstDecl"
    // InternalGo.g:263:1: ruleconstDecl : ( ( rule__ConstDecl__Group__0 ) ) ;
    public final void ruleconstDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:267:2: ( ( ( rule__ConstDecl__Group__0 ) ) )
            // InternalGo.g:268:2: ( ( rule__ConstDecl__Group__0 ) )
            {
            // InternalGo.g:268:2: ( ( rule__ConstDecl__Group__0 ) )
            // InternalGo.g:269:3: ( rule__ConstDecl__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstDeclAccess().getGroup()); 
            }
            // InternalGo.g:270:3: ( rule__ConstDecl__Group__0 )
            // InternalGo.g:270:4: rule__ConstDecl__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ConstDecl__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstDeclAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleconstDecl"


    // $ANTLR start "entryRuleconstSpec"
    // InternalGo.g:279:1: entryRuleconstSpec : ruleconstSpec EOF ;
    public final void entryRuleconstSpec() throws RecognitionException {
        try {
            // InternalGo.g:280:1: ( ruleconstSpec EOF )
            // InternalGo.g:281:1: ruleconstSpec EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleconstSpec();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstSpecRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleconstSpec"


    // $ANTLR start "ruleconstSpec"
    // InternalGo.g:288:1: ruleconstSpec : ( ( rule__ConstSpec__Group__0 ) ) ;
    public final void ruleconstSpec() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:292:2: ( ( ( rule__ConstSpec__Group__0 ) ) )
            // InternalGo.g:293:2: ( ( rule__ConstSpec__Group__0 ) )
            {
            // InternalGo.g:293:2: ( ( rule__ConstSpec__Group__0 ) )
            // InternalGo.g:294:3: ( rule__ConstSpec__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstSpecAccess().getGroup()); 
            }
            // InternalGo.g:295:3: ( rule__ConstSpec__Group__0 )
            // InternalGo.g:295:4: rule__ConstSpec__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ConstSpec__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstSpecAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleconstSpec"


    // $ANTLR start "entryRuleidentifierList"
    // InternalGo.g:304:1: entryRuleidentifierList : ruleidentifierList EOF ;
    public final void entryRuleidentifierList() throws RecognitionException {
        try {
            // InternalGo.g:305:1: ( ruleidentifierList EOF )
            // InternalGo.g:306:1: ruleidentifierList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleidentifierList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleidentifierList"


    // $ANTLR start "ruleidentifierList"
    // InternalGo.g:313:1: ruleidentifierList : ( ( rule__IdentifierList__Group__0 ) ) ;
    public final void ruleidentifierList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:317:2: ( ( ( rule__IdentifierList__Group__0 ) ) )
            // InternalGo.g:318:2: ( ( rule__IdentifierList__Group__0 ) )
            {
            // InternalGo.g:318:2: ( ( rule__IdentifierList__Group__0 ) )
            // InternalGo.g:319:3: ( rule__IdentifierList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierListAccess().getGroup()); 
            }
            // InternalGo.g:320:3: ( rule__IdentifierList__Group__0 )
            // InternalGo.g:320:4: rule__IdentifierList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IdentifierList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleidentifierList"


    // $ANTLR start "entryRuleexpressionList"
    // InternalGo.g:329:1: entryRuleexpressionList : ruleexpressionList EOF ;
    public final void entryRuleexpressionList() throws RecognitionException {
        try {
            // InternalGo.g:330:1: ( ruleexpressionList EOF )
            // InternalGo.g:331:1: ruleexpressionList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleexpressionList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleexpressionList"


    // $ANTLR start "ruleexpressionList"
    // InternalGo.g:338:1: ruleexpressionList : ( ( rule__ExpressionList__Group__0 ) ) ;
    public final void ruleexpressionList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:342:2: ( ( ( rule__ExpressionList__Group__0 ) ) )
            // InternalGo.g:343:2: ( ( rule__ExpressionList__Group__0 ) )
            {
            // InternalGo.g:343:2: ( ( rule__ExpressionList__Group__0 ) )
            // InternalGo.g:344:3: ( rule__ExpressionList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionListAccess().getGroup()); 
            }
            // InternalGo.g:345:3: ( rule__ExpressionList__Group__0 )
            // InternalGo.g:345:4: rule__ExpressionList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleexpressionList"


    // $ANTLR start "entryRuletypeDecl"
    // InternalGo.g:354:1: entryRuletypeDecl : ruletypeDecl EOF ;
    public final void entryRuletypeDecl() throws RecognitionException {
        try {
            // InternalGo.g:355:1: ( ruletypeDecl EOF )
            // InternalGo.g:356:1: ruletypeDecl EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            ruletypeDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeDeclRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuletypeDecl"


    // $ANTLR start "ruletypeDecl"
    // InternalGo.g:363:1: ruletypeDecl : ( ( rule__TypeDecl__Group__0 ) ) ;
    public final void ruletypeDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:367:2: ( ( ( rule__TypeDecl__Group__0 ) ) )
            // InternalGo.g:368:2: ( ( rule__TypeDecl__Group__0 ) )
            {
            // InternalGo.g:368:2: ( ( rule__TypeDecl__Group__0 ) )
            // InternalGo.g:369:3: ( rule__TypeDecl__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeDeclAccess().getGroup()); 
            }
            // InternalGo.g:370:3: ( rule__TypeDecl__Group__0 )
            // InternalGo.g:370:4: rule__TypeDecl__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TypeDecl__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeDeclAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruletypeDecl"


    // $ANTLR start "entryRuletypeSpec"
    // InternalGo.g:379:1: entryRuletypeSpec : ruletypeSpec EOF ;
    public final void entryRuletypeSpec() throws RecognitionException {
        try {
            // InternalGo.g:380:1: ( ruletypeSpec EOF )
            // InternalGo.g:381:1: ruletypeSpec EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            ruletypeSpec();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSpecRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuletypeSpec"


    // $ANTLR start "ruletypeSpec"
    // InternalGo.g:388:1: ruletypeSpec : ( ( rule__TypeSpec__Group__0 ) ) ;
    public final void ruletypeSpec() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:392:2: ( ( ( rule__TypeSpec__Group__0 ) ) )
            // InternalGo.g:393:2: ( ( rule__TypeSpec__Group__0 ) )
            {
            // InternalGo.g:393:2: ( ( rule__TypeSpec__Group__0 ) )
            // InternalGo.g:394:3: ( rule__TypeSpec__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSpecAccess().getGroup()); 
            }
            // InternalGo.g:395:3: ( rule__TypeSpec__Group__0 )
            // InternalGo.g:395:4: rule__TypeSpec__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TypeSpec__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSpecAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruletypeSpec"


    // $ANTLR start "entryRulefunctionDecl"
    // InternalGo.g:404:1: entryRulefunctionDecl : rulefunctionDecl EOF ;
    public final void entryRulefunctionDecl() throws RecognitionException {
        try {
            // InternalGo.g:405:1: ( rulefunctionDecl EOF )
            // InternalGo.g:406:1: rulefunctionDecl EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            rulefunctionDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDeclRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulefunctionDecl"


    // $ANTLR start "rulefunctionDecl"
    // InternalGo.g:413:1: rulefunctionDecl : ( ( rule__FunctionDecl__Group__0 ) ) ;
    public final void rulefunctionDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:417:2: ( ( ( rule__FunctionDecl__Group__0 ) ) )
            // InternalGo.g:418:2: ( ( rule__FunctionDecl__Group__0 ) )
            {
            // InternalGo.g:418:2: ( ( rule__FunctionDecl__Group__0 ) )
            // InternalGo.g:419:3: ( rule__FunctionDecl__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDeclAccess().getGroup()); 
            }
            // InternalGo.g:420:3: ( rule__FunctionDecl__Group__0 )
            // InternalGo.g:420:4: rule__FunctionDecl__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDecl__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDeclAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulefunctionDecl"


    // $ANTLR start "entryRulefunction"
    // InternalGo.g:429:1: entryRulefunction : rulefunction EOF ;
    public final void entryRulefunction() throws RecognitionException {
        try {
            // InternalGo.g:430:1: ( rulefunction EOF )
            // InternalGo.g:431:1: rulefunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            rulefunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulefunction"


    // $ANTLR start "rulefunction"
    // InternalGo.g:438:1: rulefunction : ( ( rule__Function__Group__0 ) ) ;
    public final void rulefunction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:442:2: ( ( ( rule__Function__Group__0 ) ) )
            // InternalGo.g:443:2: ( ( rule__Function__Group__0 ) )
            {
            // InternalGo.g:443:2: ( ( rule__Function__Group__0 ) )
            // InternalGo.g:444:3: ( rule__Function__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getGroup()); 
            }
            // InternalGo.g:445:3: ( rule__Function__Group__0 )
            // InternalGo.g:445:4: rule__Function__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulefunction"


    // $ANTLR start "entryRulemethodDecl"
    // InternalGo.g:454:1: entryRulemethodDecl : rulemethodDecl EOF ;
    public final void entryRulemethodDecl() throws RecognitionException {
        try {
            // InternalGo.g:455:1: ( rulemethodDecl EOF )
            // InternalGo.g:456:1: rulemethodDecl EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            rulemethodDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodDeclRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulemethodDecl"


    // $ANTLR start "rulemethodDecl"
    // InternalGo.g:463:1: rulemethodDecl : ( ( rule__MethodDecl__Group__0 ) ) ;
    public final void rulemethodDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:467:2: ( ( ( rule__MethodDecl__Group__0 ) ) )
            // InternalGo.g:468:2: ( ( rule__MethodDecl__Group__0 ) )
            {
            // InternalGo.g:468:2: ( ( rule__MethodDecl__Group__0 ) )
            // InternalGo.g:469:3: ( rule__MethodDecl__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodDeclAccess().getGroup()); 
            }
            // InternalGo.g:470:3: ( rule__MethodDecl__Group__0 )
            // InternalGo.g:470:4: rule__MethodDecl__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MethodDecl__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodDeclAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulemethodDecl"


    // $ANTLR start "entryRulereceiver"
    // InternalGo.g:479:1: entryRulereceiver : rulereceiver EOF ;
    public final void entryRulereceiver() throws RecognitionException {
        try {
            // InternalGo.g:480:1: ( rulereceiver EOF )
            // InternalGo.g:481:1: rulereceiver EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReceiverRule()); 
            }
            pushFollow(FOLLOW_1);
            rulereceiver();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReceiverRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulereceiver"


    // $ANTLR start "rulereceiver"
    // InternalGo.g:488:1: rulereceiver : ( ( rule__Receiver__ParametersAssignment ) ) ;
    public final void rulereceiver() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:492:2: ( ( ( rule__Receiver__ParametersAssignment ) ) )
            // InternalGo.g:493:2: ( ( rule__Receiver__ParametersAssignment ) )
            {
            // InternalGo.g:493:2: ( ( rule__Receiver__ParametersAssignment ) )
            // InternalGo.g:494:3: ( rule__Receiver__ParametersAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReceiverAccess().getParametersAssignment()); 
            }
            // InternalGo.g:495:3: ( rule__Receiver__ParametersAssignment )
            // InternalGo.g:495:4: rule__Receiver__ParametersAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Receiver__ParametersAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReceiverAccess().getParametersAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulereceiver"


    // $ANTLR start "entryRulevarDecl"
    // InternalGo.g:504:1: entryRulevarDecl : rulevarDecl EOF ;
    public final void entryRulevarDecl() throws RecognitionException {
        try {
            // InternalGo.g:505:1: ( rulevarDecl EOF )
            // InternalGo.g:506:1: rulevarDecl EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            rulevarDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulevarDecl"


    // $ANTLR start "rulevarDecl"
    // InternalGo.g:513:1: rulevarDecl : ( ( rule__VarDecl__Group__0 ) ) ;
    public final void rulevarDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:517:2: ( ( ( rule__VarDecl__Group__0 ) ) )
            // InternalGo.g:518:2: ( ( rule__VarDecl__Group__0 ) )
            {
            // InternalGo.g:518:2: ( ( rule__VarDecl__Group__0 ) )
            // InternalGo.g:519:3: ( rule__VarDecl__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclAccess().getGroup()); 
            }
            // InternalGo.g:520:3: ( rule__VarDecl__Group__0 )
            // InternalGo.g:520:4: rule__VarDecl__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarDecl__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulevarDecl"


    // $ANTLR start "entryRulevarSpec"
    // InternalGo.g:529:1: entryRulevarSpec : rulevarSpec EOF ;
    public final void entryRulevarSpec() throws RecognitionException {
        try {
            // InternalGo.g:530:1: ( rulevarSpec EOF )
            // InternalGo.g:531:1: rulevarSpec EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            rulevarSpec();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarSpecRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulevarSpec"


    // $ANTLR start "rulevarSpec"
    // InternalGo.g:538:1: rulevarSpec : ( ( rule__VarSpec__Group__0 ) ) ;
    public final void rulevarSpec() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:542:2: ( ( ( rule__VarSpec__Group__0 ) ) )
            // InternalGo.g:543:2: ( ( rule__VarSpec__Group__0 ) )
            {
            // InternalGo.g:543:2: ( ( rule__VarSpec__Group__0 ) )
            // InternalGo.g:544:3: ( rule__VarSpec__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarSpecAccess().getGroup()); 
            }
            // InternalGo.g:545:3: ( rule__VarSpec__Group__0 )
            // InternalGo.g:545:4: rule__VarSpec__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarSpec__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarSpecAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulevarSpec"


    // $ANTLR start "entryRuleblock"
    // InternalGo.g:554:1: entryRuleblock : ruleblock EOF ;
    public final void entryRuleblock() throws RecognitionException {
        try {
            // InternalGo.g:555:1: ( ruleblock EOF )
            // InternalGo.g:556:1: ruleblock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleblock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleblock"


    // $ANTLR start "ruleblock"
    // InternalGo.g:563:1: ruleblock : ( ( rule__Block__Group__0 ) ) ;
    public final void ruleblock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:567:2: ( ( ( rule__Block__Group__0 ) ) )
            // InternalGo.g:568:2: ( ( rule__Block__Group__0 ) )
            {
            // InternalGo.g:568:2: ( ( rule__Block__Group__0 ) )
            // InternalGo.g:569:3: ( rule__Block__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockAccess().getGroup()); 
            }
            // InternalGo.g:570:3: ( rule__Block__Group__0 )
            // InternalGo.g:570:4: rule__Block__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Block__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleblock"


    // $ANTLR start "entryRulestatementList"
    // InternalGo.g:579:1: entryRulestatementList : rulestatementList EOF ;
    public final void entryRulestatementList() throws RecognitionException {
        try {
            // InternalGo.g:580:1: ( rulestatementList EOF )
            // InternalGo.g:581:1: rulestatementList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementListRule()); 
            }
            pushFollow(FOLLOW_1);
            rulestatementList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulestatementList"


    // $ANTLR start "rulestatementList"
    // InternalGo.g:588:1: rulestatementList : ( ( rule__StatementList__StatementAssignment )* ) ;
    public final void rulestatementList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:592:2: ( ( ( rule__StatementList__StatementAssignment )* ) )
            // InternalGo.g:593:2: ( ( rule__StatementList__StatementAssignment )* )
            {
            // InternalGo.g:593:2: ( ( rule__StatementList__StatementAssignment )* )
            // InternalGo.g:594:3: ( rule__StatementList__StatementAssignment )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementListAccess().getStatementAssignment()); 
            }
            // InternalGo.g:595:3: ( rule__StatementList__StatementAssignment )*
            loop1:
            do {
                int alt1=2;
                switch ( input.LA(1) ) {
                case EOF:
                    {
                    int LA1_1 = input.LA(2);

                    if ( (synpred1_InternalGo()) ) {
                        alt1=1;
                    }


                    }
                    break;
                case 74:
                    {
                    int LA1_2 = input.LA(2);

                    if ( (synpred1_InternalGo()) ) {
                        alt1=1;
                    }


                    }
                    break;
                case 85:
                    {
                    int LA1_3 = input.LA(2);

                    if ( (synpred1_InternalGo()) ) {
                        alt1=1;
                    }


                    }
                    break;
                case 59:
                    {
                    int LA1_4 = input.LA(2);

                    if ( (synpred1_InternalGo()) ) {
                        alt1=1;
                    }


                    }
                    break;
                case RULE_STRING_LIT:
                case RULE_WS:
                case RULE_IDENTIFIER:
                case RULE_INT_LIT:
                case RULE_FLOAT_LIT:
                case RULE_IMAGINARY_LIT:
                case RULE_RUNE_LIT:
                case RULE_BINARY_OP:
                case 44:
                case 45:
                case 46:
                case 47:
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 60:
                case 61:
                case 62:
                case 65:
                case 67:
                case 68:
                case 69:
                case 70:
                case 71:
                case 72:
                case 73:
                case 77:
                case 78:
                case 79:
                case 80:
                case 81:
                case 82:
                case 84:
                case 86:
                case 87:
                case 89:
                case 90:
                case 92:
                case 93:
                case 95:
                    {
                    alt1=1;
                    }
                    break;

                }

                switch (alt1) {
            	case 1 :
            	    // InternalGo.g:595:4: rule__StatementList__StatementAssignment
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__StatementList__StatementAssignment();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementListAccess().getStatementAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulestatementList"


    // $ANTLR start "entryRulestatement"
    // InternalGo.g:604:1: entryRulestatement : rulestatement EOF ;
    public final void entryRulestatement() throws RecognitionException {
        try {
            // InternalGo.g:605:1: ( rulestatement EOF )
            // InternalGo.g:606:1: rulestatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            rulestatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulestatement"


    // $ANTLR start "rulestatement"
    // InternalGo.g:613:1: rulestatement : ( ( rule__Statement__Alternatives ) ) ;
    public final void rulestatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:617:2: ( ( ( rule__Statement__Alternatives ) ) )
            // InternalGo.g:618:2: ( ( rule__Statement__Alternatives ) )
            {
            // InternalGo.g:618:2: ( ( rule__Statement__Alternatives ) )
            // InternalGo.g:619:3: ( rule__Statement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getAlternatives()); 
            }
            // InternalGo.g:620:3: ( rule__Statement__Alternatives )
            // InternalGo.g:620:4: rule__Statement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Statement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulestatement"


    // $ANTLR start "entryRulesimpleStmt"
    // InternalGo.g:629:1: entryRulesimpleStmt : rulesimpleStmt EOF ;
    public final void entryRulesimpleStmt() throws RecognitionException {
        try {
            // InternalGo.g:630:1: ( rulesimpleStmt EOF )
            // InternalGo.g:631:1: rulesimpleStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            rulesimpleStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulesimpleStmt"


    // $ANTLR start "rulesimpleStmt"
    // InternalGo.g:638:1: rulesimpleStmt : ( ( rule__SimpleStmt__Alternatives ) ) ;
    public final void rulesimpleStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:642:2: ( ( ( rule__SimpleStmt__Alternatives ) ) )
            // InternalGo.g:643:2: ( ( rule__SimpleStmt__Alternatives ) )
            {
            // InternalGo.g:643:2: ( ( rule__SimpleStmt__Alternatives ) )
            // InternalGo.g:644:3: ( rule__SimpleStmt__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleStmtAccess().getAlternatives()); 
            }
            // InternalGo.g:645:3: ( rule__SimpleStmt__Alternatives )
            // InternalGo.g:645:4: rule__SimpleStmt__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__SimpleStmt__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleStmtAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulesimpleStmt"


    // $ANTLR start "entryRuleexpressionStmt"
    // InternalGo.g:654:1: entryRuleexpressionStmt : ruleexpressionStmt EOF ;
    public final void entryRuleexpressionStmt() throws RecognitionException {
        try {
            // InternalGo.g:655:1: ( ruleexpressionStmt EOF )
            // InternalGo.g:656:1: ruleexpressionStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleexpressionStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleexpressionStmt"


    // $ANTLR start "ruleexpressionStmt"
    // InternalGo.g:663:1: ruleexpressionStmt : ( ( rule__ExpressionStmt__ExpressionAssignment ) ) ;
    public final void ruleexpressionStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:667:2: ( ( ( rule__ExpressionStmt__ExpressionAssignment ) ) )
            // InternalGo.g:668:2: ( ( rule__ExpressionStmt__ExpressionAssignment ) )
            {
            // InternalGo.g:668:2: ( ( rule__ExpressionStmt__ExpressionAssignment ) )
            // InternalGo.g:669:3: ( rule__ExpressionStmt__ExpressionAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionStmtAccess().getExpressionAssignment()); 
            }
            // InternalGo.g:670:3: ( rule__ExpressionStmt__ExpressionAssignment )
            // InternalGo.g:670:4: rule__ExpressionStmt__ExpressionAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionStmt__ExpressionAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionStmtAccess().getExpressionAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleexpressionStmt"


    // $ANTLR start "entryRulesendStmt"
    // InternalGo.g:679:1: entryRulesendStmt : rulesendStmt EOF ;
    public final void entryRulesendStmt() throws RecognitionException {
        try {
            // InternalGo.g:680:1: ( rulesendStmt EOF )
            // InternalGo.g:681:1: rulesendStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSendStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            rulesendStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSendStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulesendStmt"


    // $ANTLR start "rulesendStmt"
    // InternalGo.g:688:1: rulesendStmt : ( ( rule__SendStmt__Group__0 ) ) ;
    public final void rulesendStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:692:2: ( ( ( rule__SendStmt__Group__0 ) ) )
            // InternalGo.g:693:2: ( ( rule__SendStmt__Group__0 ) )
            {
            // InternalGo.g:693:2: ( ( rule__SendStmt__Group__0 ) )
            // InternalGo.g:694:3: ( rule__SendStmt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSendStmtAccess().getGroup()); 
            }
            // InternalGo.g:695:3: ( rule__SendStmt__Group__0 )
            // InternalGo.g:695:4: rule__SendStmt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SendStmt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSendStmtAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulesendStmt"


    // $ANTLR start "entryRuleincDecStmt"
    // InternalGo.g:704:1: entryRuleincDecStmt : ruleincDecStmt EOF ;
    public final void entryRuleincDecStmt() throws RecognitionException {
        try {
            // InternalGo.g:705:1: ( ruleincDecStmt EOF )
            // InternalGo.g:706:1: ruleincDecStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIncDecStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleincDecStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIncDecStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleincDecStmt"


    // $ANTLR start "ruleincDecStmt"
    // InternalGo.g:713:1: ruleincDecStmt : ( ( rule__IncDecStmt__Group__0 ) ) ;
    public final void ruleincDecStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:717:2: ( ( ( rule__IncDecStmt__Group__0 ) ) )
            // InternalGo.g:718:2: ( ( rule__IncDecStmt__Group__0 ) )
            {
            // InternalGo.g:718:2: ( ( rule__IncDecStmt__Group__0 ) )
            // InternalGo.g:719:3: ( rule__IncDecStmt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIncDecStmtAccess().getGroup()); 
            }
            // InternalGo.g:720:3: ( rule__IncDecStmt__Group__0 )
            // InternalGo.g:720:4: rule__IncDecStmt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IncDecStmt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIncDecStmtAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleincDecStmt"


    // $ANTLR start "entryRuleassignment"
    // InternalGo.g:729:1: entryRuleassignment : ruleassignment EOF ;
    public final void entryRuleassignment() throws RecognitionException {
        try {
            // InternalGo.g:730:1: ( ruleassignment EOF )
            // InternalGo.g:731:1: ruleassignment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleassignment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleassignment"


    // $ANTLR start "ruleassignment"
    // InternalGo.g:738:1: ruleassignment : ( ( rule__Assignment__Group__0 ) ) ;
    public final void ruleassignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:742:2: ( ( ( rule__Assignment__Group__0 ) ) )
            // InternalGo.g:743:2: ( ( rule__Assignment__Group__0 ) )
            {
            // InternalGo.g:743:2: ( ( rule__Assignment__Group__0 ) )
            // InternalGo.g:744:3: ( rule__Assignment__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentAccess().getGroup()); 
            }
            // InternalGo.g:745:3: ( rule__Assignment__Group__0 )
            // InternalGo.g:745:4: rule__Assignment__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Assignment__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleassignment"


    // $ANTLR start "entryRuleassign_op"
    // InternalGo.g:754:1: entryRuleassign_op : ruleassign_op EOF ;
    public final void entryRuleassign_op() throws RecognitionException {
        try {
            // InternalGo.g:755:1: ( ruleassign_op EOF )
            // InternalGo.g:756:1: ruleassign_op EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssign_opRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleassign_op();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssign_opRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleassign_op"


    // $ANTLR start "ruleassign_op"
    // InternalGo.g:763:1: ruleassign_op : ( ( rule__Assign_op__Group__0 ) ) ;
    public final void ruleassign_op() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:767:2: ( ( ( rule__Assign_op__Group__0 ) ) )
            // InternalGo.g:768:2: ( ( rule__Assign_op__Group__0 ) )
            {
            // InternalGo.g:768:2: ( ( rule__Assign_op__Group__0 ) )
            // InternalGo.g:769:3: ( rule__Assign_op__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssign_opAccess().getGroup()); 
            }
            // InternalGo.g:770:3: ( rule__Assign_op__Group__0 )
            // InternalGo.g:770:4: rule__Assign_op__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Assign_op__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssign_opAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleassign_op"


    // $ANTLR start "entryRuleshortVarDecl"
    // InternalGo.g:779:1: entryRuleshortVarDecl : ruleshortVarDecl EOF ;
    public final void entryRuleshortVarDecl() throws RecognitionException {
        try {
            // InternalGo.g:780:1: ( ruleshortVarDecl EOF )
            // InternalGo.g:781:1: ruleshortVarDecl EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortVarDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleshortVarDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortVarDeclRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleshortVarDecl"


    // $ANTLR start "ruleshortVarDecl"
    // InternalGo.g:788:1: ruleshortVarDecl : ( ( rule__ShortVarDecl__Group__0 ) ) ;
    public final void ruleshortVarDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:792:2: ( ( ( rule__ShortVarDecl__Group__0 ) ) )
            // InternalGo.g:793:2: ( ( rule__ShortVarDecl__Group__0 ) )
            {
            // InternalGo.g:793:2: ( ( rule__ShortVarDecl__Group__0 ) )
            // InternalGo.g:794:3: ( rule__ShortVarDecl__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortVarDeclAccess().getGroup()); 
            }
            // InternalGo.g:795:3: ( rule__ShortVarDecl__Group__0 )
            // InternalGo.g:795:4: rule__ShortVarDecl__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ShortVarDecl__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortVarDeclAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleshortVarDecl"


    // $ANTLR start "entryRuleemptyStmt"
    // InternalGo.g:804:1: entryRuleemptyStmt : ruleemptyStmt EOF ;
    public final void entryRuleemptyStmt() throws RecognitionException {
        try {
            // InternalGo.g:805:1: ( ruleemptyStmt EOF )
            // InternalGo.g:806:1: ruleemptyStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmptyStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleemptyStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmptyStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleemptyStmt"


    // $ANTLR start "ruleemptyStmt"
    // InternalGo.g:813:1: ruleemptyStmt : ( RULE_WS ) ;
    public final void ruleemptyStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:817:2: ( ( RULE_WS ) )
            // InternalGo.g:818:2: ( RULE_WS )
            {
            // InternalGo.g:818:2: ( RULE_WS )
            // InternalGo.g:819:3: RULE_WS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEmptyStmtAccess().getWSTerminalRuleCall()); 
            }
            match(input,RULE_WS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEmptyStmtAccess().getWSTerminalRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleemptyStmt"


    // $ANTLR start "entryRulelabeledStmt"
    // InternalGo.g:829:1: entryRulelabeledStmt : rulelabeledStmt EOF ;
    public final void entryRulelabeledStmt() throws RecognitionException {
        try {
            // InternalGo.g:830:1: ( rulelabeledStmt EOF )
            // InternalGo.g:831:1: rulelabeledStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabeledStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            rulelabeledStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabeledStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulelabeledStmt"


    // $ANTLR start "rulelabeledStmt"
    // InternalGo.g:838:1: rulelabeledStmt : ( ( rule__LabeledStmt__Group__0 ) ) ;
    public final void rulelabeledStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:842:2: ( ( ( rule__LabeledStmt__Group__0 ) ) )
            // InternalGo.g:843:2: ( ( rule__LabeledStmt__Group__0 ) )
            {
            // InternalGo.g:843:2: ( ( rule__LabeledStmt__Group__0 ) )
            // InternalGo.g:844:3: ( rule__LabeledStmt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabeledStmtAccess().getGroup()); 
            }
            // InternalGo.g:845:3: ( rule__LabeledStmt__Group__0 )
            // InternalGo.g:845:4: rule__LabeledStmt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LabeledStmt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabeledStmtAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulelabeledStmt"


    // $ANTLR start "entryRulereturnStmt"
    // InternalGo.g:854:1: entryRulereturnStmt : rulereturnStmt EOF ;
    public final void entryRulereturnStmt() throws RecognitionException {
        try {
            // InternalGo.g:855:1: ( rulereturnStmt EOF )
            // InternalGo.g:856:1: rulereturnStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReturnStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            rulereturnStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReturnStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulereturnStmt"


    // $ANTLR start "rulereturnStmt"
    // InternalGo.g:863:1: rulereturnStmt : ( ( rule__ReturnStmt__Group__0 ) ) ;
    public final void rulereturnStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:867:2: ( ( ( rule__ReturnStmt__Group__0 ) ) )
            // InternalGo.g:868:2: ( ( rule__ReturnStmt__Group__0 ) )
            {
            // InternalGo.g:868:2: ( ( rule__ReturnStmt__Group__0 ) )
            // InternalGo.g:869:3: ( rule__ReturnStmt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReturnStmtAccess().getGroup()); 
            }
            // InternalGo.g:870:3: ( rule__ReturnStmt__Group__0 )
            // InternalGo.g:870:4: rule__ReturnStmt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ReturnStmt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReturnStmtAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulereturnStmt"


    // $ANTLR start "entryRulebreakStmt"
    // InternalGo.g:879:1: entryRulebreakStmt : rulebreakStmt EOF ;
    public final void entryRulebreakStmt() throws RecognitionException {
        try {
            // InternalGo.g:880:1: ( rulebreakStmt EOF )
            // InternalGo.g:881:1: rulebreakStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            rulebreakStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulebreakStmt"


    // $ANTLR start "rulebreakStmt"
    // InternalGo.g:888:1: rulebreakStmt : ( ( rule__BreakStmt__Group__0 ) ) ;
    public final void rulebreakStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:892:2: ( ( ( rule__BreakStmt__Group__0 ) ) )
            // InternalGo.g:893:2: ( ( rule__BreakStmt__Group__0 ) )
            {
            // InternalGo.g:893:2: ( ( rule__BreakStmt__Group__0 ) )
            // InternalGo.g:894:3: ( rule__BreakStmt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakStmtAccess().getGroup()); 
            }
            // InternalGo.g:895:3: ( rule__BreakStmt__Group__0 )
            // InternalGo.g:895:4: rule__BreakStmt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BreakStmt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakStmtAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulebreakStmt"


    // $ANTLR start "entryRulecontinueStmt"
    // InternalGo.g:904:1: entryRulecontinueStmt : rulecontinueStmt EOF ;
    public final void entryRulecontinueStmt() throws RecognitionException {
        try {
            // InternalGo.g:905:1: ( rulecontinueStmt EOF )
            // InternalGo.g:906:1: rulecontinueStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getContinueStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            rulecontinueStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getContinueStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulecontinueStmt"


    // $ANTLR start "rulecontinueStmt"
    // InternalGo.g:913:1: rulecontinueStmt : ( ( rule__ContinueStmt__Group__0 ) ) ;
    public final void rulecontinueStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:917:2: ( ( ( rule__ContinueStmt__Group__0 ) ) )
            // InternalGo.g:918:2: ( ( rule__ContinueStmt__Group__0 ) )
            {
            // InternalGo.g:918:2: ( ( rule__ContinueStmt__Group__0 ) )
            // InternalGo.g:919:3: ( rule__ContinueStmt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getContinueStmtAccess().getGroup()); 
            }
            // InternalGo.g:920:3: ( rule__ContinueStmt__Group__0 )
            // InternalGo.g:920:4: rule__ContinueStmt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ContinueStmt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getContinueStmtAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulecontinueStmt"


    // $ANTLR start "entryRulegotoStmt"
    // InternalGo.g:929:1: entryRulegotoStmt : rulegotoStmt EOF ;
    public final void entryRulegotoStmt() throws RecognitionException {
        try {
            // InternalGo.g:930:1: ( rulegotoStmt EOF )
            // InternalGo.g:931:1: rulegotoStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGotoStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            rulegotoStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGotoStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulegotoStmt"


    // $ANTLR start "rulegotoStmt"
    // InternalGo.g:938:1: rulegotoStmt : ( ( rule__GotoStmt__Group__0 ) ) ;
    public final void rulegotoStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:942:2: ( ( ( rule__GotoStmt__Group__0 ) ) )
            // InternalGo.g:943:2: ( ( rule__GotoStmt__Group__0 ) )
            {
            // InternalGo.g:943:2: ( ( rule__GotoStmt__Group__0 ) )
            // InternalGo.g:944:3: ( rule__GotoStmt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGotoStmtAccess().getGroup()); 
            }
            // InternalGo.g:945:3: ( rule__GotoStmt__Group__0 )
            // InternalGo.g:945:4: rule__GotoStmt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GotoStmt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGotoStmtAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulegotoStmt"


    // $ANTLR start "entryRulefallthroughStmt"
    // InternalGo.g:954:1: entryRulefallthroughStmt : rulefallthroughStmt EOF ;
    public final void entryRulefallthroughStmt() throws RecognitionException {
        try {
            // InternalGo.g:955:1: ( rulefallthroughStmt EOF )
            // InternalGo.g:956:1: rulefallthroughStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFallthroughStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            rulefallthroughStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFallthroughStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulefallthroughStmt"


    // $ANTLR start "rulefallthroughStmt"
    // InternalGo.g:963:1: rulefallthroughStmt : ( 'fallthrough' ) ;
    public final void rulefallthroughStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:967:2: ( ( 'fallthrough' ) )
            // InternalGo.g:968:2: ( 'fallthrough' )
            {
            // InternalGo.g:968:2: ( 'fallthrough' )
            // InternalGo.g:969:3: 'fallthrough'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFallthroughStmtAccess().getFallthroughKeyword()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFallthroughStmtAccess().getFallthroughKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulefallthroughStmt"


    // $ANTLR start "entryRuledeferStmt"
    // InternalGo.g:979:1: entryRuledeferStmt : ruledeferStmt EOF ;
    public final void entryRuledeferStmt() throws RecognitionException {
        try {
            // InternalGo.g:980:1: ( ruledeferStmt EOF )
            // InternalGo.g:981:1: ruledeferStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeferStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            ruledeferStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeferStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuledeferStmt"


    // $ANTLR start "ruledeferStmt"
    // InternalGo.g:988:1: ruledeferStmt : ( ( rule__DeferStmt__Group__0 ) ) ;
    public final void ruledeferStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:992:2: ( ( ( rule__DeferStmt__Group__0 ) ) )
            // InternalGo.g:993:2: ( ( rule__DeferStmt__Group__0 ) )
            {
            // InternalGo.g:993:2: ( ( rule__DeferStmt__Group__0 ) )
            // InternalGo.g:994:3: ( rule__DeferStmt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeferStmtAccess().getGroup()); 
            }
            // InternalGo.g:995:3: ( rule__DeferStmt__Group__0 )
            // InternalGo.g:995:4: rule__DeferStmt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DeferStmt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeferStmtAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruledeferStmt"


    // $ANTLR start "entryRuleifStmt"
    // InternalGo.g:1004:1: entryRuleifStmt : ruleifStmt EOF ;
    public final void entryRuleifStmt() throws RecognitionException {
        try {
            // InternalGo.g:1005:1: ( ruleifStmt EOF )
            // InternalGo.g:1006:1: ruleifStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleifStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleifStmt"


    // $ANTLR start "ruleifStmt"
    // InternalGo.g:1013:1: ruleifStmt : ( ( rule__IfStmt__Group__0 ) ) ;
    public final void ruleifStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1017:2: ( ( ( rule__IfStmt__Group__0 ) ) )
            // InternalGo.g:1018:2: ( ( rule__IfStmt__Group__0 ) )
            {
            // InternalGo.g:1018:2: ( ( rule__IfStmt__Group__0 ) )
            // InternalGo.g:1019:3: ( rule__IfStmt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStmtAccess().getGroup()); 
            }
            // InternalGo.g:1020:3: ( rule__IfStmt__Group__0 )
            // InternalGo.g:1020:4: rule__IfStmt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IfStmt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStmtAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleifStmt"


    // $ANTLR start "entryRuleswitchStmt"
    // InternalGo.g:1029:1: entryRuleswitchStmt : ruleswitchStmt EOF ;
    public final void entryRuleswitchStmt() throws RecognitionException {
        try {
            // InternalGo.g:1030:1: ( ruleswitchStmt EOF )
            // InternalGo.g:1031:1: ruleswitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleswitchStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleswitchStmt"


    // $ANTLR start "ruleswitchStmt"
    // InternalGo.g:1038:1: ruleswitchStmt : ( ( rule__SwitchStmt__Alternatives ) ) ;
    public final void ruleswitchStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1042:2: ( ( ( rule__SwitchStmt__Alternatives ) ) )
            // InternalGo.g:1043:2: ( ( rule__SwitchStmt__Alternatives ) )
            {
            // InternalGo.g:1043:2: ( ( rule__SwitchStmt__Alternatives ) )
            // InternalGo.g:1044:3: ( rule__SwitchStmt__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchStmtAccess().getAlternatives()); 
            }
            // InternalGo.g:1045:3: ( rule__SwitchStmt__Alternatives )
            // InternalGo.g:1045:4: rule__SwitchStmt__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__SwitchStmt__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchStmtAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleswitchStmt"


    // $ANTLR start "entryRuleexprSwitchStmt"
    // InternalGo.g:1054:1: entryRuleexprSwitchStmt : ruleexprSwitchStmt EOF ;
    public final void entryRuleexprSwitchStmt() throws RecognitionException {
        try {
            // InternalGo.g:1055:1: ( ruleexprSwitchStmt EOF )
            // InternalGo.g:1056:1: ruleexprSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleexprSwitchStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprSwitchStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleexprSwitchStmt"


    // $ANTLR start "ruleexprSwitchStmt"
    // InternalGo.g:1063:1: ruleexprSwitchStmt : ( ( rule__ExprSwitchStmt__Group__0 ) ) ;
    public final void ruleexprSwitchStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1067:2: ( ( ( rule__ExprSwitchStmt__Group__0 ) ) )
            // InternalGo.g:1068:2: ( ( rule__ExprSwitchStmt__Group__0 ) )
            {
            // InternalGo.g:1068:2: ( ( rule__ExprSwitchStmt__Group__0 ) )
            // InternalGo.g:1069:3: ( rule__ExprSwitchStmt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprSwitchStmtAccess().getGroup()); 
            }
            // InternalGo.g:1070:3: ( rule__ExprSwitchStmt__Group__0 )
            // InternalGo.g:1070:4: rule__ExprSwitchStmt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExprSwitchStmt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprSwitchStmtAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleexprSwitchStmt"


    // $ANTLR start "entryRuleexprCaseClause"
    // InternalGo.g:1079:1: entryRuleexprCaseClause : ruleexprCaseClause EOF ;
    public final void entryRuleexprCaseClause() throws RecognitionException {
        try {
            // InternalGo.g:1080:1: ( ruleexprCaseClause EOF )
            // InternalGo.g:1081:1: ruleexprCaseClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleexprCaseClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprCaseClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleexprCaseClause"


    // $ANTLR start "ruleexprCaseClause"
    // InternalGo.g:1088:1: ruleexprCaseClause : ( ( rule__ExprCaseClause__Group__0 ) ) ;
    public final void ruleexprCaseClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1092:2: ( ( ( rule__ExprCaseClause__Group__0 ) ) )
            // InternalGo.g:1093:2: ( ( rule__ExprCaseClause__Group__0 ) )
            {
            // InternalGo.g:1093:2: ( ( rule__ExprCaseClause__Group__0 ) )
            // InternalGo.g:1094:3: ( rule__ExprCaseClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprCaseClauseAccess().getGroup()); 
            }
            // InternalGo.g:1095:3: ( rule__ExprCaseClause__Group__0 )
            // InternalGo.g:1095:4: rule__ExprCaseClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExprCaseClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprCaseClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleexprCaseClause"


    // $ANTLR start "entryRuleexprSwitchCase"
    // InternalGo.g:1104:1: entryRuleexprSwitchCase : ruleexprSwitchCase EOF ;
    public final void entryRuleexprSwitchCase() throws RecognitionException {
        try {
            // InternalGo.g:1105:1: ( ruleexprSwitchCase EOF )
            // InternalGo.g:1106:1: ruleexprSwitchCase EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprSwitchCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleexprSwitchCase();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprSwitchCaseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleexprSwitchCase"


    // $ANTLR start "ruleexprSwitchCase"
    // InternalGo.g:1113:1: ruleexprSwitchCase : ( ( rule__ExprSwitchCase__Alternatives ) ) ;
    public final void ruleexprSwitchCase() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1117:2: ( ( ( rule__ExprSwitchCase__Alternatives ) ) )
            // InternalGo.g:1118:2: ( ( rule__ExprSwitchCase__Alternatives ) )
            {
            // InternalGo.g:1118:2: ( ( rule__ExprSwitchCase__Alternatives ) )
            // InternalGo.g:1119:3: ( rule__ExprSwitchCase__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprSwitchCaseAccess().getAlternatives()); 
            }
            // InternalGo.g:1120:3: ( rule__ExprSwitchCase__Alternatives )
            // InternalGo.g:1120:4: rule__ExprSwitchCase__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ExprSwitchCase__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprSwitchCaseAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleexprSwitchCase"


    // $ANTLR start "entryRuletypeSwitchStmt"
    // InternalGo.g:1129:1: entryRuletypeSwitchStmt : ruletypeSwitchStmt EOF ;
    public final void entryRuletypeSwitchStmt() throws RecognitionException {
        try {
            // InternalGo.g:1130:1: ( ruletypeSwitchStmt EOF )
            // InternalGo.g:1131:1: ruletypeSwitchStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            ruletypeSwitchStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuletypeSwitchStmt"


    // $ANTLR start "ruletypeSwitchStmt"
    // InternalGo.g:1138:1: ruletypeSwitchStmt : ( ( rule__TypeSwitchStmt__Group__0 ) ) ;
    public final void ruletypeSwitchStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1142:2: ( ( ( rule__TypeSwitchStmt__Group__0 ) ) )
            // InternalGo.g:1143:2: ( ( rule__TypeSwitchStmt__Group__0 ) )
            {
            // InternalGo.g:1143:2: ( ( rule__TypeSwitchStmt__Group__0 ) )
            // InternalGo.g:1144:3: ( rule__TypeSwitchStmt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchStmtAccess().getGroup()); 
            }
            // InternalGo.g:1145:3: ( rule__TypeSwitchStmt__Group__0 )
            // InternalGo.g:1145:4: rule__TypeSwitchStmt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TypeSwitchStmt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchStmtAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruletypeSwitchStmt"


    // $ANTLR start "entryRuletypeSwitchGuard"
    // InternalGo.g:1154:1: entryRuletypeSwitchGuard : ruletypeSwitchGuard EOF ;
    public final void entryRuletypeSwitchGuard() throws RecognitionException {
        try {
            // InternalGo.g:1155:1: ( ruletypeSwitchGuard EOF )
            // InternalGo.g:1156:1: ruletypeSwitchGuard EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchGuardRule()); 
            }
            pushFollow(FOLLOW_1);
            ruletypeSwitchGuard();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchGuardRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuletypeSwitchGuard"


    // $ANTLR start "ruletypeSwitchGuard"
    // InternalGo.g:1163:1: ruletypeSwitchGuard : ( ( rule__TypeSwitchGuard__Group__0 ) ) ;
    public final void ruletypeSwitchGuard() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1167:2: ( ( ( rule__TypeSwitchGuard__Group__0 ) ) )
            // InternalGo.g:1168:2: ( ( rule__TypeSwitchGuard__Group__0 ) )
            {
            // InternalGo.g:1168:2: ( ( rule__TypeSwitchGuard__Group__0 ) )
            // InternalGo.g:1169:3: ( rule__TypeSwitchGuard__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchGuardAccess().getGroup()); 
            }
            // InternalGo.g:1170:3: ( rule__TypeSwitchGuard__Group__0 )
            // InternalGo.g:1170:4: rule__TypeSwitchGuard__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TypeSwitchGuard__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchGuardAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruletypeSwitchGuard"


    // $ANTLR start "entryRuletypeCaseClause"
    // InternalGo.g:1179:1: entryRuletypeCaseClause : ruletypeCaseClause EOF ;
    public final void entryRuletypeCaseClause() throws RecognitionException {
        try {
            // InternalGo.g:1180:1: ( ruletypeCaseClause EOF )
            // InternalGo.g:1181:1: ruletypeCaseClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruletypeCaseClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeCaseClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuletypeCaseClause"


    // $ANTLR start "ruletypeCaseClause"
    // InternalGo.g:1188:1: ruletypeCaseClause : ( ( rule__TypeCaseClause__Group__0 ) ) ;
    public final void ruletypeCaseClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1192:2: ( ( ( rule__TypeCaseClause__Group__0 ) ) )
            // InternalGo.g:1193:2: ( ( rule__TypeCaseClause__Group__0 ) )
            {
            // InternalGo.g:1193:2: ( ( rule__TypeCaseClause__Group__0 ) )
            // InternalGo.g:1194:3: ( rule__TypeCaseClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeCaseClauseAccess().getGroup()); 
            }
            // InternalGo.g:1195:3: ( rule__TypeCaseClause__Group__0 )
            // InternalGo.g:1195:4: rule__TypeCaseClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TypeCaseClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeCaseClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruletypeCaseClause"


    // $ANTLR start "entryRuletypeSwitchCase"
    // InternalGo.g:1204:1: entryRuletypeSwitchCase : ruletypeSwitchCase EOF ;
    public final void entryRuletypeSwitchCase() throws RecognitionException {
        try {
            // InternalGo.g:1205:1: ( ruletypeSwitchCase EOF )
            // InternalGo.g:1206:1: ruletypeSwitchCase EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruletypeSwitchCase();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchCaseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuletypeSwitchCase"


    // $ANTLR start "ruletypeSwitchCase"
    // InternalGo.g:1213:1: ruletypeSwitchCase : ( ( rule__TypeSwitchCase__Alternatives ) ) ;
    public final void ruletypeSwitchCase() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1217:2: ( ( ( rule__TypeSwitchCase__Alternatives ) ) )
            // InternalGo.g:1218:2: ( ( rule__TypeSwitchCase__Alternatives ) )
            {
            // InternalGo.g:1218:2: ( ( rule__TypeSwitchCase__Alternatives ) )
            // InternalGo.g:1219:3: ( rule__TypeSwitchCase__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchCaseAccess().getAlternatives()); 
            }
            // InternalGo.g:1220:3: ( rule__TypeSwitchCase__Alternatives )
            // InternalGo.g:1220:4: rule__TypeSwitchCase__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__TypeSwitchCase__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchCaseAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruletypeSwitchCase"


    // $ANTLR start "entryRuletypeList"
    // InternalGo.g:1229:1: entryRuletypeList : ruletypeList EOF ;
    public final void entryRuletypeList() throws RecognitionException {
        try {
            // InternalGo.g:1230:1: ( ruletypeList EOF )
            // InternalGo.g:1231:1: ruletypeList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruletypeList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuletypeList"


    // $ANTLR start "ruletypeList"
    // InternalGo.g:1238:1: ruletypeList : ( ( rule__TypeList__Group__0 ) ) ;
    public final void ruletypeList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1242:2: ( ( ( rule__TypeList__Group__0 ) ) )
            // InternalGo.g:1243:2: ( ( rule__TypeList__Group__0 ) )
            {
            // InternalGo.g:1243:2: ( ( rule__TypeList__Group__0 ) )
            // InternalGo.g:1244:3: ( rule__TypeList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeListAccess().getGroup()); 
            }
            // InternalGo.g:1245:3: ( rule__TypeList__Group__0 )
            // InternalGo.g:1245:4: rule__TypeList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TypeList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruletypeList"


    // $ANTLR start "entryRuleselectStmt"
    // InternalGo.g:1254:1: entryRuleselectStmt : ruleselectStmt EOF ;
    public final void entryRuleselectStmt() throws RecognitionException {
        try {
            // InternalGo.g:1255:1: ( ruleselectStmt EOF )
            // InternalGo.g:1256:1: ruleselectStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleselectStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleselectStmt"


    // $ANTLR start "ruleselectStmt"
    // InternalGo.g:1263:1: ruleselectStmt : ( ( rule__SelectStmt__Group__0 ) ) ;
    public final void ruleselectStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1267:2: ( ( ( rule__SelectStmt__Group__0 ) ) )
            // InternalGo.g:1268:2: ( ( rule__SelectStmt__Group__0 ) )
            {
            // InternalGo.g:1268:2: ( ( rule__SelectStmt__Group__0 ) )
            // InternalGo.g:1269:3: ( rule__SelectStmt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStmtAccess().getGroup()); 
            }
            // InternalGo.g:1270:3: ( rule__SelectStmt__Group__0 )
            // InternalGo.g:1270:4: rule__SelectStmt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SelectStmt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStmtAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleselectStmt"


    // $ANTLR start "entryRulecommClause"
    // InternalGo.g:1279:1: entryRulecommClause : rulecommClause EOF ;
    public final void entryRulecommClause() throws RecognitionException {
        try {
            // InternalGo.g:1280:1: ( rulecommClause EOF )
            // InternalGo.g:1281:1: rulecommClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            rulecommClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulecommClause"


    // $ANTLR start "rulecommClause"
    // InternalGo.g:1288:1: rulecommClause : ( ( rule__CommClause__Group__0 ) ) ;
    public final void rulecommClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1292:2: ( ( ( rule__CommClause__Group__0 ) ) )
            // InternalGo.g:1293:2: ( ( rule__CommClause__Group__0 ) )
            {
            // InternalGo.g:1293:2: ( ( rule__CommClause__Group__0 ) )
            // InternalGo.g:1294:3: ( rule__CommClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommClauseAccess().getGroup()); 
            }
            // InternalGo.g:1295:3: ( rule__CommClause__Group__0 )
            // InternalGo.g:1295:4: rule__CommClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CommClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulecommClause"


    // $ANTLR start "entryRulecommCase"
    // InternalGo.g:1304:1: entryRulecommCase : rulecommCase EOF ;
    public final void entryRulecommCase() throws RecognitionException {
        try {
            // InternalGo.g:1305:1: ( rulecommCase EOF )
            // InternalGo.g:1306:1: rulecommCase EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            rulecommCase();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommCaseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulecommCase"


    // $ANTLR start "rulecommCase"
    // InternalGo.g:1313:1: rulecommCase : ( ( rule__CommCase__Alternatives ) ) ;
    public final void rulecommCase() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1317:2: ( ( ( rule__CommCase__Alternatives ) ) )
            // InternalGo.g:1318:2: ( ( rule__CommCase__Alternatives ) )
            {
            // InternalGo.g:1318:2: ( ( rule__CommCase__Alternatives ) )
            // InternalGo.g:1319:3: ( rule__CommCase__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommCaseAccess().getAlternatives()); 
            }
            // InternalGo.g:1320:3: ( rule__CommCase__Alternatives )
            // InternalGo.g:1320:4: rule__CommCase__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__CommCase__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommCaseAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulecommCase"


    // $ANTLR start "entryRulerecvStmt"
    // InternalGo.g:1329:1: entryRulerecvStmt : rulerecvStmt EOF ;
    public final void entryRulerecvStmt() throws RecognitionException {
        try {
            // InternalGo.g:1330:1: ( rulerecvStmt EOF )
            // InternalGo.g:1331:1: rulerecvStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecvStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            rulerecvStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecvStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulerecvStmt"


    // $ANTLR start "rulerecvStmt"
    // InternalGo.g:1338:1: rulerecvStmt : ( ( rule__RecvStmt__Group__0 ) ) ;
    public final void rulerecvStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1342:2: ( ( ( rule__RecvStmt__Group__0 ) ) )
            // InternalGo.g:1343:2: ( ( rule__RecvStmt__Group__0 ) )
            {
            // InternalGo.g:1343:2: ( ( rule__RecvStmt__Group__0 ) )
            // InternalGo.g:1344:3: ( rule__RecvStmt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecvStmtAccess().getGroup()); 
            }
            // InternalGo.g:1345:3: ( rule__RecvStmt__Group__0 )
            // InternalGo.g:1345:4: rule__RecvStmt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__RecvStmt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecvStmtAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulerecvStmt"


    // $ANTLR start "entryRuleforStmt"
    // InternalGo.g:1354:1: entryRuleforStmt : ruleforStmt EOF ;
    public final void entryRuleforStmt() throws RecognitionException {
        try {
            // InternalGo.g:1355:1: ( ruleforStmt EOF )
            // InternalGo.g:1356:1: ruleforStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleforStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleforStmt"


    // $ANTLR start "ruleforStmt"
    // InternalGo.g:1363:1: ruleforStmt : ( ( rule__ForStmt__Group__0 ) ) ;
    public final void ruleforStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1367:2: ( ( ( rule__ForStmt__Group__0 ) ) )
            // InternalGo.g:1368:2: ( ( rule__ForStmt__Group__0 ) )
            {
            // InternalGo.g:1368:2: ( ( rule__ForStmt__Group__0 ) )
            // InternalGo.g:1369:3: ( rule__ForStmt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStmtAccess().getGroup()); 
            }
            // InternalGo.g:1370:3: ( rule__ForStmt__Group__0 )
            // InternalGo.g:1370:4: rule__ForStmt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ForStmt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStmtAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleforStmt"


    // $ANTLR start "entryRuleforClause"
    // InternalGo.g:1379:1: entryRuleforClause : ruleforClause EOF ;
    public final void entryRuleforClause() throws RecognitionException {
        try {
            // InternalGo.g:1380:1: ( ruleforClause EOF )
            // InternalGo.g:1381:1: ruleforClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleforClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleforClause"


    // $ANTLR start "ruleforClause"
    // InternalGo.g:1388:1: ruleforClause : ( ( rule__ForClause__Group__0 ) ) ;
    public final void ruleforClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1392:2: ( ( ( rule__ForClause__Group__0 ) ) )
            // InternalGo.g:1393:2: ( ( rule__ForClause__Group__0 ) )
            {
            // InternalGo.g:1393:2: ( ( rule__ForClause__Group__0 ) )
            // InternalGo.g:1394:3: ( rule__ForClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForClauseAccess().getGroup()); 
            }
            // InternalGo.g:1395:3: ( rule__ForClause__Group__0 )
            // InternalGo.g:1395:4: rule__ForClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ForClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleforClause"


    // $ANTLR start "entryRulerangeClause"
    // InternalGo.g:1404:1: entryRulerangeClause : rulerangeClause EOF ;
    public final void entryRulerangeClause() throws RecognitionException {
        try {
            // InternalGo.g:1405:1: ( rulerangeClause EOF )
            // InternalGo.g:1406:1: rulerangeClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            rulerangeClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulerangeClause"


    // $ANTLR start "rulerangeClause"
    // InternalGo.g:1413:1: rulerangeClause : ( ( rule__RangeClause__Group__0 ) ) ;
    public final void rulerangeClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1417:2: ( ( ( rule__RangeClause__Group__0 ) ) )
            // InternalGo.g:1418:2: ( ( rule__RangeClause__Group__0 ) )
            {
            // InternalGo.g:1418:2: ( ( rule__RangeClause__Group__0 ) )
            // InternalGo.g:1419:3: ( rule__RangeClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeClauseAccess().getGroup()); 
            }
            // InternalGo.g:1420:3: ( rule__RangeClause__Group__0 )
            // InternalGo.g:1420:4: rule__RangeClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__RangeClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulerangeClause"


    // $ANTLR start "entryRulegoStmt"
    // InternalGo.g:1429:1: entryRulegoStmt : rulegoStmt EOF ;
    public final void entryRulegoStmt() throws RecognitionException {
        try {
            // InternalGo.g:1430:1: ( rulegoStmt EOF )
            // InternalGo.g:1431:1: rulegoStmt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGoStmtRule()); 
            }
            pushFollow(FOLLOW_1);
            rulegoStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGoStmtRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulegoStmt"


    // $ANTLR start "rulegoStmt"
    // InternalGo.g:1438:1: rulegoStmt : ( ( rule__GoStmt__Group__0 ) ) ;
    public final void rulegoStmt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1442:2: ( ( ( rule__GoStmt__Group__0 ) ) )
            // InternalGo.g:1443:2: ( ( rule__GoStmt__Group__0 ) )
            {
            // InternalGo.g:1443:2: ( ( rule__GoStmt__Group__0 ) )
            // InternalGo.g:1444:3: ( rule__GoStmt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGoStmtAccess().getGroup()); 
            }
            // InternalGo.g:1445:3: ( rule__GoStmt__Group__0 )
            // InternalGo.g:1445:4: rule__GoStmt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GoStmt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGoStmtAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulegoStmt"


    // $ANTLR start "entryRuletype"
    // InternalGo.g:1454:1: entryRuletype : ruletype EOF ;
    public final void entryRuletype() throws RecognitionException {
        try {
            // InternalGo.g:1455:1: ( ruletype EOF )
            // InternalGo.g:1456:1: ruletype EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuletype"


    // $ANTLR start "ruletype"
    // InternalGo.g:1463:1: ruletype : ( ( rule__Type__Alternatives ) ) ;
    public final void ruletype() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1467:2: ( ( ( rule__Type__Alternatives ) ) )
            // InternalGo.g:1468:2: ( ( rule__Type__Alternatives ) )
            {
            // InternalGo.g:1468:2: ( ( rule__Type__Alternatives ) )
            // InternalGo.g:1469:3: ( rule__Type__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeAccess().getAlternatives()); 
            }
            // InternalGo.g:1470:3: ( rule__Type__Alternatives )
            // InternalGo.g:1470:4: rule__Type__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Type__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruletype"


    // $ANTLR start "entryRuletypeName"
    // InternalGo.g:1479:1: entryRuletypeName : ruletypeName EOF ;
    public final void entryRuletypeName() throws RecognitionException {
        try {
            // InternalGo.g:1480:1: ( ruletypeName EOF )
            // InternalGo.g:1481:1: ruletypeName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruletypeName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuletypeName"


    // $ANTLR start "ruletypeName"
    // InternalGo.g:1488:1: ruletypeName : ( ( rule__TypeName__Alternatives ) ) ;
    public final void ruletypeName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1492:2: ( ( ( rule__TypeName__Alternatives ) ) )
            // InternalGo.g:1493:2: ( ( rule__TypeName__Alternatives ) )
            {
            // InternalGo.g:1493:2: ( ( rule__TypeName__Alternatives ) )
            // InternalGo.g:1494:3: ( rule__TypeName__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeNameAccess().getAlternatives()); 
            }
            // InternalGo.g:1495:3: ( rule__TypeName__Alternatives )
            // InternalGo.g:1495:4: rule__TypeName__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__TypeName__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeNameAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruletypeName"


    // $ANTLR start "entryRuletypeLit"
    // InternalGo.g:1504:1: entryRuletypeLit : ruletypeLit EOF ;
    public final void entryRuletypeLit() throws RecognitionException {
        try {
            // InternalGo.g:1505:1: ( ruletypeLit EOF )
            // InternalGo.g:1506:1: ruletypeLit EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLitRule()); 
            }
            pushFollow(FOLLOW_1);
            ruletypeLit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLitRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuletypeLit"


    // $ANTLR start "ruletypeLit"
    // InternalGo.g:1513:1: ruletypeLit : ( ( rule__TypeLit__Alternatives ) ) ;
    public final void ruletypeLit() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1517:2: ( ( ( rule__TypeLit__Alternatives ) ) )
            // InternalGo.g:1518:2: ( ( rule__TypeLit__Alternatives ) )
            {
            // InternalGo.g:1518:2: ( ( rule__TypeLit__Alternatives ) )
            // InternalGo.g:1519:3: ( rule__TypeLit__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLitAccess().getAlternatives()); 
            }
            // InternalGo.g:1520:3: ( rule__TypeLit__Alternatives )
            // InternalGo.g:1520:4: rule__TypeLit__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__TypeLit__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLitAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruletypeLit"


    // $ANTLR start "entryRulearrayType"
    // InternalGo.g:1529:1: entryRulearrayType : rulearrayType EOF ;
    public final void entryRulearrayType() throws RecognitionException {
        try {
            // InternalGo.g:1530:1: ( rulearrayType EOF )
            // InternalGo.g:1531:1: rulearrayType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            rulearrayType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulearrayType"


    // $ANTLR start "rulearrayType"
    // InternalGo.g:1538:1: rulearrayType : ( ( rule__ArrayType__Group__0 ) ) ;
    public final void rulearrayType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1542:2: ( ( ( rule__ArrayType__Group__0 ) ) )
            // InternalGo.g:1543:2: ( ( rule__ArrayType__Group__0 ) )
            {
            // InternalGo.g:1543:2: ( ( rule__ArrayType__Group__0 ) )
            // InternalGo.g:1544:3: ( rule__ArrayType__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayTypeAccess().getGroup()); 
            }
            // InternalGo.g:1545:3: ( rule__ArrayType__Group__0 )
            // InternalGo.g:1545:4: rule__ArrayType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayType__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayTypeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulearrayType"


    // $ANTLR start "entryRulearrayLength"
    // InternalGo.g:1554:1: entryRulearrayLength : rulearrayLength EOF ;
    public final void entryRulearrayLength() throws RecognitionException {
        try {
            // InternalGo.g:1555:1: ( rulearrayLength EOF )
            // InternalGo.g:1556:1: rulearrayLength EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayLengthRule()); 
            }
            pushFollow(FOLLOW_1);
            rulearrayLength();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayLengthRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulearrayLength"


    // $ANTLR start "rulearrayLength"
    // InternalGo.g:1563:1: rulearrayLength : ( ( rule__ArrayLength__ExpressionAssignment ) ) ;
    public final void rulearrayLength() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1567:2: ( ( ( rule__ArrayLength__ExpressionAssignment ) ) )
            // InternalGo.g:1568:2: ( ( rule__ArrayLength__ExpressionAssignment ) )
            {
            // InternalGo.g:1568:2: ( ( rule__ArrayLength__ExpressionAssignment ) )
            // InternalGo.g:1569:3: ( rule__ArrayLength__ExpressionAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayLengthAccess().getExpressionAssignment()); 
            }
            // InternalGo.g:1570:3: ( rule__ArrayLength__ExpressionAssignment )
            // InternalGo.g:1570:4: rule__ArrayLength__ExpressionAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ArrayLength__ExpressionAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayLengthAccess().getExpressionAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulearrayLength"


    // $ANTLR start "entryRuleelementType"
    // InternalGo.g:1579:1: entryRuleelementType : ruleelementType EOF ;
    public final void entryRuleelementType() throws RecognitionException {
        try {
            // InternalGo.g:1580:1: ( ruleelementType EOF )
            // InternalGo.g:1581:1: ruleelementType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElementTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleelementType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElementTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleelementType"


    // $ANTLR start "ruleelementType"
    // InternalGo.g:1588:1: ruleelementType : ( ( rule__ElementType__TypeAssignment ) ) ;
    public final void ruleelementType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1592:2: ( ( ( rule__ElementType__TypeAssignment ) ) )
            // InternalGo.g:1593:2: ( ( rule__ElementType__TypeAssignment ) )
            {
            // InternalGo.g:1593:2: ( ( rule__ElementType__TypeAssignment ) )
            // InternalGo.g:1594:3: ( rule__ElementType__TypeAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElementTypeAccess().getTypeAssignment()); 
            }
            // InternalGo.g:1595:3: ( rule__ElementType__TypeAssignment )
            // InternalGo.g:1595:4: rule__ElementType__TypeAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ElementType__TypeAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getElementTypeAccess().getTypeAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleelementType"


    // $ANTLR start "entryRulepointerType"
    // InternalGo.g:1604:1: entryRulepointerType : rulepointerType EOF ;
    public final void entryRulepointerType() throws RecognitionException {
        try {
            // InternalGo.g:1605:1: ( rulepointerType EOF )
            // InternalGo.g:1606:1: rulepointerType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPointerTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            rulepointerType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPointerTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulepointerType"


    // $ANTLR start "rulepointerType"
    // InternalGo.g:1613:1: rulepointerType : ( ( rule__PointerType__Group__0 ) ) ;
    public final void rulepointerType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1617:2: ( ( ( rule__PointerType__Group__0 ) ) )
            // InternalGo.g:1618:2: ( ( rule__PointerType__Group__0 ) )
            {
            // InternalGo.g:1618:2: ( ( rule__PointerType__Group__0 ) )
            // InternalGo.g:1619:3: ( rule__PointerType__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPointerTypeAccess().getGroup()); 
            }
            // InternalGo.g:1620:3: ( rule__PointerType__Group__0 )
            // InternalGo.g:1620:4: rule__PointerType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PointerType__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPointerTypeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulepointerType"


    // $ANTLR start "entryRuleinterfaceType"
    // InternalGo.g:1629:1: entryRuleinterfaceType : ruleinterfaceType EOF ;
    public final void entryRuleinterfaceType() throws RecognitionException {
        try {
            // InternalGo.g:1630:1: ( ruleinterfaceType EOF )
            // InternalGo.g:1631:1: ruleinterfaceType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInterfaceTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleinterfaceType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInterfaceTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleinterfaceType"


    // $ANTLR start "ruleinterfaceType"
    // InternalGo.g:1638:1: ruleinterfaceType : ( ( rule__InterfaceType__Group__0 ) ) ;
    public final void ruleinterfaceType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1642:2: ( ( ( rule__InterfaceType__Group__0 ) ) )
            // InternalGo.g:1643:2: ( ( rule__InterfaceType__Group__0 ) )
            {
            // InternalGo.g:1643:2: ( ( rule__InterfaceType__Group__0 ) )
            // InternalGo.g:1644:3: ( rule__InterfaceType__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInterfaceTypeAccess().getGroup()); 
            }
            // InternalGo.g:1645:3: ( rule__InterfaceType__Group__0 )
            // InternalGo.g:1645:4: rule__InterfaceType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InterfaceType__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInterfaceTypeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleinterfaceType"


    // $ANTLR start "entryRulesliceType"
    // InternalGo.g:1654:1: entryRulesliceType : rulesliceType EOF ;
    public final void entryRulesliceType() throws RecognitionException {
        try {
            // InternalGo.g:1655:1: ( rulesliceType EOF )
            // InternalGo.g:1656:1: rulesliceType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            rulesliceType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulesliceType"


    // $ANTLR start "rulesliceType"
    // InternalGo.g:1663:1: rulesliceType : ( ( rule__SliceType__Group__0 ) ) ;
    public final void rulesliceType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1667:2: ( ( ( rule__SliceType__Group__0 ) ) )
            // InternalGo.g:1668:2: ( ( rule__SliceType__Group__0 ) )
            {
            // InternalGo.g:1668:2: ( ( rule__SliceType__Group__0 ) )
            // InternalGo.g:1669:3: ( rule__SliceType__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceTypeAccess().getGroup()); 
            }
            // InternalGo.g:1670:3: ( rule__SliceType__Group__0 )
            // InternalGo.g:1670:4: rule__SliceType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SliceType__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceTypeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulesliceType"


    // $ANTLR start "entryRulemapType"
    // InternalGo.g:1679:1: entryRulemapType : rulemapType EOF ;
    public final void entryRulemapType() throws RecognitionException {
        try {
            // InternalGo.g:1680:1: ( rulemapType EOF )
            // InternalGo.g:1681:1: rulemapType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            rulemapType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulemapType"


    // $ANTLR start "rulemapType"
    // InternalGo.g:1688:1: rulemapType : ( ( rule__MapType__Group__0 ) ) ;
    public final void rulemapType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1692:2: ( ( ( rule__MapType__Group__0 ) ) )
            // InternalGo.g:1693:2: ( ( rule__MapType__Group__0 ) )
            {
            // InternalGo.g:1693:2: ( ( rule__MapType__Group__0 ) )
            // InternalGo.g:1694:3: ( rule__MapType__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeAccess().getGroup()); 
            }
            // InternalGo.g:1695:3: ( rule__MapType__Group__0 )
            // InternalGo.g:1695:4: rule__MapType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MapType__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulemapType"


    // $ANTLR start "entryRulechannelType"
    // InternalGo.g:1704:1: entryRulechannelType : rulechannelType EOF ;
    public final void entryRulechannelType() throws RecognitionException {
        try {
            // InternalGo.g:1705:1: ( rulechannelType EOF )
            // InternalGo.g:1706:1: rulechannelType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChannelTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            rulechannelType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChannelTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulechannelType"


    // $ANTLR start "rulechannelType"
    // InternalGo.g:1713:1: rulechannelType : ( ( rule__ChannelType__Group__0 ) ) ;
    public final void rulechannelType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1717:2: ( ( ( rule__ChannelType__Group__0 ) ) )
            // InternalGo.g:1718:2: ( ( rule__ChannelType__Group__0 ) )
            {
            // InternalGo.g:1718:2: ( ( rule__ChannelType__Group__0 ) )
            // InternalGo.g:1719:3: ( rule__ChannelType__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChannelTypeAccess().getGroup()); 
            }
            // InternalGo.g:1720:3: ( rule__ChannelType__Group__0 )
            // InternalGo.g:1720:4: rule__ChannelType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ChannelType__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChannelTypeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulechannelType"


    // $ANTLR start "entryRulemethodSpec"
    // InternalGo.g:1729:1: entryRulemethodSpec : rulemethodSpec EOF ;
    public final void entryRulemethodSpec() throws RecognitionException {
        try {
            // InternalGo.g:1730:1: ( rulemethodSpec EOF )
            // InternalGo.g:1731:1: rulemethodSpec EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            rulemethodSpec();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodSpecRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulemethodSpec"


    // $ANTLR start "rulemethodSpec"
    // InternalGo.g:1738:1: rulemethodSpec : ( ( rule__MethodSpec__Alternatives ) ) ;
    public final void rulemethodSpec() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1742:2: ( ( ( rule__MethodSpec__Alternatives ) ) )
            // InternalGo.g:1743:2: ( ( rule__MethodSpec__Alternatives ) )
            {
            // InternalGo.g:1743:2: ( ( rule__MethodSpec__Alternatives ) )
            // InternalGo.g:1744:3: ( rule__MethodSpec__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodSpecAccess().getAlternatives()); 
            }
            // InternalGo.g:1745:3: ( rule__MethodSpec__Alternatives )
            // InternalGo.g:1745:4: rule__MethodSpec__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MethodSpec__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodSpecAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulemethodSpec"


    // $ANTLR start "entryRulefunctionType"
    // InternalGo.g:1754:1: entryRulefunctionType : rulefunctionType EOF ;
    public final void entryRulefunctionType() throws RecognitionException {
        try {
            // InternalGo.g:1755:1: ( rulefunctionType EOF )
            // InternalGo.g:1756:1: rulefunctionType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            rulefunctionType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulefunctionType"


    // $ANTLR start "rulefunctionType"
    // InternalGo.g:1763:1: rulefunctionType : ( ( rule__FunctionType__Group__0 ) ) ;
    public final void rulefunctionType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1767:2: ( ( ( rule__FunctionType__Group__0 ) ) )
            // InternalGo.g:1768:2: ( ( rule__FunctionType__Group__0 ) )
            {
            // InternalGo.g:1768:2: ( ( rule__FunctionType__Group__0 ) )
            // InternalGo.g:1769:3: ( rule__FunctionType__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionTypeAccess().getGroup()); 
            }
            // InternalGo.g:1770:3: ( rule__FunctionType__Group__0 )
            // InternalGo.g:1770:4: rule__FunctionType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionType__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionTypeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulefunctionType"


    // $ANTLR start "entryRulesignature"
    // InternalGo.g:1779:1: entryRulesignature : rulesignature EOF ;
    public final void entryRulesignature() throws RecognitionException {
        try {
            // InternalGo.g:1780:1: ( rulesignature EOF )
            // InternalGo.g:1781:1: rulesignature EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignatureRule()); 
            }
            pushFollow(FOLLOW_1);
            rulesignature();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignatureRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulesignature"


    // $ANTLR start "rulesignature"
    // InternalGo.g:1788:1: rulesignature : ( ( rule__Signature__Group__0 ) ) ;
    public final void rulesignature() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1792:2: ( ( ( rule__Signature__Group__0 ) ) )
            // InternalGo.g:1793:2: ( ( rule__Signature__Group__0 ) )
            {
            // InternalGo.g:1793:2: ( ( rule__Signature__Group__0 ) )
            // InternalGo.g:1794:3: ( rule__Signature__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignatureAccess().getGroup()); 
            }
            // InternalGo.g:1795:3: ( rule__Signature__Group__0 )
            // InternalGo.g:1795:4: rule__Signature__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Signature__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignatureAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulesignature"


    // $ANTLR start "entryRuleresult"
    // InternalGo.g:1804:1: entryRuleresult : ruleresult EOF ;
    public final void entryRuleresult() throws RecognitionException {
        try {
            // InternalGo.g:1805:1: ( ruleresult EOF )
            // InternalGo.g:1806:1: ruleresult EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getResultRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleresult();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getResultRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleresult"


    // $ANTLR start "ruleresult"
    // InternalGo.g:1813:1: ruleresult : ( ( rule__Result__Alternatives ) ) ;
    public final void ruleresult() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1817:2: ( ( ( rule__Result__Alternatives ) ) )
            // InternalGo.g:1818:2: ( ( rule__Result__Alternatives ) )
            {
            // InternalGo.g:1818:2: ( ( rule__Result__Alternatives ) )
            // InternalGo.g:1819:3: ( rule__Result__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getResultAccess().getAlternatives()); 
            }
            // InternalGo.g:1820:3: ( rule__Result__Alternatives )
            // InternalGo.g:1820:4: rule__Result__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Result__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getResultAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleresult"


    // $ANTLR start "entryRuleparameters"
    // InternalGo.g:1829:1: entryRuleparameters : ruleparameters EOF ;
    public final void entryRuleparameters() throws RecognitionException {
        try {
            // InternalGo.g:1830:1: ( ruleparameters EOF )
            // InternalGo.g:1831:1: ruleparameters EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParametersRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleparameters();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParametersRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleparameters"


    // $ANTLR start "ruleparameters"
    // InternalGo.g:1838:1: ruleparameters : ( ( rule__Parameters__Group__0 ) ) ;
    public final void ruleparameters() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1842:2: ( ( ( rule__Parameters__Group__0 ) ) )
            // InternalGo.g:1843:2: ( ( rule__Parameters__Group__0 ) )
            {
            // InternalGo.g:1843:2: ( ( rule__Parameters__Group__0 ) )
            // InternalGo.g:1844:3: ( rule__Parameters__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParametersAccess().getGroup()); 
            }
            // InternalGo.g:1845:3: ( rule__Parameters__Group__0 )
            // InternalGo.g:1845:4: rule__Parameters__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Parameters__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParametersAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleparameters"


    // $ANTLR start "entryRuleparameterList"
    // InternalGo.g:1854:1: entryRuleparameterList : ruleparameterList EOF ;
    public final void entryRuleparameterList() throws RecognitionException {
        try {
            // InternalGo.g:1855:1: ( ruleparameterList EOF )
            // InternalGo.g:1856:1: ruleparameterList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleparameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleparameterList"


    // $ANTLR start "ruleparameterList"
    // InternalGo.g:1863:1: ruleparameterList : ( ( rule__ParameterList__Group__0 ) ) ;
    public final void ruleparameterList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1867:2: ( ( ( rule__ParameterList__Group__0 ) ) )
            // InternalGo.g:1868:2: ( ( rule__ParameterList__Group__0 ) )
            {
            // InternalGo.g:1868:2: ( ( rule__ParameterList__Group__0 ) )
            // InternalGo.g:1869:3: ( rule__ParameterList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getGroup()); 
            }
            // InternalGo.g:1870:3: ( rule__ParameterList__Group__0 )
            // InternalGo.g:1870:4: rule__ParameterList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ParameterList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleparameterList"


    // $ANTLR start "entryRuleparameterDecl"
    // InternalGo.g:1879:1: entryRuleparameterDecl : ruleparameterDecl EOF ;
    public final void entryRuleparameterDecl() throws RecognitionException {
        try {
            // InternalGo.g:1880:1: ( ruleparameterDecl EOF )
            // InternalGo.g:1881:1: ruleparameterDecl EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleparameterDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleparameterDecl"


    // $ANTLR start "ruleparameterDecl"
    // InternalGo.g:1888:1: ruleparameterDecl : ( ( rule__ParameterDecl__Group__0 ) ) ;
    public final void ruleparameterDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1892:2: ( ( ( rule__ParameterDecl__Group__0 ) ) )
            // InternalGo.g:1893:2: ( ( rule__ParameterDecl__Group__0 ) )
            {
            // InternalGo.g:1893:2: ( ( rule__ParameterDecl__Group__0 ) )
            // InternalGo.g:1894:3: ( rule__ParameterDecl__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclAccess().getGroup()); 
            }
            // InternalGo.g:1895:3: ( rule__ParameterDecl__Group__0 )
            // InternalGo.g:1895:4: rule__ParameterDecl__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDecl__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleparameterDecl"


    // $ANTLR start "entryRuleoperand"
    // InternalGo.g:1904:1: entryRuleoperand : ruleoperand EOF ;
    public final void entryRuleoperand() throws RecognitionException {
        try {
            // InternalGo.g:1905:1: ( ruleoperand EOF )
            // InternalGo.g:1906:1: ruleoperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleoperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleoperand"


    // $ANTLR start "ruleoperand"
    // InternalGo.g:1913:1: ruleoperand : ( ( rule__Operand__Alternatives ) ) ;
    public final void ruleoperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1917:2: ( ( ( rule__Operand__Alternatives ) ) )
            // InternalGo.g:1918:2: ( ( rule__Operand__Alternatives ) )
            {
            // InternalGo.g:1918:2: ( ( rule__Operand__Alternatives ) )
            // InternalGo.g:1919:3: ( rule__Operand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getAlternatives()); 
            }
            // InternalGo.g:1920:3: ( rule__Operand__Alternatives )
            // InternalGo.g:1920:4: rule__Operand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleoperand"


    // $ANTLR start "entryRuleliteral"
    // InternalGo.g:1929:1: entryRuleliteral : ruleliteral EOF ;
    public final void entryRuleliteral() throws RecognitionException {
        try {
            // InternalGo.g:1930:1: ( ruleliteral EOF )
            // InternalGo.g:1931:1: ruleliteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleliteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleliteral"


    // $ANTLR start "ruleliteral"
    // InternalGo.g:1938:1: ruleliteral : ( ( rule__Literal__Alternatives ) ) ;
    public final void ruleliteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1942:2: ( ( ( rule__Literal__Alternatives ) ) )
            // InternalGo.g:1943:2: ( ( rule__Literal__Alternatives ) )
            {
            // InternalGo.g:1943:2: ( ( rule__Literal__Alternatives ) )
            // InternalGo.g:1944:3: ( rule__Literal__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralAccess().getAlternatives()); 
            }
            // InternalGo.g:1945:3: ( rule__Literal__Alternatives )
            // InternalGo.g:1945:4: rule__Literal__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleliteral"


    // $ANTLR start "entryRulebasicLit"
    // InternalGo.g:1954:1: entryRulebasicLit : rulebasicLit EOF ;
    public final void entryRulebasicLit() throws RecognitionException {
        try {
            // InternalGo.g:1955:1: ( rulebasicLit EOF )
            // InternalGo.g:1956:1: rulebasicLit EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBasicLitRule()); 
            }
            pushFollow(FOLLOW_1);
            rulebasicLit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBasicLitRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulebasicLit"


    // $ANTLR start "rulebasicLit"
    // InternalGo.g:1963:1: rulebasicLit : ( ( rule__BasicLit__Alternatives ) ) ;
    public final void rulebasicLit() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1967:2: ( ( ( rule__BasicLit__Alternatives ) ) )
            // InternalGo.g:1968:2: ( ( rule__BasicLit__Alternatives ) )
            {
            // InternalGo.g:1968:2: ( ( rule__BasicLit__Alternatives ) )
            // InternalGo.g:1969:3: ( rule__BasicLit__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBasicLitAccess().getAlternatives()); 
            }
            // InternalGo.g:1970:3: ( rule__BasicLit__Alternatives )
            // InternalGo.g:1970:4: rule__BasicLit__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__BasicLit__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBasicLitAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulebasicLit"


    // $ANTLR start "entryRuleoperandName"
    // InternalGo.g:1979:1: entryRuleoperandName : ruleoperandName EOF ;
    public final void entryRuleoperandName() throws RecognitionException {
        try {
            // InternalGo.g:1980:1: ( ruleoperandName EOF )
            // InternalGo.g:1981:1: ruleoperandName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleoperandName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleoperandName"


    // $ANTLR start "ruleoperandName"
    // InternalGo.g:1988:1: ruleoperandName : ( ( rule__OperandName__Alternatives ) ) ;
    public final void ruleoperandName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:1992:2: ( ( ( rule__OperandName__Alternatives ) ) )
            // InternalGo.g:1993:2: ( ( rule__OperandName__Alternatives ) )
            {
            // InternalGo.g:1993:2: ( ( rule__OperandName__Alternatives ) )
            // InternalGo.g:1994:3: ( rule__OperandName__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandNameAccess().getAlternatives()); 
            }
            // InternalGo.g:1995:3: ( rule__OperandName__Alternatives )
            // InternalGo.g:1995:4: rule__OperandName__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__OperandName__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandNameAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleoperandName"


    // $ANTLR start "entryRulequalifiedIdent"
    // InternalGo.g:2004:1: entryRulequalifiedIdent : rulequalifiedIdent EOF ;
    public final void entryRulequalifiedIdent() throws RecognitionException {
        try {
            // InternalGo.g:2005:1: ( rulequalifiedIdent EOF )
            // InternalGo.g:2006:1: rulequalifiedIdent EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedIdentRule()); 
            }
            pushFollow(FOLLOW_1);
            rulequalifiedIdent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedIdentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulequalifiedIdent"


    // $ANTLR start "rulequalifiedIdent"
    // InternalGo.g:2013:1: rulequalifiedIdent : ( ( rule__QualifiedIdent__Group__0 ) ) ;
    public final void rulequalifiedIdent() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2017:2: ( ( ( rule__QualifiedIdent__Group__0 ) ) )
            // InternalGo.g:2018:2: ( ( rule__QualifiedIdent__Group__0 ) )
            {
            // InternalGo.g:2018:2: ( ( rule__QualifiedIdent__Group__0 ) )
            // InternalGo.g:2019:3: ( rule__QualifiedIdent__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedIdentAccess().getGroup()); 
            }
            // InternalGo.g:2020:3: ( rule__QualifiedIdent__Group__0 )
            // InternalGo.g:2020:4: rule__QualifiedIdent__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedIdent__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedIdentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulequalifiedIdent"


    // $ANTLR start "entryRulecompositeLit"
    // InternalGo.g:2029:1: entryRulecompositeLit : rulecompositeLit EOF ;
    public final void entryRulecompositeLit() throws RecognitionException {
        try {
            // InternalGo.g:2030:1: ( rulecompositeLit EOF )
            // InternalGo.g:2031:1: rulecompositeLit EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompositeLitRule()); 
            }
            pushFollow(FOLLOW_1);
            rulecompositeLit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompositeLitRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulecompositeLit"


    // $ANTLR start "rulecompositeLit"
    // InternalGo.g:2038:1: rulecompositeLit : ( ( rule__CompositeLit__Group__0 ) ) ;
    public final void rulecompositeLit() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2042:2: ( ( ( rule__CompositeLit__Group__0 ) ) )
            // InternalGo.g:2043:2: ( ( rule__CompositeLit__Group__0 ) )
            {
            // InternalGo.g:2043:2: ( ( rule__CompositeLit__Group__0 ) )
            // InternalGo.g:2044:3: ( rule__CompositeLit__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompositeLitAccess().getGroup()); 
            }
            // InternalGo.g:2045:3: ( rule__CompositeLit__Group__0 )
            // InternalGo.g:2045:4: rule__CompositeLit__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CompositeLit__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompositeLitAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulecompositeLit"


    // $ANTLR start "entryRuleliteralType"
    // InternalGo.g:2054:1: entryRuleliteralType : ruleliteralType EOF ;
    public final void entryRuleliteralType() throws RecognitionException {
        try {
            // InternalGo.g:2055:1: ( ruleliteralType EOF )
            // InternalGo.g:2056:1: ruleliteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleliteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleliteralType"


    // $ANTLR start "ruleliteralType"
    // InternalGo.g:2063:1: ruleliteralType : ( ( rule__LiteralType__Alternatives ) ) ;
    public final void ruleliteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2067:2: ( ( ( rule__LiteralType__Alternatives ) ) )
            // InternalGo.g:2068:2: ( ( rule__LiteralType__Alternatives ) )
            {
            // InternalGo.g:2068:2: ( ( rule__LiteralType__Alternatives ) )
            // InternalGo.g:2069:3: ( rule__LiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralTypeAccess().getAlternatives()); 
            }
            // InternalGo.g:2070:3: ( rule__LiteralType__Alternatives )
            // InternalGo.g:2070:4: rule__LiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleliteralType"


    // $ANTLR start "entryRuleliteralValue"
    // InternalGo.g:2079:1: entryRuleliteralValue : ruleliteralValue EOF ;
    public final void entryRuleliteralValue() throws RecognitionException {
        try {
            // InternalGo.g:2080:1: ( ruleliteralValue EOF )
            // InternalGo.g:2081:1: ruleliteralValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleliteralValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleliteralValue"


    // $ANTLR start "ruleliteralValue"
    // InternalGo.g:2088:1: ruleliteralValue : ( ( rule__LiteralValue__Group__0 ) ) ;
    public final void ruleliteralValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2092:2: ( ( ( rule__LiteralValue__Group__0 ) ) )
            // InternalGo.g:2093:2: ( ( rule__LiteralValue__Group__0 ) )
            {
            // InternalGo.g:2093:2: ( ( rule__LiteralValue__Group__0 ) )
            // InternalGo.g:2094:3: ( rule__LiteralValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralValueAccess().getGroup()); 
            }
            // InternalGo.g:2095:3: ( rule__LiteralValue__Group__0 )
            // InternalGo.g:2095:4: rule__LiteralValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LiteralValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleliteralValue"


    // $ANTLR start "entryRuleelementList"
    // InternalGo.g:2104:1: entryRuleelementList : ruleelementList EOF ;
    public final void entryRuleelementList() throws RecognitionException {
        try {
            // InternalGo.g:2105:1: ( ruleelementList EOF )
            // InternalGo.g:2106:1: ruleelementList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElementListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleelementList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElementListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleelementList"


    // $ANTLR start "ruleelementList"
    // InternalGo.g:2113:1: ruleelementList : ( ( rule__ElementList__Group__0 ) ) ;
    public final void ruleelementList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2117:2: ( ( ( rule__ElementList__Group__0 ) ) )
            // InternalGo.g:2118:2: ( ( rule__ElementList__Group__0 ) )
            {
            // InternalGo.g:2118:2: ( ( rule__ElementList__Group__0 ) )
            // InternalGo.g:2119:3: ( rule__ElementList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElementListAccess().getGroup()); 
            }
            // InternalGo.g:2120:3: ( rule__ElementList__Group__0 )
            // InternalGo.g:2120:4: rule__ElementList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ElementList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getElementListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleelementList"


    // $ANTLR start "entryRulekeyedElement"
    // InternalGo.g:2129:1: entryRulekeyedElement : rulekeyedElement EOF ;
    public final void entryRulekeyedElement() throws RecognitionException {
        try {
            // InternalGo.g:2130:1: ( rulekeyedElement EOF )
            // InternalGo.g:2131:1: rulekeyedElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyedElementRule()); 
            }
            pushFollow(FOLLOW_1);
            rulekeyedElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyedElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulekeyedElement"


    // $ANTLR start "rulekeyedElement"
    // InternalGo.g:2138:1: rulekeyedElement : ( ( rule__KeyedElement__Group__0 ) ) ;
    public final void rulekeyedElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2142:2: ( ( ( rule__KeyedElement__Group__0 ) ) )
            // InternalGo.g:2143:2: ( ( rule__KeyedElement__Group__0 ) )
            {
            // InternalGo.g:2143:2: ( ( rule__KeyedElement__Group__0 ) )
            // InternalGo.g:2144:3: ( rule__KeyedElement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyedElementAccess().getGroup()); 
            }
            // InternalGo.g:2145:3: ( rule__KeyedElement__Group__0 )
            // InternalGo.g:2145:4: rule__KeyedElement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__KeyedElement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyedElementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulekeyedElement"


    // $ANTLR start "entryRulekey"
    // InternalGo.g:2154:1: entryRulekey : rulekey EOF ;
    public final void entryRulekey() throws RecognitionException {
        try {
            // InternalGo.g:2155:1: ( rulekey EOF )
            // InternalGo.g:2156:1: rulekey EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            rulekey();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulekey"


    // $ANTLR start "rulekey"
    // InternalGo.g:2163:1: rulekey : ( ( rule__Key__Alternatives ) ) ;
    public final void rulekey() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2167:2: ( ( ( rule__Key__Alternatives ) ) )
            // InternalGo.g:2168:2: ( ( rule__Key__Alternatives ) )
            {
            // InternalGo.g:2168:2: ( ( rule__Key__Alternatives ) )
            // InternalGo.g:2169:3: ( rule__Key__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyAccess().getAlternatives()); 
            }
            // InternalGo.g:2170:3: ( rule__Key__Alternatives )
            // InternalGo.g:2170:4: rule__Key__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Key__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulekey"


    // $ANTLR start "entryRuleelement"
    // InternalGo.g:2179:1: entryRuleelement : ruleelement EOF ;
    public final void entryRuleelement() throws RecognitionException {
        try {
            // InternalGo.g:2180:1: ( ruleelement EOF )
            // InternalGo.g:2181:1: ruleelement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleelement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleelement"


    // $ANTLR start "ruleelement"
    // InternalGo.g:2188:1: ruleelement : ( ( rule__Element__Alternatives ) ) ;
    public final void ruleelement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2192:2: ( ( ( rule__Element__Alternatives ) ) )
            // InternalGo.g:2193:2: ( ( rule__Element__Alternatives ) )
            {
            // InternalGo.g:2193:2: ( ( rule__Element__Alternatives ) )
            // InternalGo.g:2194:3: ( rule__Element__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElementAccess().getAlternatives()); 
            }
            // InternalGo.g:2195:3: ( rule__Element__Alternatives )
            // InternalGo.g:2195:4: rule__Element__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Element__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getElementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleelement"


    // $ANTLR start "entryRulestructType"
    // InternalGo.g:2204:1: entryRulestructType : rulestructType EOF ;
    public final void entryRulestructType() throws RecognitionException {
        try {
            // InternalGo.g:2205:1: ( rulestructType EOF )
            // InternalGo.g:2206:1: rulestructType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            rulestructType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulestructType"


    // $ANTLR start "rulestructType"
    // InternalGo.g:2213:1: rulestructType : ( ( rule__StructType__Group__0 ) ) ;
    public final void rulestructType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2217:2: ( ( ( rule__StructType__Group__0 ) ) )
            // InternalGo.g:2218:2: ( ( rule__StructType__Group__0 ) )
            {
            // InternalGo.g:2218:2: ( ( rule__StructType__Group__0 ) )
            // InternalGo.g:2219:3: ( rule__StructType__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructTypeAccess().getGroup()); 
            }
            // InternalGo.g:2220:3: ( rule__StructType__Group__0 )
            // InternalGo.g:2220:4: rule__StructType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__StructType__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructTypeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulestructType"


    // $ANTLR start "entryRulefieldDecl"
    // InternalGo.g:2229:1: entryRulefieldDecl : rulefieldDecl EOF ;
    public final void entryRulefieldDecl() throws RecognitionException {
        try {
            // InternalGo.g:2230:1: ( rulefieldDecl EOF )
            // InternalGo.g:2231:1: rulefieldDecl EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            rulefieldDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldDeclRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulefieldDecl"


    // $ANTLR start "rulefieldDecl"
    // InternalGo.g:2238:1: rulefieldDecl : ( ( rule__FieldDecl__Group__0 ) ) ;
    public final void rulefieldDecl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2242:2: ( ( ( rule__FieldDecl__Group__0 ) ) )
            // InternalGo.g:2243:2: ( ( rule__FieldDecl__Group__0 ) )
            {
            // InternalGo.g:2243:2: ( ( rule__FieldDecl__Group__0 ) )
            // InternalGo.g:2244:3: ( rule__FieldDecl__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldDeclAccess().getGroup()); 
            }
            // InternalGo.g:2245:3: ( rule__FieldDecl__Group__0 )
            // InternalGo.g:2245:4: rule__FieldDecl__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldDeclAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulefieldDecl"


    // $ANTLR start "entryRuleanonymousField"
    // InternalGo.g:2254:1: entryRuleanonymousField : ruleanonymousField EOF ;
    public final void entryRuleanonymousField() throws RecognitionException {
        try {
            // InternalGo.g:2255:1: ( ruleanonymousField EOF )
            // InternalGo.g:2256:1: ruleanonymousField EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnonymousFieldRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleanonymousField();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnonymousFieldRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleanonymousField"


    // $ANTLR start "ruleanonymousField"
    // InternalGo.g:2263:1: ruleanonymousField : ( ( rule__AnonymousField__Group__0 ) ) ;
    public final void ruleanonymousField() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2267:2: ( ( ( rule__AnonymousField__Group__0 ) ) )
            // InternalGo.g:2268:2: ( ( rule__AnonymousField__Group__0 ) )
            {
            // InternalGo.g:2268:2: ( ( rule__AnonymousField__Group__0 ) )
            // InternalGo.g:2269:3: ( rule__AnonymousField__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnonymousFieldAccess().getGroup()); 
            }
            // InternalGo.g:2270:3: ( rule__AnonymousField__Group__0 )
            // InternalGo.g:2270:4: rule__AnonymousField__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnonymousField__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnonymousFieldAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleanonymousField"


    // $ANTLR start "entryRulefunctionLit"
    // InternalGo.g:2279:1: entryRulefunctionLit : rulefunctionLit EOF ;
    public final void entryRulefunctionLit() throws RecognitionException {
        try {
            // InternalGo.g:2280:1: ( rulefunctionLit EOF )
            // InternalGo.g:2281:1: rulefunctionLit EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionLitRule()); 
            }
            pushFollow(FOLLOW_1);
            rulefunctionLit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionLitRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulefunctionLit"


    // $ANTLR start "rulefunctionLit"
    // InternalGo.g:2288:1: rulefunctionLit : ( ( rule__FunctionLit__Group__0 ) ) ;
    public final void rulefunctionLit() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2292:2: ( ( ( rule__FunctionLit__Group__0 ) ) )
            // InternalGo.g:2293:2: ( ( rule__FunctionLit__Group__0 ) )
            {
            // InternalGo.g:2293:2: ( ( rule__FunctionLit__Group__0 ) )
            // InternalGo.g:2294:3: ( rule__FunctionLit__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionLitAccess().getGroup()); 
            }
            // InternalGo.g:2295:3: ( rule__FunctionLit__Group__0 )
            // InternalGo.g:2295:4: rule__FunctionLit__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionLit__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionLitAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulefunctionLit"


    // $ANTLR start "entryRuleprimaryExpr"
    // InternalGo.g:2304:1: entryRuleprimaryExpr : ruleprimaryExpr EOF ;
    public final void entryRuleprimaryExpr() throws RecognitionException {
        try {
            // InternalGo.g:2305:1: ( ruleprimaryExpr EOF )
            // InternalGo.g:2306:1: ruleprimaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleprimaryExpr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleprimaryExpr"


    // $ANTLR start "ruleprimaryExpr"
    // InternalGo.g:2313:1: ruleprimaryExpr : ( ( rule__PrimaryExpr__Alternatives ) ) ;
    public final void ruleprimaryExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2317:2: ( ( ( rule__PrimaryExpr__Alternatives ) ) )
            // InternalGo.g:2318:2: ( ( rule__PrimaryExpr__Alternatives ) )
            {
            // InternalGo.g:2318:2: ( ( rule__PrimaryExpr__Alternatives ) )
            // InternalGo.g:2319:3: ( rule__PrimaryExpr__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprAccess().getAlternatives()); 
            }
            // InternalGo.g:2320:3: ( rule__PrimaryExpr__Alternatives )
            // InternalGo.g:2320:4: rule__PrimaryExpr__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExpr__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleprimaryExpr"


    // $ANTLR start "entryRuleprimaryExprStuff"
    // InternalGo.g:2329:1: entryRuleprimaryExprStuff : ruleprimaryExprStuff EOF ;
    public final void entryRuleprimaryExprStuff() throws RecognitionException {
        try {
            // InternalGo.g:2330:1: ( ruleprimaryExprStuff EOF )
            // InternalGo.g:2331:1: ruleprimaryExprStuff EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprStuffRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleprimaryExprStuff();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprStuffRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleprimaryExprStuff"


    // $ANTLR start "ruleprimaryExprStuff"
    // InternalGo.g:2338:1: ruleprimaryExprStuff : ( ( rule__PrimaryExprStuff__Alternatives ) ) ;
    public final void ruleprimaryExprStuff() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2342:2: ( ( ( rule__PrimaryExprStuff__Alternatives ) ) )
            // InternalGo.g:2343:2: ( ( rule__PrimaryExprStuff__Alternatives ) )
            {
            // InternalGo.g:2343:2: ( ( rule__PrimaryExprStuff__Alternatives ) )
            // InternalGo.g:2344:3: ( rule__PrimaryExprStuff__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprStuffAccess().getAlternatives()); 
            }
            // InternalGo.g:2345:3: ( rule__PrimaryExprStuff__Alternatives )
            // InternalGo.g:2345:4: rule__PrimaryExprStuff__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExprStuff__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprStuffAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleprimaryExprStuff"


    // $ANTLR start "entryRuleprimaryExprSelector"
    // InternalGo.g:2354:1: entryRuleprimaryExprSelector : ruleprimaryExprSelector EOF ;
    public final void entryRuleprimaryExprSelector() throws RecognitionException {
        try {
            // InternalGo.g:2355:1: ( ruleprimaryExprSelector EOF )
            // InternalGo.g:2356:1: ruleprimaryExprSelector EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprSelectorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleprimaryExprSelector();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprSelectorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleprimaryExprSelector"


    // $ANTLR start "ruleprimaryExprSelector"
    // InternalGo.g:2363:1: ruleprimaryExprSelector : ( ( rule__PrimaryExprSelector__Group__0 )? ) ;
    public final void ruleprimaryExprSelector() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2367:2: ( ( ( rule__PrimaryExprSelector__Group__0 )? ) )
            // InternalGo.g:2368:2: ( ( rule__PrimaryExprSelector__Group__0 )? )
            {
            // InternalGo.g:2368:2: ( ( rule__PrimaryExprSelector__Group__0 )? )
            // InternalGo.g:2369:3: ( rule__PrimaryExprSelector__Group__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprSelectorAccess().getGroup()); 
            }
            // InternalGo.g:2370:3: ( rule__PrimaryExprSelector__Group__0 )?
            int alt2=2;
            alt2 = dfa2.predict(input);
            switch (alt2) {
                case 1 :
                    // InternalGo.g:2370:4: rule__PrimaryExprSelector__Group__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExprSelector__Group__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprSelectorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleprimaryExprSelector"


    // $ANTLR start "entryRuleprimaryExprIndex"
    // InternalGo.g:2379:1: entryRuleprimaryExprIndex : ruleprimaryExprIndex EOF ;
    public final void entryRuleprimaryExprIndex() throws RecognitionException {
        try {
            // InternalGo.g:2380:1: ( ruleprimaryExprIndex EOF )
            // InternalGo.g:2381:1: ruleprimaryExprIndex EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprIndexRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleprimaryExprIndex();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprIndexRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleprimaryExprIndex"


    // $ANTLR start "ruleprimaryExprIndex"
    // InternalGo.g:2388:1: ruleprimaryExprIndex : ( ( rule__PrimaryExprIndex__Group__0 )? ) ;
    public final void ruleprimaryExprIndex() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2392:2: ( ( ( rule__PrimaryExprIndex__Group__0 )? ) )
            // InternalGo.g:2393:2: ( ( rule__PrimaryExprIndex__Group__0 )? )
            {
            // InternalGo.g:2393:2: ( ( rule__PrimaryExprIndex__Group__0 )? )
            // InternalGo.g:2394:3: ( rule__PrimaryExprIndex__Group__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprIndexAccess().getGroup()); 
            }
            // InternalGo.g:2395:3: ( rule__PrimaryExprIndex__Group__0 )?
            int alt3=2;
            alt3 = dfa3.predict(input);
            switch (alt3) {
                case 1 :
                    // InternalGo.g:2395:4: rule__PrimaryExprIndex__Group__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExprIndex__Group__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprIndexAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleprimaryExprIndex"


    // $ANTLR start "entryRuleprimaryExprSlice"
    // InternalGo.g:2404:1: entryRuleprimaryExprSlice : ruleprimaryExprSlice EOF ;
    public final void entryRuleprimaryExprSlice() throws RecognitionException {
        try {
            // InternalGo.g:2405:1: ( ruleprimaryExprSlice EOF )
            // InternalGo.g:2406:1: ruleprimaryExprSlice EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprSliceRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleprimaryExprSlice();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprSliceRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleprimaryExprSlice"


    // $ANTLR start "ruleprimaryExprSlice"
    // InternalGo.g:2413:1: ruleprimaryExprSlice : ( ( rule__PrimaryExprSlice__Group__0 )? ) ;
    public final void ruleprimaryExprSlice() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2417:2: ( ( ( rule__PrimaryExprSlice__Group__0 )? ) )
            // InternalGo.g:2418:2: ( ( rule__PrimaryExprSlice__Group__0 )? )
            {
            // InternalGo.g:2418:2: ( ( rule__PrimaryExprSlice__Group__0 )? )
            // InternalGo.g:2419:3: ( rule__PrimaryExprSlice__Group__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprSliceAccess().getGroup()); 
            }
            // InternalGo.g:2420:3: ( rule__PrimaryExprSlice__Group__0 )?
            int alt4=2;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    // InternalGo.g:2420:4: rule__PrimaryExprSlice__Group__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExprSlice__Group__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprSliceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleprimaryExprSlice"


    // $ANTLR start "entryRuleprimaryExprTypeAssertion"
    // InternalGo.g:2429:1: entryRuleprimaryExprTypeAssertion : ruleprimaryExprTypeAssertion EOF ;
    public final void entryRuleprimaryExprTypeAssertion() throws RecognitionException {
        try {
            // InternalGo.g:2430:1: ( ruleprimaryExprTypeAssertion EOF )
            // InternalGo.g:2431:1: ruleprimaryExprTypeAssertion EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprTypeAssertionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleprimaryExprTypeAssertion();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprTypeAssertionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleprimaryExprTypeAssertion"


    // $ANTLR start "ruleprimaryExprTypeAssertion"
    // InternalGo.g:2438:1: ruleprimaryExprTypeAssertion : ( ( rule__PrimaryExprTypeAssertion__Group__0 )? ) ;
    public final void ruleprimaryExprTypeAssertion() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2442:2: ( ( ( rule__PrimaryExprTypeAssertion__Group__0 )? ) )
            // InternalGo.g:2443:2: ( ( rule__PrimaryExprTypeAssertion__Group__0 )? )
            {
            // InternalGo.g:2443:2: ( ( rule__PrimaryExprTypeAssertion__Group__0 )? )
            // InternalGo.g:2444:3: ( rule__PrimaryExprTypeAssertion__Group__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprTypeAssertionAccess().getGroup()); 
            }
            // InternalGo.g:2445:3: ( rule__PrimaryExprTypeAssertion__Group__0 )?
            int alt5=2;
            alt5 = dfa5.predict(input);
            switch (alt5) {
                case 1 :
                    // InternalGo.g:2445:4: rule__PrimaryExprTypeAssertion__Group__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExprTypeAssertion__Group__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprTypeAssertionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleprimaryExprTypeAssertion"


    // $ANTLR start "entryRuleprimaryExprArguments"
    // InternalGo.g:2454:1: entryRuleprimaryExprArguments : ruleprimaryExprArguments EOF ;
    public final void entryRuleprimaryExprArguments() throws RecognitionException {
        try {
            // InternalGo.g:2455:1: ( ruleprimaryExprArguments EOF )
            // InternalGo.g:2456:1: ruleprimaryExprArguments EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleprimaryExprArguments();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprArgumentsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleprimaryExprArguments"


    // $ANTLR start "ruleprimaryExprArguments"
    // InternalGo.g:2463:1: ruleprimaryExprArguments : ( ( rule__PrimaryExprArguments__Group__0 )? ) ;
    public final void ruleprimaryExprArguments() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2467:2: ( ( ( rule__PrimaryExprArguments__Group__0 )? ) )
            // InternalGo.g:2468:2: ( ( rule__PrimaryExprArguments__Group__0 )? )
            {
            // InternalGo.g:2468:2: ( ( rule__PrimaryExprArguments__Group__0 )? )
            // InternalGo.g:2469:3: ( rule__PrimaryExprArguments__Group__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprArgumentsAccess().getGroup()); 
            }
            // InternalGo.g:2470:3: ( rule__PrimaryExprArguments__Group__0 )?
            int alt6=2;
            alt6 = dfa6.predict(input);
            switch (alt6) {
                case 1 :
                    // InternalGo.g:2470:4: rule__PrimaryExprArguments__Group__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExprArguments__Group__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprArgumentsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleprimaryExprArguments"


    // $ANTLR start "entryRuleselector"
    // InternalGo.g:2479:1: entryRuleselector : ruleselector EOF ;
    public final void entryRuleselector() throws RecognitionException {
        try {
            // InternalGo.g:2480:1: ( ruleselector EOF )
            // InternalGo.g:2481:1: ruleselector EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleselector();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleselector"


    // $ANTLR start "ruleselector"
    // InternalGo.g:2488:1: ruleselector : ( ( rule__Selector__Group__0 ) ) ;
    public final void ruleselector() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2492:2: ( ( ( rule__Selector__Group__0 ) ) )
            // InternalGo.g:2493:2: ( ( rule__Selector__Group__0 ) )
            {
            // InternalGo.g:2493:2: ( ( rule__Selector__Group__0 ) )
            // InternalGo.g:2494:3: ( rule__Selector__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectorAccess().getGroup()); 
            }
            // InternalGo.g:2495:3: ( rule__Selector__Group__0 )
            // InternalGo.g:2495:4: rule__Selector__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Selector__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleselector"


    // $ANTLR start "entryRuleindex"
    // InternalGo.g:2504:1: entryRuleindex : ruleindex EOF ;
    public final void entryRuleindex() throws RecognitionException {
        try {
            // InternalGo.g:2505:1: ( ruleindex EOF )
            // InternalGo.g:2506:1: ruleindex EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndexRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleindex();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndexRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleindex"


    // $ANTLR start "ruleindex"
    // InternalGo.g:2513:1: ruleindex : ( ( rule__Index__Group__0 ) ) ;
    public final void ruleindex() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2517:2: ( ( ( rule__Index__Group__0 ) ) )
            // InternalGo.g:2518:2: ( ( rule__Index__Group__0 ) )
            {
            // InternalGo.g:2518:2: ( ( rule__Index__Group__0 ) )
            // InternalGo.g:2519:3: ( rule__Index__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndexAccess().getGroup()); 
            }
            // InternalGo.g:2520:3: ( rule__Index__Group__0 )
            // InternalGo.g:2520:4: rule__Index__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Index__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndexAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleindex"


    // $ANTLR start "entryRuleslice"
    // InternalGo.g:2529:1: entryRuleslice : ruleslice EOF ;
    public final void entryRuleslice() throws RecognitionException {
        try {
            // InternalGo.g:2530:1: ( ruleslice EOF )
            // InternalGo.g:2531:1: ruleslice EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleslice();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleslice"


    // $ANTLR start "ruleslice"
    // InternalGo.g:2538:1: ruleslice : ( ( rule__Slice__Group__0 ) ) ;
    public final void ruleslice() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2542:2: ( ( ( rule__Slice__Group__0 ) ) )
            // InternalGo.g:2543:2: ( ( rule__Slice__Group__0 ) )
            {
            // InternalGo.g:2543:2: ( ( rule__Slice__Group__0 ) )
            // InternalGo.g:2544:3: ( rule__Slice__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceAccess().getGroup()); 
            }
            // InternalGo.g:2545:3: ( rule__Slice__Group__0 )
            // InternalGo.g:2545:4: rule__Slice__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Slice__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleslice"


    // $ANTLR start "entryRuletypeAssertion"
    // InternalGo.g:2554:1: entryRuletypeAssertion : ruletypeAssertion EOF ;
    public final void entryRuletypeAssertion() throws RecognitionException {
        try {
            // InternalGo.g:2555:1: ( ruletypeAssertion EOF )
            // InternalGo.g:2556:1: ruletypeAssertion EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeAssertionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruletypeAssertion();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeAssertionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuletypeAssertion"


    // $ANTLR start "ruletypeAssertion"
    // InternalGo.g:2563:1: ruletypeAssertion : ( ( rule__TypeAssertion__Group__0 ) ) ;
    public final void ruletypeAssertion() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2567:2: ( ( ( rule__TypeAssertion__Group__0 ) ) )
            // InternalGo.g:2568:2: ( ( rule__TypeAssertion__Group__0 ) )
            {
            // InternalGo.g:2568:2: ( ( rule__TypeAssertion__Group__0 ) )
            // InternalGo.g:2569:3: ( rule__TypeAssertion__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeAssertionAccess().getGroup()); 
            }
            // InternalGo.g:2570:3: ( rule__TypeAssertion__Group__0 )
            // InternalGo.g:2570:4: rule__TypeAssertion__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TypeAssertion__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeAssertionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruletypeAssertion"


    // $ANTLR start "entryRulearguments"
    // InternalGo.g:2579:1: entryRulearguments : rulearguments EOF ;
    public final void entryRulearguments() throws RecognitionException {
        try {
            // InternalGo.g:2580:1: ( rulearguments EOF )
            // InternalGo.g:2581:1: rulearguments EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            rulearguments();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArgumentsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulearguments"


    // $ANTLR start "rulearguments"
    // InternalGo.g:2588:1: rulearguments : ( ( rule__Arguments__Group__0 ) ) ;
    public final void rulearguments() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2592:2: ( ( ( rule__Arguments__Group__0 ) ) )
            // InternalGo.g:2593:2: ( ( rule__Arguments__Group__0 ) )
            {
            // InternalGo.g:2593:2: ( ( rule__Arguments__Group__0 ) )
            // InternalGo.g:2594:3: ( rule__Arguments__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArgumentsAccess().getGroup()); 
            }
            // InternalGo.g:2595:3: ( rule__Arguments__Group__0 )
            // InternalGo.g:2595:4: rule__Arguments__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Arguments__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArgumentsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulearguments"


    // $ANTLR start "entryRulemethodExpr"
    // InternalGo.g:2604:1: entryRulemethodExpr : rulemethodExpr EOF ;
    public final void entryRulemethodExpr() throws RecognitionException {
        try {
            // InternalGo.g:2605:1: ( rulemethodExpr EOF )
            // InternalGo.g:2606:1: rulemethodExpr EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodExprRule()); 
            }
            pushFollow(FOLLOW_1);
            rulemethodExpr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodExprRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulemethodExpr"


    // $ANTLR start "rulemethodExpr"
    // InternalGo.g:2613:1: rulemethodExpr : ( ( rule__MethodExpr__Group__0 ) ) ;
    public final void rulemethodExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2617:2: ( ( ( rule__MethodExpr__Group__0 ) ) )
            // InternalGo.g:2618:2: ( ( rule__MethodExpr__Group__0 ) )
            {
            // InternalGo.g:2618:2: ( ( rule__MethodExpr__Group__0 ) )
            // InternalGo.g:2619:3: ( rule__MethodExpr__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodExprAccess().getGroup()); 
            }
            // InternalGo.g:2620:3: ( rule__MethodExpr__Group__0 )
            // InternalGo.g:2620:4: rule__MethodExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MethodExpr__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodExprAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulemethodExpr"


    // $ANTLR start "entryRulereceiverType"
    // InternalGo.g:2629:1: entryRulereceiverType : rulereceiverType EOF ;
    public final void entryRulereceiverType() throws RecognitionException {
        try {
            // InternalGo.g:2630:1: ( rulereceiverType EOF )
            // InternalGo.g:2631:1: rulereceiverType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReceiverTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            rulereceiverType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReceiverTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulereceiverType"


    // $ANTLR start "rulereceiverType"
    // InternalGo.g:2638:1: rulereceiverType : ( ( rule__ReceiverType__Alternatives ) ) ;
    public final void rulereceiverType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2642:2: ( ( ( rule__ReceiverType__Alternatives ) ) )
            // InternalGo.g:2643:2: ( ( rule__ReceiverType__Alternatives ) )
            {
            // InternalGo.g:2643:2: ( ( rule__ReceiverType__Alternatives ) )
            // InternalGo.g:2644:3: ( rule__ReceiverType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReceiverTypeAccess().getAlternatives()); 
            }
            // InternalGo.g:2645:3: ( rule__ReceiverType__Alternatives )
            // InternalGo.g:2645:4: rule__ReceiverType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ReceiverType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReceiverTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulereceiverType"


    // $ANTLR start "entryRuleexpression"
    // InternalGo.g:2654:1: entryRuleexpression : ruleexpression EOF ;
    public final void entryRuleexpression() throws RecognitionException {
        try {
            // InternalGo.g:2655:1: ( ruleexpression EOF )
            // InternalGo.g:2656:1: ruleexpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleexpression"


    // $ANTLR start "ruleexpression"
    // InternalGo.g:2663:1: ruleexpression : ( ( rule__Expression__Group__0 ) ) ;
    public final void ruleexpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2667:2: ( ( ( rule__Expression__Group__0 ) ) )
            // InternalGo.g:2668:2: ( ( rule__Expression__Group__0 ) )
            {
            // InternalGo.g:2668:2: ( ( rule__Expression__Group__0 ) )
            // InternalGo.g:2669:3: ( rule__Expression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getGroup()); 
            }
            // InternalGo.g:2670:3: ( rule__Expression__Group__0 )
            // InternalGo.g:2670:4: rule__Expression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleexpression"


    // $ANTLR start "entryRuleexpressionMatched"
    // InternalGo.g:2679:1: entryRuleexpressionMatched : ruleexpressionMatched EOF ;
    public final void entryRuleexpressionMatched() throws RecognitionException {
        try {
            // InternalGo.g:2680:1: ( ruleexpressionMatched EOF )
            // InternalGo.g:2681:1: ruleexpressionMatched EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionMatchedRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleexpressionMatched();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionMatchedRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleexpressionMatched"


    // $ANTLR start "ruleexpressionMatched"
    // InternalGo.g:2688:1: ruleexpressionMatched : ( ( rule__ExpressionMatched__Group__0 )? ) ;
    public final void ruleexpressionMatched() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2692:2: ( ( ( rule__ExpressionMatched__Group__0 )? ) )
            // InternalGo.g:2693:2: ( ( rule__ExpressionMatched__Group__0 )? )
            {
            // InternalGo.g:2693:2: ( ( rule__ExpressionMatched__Group__0 )? )
            // InternalGo.g:2694:3: ( rule__ExpressionMatched__Group__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionMatchedAccess().getGroup()); 
            }
            // InternalGo.g:2695:3: ( rule__ExpressionMatched__Group__0 )?
            int alt7=2;
            alt7 = dfa7.predict(input);
            switch (alt7) {
                case 1 :
                    // InternalGo.g:2695:4: rule__ExpressionMatched__Group__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionMatched__Group__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionMatchedAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleexpressionMatched"


    // $ANTLR start "entryRuleunaryExpr"
    // InternalGo.g:2704:1: entryRuleunaryExpr : ruleunaryExpr EOF ;
    public final void entryRuleunaryExpr() throws RecognitionException {
        try {
            // InternalGo.g:2705:1: ( ruleunaryExpr EOF )
            // InternalGo.g:2706:1: ruleunaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleunaryExpr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExprRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleunaryExpr"


    // $ANTLR start "ruleunaryExpr"
    // InternalGo.g:2713:1: ruleunaryExpr : ( ( rule__UnaryExpr__Alternatives ) ) ;
    public final void ruleunaryExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2717:2: ( ( ( rule__UnaryExpr__Alternatives ) ) )
            // InternalGo.g:2718:2: ( ( rule__UnaryExpr__Alternatives ) )
            {
            // InternalGo.g:2718:2: ( ( rule__UnaryExpr__Alternatives ) )
            // InternalGo.g:2719:3: ( rule__UnaryExpr__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExprAccess().getAlternatives()); 
            }
            // InternalGo.g:2720:3: ( rule__UnaryExpr__Alternatives )
            // InternalGo.g:2720:4: rule__UnaryExpr__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__UnaryExpr__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExprAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleunaryExpr"


    // $ANTLR start "entryRuleconversion"
    // InternalGo.g:2729:1: entryRuleconversion : ruleconversion EOF ;
    public final void entryRuleconversion() throws RecognitionException {
        try {
            // InternalGo.g:2730:1: ( ruleconversion EOF )
            // InternalGo.g:2731:1: ruleconversion EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConversionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleconversion();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConversionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleconversion"


    // $ANTLR start "ruleconversion"
    // InternalGo.g:2738:1: ruleconversion : ( ( rule__Conversion__Group__0 ) ) ;
    public final void ruleconversion() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2742:2: ( ( ( rule__Conversion__Group__0 ) ) )
            // InternalGo.g:2743:2: ( ( rule__Conversion__Group__0 ) )
            {
            // InternalGo.g:2743:2: ( ( rule__Conversion__Group__0 ) )
            // InternalGo.g:2744:3: ( rule__Conversion__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConversionAccess().getGroup()); 
            }
            // InternalGo.g:2745:3: ( rule__Conversion__Group__0 )
            // InternalGo.g:2745:4: rule__Conversion__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Conversion__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConversionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleconversion"


    // $ANTLR start "rule__ImportDecl__Alternatives_1"
    // InternalGo.g:2753:1: rule__ImportDecl__Alternatives_1 : ( ( ( rule__ImportDecl__ImportSpecAssignment_1_0 ) ) | ( ( rule__ImportDecl__Group_1_1__0 ) ) );
    public final void rule__ImportDecl__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2757:1: ( ( ( rule__ImportDecl__ImportSpecAssignment_1_0 ) ) | ( ( rule__ImportDecl__Group_1_1__0 ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_STRING_LIT||LA8_0==RULE_IDENTIFIER||LA8_0==45) ) {
                alt8=1;
            }
            else if ( (LA8_0==65) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalGo.g:2758:2: ( ( rule__ImportDecl__ImportSpecAssignment_1_0 ) )
                    {
                    // InternalGo.g:2758:2: ( ( rule__ImportDecl__ImportSpecAssignment_1_0 ) )
                    // InternalGo.g:2759:3: ( rule__ImportDecl__ImportSpecAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImportDeclAccess().getImportSpecAssignment_1_0()); 
                    }
                    // InternalGo.g:2760:3: ( rule__ImportDecl__ImportSpecAssignment_1_0 )
                    // InternalGo.g:2760:4: rule__ImportDecl__ImportSpecAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportDecl__ImportSpecAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImportDeclAccess().getImportSpecAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2764:2: ( ( rule__ImportDecl__Group_1_1__0 ) )
                    {
                    // InternalGo.g:2764:2: ( ( rule__ImportDecl__Group_1_1__0 ) )
                    // InternalGo.g:2765:3: ( rule__ImportDecl__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImportDeclAccess().getGroup_1_1()); 
                    }
                    // InternalGo.g:2766:3: ( rule__ImportDecl__Group_1_1__0 )
                    // InternalGo.g:2766:4: rule__ImportDecl__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportDecl__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImportDeclAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportDecl__Alternatives_1"


    // $ANTLR start "rule__ImportSpec__Alternatives_0"
    // InternalGo.g:2774:1: rule__ImportSpec__Alternatives_0 : ( ( '.' ) | ( RULE_IDENTIFIER ) );
    public final void rule__ImportSpec__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2778:1: ( ( '.' ) | ( RULE_IDENTIFIER ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==45) ) {
                alt9=1;
            }
            else if ( (LA9_0==RULE_IDENTIFIER) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalGo.g:2779:2: ( '.' )
                    {
                    // InternalGo.g:2779:2: ( '.' )
                    // InternalGo.g:2780:3: '.'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0()); 
                    }
                    match(input,45,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2785:2: ( RULE_IDENTIFIER )
                    {
                    // InternalGo.g:2785:2: ( RULE_IDENTIFIER )
                    // InternalGo.g:2786:3: RULE_IDENTIFIER
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getImportSpecAccess().getIDENTIFIERTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getImportSpecAccess().getIDENTIFIERTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportSpec__Alternatives_0"


    // $ANTLR start "rule__TopLevelDecl__Alternatives"
    // InternalGo.g:2795:1: rule__TopLevelDecl__Alternatives : ( ( ( rule__TopLevelDecl__DeclarationAssignment_0 ) ) | ( ( rule__TopLevelDecl__FunctionDeclAssignment_1 ) ) | ( ( rule__TopLevelDecl__MethodDeclAssignment_2 ) ) );
    public final void rule__TopLevelDecl__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2799:1: ( ( ( rule__TopLevelDecl__DeclarationAssignment_0 ) ) | ( ( rule__TopLevelDecl__FunctionDeclAssignment_1 ) ) | ( ( rule__TopLevelDecl__MethodDeclAssignment_2 ) ) )
            int alt10=3;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==67||LA10_0==70||LA10_0==72) ) {
                alt10=1;
            }
            else if ( (LA10_0==71) ) {
                int LA10_2 = input.LA(2);

                if ( (LA10_2==RULE_IDENTIFIER) ) {
                    alt10=2;
                }
                else if ( (LA10_2==65) ) {
                    alt10=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalGo.g:2800:2: ( ( rule__TopLevelDecl__DeclarationAssignment_0 ) )
                    {
                    // InternalGo.g:2800:2: ( ( rule__TopLevelDecl__DeclarationAssignment_0 ) )
                    // InternalGo.g:2801:3: ( rule__TopLevelDecl__DeclarationAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTopLevelDeclAccess().getDeclarationAssignment_0()); 
                    }
                    // InternalGo.g:2802:3: ( rule__TopLevelDecl__DeclarationAssignment_0 )
                    // InternalGo.g:2802:4: rule__TopLevelDecl__DeclarationAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TopLevelDecl__DeclarationAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTopLevelDeclAccess().getDeclarationAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2806:2: ( ( rule__TopLevelDecl__FunctionDeclAssignment_1 ) )
                    {
                    // InternalGo.g:2806:2: ( ( rule__TopLevelDecl__FunctionDeclAssignment_1 ) )
                    // InternalGo.g:2807:3: ( rule__TopLevelDecl__FunctionDeclAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTopLevelDeclAccess().getFunctionDeclAssignment_1()); 
                    }
                    // InternalGo.g:2808:3: ( rule__TopLevelDecl__FunctionDeclAssignment_1 )
                    // InternalGo.g:2808:4: rule__TopLevelDecl__FunctionDeclAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TopLevelDecl__FunctionDeclAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTopLevelDeclAccess().getFunctionDeclAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:2812:2: ( ( rule__TopLevelDecl__MethodDeclAssignment_2 ) )
                    {
                    // InternalGo.g:2812:2: ( ( rule__TopLevelDecl__MethodDeclAssignment_2 ) )
                    // InternalGo.g:2813:3: ( rule__TopLevelDecl__MethodDeclAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTopLevelDeclAccess().getMethodDeclAssignment_2()); 
                    }
                    // InternalGo.g:2814:3: ( rule__TopLevelDecl__MethodDeclAssignment_2 )
                    // InternalGo.g:2814:4: rule__TopLevelDecl__MethodDeclAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__TopLevelDecl__MethodDeclAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTopLevelDeclAccess().getMethodDeclAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TopLevelDecl__Alternatives"


    // $ANTLR start "rule__Declaration__Alternatives"
    // InternalGo.g:2822:1: rule__Declaration__Alternatives : ( ( ( rule__Declaration__ConstDeclAssignment_0 ) ) | ( ( rule__Declaration__TypeDeclAssignment_1 ) ) | ( ( rule__Declaration__VarDeclAssignment_2 ) ) );
    public final void rule__Declaration__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2826:1: ( ( ( rule__Declaration__ConstDeclAssignment_0 ) ) | ( ( rule__Declaration__TypeDeclAssignment_1 ) ) | ( ( rule__Declaration__VarDeclAssignment_2 ) ) )
            int alt11=3;
            switch ( input.LA(1) ) {
            case 67:
                {
                alt11=1;
                }
                break;
            case 70:
                {
                alt11=2;
                }
                break;
            case 72:
                {
                alt11=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalGo.g:2827:2: ( ( rule__Declaration__ConstDeclAssignment_0 ) )
                    {
                    // InternalGo.g:2827:2: ( ( rule__Declaration__ConstDeclAssignment_0 ) )
                    // InternalGo.g:2828:3: ( rule__Declaration__ConstDeclAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDeclarationAccess().getConstDeclAssignment_0()); 
                    }
                    // InternalGo.g:2829:3: ( rule__Declaration__ConstDeclAssignment_0 )
                    // InternalGo.g:2829:4: rule__Declaration__ConstDeclAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Declaration__ConstDeclAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDeclarationAccess().getConstDeclAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2833:2: ( ( rule__Declaration__TypeDeclAssignment_1 ) )
                    {
                    // InternalGo.g:2833:2: ( ( rule__Declaration__TypeDeclAssignment_1 ) )
                    // InternalGo.g:2834:3: ( rule__Declaration__TypeDeclAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDeclarationAccess().getTypeDeclAssignment_1()); 
                    }
                    // InternalGo.g:2835:3: ( rule__Declaration__TypeDeclAssignment_1 )
                    // InternalGo.g:2835:4: rule__Declaration__TypeDeclAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Declaration__TypeDeclAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDeclarationAccess().getTypeDeclAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:2839:2: ( ( rule__Declaration__VarDeclAssignment_2 ) )
                    {
                    // InternalGo.g:2839:2: ( ( rule__Declaration__VarDeclAssignment_2 ) )
                    // InternalGo.g:2840:3: ( rule__Declaration__VarDeclAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDeclarationAccess().getVarDeclAssignment_2()); 
                    }
                    // InternalGo.g:2841:3: ( rule__Declaration__VarDeclAssignment_2 )
                    // InternalGo.g:2841:4: rule__Declaration__VarDeclAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Declaration__VarDeclAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDeclarationAccess().getVarDeclAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Declaration__Alternatives"


    // $ANTLR start "rule__ConstDecl__Alternatives_1"
    // InternalGo.g:2849:1: rule__ConstDecl__Alternatives_1 : ( ( ( rule__ConstDecl__ConstSpecAssignment_1_0 ) ) | ( ( rule__ConstDecl__Group_1_1__0 ) ) );
    public final void rule__ConstDecl__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2853:1: ( ( ( rule__ConstDecl__ConstSpecAssignment_1_0 ) ) | ( ( rule__ConstDecl__Group_1_1__0 ) ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_IDENTIFIER) ) {
                alt12=1;
            }
            else if ( (LA12_0==65) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalGo.g:2854:2: ( ( rule__ConstDecl__ConstSpecAssignment_1_0 ) )
                    {
                    // InternalGo.g:2854:2: ( ( rule__ConstDecl__ConstSpecAssignment_1_0 ) )
                    // InternalGo.g:2855:3: ( rule__ConstDecl__ConstSpecAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConstDeclAccess().getConstSpecAssignment_1_0()); 
                    }
                    // InternalGo.g:2856:3: ( rule__ConstDecl__ConstSpecAssignment_1_0 )
                    // InternalGo.g:2856:4: rule__ConstDecl__ConstSpecAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConstDecl__ConstSpecAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConstDeclAccess().getConstSpecAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2860:2: ( ( rule__ConstDecl__Group_1_1__0 ) )
                    {
                    // InternalGo.g:2860:2: ( ( rule__ConstDecl__Group_1_1__0 ) )
                    // InternalGo.g:2861:3: ( rule__ConstDecl__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConstDeclAccess().getGroup_1_1()); 
                    }
                    // InternalGo.g:2862:3: ( rule__ConstDecl__Group_1_1__0 )
                    // InternalGo.g:2862:4: rule__ConstDecl__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConstDecl__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConstDeclAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstDecl__Alternatives_1"


    // $ANTLR start "rule__TypeDecl__Alternatives_1"
    // InternalGo.g:2870:1: rule__TypeDecl__Alternatives_1 : ( ( ( rule__TypeDecl__TypeSpecAssignment_1_0 ) ) | ( ( rule__TypeDecl__Group_1_1__0 ) ) );
    public final void rule__TypeDecl__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2874:1: ( ( ( rule__TypeDecl__TypeSpecAssignment_1_0 ) ) | ( ( rule__TypeDecl__Group_1_1__0 ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_IDENTIFIER) ) {
                alt13=1;
            }
            else if ( (LA13_0==65) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalGo.g:2875:2: ( ( rule__TypeDecl__TypeSpecAssignment_1_0 ) )
                    {
                    // InternalGo.g:2875:2: ( ( rule__TypeDecl__TypeSpecAssignment_1_0 ) )
                    // InternalGo.g:2876:3: ( rule__TypeDecl__TypeSpecAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeDeclAccess().getTypeSpecAssignment_1_0()); 
                    }
                    // InternalGo.g:2877:3: ( rule__TypeDecl__TypeSpecAssignment_1_0 )
                    // InternalGo.g:2877:4: rule__TypeDecl__TypeSpecAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TypeDecl__TypeSpecAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeDeclAccess().getTypeSpecAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2881:2: ( ( rule__TypeDecl__Group_1_1__0 ) )
                    {
                    // InternalGo.g:2881:2: ( ( rule__TypeDecl__Group_1_1__0 ) )
                    // InternalGo.g:2882:3: ( rule__TypeDecl__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeDeclAccess().getGroup_1_1()); 
                    }
                    // InternalGo.g:2883:3: ( rule__TypeDecl__Group_1_1__0 )
                    // InternalGo.g:2883:4: rule__TypeDecl__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TypeDecl__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeDeclAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeDecl__Alternatives_1"


    // $ANTLR start "rule__FunctionDecl__Alternatives_2"
    // InternalGo.g:2891:1: rule__FunctionDecl__Alternatives_2 : ( ( ( rule__FunctionDecl__FunctionAssignment_2_0 ) ) | ( ( rule__FunctionDecl__SignatureAssignment_2_1 ) ) );
    public final void rule__FunctionDecl__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2895:1: ( ( ( rule__FunctionDecl__FunctionAssignment_2_0 ) ) | ( ( rule__FunctionDecl__SignatureAssignment_2_1 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==65) ) {
                int LA14_1 = input.LA(2);

                if ( (synpred16_InternalGo()) ) {
                    alt14=1;
                }
                else if ( (true) ) {
                    alt14=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 14, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalGo.g:2896:2: ( ( rule__FunctionDecl__FunctionAssignment_2_0 ) )
                    {
                    // InternalGo.g:2896:2: ( ( rule__FunctionDecl__FunctionAssignment_2_0 ) )
                    // InternalGo.g:2897:3: ( rule__FunctionDecl__FunctionAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionDeclAccess().getFunctionAssignment_2_0()); 
                    }
                    // InternalGo.g:2898:3: ( rule__FunctionDecl__FunctionAssignment_2_0 )
                    // InternalGo.g:2898:4: rule__FunctionDecl__FunctionAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDecl__FunctionAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionDeclAccess().getFunctionAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2902:2: ( ( rule__FunctionDecl__SignatureAssignment_2_1 ) )
                    {
                    // InternalGo.g:2902:2: ( ( rule__FunctionDecl__SignatureAssignment_2_1 ) )
                    // InternalGo.g:2903:3: ( rule__FunctionDecl__SignatureAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionDeclAccess().getSignatureAssignment_2_1()); 
                    }
                    // InternalGo.g:2904:3: ( rule__FunctionDecl__SignatureAssignment_2_1 )
                    // InternalGo.g:2904:4: rule__FunctionDecl__SignatureAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDecl__SignatureAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionDeclAccess().getSignatureAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDecl__Alternatives_2"


    // $ANTLR start "rule__MethodDecl__Alternatives_3"
    // InternalGo.g:2912:1: rule__MethodDecl__Alternatives_3 : ( ( ( rule__MethodDecl__FunctionAssignment_3_0 ) ) | ( ( rule__MethodDecl__SignatureAssignment_3_1 ) ) );
    public final void rule__MethodDecl__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2916:1: ( ( ( rule__MethodDecl__FunctionAssignment_3_0 ) ) | ( ( rule__MethodDecl__SignatureAssignment_3_1 ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==65) ) {
                int LA15_1 = input.LA(2);

                if ( (synpred17_InternalGo()) ) {
                    alt15=1;
                }
                else if ( (true) ) {
                    alt15=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 15, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalGo.g:2917:2: ( ( rule__MethodDecl__FunctionAssignment_3_0 ) )
                    {
                    // InternalGo.g:2917:2: ( ( rule__MethodDecl__FunctionAssignment_3_0 ) )
                    // InternalGo.g:2918:3: ( rule__MethodDecl__FunctionAssignment_3_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMethodDeclAccess().getFunctionAssignment_3_0()); 
                    }
                    // InternalGo.g:2919:3: ( rule__MethodDecl__FunctionAssignment_3_0 )
                    // InternalGo.g:2919:4: rule__MethodDecl__FunctionAssignment_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__MethodDecl__FunctionAssignment_3_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMethodDeclAccess().getFunctionAssignment_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2923:2: ( ( rule__MethodDecl__SignatureAssignment_3_1 ) )
                    {
                    // InternalGo.g:2923:2: ( ( rule__MethodDecl__SignatureAssignment_3_1 ) )
                    // InternalGo.g:2924:3: ( rule__MethodDecl__SignatureAssignment_3_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMethodDeclAccess().getSignatureAssignment_3_1()); 
                    }
                    // InternalGo.g:2925:3: ( rule__MethodDecl__SignatureAssignment_3_1 )
                    // InternalGo.g:2925:4: rule__MethodDecl__SignatureAssignment_3_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__MethodDecl__SignatureAssignment_3_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMethodDeclAccess().getSignatureAssignment_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodDecl__Alternatives_3"


    // $ANTLR start "rule__VarDecl__Alternatives_1"
    // InternalGo.g:2933:1: rule__VarDecl__Alternatives_1 : ( ( ( rule__VarDecl__VarSpecAssignment_1_0 ) ) | ( ( rule__VarDecl__Group_1_1__0 ) ) );
    public final void rule__VarDecl__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2937:1: ( ( ( rule__VarDecl__VarSpecAssignment_1_0 ) ) | ( ( rule__VarDecl__Group_1_1__0 ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_IDENTIFIER) ) {
                alt16=1;
            }
            else if ( (LA16_0==65) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalGo.g:2938:2: ( ( rule__VarDecl__VarSpecAssignment_1_0 ) )
                    {
                    // InternalGo.g:2938:2: ( ( rule__VarDecl__VarSpecAssignment_1_0 ) )
                    // InternalGo.g:2939:3: ( rule__VarDecl__VarSpecAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclAccess().getVarSpecAssignment_1_0()); 
                    }
                    // InternalGo.g:2940:3: ( rule__VarDecl__VarSpecAssignment_1_0 )
                    // InternalGo.g:2940:4: rule__VarDecl__VarSpecAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDecl__VarSpecAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclAccess().getVarSpecAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2944:2: ( ( rule__VarDecl__Group_1_1__0 ) )
                    {
                    // InternalGo.g:2944:2: ( ( rule__VarDecl__Group_1_1__0 ) )
                    // InternalGo.g:2945:3: ( rule__VarDecl__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclAccess().getGroup_1_1()); 
                    }
                    // InternalGo.g:2946:3: ( rule__VarDecl__Group_1_1__0 )
                    // InternalGo.g:2946:4: rule__VarDecl__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDecl__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDecl__Alternatives_1"


    // $ANTLR start "rule__VarSpec__Alternatives_1"
    // InternalGo.g:2954:1: rule__VarSpec__Alternatives_1 : ( ( ( rule__VarSpec__Group_1_0__0 ) ) | ( ( rule__VarSpec__Group_1_1__0 ) ) );
    public final void rule__VarSpec__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2958:1: ( ( ( rule__VarSpec__Group_1_0__0 ) ) | ( ( rule__VarSpec__Group_1_1__0 ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_IDENTIFIER||LA17_0==52||LA17_0==60||LA17_0==62||LA17_0==65||LA17_0==71||LA17_0==90||(LA17_0>=92 && LA17_0<=93)||LA17_0==95) ) {
                alt17=1;
            }
            else if ( (LA17_0==68) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalGo.g:2959:2: ( ( rule__VarSpec__Group_1_0__0 ) )
                    {
                    // InternalGo.g:2959:2: ( ( rule__VarSpec__Group_1_0__0 ) )
                    // InternalGo.g:2960:3: ( rule__VarSpec__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarSpecAccess().getGroup_1_0()); 
                    }
                    // InternalGo.g:2961:3: ( rule__VarSpec__Group_1_0__0 )
                    // InternalGo.g:2961:4: rule__VarSpec__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarSpec__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarSpecAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2965:2: ( ( rule__VarSpec__Group_1_1__0 ) )
                    {
                    // InternalGo.g:2965:2: ( ( rule__VarSpec__Group_1_1__0 ) )
                    // InternalGo.g:2966:3: ( rule__VarSpec__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarSpecAccess().getGroup_1_1()); 
                    }
                    // InternalGo.g:2967:3: ( rule__VarSpec__Group_1_1__0 )
                    // InternalGo.g:2967:4: rule__VarSpec__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarSpec__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarSpecAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__Alternatives_1"


    // $ANTLR start "rule__Statement__Alternatives"
    // InternalGo.g:2975:1: rule__Statement__Alternatives : ( ( ( rule__Statement__DeclarationAssignment_0 ) ) | ( ( rule__Statement__LabeledStmtAssignment_1 ) ) | ( ( rule__Statement__SimpleStmtAssignment_2 ) ) | ( ( rule__Statement__GoStmtAssignment_3 ) ) | ( ( rule__Statement__ReturnStmtAssignment_4 ) ) | ( ( rule__Statement__BreakStmtAssignment_5 ) ) | ( ( rule__Statement__ContinueStmtAssignment_6 ) ) | ( ( rule__Statement__GotoStmtAssignment_7 ) ) | ( ( rule__Statement__FallthroughStmtAssignment_8 ) ) | ( ( rule__Statement__BlockAssignment_9 ) ) | ( ( rule__Statement__IfStmtAssignment_10 ) ) | ( ( rule__Statement__SwitchStmtAssignment_11 ) ) | ( ( rule__Statement__SelectStmtAssignment_12 ) ) | ( ( rule__Statement__ForStmtAssignment_13 ) ) | ( ( rule__Statement__DeferStmtAssignment_14 ) ) );
    public final void rule__Statement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:2979:1: ( ( ( rule__Statement__DeclarationAssignment_0 ) ) | ( ( rule__Statement__LabeledStmtAssignment_1 ) ) | ( ( rule__Statement__SimpleStmtAssignment_2 ) ) | ( ( rule__Statement__GoStmtAssignment_3 ) ) | ( ( rule__Statement__ReturnStmtAssignment_4 ) ) | ( ( rule__Statement__BreakStmtAssignment_5 ) ) | ( ( rule__Statement__ContinueStmtAssignment_6 ) ) | ( ( rule__Statement__GotoStmtAssignment_7 ) ) | ( ( rule__Statement__FallthroughStmtAssignment_8 ) ) | ( ( rule__Statement__BlockAssignment_9 ) ) | ( ( rule__Statement__IfStmtAssignment_10 ) ) | ( ( rule__Statement__SwitchStmtAssignment_11 ) ) | ( ( rule__Statement__SelectStmtAssignment_12 ) ) | ( ( rule__Statement__ForStmtAssignment_13 ) ) | ( ( rule__Statement__DeferStmtAssignment_14 ) ) )
            int alt18=15;
            alt18 = dfa18.predict(input);
            switch (alt18) {
                case 1 :
                    // InternalGo.g:2980:2: ( ( rule__Statement__DeclarationAssignment_0 ) )
                    {
                    // InternalGo.g:2980:2: ( ( rule__Statement__DeclarationAssignment_0 ) )
                    // InternalGo.g:2981:3: ( rule__Statement__DeclarationAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getDeclarationAssignment_0()); 
                    }
                    // InternalGo.g:2982:3: ( rule__Statement__DeclarationAssignment_0 )
                    // InternalGo.g:2982:4: rule__Statement__DeclarationAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__DeclarationAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getDeclarationAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:2986:2: ( ( rule__Statement__LabeledStmtAssignment_1 ) )
                    {
                    // InternalGo.g:2986:2: ( ( rule__Statement__LabeledStmtAssignment_1 ) )
                    // InternalGo.g:2987:3: ( rule__Statement__LabeledStmtAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getLabeledStmtAssignment_1()); 
                    }
                    // InternalGo.g:2988:3: ( rule__Statement__LabeledStmtAssignment_1 )
                    // InternalGo.g:2988:4: rule__Statement__LabeledStmtAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__LabeledStmtAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getLabeledStmtAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:2992:2: ( ( rule__Statement__SimpleStmtAssignment_2 ) )
                    {
                    // InternalGo.g:2992:2: ( ( rule__Statement__SimpleStmtAssignment_2 ) )
                    // InternalGo.g:2993:3: ( rule__Statement__SimpleStmtAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getSimpleStmtAssignment_2()); 
                    }
                    // InternalGo.g:2994:3: ( rule__Statement__SimpleStmtAssignment_2 )
                    // InternalGo.g:2994:4: rule__Statement__SimpleStmtAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__SimpleStmtAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getSimpleStmtAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:2998:2: ( ( rule__Statement__GoStmtAssignment_3 ) )
                    {
                    // InternalGo.g:2998:2: ( ( rule__Statement__GoStmtAssignment_3 ) )
                    // InternalGo.g:2999:3: ( rule__Statement__GoStmtAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getGoStmtAssignment_3()); 
                    }
                    // InternalGo.g:3000:3: ( rule__Statement__GoStmtAssignment_3 )
                    // InternalGo.g:3000:4: rule__Statement__GoStmtAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__GoStmtAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getGoStmtAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:3004:2: ( ( rule__Statement__ReturnStmtAssignment_4 ) )
                    {
                    // InternalGo.g:3004:2: ( ( rule__Statement__ReturnStmtAssignment_4 ) )
                    // InternalGo.g:3005:3: ( rule__Statement__ReturnStmtAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getReturnStmtAssignment_4()); 
                    }
                    // InternalGo.g:3006:3: ( rule__Statement__ReturnStmtAssignment_4 )
                    // InternalGo.g:3006:4: rule__Statement__ReturnStmtAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__ReturnStmtAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getReturnStmtAssignment_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:3010:2: ( ( rule__Statement__BreakStmtAssignment_5 ) )
                    {
                    // InternalGo.g:3010:2: ( ( rule__Statement__BreakStmtAssignment_5 ) )
                    // InternalGo.g:3011:3: ( rule__Statement__BreakStmtAssignment_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getBreakStmtAssignment_5()); 
                    }
                    // InternalGo.g:3012:3: ( rule__Statement__BreakStmtAssignment_5 )
                    // InternalGo.g:3012:4: rule__Statement__BreakStmtAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__BreakStmtAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getBreakStmtAssignment_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalGo.g:3016:2: ( ( rule__Statement__ContinueStmtAssignment_6 ) )
                    {
                    // InternalGo.g:3016:2: ( ( rule__Statement__ContinueStmtAssignment_6 ) )
                    // InternalGo.g:3017:3: ( rule__Statement__ContinueStmtAssignment_6 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getContinueStmtAssignment_6()); 
                    }
                    // InternalGo.g:3018:3: ( rule__Statement__ContinueStmtAssignment_6 )
                    // InternalGo.g:3018:4: rule__Statement__ContinueStmtAssignment_6
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__ContinueStmtAssignment_6();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getContinueStmtAssignment_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalGo.g:3022:2: ( ( rule__Statement__GotoStmtAssignment_7 ) )
                    {
                    // InternalGo.g:3022:2: ( ( rule__Statement__GotoStmtAssignment_7 ) )
                    // InternalGo.g:3023:3: ( rule__Statement__GotoStmtAssignment_7 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getGotoStmtAssignment_7()); 
                    }
                    // InternalGo.g:3024:3: ( rule__Statement__GotoStmtAssignment_7 )
                    // InternalGo.g:3024:4: rule__Statement__GotoStmtAssignment_7
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__GotoStmtAssignment_7();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getGotoStmtAssignment_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalGo.g:3028:2: ( ( rule__Statement__FallthroughStmtAssignment_8 ) )
                    {
                    // InternalGo.g:3028:2: ( ( rule__Statement__FallthroughStmtAssignment_8 ) )
                    // InternalGo.g:3029:3: ( rule__Statement__FallthroughStmtAssignment_8 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getFallthroughStmtAssignment_8()); 
                    }
                    // InternalGo.g:3030:3: ( rule__Statement__FallthroughStmtAssignment_8 )
                    // InternalGo.g:3030:4: rule__Statement__FallthroughStmtAssignment_8
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__FallthroughStmtAssignment_8();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getFallthroughStmtAssignment_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalGo.g:3034:2: ( ( rule__Statement__BlockAssignment_9 ) )
                    {
                    // InternalGo.g:3034:2: ( ( rule__Statement__BlockAssignment_9 ) )
                    // InternalGo.g:3035:3: ( rule__Statement__BlockAssignment_9 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getBlockAssignment_9()); 
                    }
                    // InternalGo.g:3036:3: ( rule__Statement__BlockAssignment_9 )
                    // InternalGo.g:3036:4: rule__Statement__BlockAssignment_9
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__BlockAssignment_9();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getBlockAssignment_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalGo.g:3040:2: ( ( rule__Statement__IfStmtAssignment_10 ) )
                    {
                    // InternalGo.g:3040:2: ( ( rule__Statement__IfStmtAssignment_10 ) )
                    // InternalGo.g:3041:3: ( rule__Statement__IfStmtAssignment_10 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getIfStmtAssignment_10()); 
                    }
                    // InternalGo.g:3042:3: ( rule__Statement__IfStmtAssignment_10 )
                    // InternalGo.g:3042:4: rule__Statement__IfStmtAssignment_10
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__IfStmtAssignment_10();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getIfStmtAssignment_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalGo.g:3046:2: ( ( rule__Statement__SwitchStmtAssignment_11 ) )
                    {
                    // InternalGo.g:3046:2: ( ( rule__Statement__SwitchStmtAssignment_11 ) )
                    // InternalGo.g:3047:3: ( rule__Statement__SwitchStmtAssignment_11 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getSwitchStmtAssignment_11()); 
                    }
                    // InternalGo.g:3048:3: ( rule__Statement__SwitchStmtAssignment_11 )
                    // InternalGo.g:3048:4: rule__Statement__SwitchStmtAssignment_11
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__SwitchStmtAssignment_11();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getSwitchStmtAssignment_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalGo.g:3052:2: ( ( rule__Statement__SelectStmtAssignment_12 ) )
                    {
                    // InternalGo.g:3052:2: ( ( rule__Statement__SelectStmtAssignment_12 ) )
                    // InternalGo.g:3053:3: ( rule__Statement__SelectStmtAssignment_12 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getSelectStmtAssignment_12()); 
                    }
                    // InternalGo.g:3054:3: ( rule__Statement__SelectStmtAssignment_12 )
                    // InternalGo.g:3054:4: rule__Statement__SelectStmtAssignment_12
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__SelectStmtAssignment_12();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getSelectStmtAssignment_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalGo.g:3058:2: ( ( rule__Statement__ForStmtAssignment_13 ) )
                    {
                    // InternalGo.g:3058:2: ( ( rule__Statement__ForStmtAssignment_13 ) )
                    // InternalGo.g:3059:3: ( rule__Statement__ForStmtAssignment_13 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getForStmtAssignment_13()); 
                    }
                    // InternalGo.g:3060:3: ( rule__Statement__ForStmtAssignment_13 )
                    // InternalGo.g:3060:4: rule__Statement__ForStmtAssignment_13
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__ForStmtAssignment_13();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getForStmtAssignment_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalGo.g:3064:2: ( ( rule__Statement__DeferStmtAssignment_14 ) )
                    {
                    // InternalGo.g:3064:2: ( ( rule__Statement__DeferStmtAssignment_14 ) )
                    // InternalGo.g:3065:3: ( rule__Statement__DeferStmtAssignment_14 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getDeferStmtAssignment_14()); 
                    }
                    // InternalGo.g:3066:3: ( rule__Statement__DeferStmtAssignment_14 )
                    // InternalGo.g:3066:4: rule__Statement__DeferStmtAssignment_14
                    {
                    pushFollow(FOLLOW_2);
                    rule__Statement__DeferStmtAssignment_14();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getDeferStmtAssignment_14()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Alternatives"


    // $ANTLR start "rule__SimpleStmt__Alternatives"
    // InternalGo.g:3074:1: rule__SimpleStmt__Alternatives : ( ( ( rule__SimpleStmt__SendStmtAssignment_0 ) ) | ( ( rule__SimpleStmt__ExpressionStmtAssignment_1 ) ) | ( ( rule__SimpleStmt__IncDecStmtAssignment_2 ) ) | ( ( rule__SimpleStmt__AssignmentAssignment_3 ) ) | ( ( rule__SimpleStmt__ShortVarDeclAssignment_4 ) ) | ( ( rule__SimpleStmt__EmptyStmtAssignment_5 ) ) );
    public final void rule__SimpleStmt__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3078:1: ( ( ( rule__SimpleStmt__SendStmtAssignment_0 ) ) | ( ( rule__SimpleStmt__ExpressionStmtAssignment_1 ) ) | ( ( rule__SimpleStmt__IncDecStmtAssignment_2 ) ) | ( ( rule__SimpleStmt__AssignmentAssignment_3 ) ) | ( ( rule__SimpleStmt__ShortVarDeclAssignment_4 ) ) | ( ( rule__SimpleStmt__EmptyStmtAssignment_5 ) ) )
            int alt19=6;
            alt19 = dfa19.predict(input);
            switch (alt19) {
                case 1 :
                    // InternalGo.g:3079:2: ( ( rule__SimpleStmt__SendStmtAssignment_0 ) )
                    {
                    // InternalGo.g:3079:2: ( ( rule__SimpleStmt__SendStmtAssignment_0 ) )
                    // InternalGo.g:3080:3: ( rule__SimpleStmt__SendStmtAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleStmtAccess().getSendStmtAssignment_0()); 
                    }
                    // InternalGo.g:3081:3: ( rule__SimpleStmt__SendStmtAssignment_0 )
                    // InternalGo.g:3081:4: rule__SimpleStmt__SendStmtAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleStmt__SendStmtAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleStmtAccess().getSendStmtAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3085:2: ( ( rule__SimpleStmt__ExpressionStmtAssignment_1 ) )
                    {
                    // InternalGo.g:3085:2: ( ( rule__SimpleStmt__ExpressionStmtAssignment_1 ) )
                    // InternalGo.g:3086:3: ( rule__SimpleStmt__ExpressionStmtAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleStmtAccess().getExpressionStmtAssignment_1()); 
                    }
                    // InternalGo.g:3087:3: ( rule__SimpleStmt__ExpressionStmtAssignment_1 )
                    // InternalGo.g:3087:4: rule__SimpleStmt__ExpressionStmtAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleStmt__ExpressionStmtAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleStmtAccess().getExpressionStmtAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3091:2: ( ( rule__SimpleStmt__IncDecStmtAssignment_2 ) )
                    {
                    // InternalGo.g:3091:2: ( ( rule__SimpleStmt__IncDecStmtAssignment_2 ) )
                    // InternalGo.g:3092:3: ( rule__SimpleStmt__IncDecStmtAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleStmtAccess().getIncDecStmtAssignment_2()); 
                    }
                    // InternalGo.g:3093:3: ( rule__SimpleStmt__IncDecStmtAssignment_2 )
                    // InternalGo.g:3093:4: rule__SimpleStmt__IncDecStmtAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleStmt__IncDecStmtAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleStmtAccess().getIncDecStmtAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:3097:2: ( ( rule__SimpleStmt__AssignmentAssignment_3 ) )
                    {
                    // InternalGo.g:3097:2: ( ( rule__SimpleStmt__AssignmentAssignment_3 ) )
                    // InternalGo.g:3098:3: ( rule__SimpleStmt__AssignmentAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleStmtAccess().getAssignmentAssignment_3()); 
                    }
                    // InternalGo.g:3099:3: ( rule__SimpleStmt__AssignmentAssignment_3 )
                    // InternalGo.g:3099:4: rule__SimpleStmt__AssignmentAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleStmt__AssignmentAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleStmtAccess().getAssignmentAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:3103:2: ( ( rule__SimpleStmt__ShortVarDeclAssignment_4 ) )
                    {
                    // InternalGo.g:3103:2: ( ( rule__SimpleStmt__ShortVarDeclAssignment_4 ) )
                    // InternalGo.g:3104:3: ( rule__SimpleStmt__ShortVarDeclAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleStmtAccess().getShortVarDeclAssignment_4()); 
                    }
                    // InternalGo.g:3105:3: ( rule__SimpleStmt__ShortVarDeclAssignment_4 )
                    // InternalGo.g:3105:4: rule__SimpleStmt__ShortVarDeclAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleStmt__ShortVarDeclAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleStmtAccess().getShortVarDeclAssignment_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:3109:2: ( ( rule__SimpleStmt__EmptyStmtAssignment_5 ) )
                    {
                    // InternalGo.g:3109:2: ( ( rule__SimpleStmt__EmptyStmtAssignment_5 ) )
                    // InternalGo.g:3110:3: ( rule__SimpleStmt__EmptyStmtAssignment_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleStmtAccess().getEmptyStmtAssignment_5()); 
                    }
                    // InternalGo.g:3111:3: ( rule__SimpleStmt__EmptyStmtAssignment_5 )
                    // InternalGo.g:3111:4: rule__SimpleStmt__EmptyStmtAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleStmt__EmptyStmtAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleStmtAccess().getEmptyStmtAssignment_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleStmt__Alternatives"


    // $ANTLR start "rule__IncDecStmt__Alternatives_1"
    // InternalGo.g:3119:1: rule__IncDecStmt__Alternatives_1 : ( ( '++' ) | ( '--' ) );
    public final void rule__IncDecStmt__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3123:1: ( ( '++' ) | ( '--' ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==46) ) {
                alt20=1;
            }
            else if ( (LA20_0==47) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalGo.g:3124:2: ( '++' )
                    {
                    // InternalGo.g:3124:2: ( '++' )
                    // InternalGo.g:3125:3: '++'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIncDecStmtAccess().getPlusSignPlusSignKeyword_1_0()); 
                    }
                    match(input,46,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIncDecStmtAccess().getPlusSignPlusSignKeyword_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3130:2: ( '--' )
                    {
                    // InternalGo.g:3130:2: ( '--' )
                    // InternalGo.g:3131:3: '--'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIncDecStmtAccess().getHyphenMinusHyphenMinusKeyword_1_1()); 
                    }
                    match(input,47,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIncDecStmtAccess().getHyphenMinusHyphenMinusKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IncDecStmt__Alternatives_1"


    // $ANTLR start "rule__Assign_op__Alternatives_0"
    // InternalGo.g:3140:1: rule__Assign_op__Alternatives_0 : ( ( '+' ) | ( '-' ) | ( '|' ) | ( '^' ) | ( '*' ) | ( '/' ) | ( '%' ) | ( '<<' ) | ( '>>' ) | ( '&' ) | ( '&^' ) );
    public final void rule__Assign_op__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3144:1: ( ( '+' ) | ( '-' ) | ( '|' ) | ( '^' ) | ( '*' ) | ( '/' ) | ( '%' ) | ( '<<' ) | ( '>>' ) | ( '&' ) | ( '&^' ) )
            int alt21=11;
            switch ( input.LA(1) ) {
            case 48:
                {
                alt21=1;
                }
                break;
            case 49:
                {
                alt21=2;
                }
                break;
            case 50:
                {
                alt21=3;
                }
                break;
            case 51:
                {
                alt21=4;
                }
                break;
            case 52:
                {
                alt21=5;
                }
                break;
            case 53:
                {
                alt21=6;
                }
                break;
            case 54:
                {
                alt21=7;
                }
                break;
            case 55:
                {
                alt21=8;
                }
                break;
            case 56:
                {
                alt21=9;
                }
                break;
            case 57:
                {
                alt21=10;
                }
                break;
            case 58:
                {
                alt21=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalGo.g:3145:2: ( '+' )
                    {
                    // InternalGo.g:3145:2: ( '+' )
                    // InternalGo.g:3146:3: '+'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssign_opAccess().getPlusSignKeyword_0_0()); 
                    }
                    match(input,48,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssign_opAccess().getPlusSignKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3151:2: ( '-' )
                    {
                    // InternalGo.g:3151:2: ( '-' )
                    // InternalGo.g:3152:3: '-'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssign_opAccess().getHyphenMinusKeyword_0_1()); 
                    }
                    match(input,49,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssign_opAccess().getHyphenMinusKeyword_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3157:2: ( '|' )
                    {
                    // InternalGo.g:3157:2: ( '|' )
                    // InternalGo.g:3158:3: '|'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssign_opAccess().getVerticalLineKeyword_0_2()); 
                    }
                    match(input,50,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssign_opAccess().getVerticalLineKeyword_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:3163:2: ( '^' )
                    {
                    // InternalGo.g:3163:2: ( '^' )
                    // InternalGo.g:3164:3: '^'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssign_opAccess().getCircumflexAccentKeyword_0_3()); 
                    }
                    match(input,51,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssign_opAccess().getCircumflexAccentKeyword_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:3169:2: ( '*' )
                    {
                    // InternalGo.g:3169:2: ( '*' )
                    // InternalGo.g:3170:3: '*'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssign_opAccess().getAsteriskKeyword_0_4()); 
                    }
                    match(input,52,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssign_opAccess().getAsteriskKeyword_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:3175:2: ( '/' )
                    {
                    // InternalGo.g:3175:2: ( '/' )
                    // InternalGo.g:3176:3: '/'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssign_opAccess().getSolidusKeyword_0_5()); 
                    }
                    match(input,53,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssign_opAccess().getSolidusKeyword_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalGo.g:3181:2: ( '%' )
                    {
                    // InternalGo.g:3181:2: ( '%' )
                    // InternalGo.g:3182:3: '%'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssign_opAccess().getPercentSignKeyword_0_6()); 
                    }
                    match(input,54,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssign_opAccess().getPercentSignKeyword_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalGo.g:3187:2: ( '<<' )
                    {
                    // InternalGo.g:3187:2: ( '<<' )
                    // InternalGo.g:3188:3: '<<'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssign_opAccess().getLessThanSignLessThanSignKeyword_0_7()); 
                    }
                    match(input,55,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssign_opAccess().getLessThanSignLessThanSignKeyword_0_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalGo.g:3193:2: ( '>>' )
                    {
                    // InternalGo.g:3193:2: ( '>>' )
                    // InternalGo.g:3194:3: '>>'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssign_opAccess().getGreaterThanSignGreaterThanSignKeyword_0_8()); 
                    }
                    match(input,56,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssign_opAccess().getGreaterThanSignGreaterThanSignKeyword_0_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalGo.g:3199:2: ( '&' )
                    {
                    // InternalGo.g:3199:2: ( '&' )
                    // InternalGo.g:3200:3: '&'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssign_opAccess().getAmpersandKeyword_0_9()); 
                    }
                    match(input,57,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssign_opAccess().getAmpersandKeyword_0_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalGo.g:3205:2: ( '&^' )
                    {
                    // InternalGo.g:3205:2: ( '&^' )
                    // InternalGo.g:3206:3: '&^'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAssign_opAccess().getAmpersandCircumflexAccentKeyword_0_10()); 
                    }
                    match(input,58,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAssign_opAccess().getAmpersandCircumflexAccentKeyword_0_10()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assign_op__Alternatives_0"


    // $ANTLR start "rule__IfStmt__Alternatives_4_1"
    // InternalGo.g:3215:1: rule__IfStmt__Alternatives_4_1 : ( ( ( rule__IfStmt__IfStmtAssignment_4_1_0 ) ) | ( ( rule__IfStmt__BlockAssignment_4_1_1 ) ) );
    public final void rule__IfStmt__Alternatives_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3219:1: ( ( ( rule__IfStmt__IfStmtAssignment_4_1_0 ) ) | ( ( rule__IfStmt__BlockAssignment_4_1_1 ) ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==82) ) {
                alt22=1;
            }
            else if ( (LA22_0==73) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalGo.g:3220:2: ( ( rule__IfStmt__IfStmtAssignment_4_1_0 ) )
                    {
                    // InternalGo.g:3220:2: ( ( rule__IfStmt__IfStmtAssignment_4_1_0 ) )
                    // InternalGo.g:3221:3: ( rule__IfStmt__IfStmtAssignment_4_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIfStmtAccess().getIfStmtAssignment_4_1_0()); 
                    }
                    // InternalGo.g:3222:3: ( rule__IfStmt__IfStmtAssignment_4_1_0 )
                    // InternalGo.g:3222:4: rule__IfStmt__IfStmtAssignment_4_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IfStmt__IfStmtAssignment_4_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIfStmtAccess().getIfStmtAssignment_4_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3226:2: ( ( rule__IfStmt__BlockAssignment_4_1_1 ) )
                    {
                    // InternalGo.g:3226:2: ( ( rule__IfStmt__BlockAssignment_4_1_1 ) )
                    // InternalGo.g:3227:3: ( rule__IfStmt__BlockAssignment_4_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIfStmtAccess().getBlockAssignment_4_1_1()); 
                    }
                    // InternalGo.g:3228:3: ( rule__IfStmt__BlockAssignment_4_1_1 )
                    // InternalGo.g:3228:4: rule__IfStmt__BlockAssignment_4_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__IfStmt__BlockAssignment_4_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIfStmtAccess().getBlockAssignment_4_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__Alternatives_4_1"


    // $ANTLR start "rule__SwitchStmt__Alternatives"
    // InternalGo.g:3236:1: rule__SwitchStmt__Alternatives : ( ( ( rule__SwitchStmt__ExprSwitchStmtAssignment_0 ) ) | ( ( rule__SwitchStmt__TypeSwitchStmtAssignment_1 ) ) );
    public final void rule__SwitchStmt__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3240:1: ( ( ( rule__SwitchStmt__ExprSwitchStmtAssignment_0 ) ) | ( ( rule__SwitchStmt__TypeSwitchStmtAssignment_1 ) ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==84) ) {
                int LA23_1 = input.LA(2);

                if ( (synpred51_InternalGo()) ) {
                    alt23=1;
                }
                else if ( (true) ) {
                    alt23=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 23, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalGo.g:3241:2: ( ( rule__SwitchStmt__ExprSwitchStmtAssignment_0 ) )
                    {
                    // InternalGo.g:3241:2: ( ( rule__SwitchStmt__ExprSwitchStmtAssignment_0 ) )
                    // InternalGo.g:3242:3: ( rule__SwitchStmt__ExprSwitchStmtAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSwitchStmtAccess().getExprSwitchStmtAssignment_0()); 
                    }
                    // InternalGo.g:3243:3: ( rule__SwitchStmt__ExprSwitchStmtAssignment_0 )
                    // InternalGo.g:3243:4: rule__SwitchStmt__ExprSwitchStmtAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SwitchStmt__ExprSwitchStmtAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSwitchStmtAccess().getExprSwitchStmtAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3247:2: ( ( rule__SwitchStmt__TypeSwitchStmtAssignment_1 ) )
                    {
                    // InternalGo.g:3247:2: ( ( rule__SwitchStmt__TypeSwitchStmtAssignment_1 ) )
                    // InternalGo.g:3248:3: ( rule__SwitchStmt__TypeSwitchStmtAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSwitchStmtAccess().getTypeSwitchStmtAssignment_1()); 
                    }
                    // InternalGo.g:3249:3: ( rule__SwitchStmt__TypeSwitchStmtAssignment_1 )
                    // InternalGo.g:3249:4: rule__SwitchStmt__TypeSwitchStmtAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SwitchStmt__TypeSwitchStmtAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSwitchStmtAccess().getTypeSwitchStmtAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchStmt__Alternatives"


    // $ANTLR start "rule__ExprSwitchCase__Alternatives"
    // InternalGo.g:3257:1: rule__ExprSwitchCase__Alternatives : ( ( ( rule__ExprSwitchCase__Group_0__0 ) ) | ( 'default' ) );
    public final void rule__ExprSwitchCase__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3261:1: ( ( ( rule__ExprSwitchCase__Group_0__0 ) ) | ( 'default' ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==85) ) {
                alt24=1;
            }
            else if ( (LA24_0==59) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalGo.g:3262:2: ( ( rule__ExprSwitchCase__Group_0__0 ) )
                    {
                    // InternalGo.g:3262:2: ( ( rule__ExprSwitchCase__Group_0__0 ) )
                    // InternalGo.g:3263:3: ( rule__ExprSwitchCase__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExprSwitchCaseAccess().getGroup_0()); 
                    }
                    // InternalGo.g:3264:3: ( rule__ExprSwitchCase__Group_0__0 )
                    // InternalGo.g:3264:4: rule__ExprSwitchCase__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExprSwitchCase__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExprSwitchCaseAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3268:2: ( 'default' )
                    {
                    // InternalGo.g:3268:2: ( 'default' )
                    // InternalGo.g:3269:3: 'default'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExprSwitchCaseAccess().getDefaultKeyword_1()); 
                    }
                    match(input,59,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExprSwitchCaseAccess().getDefaultKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchCase__Alternatives"


    // $ANTLR start "rule__TypeSwitchCase__Alternatives"
    // InternalGo.g:3278:1: rule__TypeSwitchCase__Alternatives : ( ( ( rule__TypeSwitchCase__Group_0__0 ) ) | ( 'default' ) );
    public final void rule__TypeSwitchCase__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3282:1: ( ( ( rule__TypeSwitchCase__Group_0__0 ) ) | ( 'default' ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==85) ) {
                alt25=1;
            }
            else if ( (LA25_0==59) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalGo.g:3283:2: ( ( rule__TypeSwitchCase__Group_0__0 ) )
                    {
                    // InternalGo.g:3283:2: ( ( rule__TypeSwitchCase__Group_0__0 ) )
                    // InternalGo.g:3284:3: ( rule__TypeSwitchCase__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeSwitchCaseAccess().getGroup_0()); 
                    }
                    // InternalGo.g:3285:3: ( rule__TypeSwitchCase__Group_0__0 )
                    // InternalGo.g:3285:4: rule__TypeSwitchCase__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TypeSwitchCase__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeSwitchCaseAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3289:2: ( 'default' )
                    {
                    // InternalGo.g:3289:2: ( 'default' )
                    // InternalGo.g:3290:3: 'default'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeSwitchCaseAccess().getDefaultKeyword_1()); 
                    }
                    match(input,59,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeSwitchCaseAccess().getDefaultKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchCase__Alternatives"


    // $ANTLR start "rule__CommCase__Alternatives"
    // InternalGo.g:3299:1: rule__CommCase__Alternatives : ( ( ( rule__CommCase__Group_0__0 ) ) | ( 'default' ) );
    public final void rule__CommCase__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3303:1: ( ( ( rule__CommCase__Group_0__0 ) ) | ( 'default' ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==85) ) {
                alt26=1;
            }
            else if ( (LA26_0==59) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalGo.g:3304:2: ( ( rule__CommCase__Group_0__0 ) )
                    {
                    // InternalGo.g:3304:2: ( ( rule__CommCase__Group_0__0 ) )
                    // InternalGo.g:3305:3: ( rule__CommCase__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCommCaseAccess().getGroup_0()); 
                    }
                    // InternalGo.g:3306:3: ( rule__CommCase__Group_0__0 )
                    // InternalGo.g:3306:4: rule__CommCase__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__CommCase__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCommCaseAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3310:2: ( 'default' )
                    {
                    // InternalGo.g:3310:2: ( 'default' )
                    // InternalGo.g:3311:3: 'default'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCommCaseAccess().getDefaultKeyword_1()); 
                    }
                    match(input,59,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCommCaseAccess().getDefaultKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommCase__Alternatives"


    // $ANTLR start "rule__CommCase__Alternatives_0_1"
    // InternalGo.g:3320:1: rule__CommCase__Alternatives_0_1 : ( ( ( rule__CommCase__SendStmtAssignment_0_1_0 ) ) | ( ( rule__CommCase__RecvStmtAssignment_0_1_1 ) ) );
    public final void rule__CommCase__Alternatives_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3324:1: ( ( ( rule__CommCase__SendStmtAssignment_0_1_0 ) ) | ( ( rule__CommCase__RecvStmtAssignment_0_1_1 ) ) )
            int alt27=2;
            alt27 = dfa27.predict(input);
            switch (alt27) {
                case 1 :
                    // InternalGo.g:3325:2: ( ( rule__CommCase__SendStmtAssignment_0_1_0 ) )
                    {
                    // InternalGo.g:3325:2: ( ( rule__CommCase__SendStmtAssignment_0_1_0 ) )
                    // InternalGo.g:3326:3: ( rule__CommCase__SendStmtAssignment_0_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCommCaseAccess().getSendStmtAssignment_0_1_0()); 
                    }
                    // InternalGo.g:3327:3: ( rule__CommCase__SendStmtAssignment_0_1_0 )
                    // InternalGo.g:3327:4: rule__CommCase__SendStmtAssignment_0_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__CommCase__SendStmtAssignment_0_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCommCaseAccess().getSendStmtAssignment_0_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3331:2: ( ( rule__CommCase__RecvStmtAssignment_0_1_1 ) )
                    {
                    // InternalGo.g:3331:2: ( ( rule__CommCase__RecvStmtAssignment_0_1_1 ) )
                    // InternalGo.g:3332:3: ( rule__CommCase__RecvStmtAssignment_0_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCommCaseAccess().getRecvStmtAssignment_0_1_1()); 
                    }
                    // InternalGo.g:3333:3: ( rule__CommCase__RecvStmtAssignment_0_1_1 )
                    // InternalGo.g:3333:4: rule__CommCase__RecvStmtAssignment_0_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__CommCase__RecvStmtAssignment_0_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCommCaseAccess().getRecvStmtAssignment_0_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommCase__Alternatives_0_1"


    // $ANTLR start "rule__RecvStmt__Alternatives_0"
    // InternalGo.g:3341:1: rule__RecvStmt__Alternatives_0 : ( ( ( rule__RecvStmt__Group_0_0__0 ) ) | ( ( rule__RecvStmt__Group_0_1__0 ) ) );
    public final void rule__RecvStmt__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3345:1: ( ( ( rule__RecvStmt__Group_0_0__0 ) ) | ( ( rule__RecvStmt__Group_0_1__0 ) ) )
            int alt28=2;
            alt28 = dfa28.predict(input);
            switch (alt28) {
                case 1 :
                    // InternalGo.g:3346:2: ( ( rule__RecvStmt__Group_0_0__0 ) )
                    {
                    // InternalGo.g:3346:2: ( ( rule__RecvStmt__Group_0_0__0 ) )
                    // InternalGo.g:3347:3: ( rule__RecvStmt__Group_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRecvStmtAccess().getGroup_0_0()); 
                    }
                    // InternalGo.g:3348:3: ( rule__RecvStmt__Group_0_0__0 )
                    // InternalGo.g:3348:4: rule__RecvStmt__Group_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RecvStmt__Group_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRecvStmtAccess().getGroup_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3352:2: ( ( rule__RecvStmt__Group_0_1__0 ) )
                    {
                    // InternalGo.g:3352:2: ( ( rule__RecvStmt__Group_0_1__0 ) )
                    // InternalGo.g:3353:3: ( rule__RecvStmt__Group_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRecvStmtAccess().getGroup_0_1()); 
                    }
                    // InternalGo.g:3354:3: ( rule__RecvStmt__Group_0_1__0 )
                    // InternalGo.g:3354:4: rule__RecvStmt__Group_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RecvStmt__Group_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRecvStmtAccess().getGroup_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RecvStmt__Alternatives_0"


    // $ANTLR start "rule__ForStmt__Alternatives_1"
    // InternalGo.g:3362:1: rule__ForStmt__Alternatives_1 : ( ( ( rule__ForStmt__ExpressionAssignment_1_0 ) ) | ( ( rule__ForStmt__ForClauseAssignment_1_1 ) ) | ( ( rule__ForStmt__RangeClauseAssignment_1_2 ) ) );
    public final void rule__ForStmt__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3366:1: ( ( ( rule__ForStmt__ExpressionAssignment_1_0 ) ) | ( ( rule__ForStmt__ForClauseAssignment_1_1 ) ) | ( ( rule__ForStmt__RangeClauseAssignment_1_2 ) ) )
            int alt29=3;
            alt29 = dfa29.predict(input);
            switch (alt29) {
                case 1 :
                    // InternalGo.g:3367:2: ( ( rule__ForStmt__ExpressionAssignment_1_0 ) )
                    {
                    // InternalGo.g:3367:2: ( ( rule__ForStmt__ExpressionAssignment_1_0 ) )
                    // InternalGo.g:3368:3: ( rule__ForStmt__ExpressionAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getForStmtAccess().getExpressionAssignment_1_0()); 
                    }
                    // InternalGo.g:3369:3: ( rule__ForStmt__ExpressionAssignment_1_0 )
                    // InternalGo.g:3369:4: rule__ForStmt__ExpressionAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ForStmt__ExpressionAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getForStmtAccess().getExpressionAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3373:2: ( ( rule__ForStmt__ForClauseAssignment_1_1 ) )
                    {
                    // InternalGo.g:3373:2: ( ( rule__ForStmt__ForClauseAssignment_1_1 ) )
                    // InternalGo.g:3374:3: ( rule__ForStmt__ForClauseAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getForStmtAccess().getForClauseAssignment_1_1()); 
                    }
                    // InternalGo.g:3375:3: ( rule__ForStmt__ForClauseAssignment_1_1 )
                    // InternalGo.g:3375:4: rule__ForStmt__ForClauseAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ForStmt__ForClauseAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getForStmtAccess().getForClauseAssignment_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3379:2: ( ( rule__ForStmt__RangeClauseAssignment_1_2 ) )
                    {
                    // InternalGo.g:3379:2: ( ( rule__ForStmt__RangeClauseAssignment_1_2 ) )
                    // InternalGo.g:3380:3: ( rule__ForStmt__RangeClauseAssignment_1_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getForStmtAccess().getRangeClauseAssignment_1_2()); 
                    }
                    // InternalGo.g:3381:3: ( rule__ForStmt__RangeClauseAssignment_1_2 )
                    // InternalGo.g:3381:4: rule__ForStmt__RangeClauseAssignment_1_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ForStmt__RangeClauseAssignment_1_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getForStmtAccess().getRangeClauseAssignment_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStmt__Alternatives_1"


    // $ANTLR start "rule__RangeClause__Alternatives_0"
    // InternalGo.g:3389:1: rule__RangeClause__Alternatives_0 : ( ( ( rule__RangeClause__Group_0_0__0 ) ) | ( ( rule__RangeClause__Group_0_1__0 ) ) );
    public final void rule__RangeClause__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3393:1: ( ( ( rule__RangeClause__Group_0_0__0 ) ) | ( ( rule__RangeClause__Group_0_1__0 ) ) )
            int alt30=2;
            alt30 = dfa30.predict(input);
            switch (alt30) {
                case 1 :
                    // InternalGo.g:3394:2: ( ( rule__RangeClause__Group_0_0__0 ) )
                    {
                    // InternalGo.g:3394:2: ( ( rule__RangeClause__Group_0_0__0 ) )
                    // InternalGo.g:3395:3: ( rule__RangeClause__Group_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRangeClauseAccess().getGroup_0_0()); 
                    }
                    // InternalGo.g:3396:3: ( rule__RangeClause__Group_0_0__0 )
                    // InternalGo.g:3396:4: rule__RangeClause__Group_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RangeClause__Group_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRangeClauseAccess().getGroup_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3400:2: ( ( rule__RangeClause__Group_0_1__0 ) )
                    {
                    // InternalGo.g:3400:2: ( ( rule__RangeClause__Group_0_1__0 ) )
                    // InternalGo.g:3401:3: ( rule__RangeClause__Group_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRangeClauseAccess().getGroup_0_1()); 
                    }
                    // InternalGo.g:3402:3: ( rule__RangeClause__Group_0_1__0 )
                    // InternalGo.g:3402:4: rule__RangeClause__Group_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RangeClause__Group_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRangeClauseAccess().getGroup_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeClause__Alternatives_0"


    // $ANTLR start "rule__Type__Alternatives"
    // InternalGo.g:3410:1: rule__Type__Alternatives : ( ( ( rule__Type__TypeNameAssignment_0 ) ) | ( ( rule__Type__TypeLitAssignment_1 ) ) | ( ( rule__Type__Group_2__0 ) ) );
    public final void rule__Type__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3414:1: ( ( ( rule__Type__TypeNameAssignment_0 ) ) | ( ( rule__Type__TypeLitAssignment_1 ) ) | ( ( rule__Type__Group_2__0 ) ) )
            int alt31=3;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                alt31=1;
                }
                break;
            case 52:
            case 60:
            case 62:
            case 71:
            case 90:
            case 92:
            case 93:
            case 95:
                {
                alt31=2;
                }
                break;
            case 65:
                {
                alt31=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }

            switch (alt31) {
                case 1 :
                    // InternalGo.g:3415:2: ( ( rule__Type__TypeNameAssignment_0 ) )
                    {
                    // InternalGo.g:3415:2: ( ( rule__Type__TypeNameAssignment_0 ) )
                    // InternalGo.g:3416:3: ( rule__Type__TypeNameAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeAccess().getTypeNameAssignment_0()); 
                    }
                    // InternalGo.g:3417:3: ( rule__Type__TypeNameAssignment_0 )
                    // InternalGo.g:3417:4: rule__Type__TypeNameAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Type__TypeNameAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeAccess().getTypeNameAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3421:2: ( ( rule__Type__TypeLitAssignment_1 ) )
                    {
                    // InternalGo.g:3421:2: ( ( rule__Type__TypeLitAssignment_1 ) )
                    // InternalGo.g:3422:3: ( rule__Type__TypeLitAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeAccess().getTypeLitAssignment_1()); 
                    }
                    // InternalGo.g:3423:3: ( rule__Type__TypeLitAssignment_1 )
                    // InternalGo.g:3423:4: rule__Type__TypeLitAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Type__TypeLitAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeAccess().getTypeLitAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3427:2: ( ( rule__Type__Group_2__0 ) )
                    {
                    // InternalGo.g:3427:2: ( ( rule__Type__Group_2__0 ) )
                    // InternalGo.g:3428:3: ( rule__Type__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeAccess().getGroup_2()); 
                    }
                    // InternalGo.g:3429:3: ( rule__Type__Group_2__0 )
                    // InternalGo.g:3429:4: rule__Type__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Type__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type__Alternatives"


    // $ANTLR start "rule__TypeName__Alternatives"
    // InternalGo.g:3437:1: rule__TypeName__Alternatives : ( ( RULE_IDENTIFIER ) | ( ( rule__TypeName__QualifiedIdentAssignment_1 ) ) );
    public final void rule__TypeName__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3441:1: ( ( RULE_IDENTIFIER ) | ( ( rule__TypeName__QualifiedIdentAssignment_1 ) ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==RULE_IDENTIFIER) ) {
                int LA32_1 = input.LA(2);

                if ( (LA32_1==EOF||(LA32_1>=RULE_STRING_LIT && LA32_1<=RULE_BINARY_OP)||LA32_1==44||(LA32_1>=46 && LA32_1<=62)||(LA32_1>=65 && LA32_1<=74)||(LA32_1>=76 && LA32_1<=82)||(LA32_1>=84 && LA32_1<=87)||(LA32_1>=89 && LA32_1<=95)) ) {
                    alt32=1;
                }
                else if ( (LA32_1==45) ) {
                    int LA32_3 = input.LA(3);

                    if ( (LA32_3==65) ) {
                        alt32=1;
                    }
                    else if ( (LA32_3==RULE_IDENTIFIER) ) {
                        int LA32_4 = input.LA(4);

                        if ( (synpred62_InternalGo()) ) {
                            alt32=1;
                        }
                        else if ( (true) ) {
                            alt32=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 32, 4, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 32, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 32, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalGo.g:3442:2: ( RULE_IDENTIFIER )
                    {
                    // InternalGo.g:3442:2: ( RULE_IDENTIFIER )
                    // InternalGo.g:3443:3: RULE_IDENTIFIER
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeNameAccess().getIDENTIFIERTerminalRuleCall_0()); 
                    }
                    match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeNameAccess().getIDENTIFIERTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3448:2: ( ( rule__TypeName__QualifiedIdentAssignment_1 ) )
                    {
                    // InternalGo.g:3448:2: ( ( rule__TypeName__QualifiedIdentAssignment_1 ) )
                    // InternalGo.g:3449:3: ( rule__TypeName__QualifiedIdentAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeNameAccess().getQualifiedIdentAssignment_1()); 
                    }
                    // InternalGo.g:3450:3: ( rule__TypeName__QualifiedIdentAssignment_1 )
                    // InternalGo.g:3450:4: rule__TypeName__QualifiedIdentAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TypeName__QualifiedIdentAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeNameAccess().getQualifiedIdentAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeName__Alternatives"


    // $ANTLR start "rule__TypeLit__Alternatives"
    // InternalGo.g:3458:1: rule__TypeLit__Alternatives : ( ( ( rule__TypeLit__ArrayTypeAssignment_0 ) ) | ( ( rule__TypeLit__StructTypeAssignment_1 ) ) | ( ( rule__TypeLit__PointerTypeAssignment_2 ) ) | ( ( rule__TypeLit__FunctionTypeAssignment_3 ) ) | ( ( rule__TypeLit__InterfaceTypeAssignment_4 ) ) | ( ( rule__TypeLit__SliceTypeAssignment_5 ) ) | ( ( rule__TypeLit__MapTypeAssignment_6 ) ) | ( ( rule__TypeLit__ChannelTypeAssignment_7 ) ) );
    public final void rule__TypeLit__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3462:1: ( ( ( rule__TypeLit__ArrayTypeAssignment_0 ) ) | ( ( rule__TypeLit__StructTypeAssignment_1 ) ) | ( ( rule__TypeLit__PointerTypeAssignment_2 ) ) | ( ( rule__TypeLit__FunctionTypeAssignment_3 ) ) | ( ( rule__TypeLit__InterfaceTypeAssignment_4 ) ) | ( ( rule__TypeLit__SliceTypeAssignment_5 ) ) | ( ( rule__TypeLit__MapTypeAssignment_6 ) ) | ( ( rule__TypeLit__ChannelTypeAssignment_7 ) ) )
            int alt33=8;
            alt33 = dfa33.predict(input);
            switch (alt33) {
                case 1 :
                    // InternalGo.g:3463:2: ( ( rule__TypeLit__ArrayTypeAssignment_0 ) )
                    {
                    // InternalGo.g:3463:2: ( ( rule__TypeLit__ArrayTypeAssignment_0 ) )
                    // InternalGo.g:3464:3: ( rule__TypeLit__ArrayTypeAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeLitAccess().getArrayTypeAssignment_0()); 
                    }
                    // InternalGo.g:3465:3: ( rule__TypeLit__ArrayTypeAssignment_0 )
                    // InternalGo.g:3465:4: rule__TypeLit__ArrayTypeAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TypeLit__ArrayTypeAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeLitAccess().getArrayTypeAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3469:2: ( ( rule__TypeLit__StructTypeAssignment_1 ) )
                    {
                    // InternalGo.g:3469:2: ( ( rule__TypeLit__StructTypeAssignment_1 ) )
                    // InternalGo.g:3470:3: ( rule__TypeLit__StructTypeAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeLitAccess().getStructTypeAssignment_1()); 
                    }
                    // InternalGo.g:3471:3: ( rule__TypeLit__StructTypeAssignment_1 )
                    // InternalGo.g:3471:4: rule__TypeLit__StructTypeAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TypeLit__StructTypeAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeLitAccess().getStructTypeAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3475:2: ( ( rule__TypeLit__PointerTypeAssignment_2 ) )
                    {
                    // InternalGo.g:3475:2: ( ( rule__TypeLit__PointerTypeAssignment_2 ) )
                    // InternalGo.g:3476:3: ( rule__TypeLit__PointerTypeAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeLitAccess().getPointerTypeAssignment_2()); 
                    }
                    // InternalGo.g:3477:3: ( rule__TypeLit__PointerTypeAssignment_2 )
                    // InternalGo.g:3477:4: rule__TypeLit__PointerTypeAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__TypeLit__PointerTypeAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeLitAccess().getPointerTypeAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:3481:2: ( ( rule__TypeLit__FunctionTypeAssignment_3 ) )
                    {
                    // InternalGo.g:3481:2: ( ( rule__TypeLit__FunctionTypeAssignment_3 ) )
                    // InternalGo.g:3482:3: ( rule__TypeLit__FunctionTypeAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeLitAccess().getFunctionTypeAssignment_3()); 
                    }
                    // InternalGo.g:3483:3: ( rule__TypeLit__FunctionTypeAssignment_3 )
                    // InternalGo.g:3483:4: rule__TypeLit__FunctionTypeAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__TypeLit__FunctionTypeAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeLitAccess().getFunctionTypeAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:3487:2: ( ( rule__TypeLit__InterfaceTypeAssignment_4 ) )
                    {
                    // InternalGo.g:3487:2: ( ( rule__TypeLit__InterfaceTypeAssignment_4 ) )
                    // InternalGo.g:3488:3: ( rule__TypeLit__InterfaceTypeAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeLitAccess().getInterfaceTypeAssignment_4()); 
                    }
                    // InternalGo.g:3489:3: ( rule__TypeLit__InterfaceTypeAssignment_4 )
                    // InternalGo.g:3489:4: rule__TypeLit__InterfaceTypeAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__TypeLit__InterfaceTypeAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeLitAccess().getInterfaceTypeAssignment_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:3493:2: ( ( rule__TypeLit__SliceTypeAssignment_5 ) )
                    {
                    // InternalGo.g:3493:2: ( ( rule__TypeLit__SliceTypeAssignment_5 ) )
                    // InternalGo.g:3494:3: ( rule__TypeLit__SliceTypeAssignment_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeLitAccess().getSliceTypeAssignment_5()); 
                    }
                    // InternalGo.g:3495:3: ( rule__TypeLit__SliceTypeAssignment_5 )
                    // InternalGo.g:3495:4: rule__TypeLit__SliceTypeAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__TypeLit__SliceTypeAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeLitAccess().getSliceTypeAssignment_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalGo.g:3499:2: ( ( rule__TypeLit__MapTypeAssignment_6 ) )
                    {
                    // InternalGo.g:3499:2: ( ( rule__TypeLit__MapTypeAssignment_6 ) )
                    // InternalGo.g:3500:3: ( rule__TypeLit__MapTypeAssignment_6 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeLitAccess().getMapTypeAssignment_6()); 
                    }
                    // InternalGo.g:3501:3: ( rule__TypeLit__MapTypeAssignment_6 )
                    // InternalGo.g:3501:4: rule__TypeLit__MapTypeAssignment_6
                    {
                    pushFollow(FOLLOW_2);
                    rule__TypeLit__MapTypeAssignment_6();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeLitAccess().getMapTypeAssignment_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalGo.g:3505:2: ( ( rule__TypeLit__ChannelTypeAssignment_7 ) )
                    {
                    // InternalGo.g:3505:2: ( ( rule__TypeLit__ChannelTypeAssignment_7 ) )
                    // InternalGo.g:3506:3: ( rule__TypeLit__ChannelTypeAssignment_7 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeLitAccess().getChannelTypeAssignment_7()); 
                    }
                    // InternalGo.g:3507:3: ( rule__TypeLit__ChannelTypeAssignment_7 )
                    // InternalGo.g:3507:4: rule__TypeLit__ChannelTypeAssignment_7
                    {
                    pushFollow(FOLLOW_2);
                    rule__TypeLit__ChannelTypeAssignment_7();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeLitAccess().getChannelTypeAssignment_7()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeLit__Alternatives"


    // $ANTLR start "rule__ChannelType__Alternatives_0"
    // InternalGo.g:3515:1: rule__ChannelType__Alternatives_0 : ( ( 'chan' ) | ( ( rule__ChannelType__Group_0_1__0 ) ) | ( ( rule__ChannelType__Group_0_2__0 ) ) );
    public final void rule__ChannelType__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3519:1: ( ( 'chan' ) | ( ( rule__ChannelType__Group_0_1__0 ) ) | ( ( rule__ChannelType__Group_0_2__0 ) ) )
            int alt34=3;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==60) ) {
                int LA34_1 = input.LA(2);

                if ( (synpred70_InternalGo()) ) {
                    alt34=1;
                }
                else if ( (synpred71_InternalGo()) ) {
                    alt34=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA34_0==62) ) {
                alt34=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalGo.g:3520:2: ( 'chan' )
                    {
                    // InternalGo.g:3520:2: ( 'chan' )
                    // InternalGo.g:3521:3: 'chan'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getChannelTypeAccess().getChanKeyword_0_0()); 
                    }
                    match(input,60,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getChannelTypeAccess().getChanKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3526:2: ( ( rule__ChannelType__Group_0_1__0 ) )
                    {
                    // InternalGo.g:3526:2: ( ( rule__ChannelType__Group_0_1__0 ) )
                    // InternalGo.g:3527:3: ( rule__ChannelType__Group_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getChannelTypeAccess().getGroup_0_1()); 
                    }
                    // InternalGo.g:3528:3: ( rule__ChannelType__Group_0_1__0 )
                    // InternalGo.g:3528:4: rule__ChannelType__Group_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ChannelType__Group_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getChannelTypeAccess().getGroup_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3532:2: ( ( rule__ChannelType__Group_0_2__0 ) )
                    {
                    // InternalGo.g:3532:2: ( ( rule__ChannelType__Group_0_2__0 ) )
                    // InternalGo.g:3533:3: ( rule__ChannelType__Group_0_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getChannelTypeAccess().getGroup_0_2()); 
                    }
                    // InternalGo.g:3534:3: ( rule__ChannelType__Group_0_2__0 )
                    // InternalGo.g:3534:4: rule__ChannelType__Group_0_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ChannelType__Group_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getChannelTypeAccess().getGroup_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChannelType__Alternatives_0"


    // $ANTLR start "rule__MethodSpec__Alternatives"
    // InternalGo.g:3542:1: rule__MethodSpec__Alternatives : ( ( ( rule__MethodSpec__Group_0__0 ) ) | ( ( rule__MethodSpec__TypeNameAssignment_1 ) ) );
    public final void rule__MethodSpec__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3546:1: ( ( ( rule__MethodSpec__Group_0__0 ) ) | ( ( rule__MethodSpec__TypeNameAssignment_1 ) ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==RULE_IDENTIFIER) ) {
                int LA35_1 = input.LA(2);

                if ( (LA35_1==EOF||LA35_1==RULE_IDENTIFIER||LA35_1==45||LA35_1==74) ) {
                    alt35=2;
                }
                else if ( (LA35_1==65) ) {
                    alt35=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 35, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalGo.g:3547:2: ( ( rule__MethodSpec__Group_0__0 ) )
                    {
                    // InternalGo.g:3547:2: ( ( rule__MethodSpec__Group_0__0 ) )
                    // InternalGo.g:3548:3: ( rule__MethodSpec__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMethodSpecAccess().getGroup_0()); 
                    }
                    // InternalGo.g:3549:3: ( rule__MethodSpec__Group_0__0 )
                    // InternalGo.g:3549:4: rule__MethodSpec__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__MethodSpec__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMethodSpecAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3553:2: ( ( rule__MethodSpec__TypeNameAssignment_1 ) )
                    {
                    // InternalGo.g:3553:2: ( ( rule__MethodSpec__TypeNameAssignment_1 ) )
                    // InternalGo.g:3554:3: ( rule__MethodSpec__TypeNameAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMethodSpecAccess().getTypeNameAssignment_1()); 
                    }
                    // InternalGo.g:3555:3: ( rule__MethodSpec__TypeNameAssignment_1 )
                    // InternalGo.g:3555:4: rule__MethodSpec__TypeNameAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__MethodSpec__TypeNameAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMethodSpecAccess().getTypeNameAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodSpec__Alternatives"


    // $ANTLR start "rule__Result__Alternatives"
    // InternalGo.g:3563:1: rule__Result__Alternatives : ( ( ( rule__Result__ParametersAssignment_0 ) ) | ( ( rule__Result__TypeAssignment_1 ) ) );
    public final void rule__Result__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3567:1: ( ( ( rule__Result__ParametersAssignment_0 ) ) | ( ( rule__Result__TypeAssignment_1 ) ) )
            int alt36=2;
            alt36 = dfa36.predict(input);
            switch (alt36) {
                case 1 :
                    // InternalGo.g:3568:2: ( ( rule__Result__ParametersAssignment_0 ) )
                    {
                    // InternalGo.g:3568:2: ( ( rule__Result__ParametersAssignment_0 ) )
                    // InternalGo.g:3569:3: ( rule__Result__ParametersAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getResultAccess().getParametersAssignment_0()); 
                    }
                    // InternalGo.g:3570:3: ( rule__Result__ParametersAssignment_0 )
                    // InternalGo.g:3570:4: rule__Result__ParametersAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Result__ParametersAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getResultAccess().getParametersAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3574:2: ( ( rule__Result__TypeAssignment_1 ) )
                    {
                    // InternalGo.g:3574:2: ( ( rule__Result__TypeAssignment_1 ) )
                    // InternalGo.g:3575:3: ( rule__Result__TypeAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getResultAccess().getTypeAssignment_1()); 
                    }
                    // InternalGo.g:3576:3: ( rule__Result__TypeAssignment_1 )
                    // InternalGo.g:3576:4: rule__Result__TypeAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Result__TypeAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getResultAccess().getTypeAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Result__Alternatives"


    // $ANTLR start "rule__Operand__Alternatives"
    // InternalGo.g:3584:1: rule__Operand__Alternatives : ( ( ( rule__Operand__LiteralAssignment_0 ) ) | ( ( rule__Operand__OperandNameAssignment_1 ) ) | ( ( rule__Operand__MethodExprAssignment_2 ) ) | ( ( rule__Operand__Group_3__0 ) ) );
    public final void rule__Operand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3588:1: ( ( ( rule__Operand__LiteralAssignment_0 ) ) | ( ( rule__Operand__OperandNameAssignment_1 ) ) | ( ( rule__Operand__MethodExprAssignment_2 ) ) | ( ( rule__Operand__Group_3__0 ) ) )
            int alt37=4;
            alt37 = dfa37.predict(input);
            switch (alt37) {
                case 1 :
                    // InternalGo.g:3589:2: ( ( rule__Operand__LiteralAssignment_0 ) )
                    {
                    // InternalGo.g:3589:2: ( ( rule__Operand__LiteralAssignment_0 ) )
                    // InternalGo.g:3590:3: ( rule__Operand__LiteralAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getLiteralAssignment_0()); 
                    }
                    // InternalGo.g:3591:3: ( rule__Operand__LiteralAssignment_0 )
                    // InternalGo.g:3591:4: rule__Operand__LiteralAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__LiteralAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getLiteralAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3595:2: ( ( rule__Operand__OperandNameAssignment_1 ) )
                    {
                    // InternalGo.g:3595:2: ( ( rule__Operand__OperandNameAssignment_1 ) )
                    // InternalGo.g:3596:3: ( rule__Operand__OperandNameAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getOperandNameAssignment_1()); 
                    }
                    // InternalGo.g:3597:3: ( rule__Operand__OperandNameAssignment_1 )
                    // InternalGo.g:3597:4: rule__Operand__OperandNameAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__OperandNameAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getOperandNameAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3601:2: ( ( rule__Operand__MethodExprAssignment_2 ) )
                    {
                    // InternalGo.g:3601:2: ( ( rule__Operand__MethodExprAssignment_2 ) )
                    // InternalGo.g:3602:3: ( rule__Operand__MethodExprAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getMethodExprAssignment_2()); 
                    }
                    // InternalGo.g:3603:3: ( rule__Operand__MethodExprAssignment_2 )
                    // InternalGo.g:3603:4: rule__Operand__MethodExprAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__MethodExprAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getMethodExprAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:3607:2: ( ( rule__Operand__Group_3__0 ) )
                    {
                    // InternalGo.g:3607:2: ( ( rule__Operand__Group_3__0 ) )
                    // InternalGo.g:3608:3: ( rule__Operand__Group_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_3()); 
                    }
                    // InternalGo.g:3609:3: ( rule__Operand__Group_3__0 )
                    // InternalGo.g:3609:4: rule__Operand__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Alternatives"


    // $ANTLR start "rule__Literal__Alternatives"
    // InternalGo.g:3617:1: rule__Literal__Alternatives : ( ( ( rule__Literal__BasicLitAssignment_0 ) ) | ( ( rule__Literal__CompositeLitAssignment_1 ) ) | ( ( rule__Literal__FunctionLitAssignment_2 ) ) );
    public final void rule__Literal__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3621:1: ( ( ( rule__Literal__BasicLitAssignment_0 ) ) | ( ( rule__Literal__CompositeLitAssignment_1 ) ) | ( ( rule__Literal__FunctionLitAssignment_2 ) ) )
            int alt38=3;
            switch ( input.LA(1) ) {
            case RULE_STRING_LIT:
            case RULE_INT_LIT:
            case RULE_FLOAT_LIT:
            case RULE_IMAGINARY_LIT:
            case RULE_RUNE_LIT:
                {
                alt38=1;
                }
                break;
            case RULE_IDENTIFIER:
            case 90:
            case 93:
            case 95:
                {
                alt38=2;
                }
                break;
            case 71:
                {
                alt38=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }

            switch (alt38) {
                case 1 :
                    // InternalGo.g:3622:2: ( ( rule__Literal__BasicLitAssignment_0 ) )
                    {
                    // InternalGo.g:3622:2: ( ( rule__Literal__BasicLitAssignment_0 ) )
                    // InternalGo.g:3623:3: ( rule__Literal__BasicLitAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getBasicLitAssignment_0()); 
                    }
                    // InternalGo.g:3624:3: ( rule__Literal__BasicLitAssignment_0 )
                    // InternalGo.g:3624:4: rule__Literal__BasicLitAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__BasicLitAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getBasicLitAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3628:2: ( ( rule__Literal__CompositeLitAssignment_1 ) )
                    {
                    // InternalGo.g:3628:2: ( ( rule__Literal__CompositeLitAssignment_1 ) )
                    // InternalGo.g:3629:3: ( rule__Literal__CompositeLitAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getCompositeLitAssignment_1()); 
                    }
                    // InternalGo.g:3630:3: ( rule__Literal__CompositeLitAssignment_1 )
                    // InternalGo.g:3630:4: rule__Literal__CompositeLitAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__CompositeLitAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getCompositeLitAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3634:2: ( ( rule__Literal__FunctionLitAssignment_2 ) )
                    {
                    // InternalGo.g:3634:2: ( ( rule__Literal__FunctionLitAssignment_2 ) )
                    // InternalGo.g:3635:3: ( rule__Literal__FunctionLitAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getFunctionLitAssignment_2()); 
                    }
                    // InternalGo.g:3636:3: ( rule__Literal__FunctionLitAssignment_2 )
                    // InternalGo.g:3636:4: rule__Literal__FunctionLitAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Literal__FunctionLitAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getFunctionLitAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Alternatives"


    // $ANTLR start "rule__BasicLit__Alternatives"
    // InternalGo.g:3644:1: rule__BasicLit__Alternatives : ( ( RULE_INT_LIT ) | ( RULE_FLOAT_LIT ) | ( RULE_IMAGINARY_LIT ) | ( RULE_RUNE_LIT ) | ( RULE_STRING_LIT ) );
    public final void rule__BasicLit__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3648:1: ( ( RULE_INT_LIT ) | ( RULE_FLOAT_LIT ) | ( RULE_IMAGINARY_LIT ) | ( RULE_RUNE_LIT ) | ( RULE_STRING_LIT ) )
            int alt39=5;
            switch ( input.LA(1) ) {
            case RULE_INT_LIT:
                {
                alt39=1;
                }
                break;
            case RULE_FLOAT_LIT:
                {
                alt39=2;
                }
                break;
            case RULE_IMAGINARY_LIT:
                {
                alt39=3;
                }
                break;
            case RULE_RUNE_LIT:
                {
                alt39=4;
                }
                break;
            case RULE_STRING_LIT:
                {
                alt39=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }

            switch (alt39) {
                case 1 :
                    // InternalGo.g:3649:2: ( RULE_INT_LIT )
                    {
                    // InternalGo.g:3649:2: ( RULE_INT_LIT )
                    // InternalGo.g:3650:3: RULE_INT_LIT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBasicLitAccess().getINT_LITTerminalRuleCall_0()); 
                    }
                    match(input,RULE_INT_LIT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBasicLitAccess().getINT_LITTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3655:2: ( RULE_FLOAT_LIT )
                    {
                    // InternalGo.g:3655:2: ( RULE_FLOAT_LIT )
                    // InternalGo.g:3656:3: RULE_FLOAT_LIT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBasicLitAccess().getFLOAT_LITTerminalRuleCall_1()); 
                    }
                    match(input,RULE_FLOAT_LIT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBasicLitAccess().getFLOAT_LITTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3661:2: ( RULE_IMAGINARY_LIT )
                    {
                    // InternalGo.g:3661:2: ( RULE_IMAGINARY_LIT )
                    // InternalGo.g:3662:3: RULE_IMAGINARY_LIT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBasicLitAccess().getIMAGINARY_LITTerminalRuleCall_2()); 
                    }
                    match(input,RULE_IMAGINARY_LIT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBasicLitAccess().getIMAGINARY_LITTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:3667:2: ( RULE_RUNE_LIT )
                    {
                    // InternalGo.g:3667:2: ( RULE_RUNE_LIT )
                    // InternalGo.g:3668:3: RULE_RUNE_LIT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBasicLitAccess().getRUNE_LITTerminalRuleCall_3()); 
                    }
                    match(input,RULE_RUNE_LIT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBasicLitAccess().getRUNE_LITTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:3673:2: ( RULE_STRING_LIT )
                    {
                    // InternalGo.g:3673:2: ( RULE_STRING_LIT )
                    // InternalGo.g:3674:3: RULE_STRING_LIT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBasicLitAccess().getSTRING_LITTerminalRuleCall_4()); 
                    }
                    match(input,RULE_STRING_LIT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBasicLitAccess().getSTRING_LITTerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BasicLit__Alternatives"


    // $ANTLR start "rule__OperandName__Alternatives"
    // InternalGo.g:3683:1: rule__OperandName__Alternatives : ( ( RULE_IDENTIFIER ) | ( ( rule__OperandName__QualifiedIdentAssignment_1 ) ) );
    public final void rule__OperandName__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3687:1: ( ( RULE_IDENTIFIER ) | ( ( rule__OperandName__QualifiedIdentAssignment_1 ) ) )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==RULE_IDENTIFIER) ) {
                int LA40_1 = input.LA(2);

                if ( (LA40_1==EOF||(LA40_1>=RULE_STRING_LIT && LA40_1<=RULE_BINARY_OP)||LA40_1==44||(LA40_1>=46 && LA40_1<=62)||(LA40_1>=65 && LA40_1<=74)||(LA40_1>=76 && LA40_1<=82)||(LA40_1>=84 && LA40_1<=87)||(LA40_1>=89 && LA40_1<=95)) ) {
                    alt40=1;
                }
                else if ( (LA40_1==45) ) {
                    int LA40_3 = input.LA(3);

                    if ( (LA40_3==65) ) {
                        alt40=1;
                    }
                    else if ( (LA40_3==RULE_IDENTIFIER) ) {
                        int LA40_4 = input.LA(4);

                        if ( (synpred83_InternalGo()) ) {
                            alt40=1;
                        }
                        else if ( (true) ) {
                            alt40=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 40, 4, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 40, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalGo.g:3688:2: ( RULE_IDENTIFIER )
                    {
                    // InternalGo.g:3688:2: ( RULE_IDENTIFIER )
                    // InternalGo.g:3689:3: RULE_IDENTIFIER
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandNameAccess().getIDENTIFIERTerminalRuleCall_0()); 
                    }
                    match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandNameAccess().getIDENTIFIERTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3694:2: ( ( rule__OperandName__QualifiedIdentAssignment_1 ) )
                    {
                    // InternalGo.g:3694:2: ( ( rule__OperandName__QualifiedIdentAssignment_1 ) )
                    // InternalGo.g:3695:3: ( rule__OperandName__QualifiedIdentAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandNameAccess().getQualifiedIdentAssignment_1()); 
                    }
                    // InternalGo.g:3696:3: ( rule__OperandName__QualifiedIdentAssignment_1 )
                    // InternalGo.g:3696:4: rule__OperandName__QualifiedIdentAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandName__QualifiedIdentAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandNameAccess().getQualifiedIdentAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandName__Alternatives"


    // $ANTLR start "rule__LiteralType__Alternatives"
    // InternalGo.g:3704:1: rule__LiteralType__Alternatives : ( ( ( rule__LiteralType__StructTypeAssignment_0 ) ) | ( ( rule__LiteralType__ArrayTypeAssignment_1 ) ) | ( ( rule__LiteralType__Group_2__0 ) ) | ( ( rule__LiteralType__SliceTypeAssignment_3 ) ) | ( ( rule__LiteralType__MapTypeAssignment_4 ) ) | ( ( rule__LiteralType__TypeNameAssignment_5 ) ) );
    public final void rule__LiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3708:1: ( ( ( rule__LiteralType__StructTypeAssignment_0 ) ) | ( ( rule__LiteralType__ArrayTypeAssignment_1 ) ) | ( ( rule__LiteralType__Group_2__0 ) ) | ( ( rule__LiteralType__SliceTypeAssignment_3 ) ) | ( ( rule__LiteralType__MapTypeAssignment_4 ) ) | ( ( rule__LiteralType__TypeNameAssignment_5 ) ) )
            int alt41=6;
            switch ( input.LA(1) ) {
            case 95:
                {
                alt41=1;
                }
                break;
            case 90:
                {
                int LA41_2 = input.LA(2);

                if ( (synpred85_InternalGo()) ) {
                    alt41=2;
                }
                else if ( (synpred86_InternalGo()) ) {
                    alt41=3;
                }
                else if ( (synpred87_InternalGo()) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 2, input);

                    throw nvae;
                }
                }
                break;
            case 93:
                {
                alt41=5;
                }
                break;
            case RULE_IDENTIFIER:
                {
                alt41=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }

            switch (alt41) {
                case 1 :
                    // InternalGo.g:3709:2: ( ( rule__LiteralType__StructTypeAssignment_0 ) )
                    {
                    // InternalGo.g:3709:2: ( ( rule__LiteralType__StructTypeAssignment_0 ) )
                    // InternalGo.g:3710:3: ( rule__LiteralType__StructTypeAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralTypeAccess().getStructTypeAssignment_0()); 
                    }
                    // InternalGo.g:3711:3: ( rule__LiteralType__StructTypeAssignment_0 )
                    // InternalGo.g:3711:4: rule__LiteralType__StructTypeAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LiteralType__StructTypeAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralTypeAccess().getStructTypeAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3715:2: ( ( rule__LiteralType__ArrayTypeAssignment_1 ) )
                    {
                    // InternalGo.g:3715:2: ( ( rule__LiteralType__ArrayTypeAssignment_1 ) )
                    // InternalGo.g:3716:3: ( rule__LiteralType__ArrayTypeAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralTypeAccess().getArrayTypeAssignment_1()); 
                    }
                    // InternalGo.g:3717:3: ( rule__LiteralType__ArrayTypeAssignment_1 )
                    // InternalGo.g:3717:4: rule__LiteralType__ArrayTypeAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__LiteralType__ArrayTypeAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralTypeAccess().getArrayTypeAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3721:2: ( ( rule__LiteralType__Group_2__0 ) )
                    {
                    // InternalGo.g:3721:2: ( ( rule__LiteralType__Group_2__0 ) )
                    // InternalGo.g:3722:3: ( rule__LiteralType__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralTypeAccess().getGroup_2()); 
                    }
                    // InternalGo.g:3723:3: ( rule__LiteralType__Group_2__0 )
                    // InternalGo.g:3723:4: rule__LiteralType__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LiteralType__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralTypeAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:3727:2: ( ( rule__LiteralType__SliceTypeAssignment_3 ) )
                    {
                    // InternalGo.g:3727:2: ( ( rule__LiteralType__SliceTypeAssignment_3 ) )
                    // InternalGo.g:3728:3: ( rule__LiteralType__SliceTypeAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralTypeAccess().getSliceTypeAssignment_3()); 
                    }
                    // InternalGo.g:3729:3: ( rule__LiteralType__SliceTypeAssignment_3 )
                    // InternalGo.g:3729:4: rule__LiteralType__SliceTypeAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__LiteralType__SliceTypeAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralTypeAccess().getSliceTypeAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:3733:2: ( ( rule__LiteralType__MapTypeAssignment_4 ) )
                    {
                    // InternalGo.g:3733:2: ( ( rule__LiteralType__MapTypeAssignment_4 ) )
                    // InternalGo.g:3734:3: ( rule__LiteralType__MapTypeAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralTypeAccess().getMapTypeAssignment_4()); 
                    }
                    // InternalGo.g:3735:3: ( rule__LiteralType__MapTypeAssignment_4 )
                    // InternalGo.g:3735:4: rule__LiteralType__MapTypeAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__LiteralType__MapTypeAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralTypeAccess().getMapTypeAssignment_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:3739:2: ( ( rule__LiteralType__TypeNameAssignment_5 ) )
                    {
                    // InternalGo.g:3739:2: ( ( rule__LiteralType__TypeNameAssignment_5 ) )
                    // InternalGo.g:3740:3: ( rule__LiteralType__TypeNameAssignment_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralTypeAccess().getTypeNameAssignment_5()); 
                    }
                    // InternalGo.g:3741:3: ( rule__LiteralType__TypeNameAssignment_5 )
                    // InternalGo.g:3741:4: rule__LiteralType__TypeNameAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__LiteralType__TypeNameAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralTypeAccess().getTypeNameAssignment_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralType__Alternatives"


    // $ANTLR start "rule__Key__Alternatives"
    // InternalGo.g:3749:1: rule__Key__Alternatives : ( ( RULE_IDENTIFIER ) | ( ( rule__Key__ExpressionAssignment_1 ) ) | ( ( rule__Key__LiteralValueAssignment_2 ) ) );
    public final void rule__Key__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3753:1: ( ( RULE_IDENTIFIER ) | ( ( rule__Key__ExpressionAssignment_1 ) ) | ( ( rule__Key__LiteralValueAssignment_2 ) ) )
            int alt42=3;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                int LA42_1 = input.LA(2);

                if ( (synpred89_InternalGo()) ) {
                    alt42=1;
                }
                else if ( (synpred90_InternalGo()) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 1, input);

                    throw nvae;
                }
                }
                break;
            case EOF:
            case RULE_STRING_LIT:
            case RULE_INT_LIT:
            case RULE_FLOAT_LIT:
            case RULE_IMAGINARY_LIT:
            case RULE_RUNE_LIT:
            case RULE_BINARY_OP:
            case 45:
            case 48:
            case 49:
            case 51:
            case 52:
            case 57:
            case 60:
            case 61:
            case 62:
            case 65:
            case 71:
            case 76:
            case 90:
            case 92:
            case 93:
            case 95:
                {
                alt42=2;
                }
                break;
            case 73:
                {
                alt42=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }

            switch (alt42) {
                case 1 :
                    // InternalGo.g:3754:2: ( RULE_IDENTIFIER )
                    {
                    // InternalGo.g:3754:2: ( RULE_IDENTIFIER )
                    // InternalGo.g:3755:3: RULE_IDENTIFIER
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeyAccess().getIDENTIFIERTerminalRuleCall_0()); 
                    }
                    match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeyAccess().getIDENTIFIERTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3760:2: ( ( rule__Key__ExpressionAssignment_1 ) )
                    {
                    // InternalGo.g:3760:2: ( ( rule__Key__ExpressionAssignment_1 ) )
                    // InternalGo.g:3761:3: ( rule__Key__ExpressionAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeyAccess().getExpressionAssignment_1()); 
                    }
                    // InternalGo.g:3762:3: ( rule__Key__ExpressionAssignment_1 )
                    // InternalGo.g:3762:4: rule__Key__ExpressionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Key__ExpressionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeyAccess().getExpressionAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3766:2: ( ( rule__Key__LiteralValueAssignment_2 ) )
                    {
                    // InternalGo.g:3766:2: ( ( rule__Key__LiteralValueAssignment_2 ) )
                    // InternalGo.g:3767:3: ( rule__Key__LiteralValueAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getKeyAccess().getLiteralValueAssignment_2()); 
                    }
                    // InternalGo.g:3768:3: ( rule__Key__LiteralValueAssignment_2 )
                    // InternalGo.g:3768:4: rule__Key__LiteralValueAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Key__LiteralValueAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getKeyAccess().getLiteralValueAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Key__Alternatives"


    // $ANTLR start "rule__Element__Alternatives"
    // InternalGo.g:3776:1: rule__Element__Alternatives : ( ( ( rule__Element__ExpressionAssignment_0 ) ) | ( ( rule__Element__LiteralValueAssignment_1 ) ) );
    public final void rule__Element__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3780:1: ( ( ( rule__Element__ExpressionAssignment_0 ) ) | ( ( rule__Element__LiteralValueAssignment_1 ) ) )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==EOF||LA43_0==RULE_STRING_LIT||(LA43_0>=RULE_IDENTIFIER && LA43_0<=RULE_BINARY_OP)||LA43_0==45||(LA43_0>=48 && LA43_0<=49)||(LA43_0>=51 && LA43_0<=52)||LA43_0==57||(LA43_0>=60 && LA43_0<=62)||LA43_0==65||LA43_0==69||LA43_0==71||LA43_0==74||LA43_0==90||(LA43_0>=92 && LA43_0<=93)||LA43_0==95) ) {
                alt43=1;
            }
            else if ( (LA43_0==73) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalGo.g:3781:2: ( ( rule__Element__ExpressionAssignment_0 ) )
                    {
                    // InternalGo.g:3781:2: ( ( rule__Element__ExpressionAssignment_0 ) )
                    // InternalGo.g:3782:3: ( rule__Element__ExpressionAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getElementAccess().getExpressionAssignment_0()); 
                    }
                    // InternalGo.g:3783:3: ( rule__Element__ExpressionAssignment_0 )
                    // InternalGo.g:3783:4: rule__Element__ExpressionAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Element__ExpressionAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getElementAccess().getExpressionAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3787:2: ( ( rule__Element__LiteralValueAssignment_1 ) )
                    {
                    // InternalGo.g:3787:2: ( ( rule__Element__LiteralValueAssignment_1 ) )
                    // InternalGo.g:3788:3: ( rule__Element__LiteralValueAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getElementAccess().getLiteralValueAssignment_1()); 
                    }
                    // InternalGo.g:3789:3: ( rule__Element__LiteralValueAssignment_1 )
                    // InternalGo.g:3789:4: rule__Element__LiteralValueAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Element__LiteralValueAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getElementAccess().getLiteralValueAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Element__Alternatives"


    // $ANTLR start "rule__FieldDecl__Alternatives_0"
    // InternalGo.g:3797:1: rule__FieldDecl__Alternatives_0 : ( ( ( rule__FieldDecl__Group_0_0__0 ) ) | ( ( rule__FieldDecl__AnonymousFieldAssignment_0_1 ) ) );
    public final void rule__FieldDecl__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3801:1: ( ( ( rule__FieldDecl__Group_0_0__0 ) ) | ( ( rule__FieldDecl__AnonymousFieldAssignment_0_1 ) ) )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==RULE_IDENTIFIER) ) {
                switch ( input.LA(2) ) {
                case EOF:
                case RULE_STRING_LIT:
                case 45:
                case 74:
                    {
                    alt44=2;
                    }
                    break;
                case RULE_IDENTIFIER:
                    {
                    int LA44_3 = input.LA(3);

                    if ( (synpred92_InternalGo()) ) {
                        alt44=1;
                    }
                    else if ( (true) ) {
                        alt44=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 44, 3, input);

                        throw nvae;
                    }
                    }
                    break;
                case 52:
                    {
                    int LA44_4 = input.LA(3);

                    if ( (LA44_4==RULE_IDENTIFIER) ) {
                        int LA44_6 = input.LA(4);

                        if ( (synpred92_InternalGo()) ) {
                            alt44=1;
                        }
                        else if ( (true) ) {
                            alt44=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 44, 6, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA44_4==52||LA44_4==60||LA44_4==62||LA44_4==65||LA44_4==71||LA44_4==90||(LA44_4>=92 && LA44_4<=93)||LA44_4==95) ) {
                        alt44=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 44, 4, input);

                        throw nvae;
                    }
                    }
                    break;
                case 60:
                case 62:
                case 65:
                case 69:
                case 71:
                case 90:
                case 92:
                case 93:
                case 95:
                    {
                    alt44=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 1, input);

                    throw nvae;
                }

            }
            else if ( (LA44_0==52) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // InternalGo.g:3802:2: ( ( rule__FieldDecl__Group_0_0__0 ) )
                    {
                    // InternalGo.g:3802:2: ( ( rule__FieldDecl__Group_0_0__0 ) )
                    // InternalGo.g:3803:3: ( rule__FieldDecl__Group_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFieldDeclAccess().getGroup_0_0()); 
                    }
                    // InternalGo.g:3804:3: ( rule__FieldDecl__Group_0_0__0 )
                    // InternalGo.g:3804:4: rule__FieldDecl__Group_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__Group_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFieldDeclAccess().getGroup_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3808:2: ( ( rule__FieldDecl__AnonymousFieldAssignment_0_1 ) )
                    {
                    // InternalGo.g:3808:2: ( ( rule__FieldDecl__AnonymousFieldAssignment_0_1 ) )
                    // InternalGo.g:3809:3: ( rule__FieldDecl__AnonymousFieldAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFieldDeclAccess().getAnonymousFieldAssignment_0_1()); 
                    }
                    // InternalGo.g:3810:3: ( rule__FieldDecl__AnonymousFieldAssignment_0_1 )
                    // InternalGo.g:3810:4: rule__FieldDecl__AnonymousFieldAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FieldDecl__AnonymousFieldAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFieldDeclAccess().getAnonymousFieldAssignment_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Alternatives_0"


    // $ANTLR start "rule__PrimaryExpr__Alternatives"
    // InternalGo.g:3818:1: rule__PrimaryExpr__Alternatives : ( ( ( rule__PrimaryExpr__Alternatives_0 ) ) | ( ( rule__PrimaryExpr__PrimaryExprSelectorAssignment_1 ) ) | ( ( rule__PrimaryExpr__PrimaryExprIndexAssignment_2 ) ) | ( ( rule__PrimaryExpr__PrimaryExprSliceAssignment_3 ) ) | ( ( rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4 ) ) | ( ( rule__PrimaryExpr__PrimaryExprArgumentsAssignment_5 ) ) );
    public final void rule__PrimaryExpr__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3822:1: ( ( ( rule__PrimaryExpr__Alternatives_0 ) ) | ( ( rule__PrimaryExpr__PrimaryExprSelectorAssignment_1 ) ) | ( ( rule__PrimaryExpr__PrimaryExprIndexAssignment_2 ) ) | ( ( rule__PrimaryExpr__PrimaryExprSliceAssignment_3 ) ) | ( ( rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4 ) ) | ( ( rule__PrimaryExpr__PrimaryExprArgumentsAssignment_5 ) ) )
            int alt45=6;
            switch ( input.LA(1) ) {
            case RULE_INT_LIT:
                {
                int LA45_1 = input.LA(2);

                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_FLOAT_LIT:
                {
                int LA45_2 = input.LA(2);

                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_IMAGINARY_LIT:
                {
                int LA45_3 = input.LA(2);

                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_RUNE_LIT:
                {
                int LA45_4 = input.LA(2);

                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 4, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING_LIT:
                {
                int LA45_5 = input.LA(2);

                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 5, input);

                    throw nvae;
                }
                }
                break;
            case 95:
                {
                int LA45_6 = input.LA(2);

                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 6, input);

                    throw nvae;
                }
                }
                break;
            case 90:
                {
                int LA45_7 = input.LA(2);

                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 7, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }

            switch (alt45) {
                case 1 :
                    // InternalGo.g:3823:2: ( ( rule__PrimaryExpr__Alternatives_0 ) )
                    {
                    // InternalGo.g:3823:2: ( ( rule__PrimaryExpr__Alternatives_0 ) )
                    // InternalGo.g:3824:3: ( rule__PrimaryExpr__Alternatives_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExprAccess().getAlternatives_0()); 
                    }
                    // InternalGo.g:3825:3: ( rule__PrimaryExpr__Alternatives_0 )
                    // InternalGo.g:3825:4: rule__PrimaryExpr__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExpr__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExprAccess().getAlternatives_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3829:2: ( ( rule__PrimaryExpr__PrimaryExprSelectorAssignment_1 ) )
                    {
                    // InternalGo.g:3829:2: ( ( rule__PrimaryExpr__PrimaryExprSelectorAssignment_1 ) )
                    // InternalGo.g:3830:3: ( rule__PrimaryExpr__PrimaryExprSelectorAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExprAccess().getPrimaryExprSelectorAssignment_1()); 
                    }
                    // InternalGo.g:3831:3: ( rule__PrimaryExpr__PrimaryExprSelectorAssignment_1 )
                    // InternalGo.g:3831:4: rule__PrimaryExpr__PrimaryExprSelectorAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExpr__PrimaryExprSelectorAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExprAccess().getPrimaryExprSelectorAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3835:2: ( ( rule__PrimaryExpr__PrimaryExprIndexAssignment_2 ) )
                    {
                    // InternalGo.g:3835:2: ( ( rule__PrimaryExpr__PrimaryExprIndexAssignment_2 ) )
                    // InternalGo.g:3836:3: ( rule__PrimaryExpr__PrimaryExprIndexAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExprAccess().getPrimaryExprIndexAssignment_2()); 
                    }
                    // InternalGo.g:3837:3: ( rule__PrimaryExpr__PrimaryExprIndexAssignment_2 )
                    // InternalGo.g:3837:4: rule__PrimaryExpr__PrimaryExprIndexAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExpr__PrimaryExprIndexAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExprAccess().getPrimaryExprIndexAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:3841:2: ( ( rule__PrimaryExpr__PrimaryExprSliceAssignment_3 ) )
                    {
                    // InternalGo.g:3841:2: ( ( rule__PrimaryExpr__PrimaryExprSliceAssignment_3 ) )
                    // InternalGo.g:3842:3: ( rule__PrimaryExpr__PrimaryExprSliceAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExprAccess().getPrimaryExprSliceAssignment_3()); 
                    }
                    // InternalGo.g:3843:3: ( rule__PrimaryExpr__PrimaryExprSliceAssignment_3 )
                    // InternalGo.g:3843:4: rule__PrimaryExpr__PrimaryExprSliceAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExpr__PrimaryExprSliceAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExprAccess().getPrimaryExprSliceAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:3847:2: ( ( rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4 ) )
                    {
                    // InternalGo.g:3847:2: ( ( rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4 ) )
                    // InternalGo.g:3848:3: ( rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExprAccess().getPrimaryExprTypeAssertionAssignment_4()); 
                    }
                    // InternalGo.g:3849:3: ( rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4 )
                    // InternalGo.g:3849:4: rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExprAccess().getPrimaryExprTypeAssertionAssignment_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:3853:2: ( ( rule__PrimaryExpr__PrimaryExprArgumentsAssignment_5 ) )
                    {
                    // InternalGo.g:3853:2: ( ( rule__PrimaryExpr__PrimaryExprArgumentsAssignment_5 ) )
                    // InternalGo.g:3854:3: ( rule__PrimaryExpr__PrimaryExprArgumentsAssignment_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExprAccess().getPrimaryExprArgumentsAssignment_5()); 
                    }
                    // InternalGo.g:3855:3: ( rule__PrimaryExpr__PrimaryExprArgumentsAssignment_5 )
                    // InternalGo.g:3855:4: rule__PrimaryExpr__PrimaryExprArgumentsAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExpr__PrimaryExprArgumentsAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExprAccess().getPrimaryExprArgumentsAssignment_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpr__Alternatives"


    // $ANTLR start "rule__PrimaryExpr__Alternatives_0"
    // InternalGo.g:3863:1: rule__PrimaryExpr__Alternatives_0 : ( ( ( rule__PrimaryExpr__OperandAssignment_0_0 ) ) | ( ( rule__PrimaryExpr__ConversionAssignment_0_1 ) ) );
    public final void rule__PrimaryExpr__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3867:1: ( ( ( rule__PrimaryExpr__OperandAssignment_0_0 ) ) | ( ( rule__PrimaryExpr__ConversionAssignment_0_1 ) ) )
            int alt46=2;
            alt46 = dfa46.predict(input);
            switch (alt46) {
                case 1 :
                    // InternalGo.g:3868:2: ( ( rule__PrimaryExpr__OperandAssignment_0_0 ) )
                    {
                    // InternalGo.g:3868:2: ( ( rule__PrimaryExpr__OperandAssignment_0_0 ) )
                    // InternalGo.g:3869:3: ( rule__PrimaryExpr__OperandAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExprAccess().getOperandAssignment_0_0()); 
                    }
                    // InternalGo.g:3870:3: ( rule__PrimaryExpr__OperandAssignment_0_0 )
                    // InternalGo.g:3870:4: rule__PrimaryExpr__OperandAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExpr__OperandAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExprAccess().getOperandAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3874:2: ( ( rule__PrimaryExpr__ConversionAssignment_0_1 ) )
                    {
                    // InternalGo.g:3874:2: ( ( rule__PrimaryExpr__ConversionAssignment_0_1 ) )
                    // InternalGo.g:3875:3: ( rule__PrimaryExpr__ConversionAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExprAccess().getConversionAssignment_0_1()); 
                    }
                    // InternalGo.g:3876:3: ( rule__PrimaryExpr__ConversionAssignment_0_1 )
                    // InternalGo.g:3876:4: rule__PrimaryExpr__ConversionAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExpr__ConversionAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExprAccess().getConversionAssignment_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpr__Alternatives_0"


    // $ANTLR start "rule__PrimaryExprStuff__Alternatives"
    // InternalGo.g:3884:1: rule__PrimaryExprStuff__Alternatives : ( ( ( rule__PrimaryExprStuff__SelectorAssignment_0 ) ) | ( ( rule__PrimaryExprStuff__IndexAssignment_1 ) ) | ( ( rule__PrimaryExprStuff__SliceAssignment_2 ) ) | ( ( rule__PrimaryExprStuff__TypeAssertionAssignment_3 ) ) | ( ( rule__PrimaryExprStuff__ArgumentsAssignment_4 ) ) );
    public final void rule__PrimaryExprStuff__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3888:1: ( ( ( rule__PrimaryExprStuff__SelectorAssignment_0 ) ) | ( ( rule__PrimaryExprStuff__IndexAssignment_1 ) ) | ( ( rule__PrimaryExprStuff__SliceAssignment_2 ) ) | ( ( rule__PrimaryExprStuff__TypeAssertionAssignment_3 ) ) | ( ( rule__PrimaryExprStuff__ArgumentsAssignment_4 ) ) )
            int alt47=5;
            switch ( input.LA(1) ) {
            case 45:
                {
                int LA47_1 = input.LA(2);

                if ( (synpred99_InternalGo()) ) {
                    alt47=1;
                }
                else if ( (synpred102_InternalGo()) ) {
                    alt47=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 1, input);

                    throw nvae;
                }
                }
                break;
            case 90:
                {
                int LA47_2 = input.LA(2);

                if ( (synpred100_InternalGo()) ) {
                    alt47=2;
                }
                else if ( (synpred101_InternalGo()) ) {
                    alt47=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 2, input);

                    throw nvae;
                }
                }
                break;
            case 65:
                {
                alt47=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }

            switch (alt47) {
                case 1 :
                    // InternalGo.g:3889:2: ( ( rule__PrimaryExprStuff__SelectorAssignment_0 ) )
                    {
                    // InternalGo.g:3889:2: ( ( rule__PrimaryExprStuff__SelectorAssignment_0 ) )
                    // InternalGo.g:3890:3: ( rule__PrimaryExprStuff__SelectorAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExprStuffAccess().getSelectorAssignment_0()); 
                    }
                    // InternalGo.g:3891:3: ( rule__PrimaryExprStuff__SelectorAssignment_0 )
                    // InternalGo.g:3891:4: rule__PrimaryExprStuff__SelectorAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExprStuff__SelectorAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExprStuffAccess().getSelectorAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3895:2: ( ( rule__PrimaryExprStuff__IndexAssignment_1 ) )
                    {
                    // InternalGo.g:3895:2: ( ( rule__PrimaryExprStuff__IndexAssignment_1 ) )
                    // InternalGo.g:3896:3: ( rule__PrimaryExprStuff__IndexAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExprStuffAccess().getIndexAssignment_1()); 
                    }
                    // InternalGo.g:3897:3: ( rule__PrimaryExprStuff__IndexAssignment_1 )
                    // InternalGo.g:3897:4: rule__PrimaryExprStuff__IndexAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExprStuff__IndexAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExprStuffAccess().getIndexAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3901:2: ( ( rule__PrimaryExprStuff__SliceAssignment_2 ) )
                    {
                    // InternalGo.g:3901:2: ( ( rule__PrimaryExprStuff__SliceAssignment_2 ) )
                    // InternalGo.g:3902:3: ( rule__PrimaryExprStuff__SliceAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExprStuffAccess().getSliceAssignment_2()); 
                    }
                    // InternalGo.g:3903:3: ( rule__PrimaryExprStuff__SliceAssignment_2 )
                    // InternalGo.g:3903:4: rule__PrimaryExprStuff__SliceAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExprStuff__SliceAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExprStuffAccess().getSliceAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:3907:2: ( ( rule__PrimaryExprStuff__TypeAssertionAssignment_3 ) )
                    {
                    // InternalGo.g:3907:2: ( ( rule__PrimaryExprStuff__TypeAssertionAssignment_3 ) )
                    // InternalGo.g:3908:3: ( rule__PrimaryExprStuff__TypeAssertionAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExprStuffAccess().getTypeAssertionAssignment_3()); 
                    }
                    // InternalGo.g:3909:3: ( rule__PrimaryExprStuff__TypeAssertionAssignment_3 )
                    // InternalGo.g:3909:4: rule__PrimaryExprStuff__TypeAssertionAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExprStuff__TypeAssertionAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExprStuffAccess().getTypeAssertionAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:3913:2: ( ( rule__PrimaryExprStuff__ArgumentsAssignment_4 ) )
                    {
                    // InternalGo.g:3913:2: ( ( rule__PrimaryExprStuff__ArgumentsAssignment_4 ) )
                    // InternalGo.g:3914:3: ( rule__PrimaryExprStuff__ArgumentsAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPrimaryExprStuffAccess().getArgumentsAssignment_4()); 
                    }
                    // InternalGo.g:3915:3: ( rule__PrimaryExprStuff__ArgumentsAssignment_4 )
                    // InternalGo.g:3915:4: rule__PrimaryExprStuff__ArgumentsAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__PrimaryExprStuff__ArgumentsAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPrimaryExprStuffAccess().getArgumentsAssignment_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprStuff__Alternatives"


    // $ANTLR start "rule__Slice__Alternatives_1"
    // InternalGo.g:3923:1: rule__Slice__Alternatives_1 : ( ( ( rule__Slice__Group_1_0__0 ) ) | ( ( rule__Slice__Group_1_1__0 ) ) );
    public final void rule__Slice__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3927:1: ( ( ( rule__Slice__Group_1_0__0 ) ) | ( ( rule__Slice__Group_1_1__0 ) ) )
            int alt48=2;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // InternalGo.g:3928:2: ( ( rule__Slice__Group_1_0__0 ) )
                    {
                    // InternalGo.g:3928:2: ( ( rule__Slice__Group_1_0__0 ) )
                    // InternalGo.g:3929:3: ( rule__Slice__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSliceAccess().getGroup_1_0()); 
                    }
                    // InternalGo.g:3930:3: ( rule__Slice__Group_1_0__0 )
                    // InternalGo.g:3930:4: rule__Slice__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Slice__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSliceAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3934:2: ( ( rule__Slice__Group_1_1__0 ) )
                    {
                    // InternalGo.g:3934:2: ( ( rule__Slice__Group_1_1__0 ) )
                    // InternalGo.g:3935:3: ( rule__Slice__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSliceAccess().getGroup_1_1()); 
                    }
                    // InternalGo.g:3936:3: ( rule__Slice__Group_1_1__0 )
                    // InternalGo.g:3936:4: rule__Slice__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Slice__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSliceAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Alternatives_1"


    // $ANTLR start "rule__Arguments__Alternatives_1_0"
    // InternalGo.g:3944:1: rule__Arguments__Alternatives_1_0 : ( ( ( rule__Arguments__ExpressionListAssignment_1_0_0 ) ) | ( ( rule__Arguments__Group_1_0_1__0 ) ) );
    public final void rule__Arguments__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3948:1: ( ( ( rule__Arguments__ExpressionListAssignment_1_0_0 ) ) | ( ( rule__Arguments__Group_1_0_1__0 ) ) )
            int alt49=2;
            alt49 = dfa49.predict(input);
            switch (alt49) {
                case 1 :
                    // InternalGo.g:3949:2: ( ( rule__Arguments__ExpressionListAssignment_1_0_0 ) )
                    {
                    // InternalGo.g:3949:2: ( ( rule__Arguments__ExpressionListAssignment_1_0_0 ) )
                    // InternalGo.g:3950:3: ( rule__Arguments__ExpressionListAssignment_1_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getArgumentsAccess().getExpressionListAssignment_1_0_0()); 
                    }
                    // InternalGo.g:3951:3: ( rule__Arguments__ExpressionListAssignment_1_0_0 )
                    // InternalGo.g:3951:4: rule__Arguments__ExpressionListAssignment_1_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Arguments__ExpressionListAssignment_1_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getArgumentsAccess().getExpressionListAssignment_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3955:2: ( ( rule__Arguments__Group_1_0_1__0 ) )
                    {
                    // InternalGo.g:3955:2: ( ( rule__Arguments__Group_1_0_1__0 ) )
                    // InternalGo.g:3956:3: ( rule__Arguments__Group_1_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getArgumentsAccess().getGroup_1_0_1()); 
                    }
                    // InternalGo.g:3957:3: ( rule__Arguments__Group_1_0_1__0 )
                    // InternalGo.g:3957:4: rule__Arguments__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Arguments__Group_1_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getArgumentsAccess().getGroup_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Alternatives_1_0"


    // $ANTLR start "rule__ReceiverType__Alternatives"
    // InternalGo.g:3965:1: rule__ReceiverType__Alternatives : ( ( ( rule__ReceiverType__TypeNameAssignment_0 ) ) | ( ( rule__ReceiverType__Group_1__0 ) ) | ( ( rule__ReceiverType__Group_2__0 ) ) );
    public final void rule__ReceiverType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3969:1: ( ( ( rule__ReceiverType__TypeNameAssignment_0 ) ) | ( ( rule__ReceiverType__Group_1__0 ) ) | ( ( rule__ReceiverType__Group_2__0 ) ) )
            int alt50=3;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==RULE_IDENTIFIER) ) {
                alt50=1;
            }
            else if ( (LA50_0==65) ) {
                int LA50_2 = input.LA(2);

                if ( (LA50_2==RULE_IDENTIFIER||LA50_2==65) ) {
                    alt50=3;
                }
                else if ( (LA50_2==52) ) {
                    alt50=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // InternalGo.g:3970:2: ( ( rule__ReceiverType__TypeNameAssignment_0 ) )
                    {
                    // InternalGo.g:3970:2: ( ( rule__ReceiverType__TypeNameAssignment_0 ) )
                    // InternalGo.g:3971:3: ( rule__ReceiverType__TypeNameAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getReceiverTypeAccess().getTypeNameAssignment_0()); 
                    }
                    // InternalGo.g:3972:3: ( rule__ReceiverType__TypeNameAssignment_0 )
                    // InternalGo.g:3972:4: rule__ReceiverType__TypeNameAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ReceiverType__TypeNameAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getReceiverTypeAccess().getTypeNameAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:3976:2: ( ( rule__ReceiverType__Group_1__0 ) )
                    {
                    // InternalGo.g:3976:2: ( ( rule__ReceiverType__Group_1__0 ) )
                    // InternalGo.g:3977:3: ( rule__ReceiverType__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getReceiverTypeAccess().getGroup_1()); 
                    }
                    // InternalGo.g:3978:3: ( rule__ReceiverType__Group_1__0 )
                    // InternalGo.g:3978:4: rule__ReceiverType__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ReceiverType__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getReceiverTypeAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:3982:2: ( ( rule__ReceiverType__Group_2__0 ) )
                    {
                    // InternalGo.g:3982:2: ( ( rule__ReceiverType__Group_2__0 ) )
                    // InternalGo.g:3983:3: ( rule__ReceiverType__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getReceiverTypeAccess().getGroup_2()); 
                    }
                    // InternalGo.g:3984:3: ( rule__ReceiverType__Group_2__0 )
                    // InternalGo.g:3984:4: rule__ReceiverType__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ReceiverType__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getReceiverTypeAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReceiverType__Alternatives"


    // $ANTLR start "rule__UnaryExpr__Alternatives"
    // InternalGo.g:3992:1: rule__UnaryExpr__Alternatives : ( ( ( rule__UnaryExpr__PrimaryExprAssignment_0 ) ) | ( ( rule__UnaryExpr__Group_1__0 ) ) );
    public final void rule__UnaryExpr__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:3996:1: ( ( ( rule__UnaryExpr__PrimaryExprAssignment_0 ) ) | ( ( rule__UnaryExpr__Group_1__0 ) ) )
            int alt51=2;
            alt51 = dfa51.predict(input);
            switch (alt51) {
                case 1 :
                    // InternalGo.g:3997:2: ( ( rule__UnaryExpr__PrimaryExprAssignment_0 ) )
                    {
                    // InternalGo.g:3997:2: ( ( rule__UnaryExpr__PrimaryExprAssignment_0 ) )
                    // InternalGo.g:3998:3: ( rule__UnaryExpr__PrimaryExprAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExprAccess().getPrimaryExprAssignment_0()); 
                    }
                    // InternalGo.g:3999:3: ( rule__UnaryExpr__PrimaryExprAssignment_0 )
                    // InternalGo.g:3999:4: rule__UnaryExpr__PrimaryExprAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnaryExpr__PrimaryExprAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExprAccess().getPrimaryExprAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4003:2: ( ( rule__UnaryExpr__Group_1__0 ) )
                    {
                    // InternalGo.g:4003:2: ( ( rule__UnaryExpr__Group_1__0 ) )
                    // InternalGo.g:4004:3: ( rule__UnaryExpr__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExprAccess().getGroup_1()); 
                    }
                    // InternalGo.g:4005:3: ( rule__UnaryExpr__Group_1__0 )
                    // InternalGo.g:4005:4: rule__UnaryExpr__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnaryExpr__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExprAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpr__Alternatives"


    // $ANTLR start "rule__UnaryExpr__Alternatives_1_0"
    // InternalGo.g:4013:1: rule__UnaryExpr__Alternatives_1_0 : ( ( '+' ) | ( '-' ) | ( '!' ) | ( '^' ) | ( '*' ) | ( '&' ) | ( '<-' ) );
    public final void rule__UnaryExpr__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4017:1: ( ( '+' ) | ( '-' ) | ( '!' ) | ( '^' ) | ( '*' ) | ( '&' ) | ( '<-' ) )
            int alt52=7;
            switch ( input.LA(1) ) {
            case 48:
                {
                alt52=1;
                }
                break;
            case 49:
                {
                alt52=2;
                }
                break;
            case 61:
                {
                alt52=3;
                }
                break;
            case 51:
                {
                alt52=4;
                }
                break;
            case 52:
                {
                alt52=5;
                }
                break;
            case 57:
                {
                alt52=6;
                }
                break;
            case 62:
                {
                alt52=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }

            switch (alt52) {
                case 1 :
                    // InternalGo.g:4018:2: ( '+' )
                    {
                    // InternalGo.g:4018:2: ( '+' )
                    // InternalGo.g:4019:3: '+'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExprAccess().getPlusSignKeyword_1_0_0()); 
                    }
                    match(input,48,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExprAccess().getPlusSignKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalGo.g:4024:2: ( '-' )
                    {
                    // InternalGo.g:4024:2: ( '-' )
                    // InternalGo.g:4025:3: '-'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExprAccess().getHyphenMinusKeyword_1_0_1()); 
                    }
                    match(input,49,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExprAccess().getHyphenMinusKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalGo.g:4030:2: ( '!' )
                    {
                    // InternalGo.g:4030:2: ( '!' )
                    // InternalGo.g:4031:3: '!'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExprAccess().getExclamationMarkKeyword_1_0_2()); 
                    }
                    match(input,61,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExprAccess().getExclamationMarkKeyword_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalGo.g:4036:2: ( '^' )
                    {
                    // InternalGo.g:4036:2: ( '^' )
                    // InternalGo.g:4037:3: '^'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExprAccess().getCircumflexAccentKeyword_1_0_3()); 
                    }
                    match(input,51,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExprAccess().getCircumflexAccentKeyword_1_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalGo.g:4042:2: ( '*' )
                    {
                    // InternalGo.g:4042:2: ( '*' )
                    // InternalGo.g:4043:3: '*'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExprAccess().getAsteriskKeyword_1_0_4()); 
                    }
                    match(input,52,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExprAccess().getAsteriskKeyword_1_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalGo.g:4048:2: ( '&' )
                    {
                    // InternalGo.g:4048:2: ( '&' )
                    // InternalGo.g:4049:3: '&'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExprAccess().getAmpersandKeyword_1_0_5()); 
                    }
                    match(input,57,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExprAccess().getAmpersandKeyword_1_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalGo.g:4054:2: ( '<-' )
                    {
                    // InternalGo.g:4054:2: ( '<-' )
                    // InternalGo.g:4055:3: '<-'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryExprAccess().getLessThanSignHyphenMinusKeyword_1_0_6()); 
                    }
                    match(input,62,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryExprAccess().getLessThanSignHyphenMinusKeyword_1_0_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpr__Alternatives_1_0"


    // $ANTLR start "rule__SourceFile__Group__0"
    // InternalGo.g:4064:1: rule__SourceFile__Group__0 : rule__SourceFile__Group__0__Impl rule__SourceFile__Group__1 ;
    public final void rule__SourceFile__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4068:1: ( rule__SourceFile__Group__0__Impl rule__SourceFile__Group__1 )
            // InternalGo.g:4069:2: rule__SourceFile__Group__0__Impl rule__SourceFile__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__SourceFile__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SourceFile__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SourceFile__Group__0"


    // $ANTLR start "rule__SourceFile__Group__0__Impl"
    // InternalGo.g:4076:1: rule__SourceFile__Group__0__Impl : ( ( rule__SourceFile__PackageClauseAssignment_0 ) ) ;
    public final void rule__SourceFile__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4080:1: ( ( ( rule__SourceFile__PackageClauseAssignment_0 ) ) )
            // InternalGo.g:4081:1: ( ( rule__SourceFile__PackageClauseAssignment_0 ) )
            {
            // InternalGo.g:4081:1: ( ( rule__SourceFile__PackageClauseAssignment_0 ) )
            // InternalGo.g:4082:2: ( rule__SourceFile__PackageClauseAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSourceFileAccess().getPackageClauseAssignment_0()); 
            }
            // InternalGo.g:4083:2: ( rule__SourceFile__PackageClauseAssignment_0 )
            // InternalGo.g:4083:3: rule__SourceFile__PackageClauseAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__SourceFile__PackageClauseAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSourceFileAccess().getPackageClauseAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SourceFile__Group__0__Impl"


    // $ANTLR start "rule__SourceFile__Group__1"
    // InternalGo.g:4091:1: rule__SourceFile__Group__1 : rule__SourceFile__Group__1__Impl rule__SourceFile__Group__2 ;
    public final void rule__SourceFile__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4095:1: ( rule__SourceFile__Group__1__Impl rule__SourceFile__Group__2 )
            // InternalGo.g:4096:2: rule__SourceFile__Group__1__Impl rule__SourceFile__Group__2
            {
            pushFollow(FOLLOW_4);
            rule__SourceFile__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SourceFile__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SourceFile__Group__1"


    // $ANTLR start "rule__SourceFile__Group__1__Impl"
    // InternalGo.g:4103:1: rule__SourceFile__Group__1__Impl : ( ( rule__SourceFile__ImportDeclAssignment_1 )* ) ;
    public final void rule__SourceFile__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4107:1: ( ( ( rule__SourceFile__ImportDeclAssignment_1 )* ) )
            // InternalGo.g:4108:1: ( ( rule__SourceFile__ImportDeclAssignment_1 )* )
            {
            // InternalGo.g:4108:1: ( ( rule__SourceFile__ImportDeclAssignment_1 )* )
            // InternalGo.g:4109:2: ( rule__SourceFile__ImportDeclAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSourceFileAccess().getImportDeclAssignment_1()); 
            }
            // InternalGo.g:4110:2: ( rule__SourceFile__ImportDeclAssignment_1 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==64) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalGo.g:4110:3: rule__SourceFile__ImportDeclAssignment_1
            	    {
            	    pushFollow(FOLLOW_5);
            	    rule__SourceFile__ImportDeclAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSourceFileAccess().getImportDeclAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SourceFile__Group__1__Impl"


    // $ANTLR start "rule__SourceFile__Group__2"
    // InternalGo.g:4118:1: rule__SourceFile__Group__2 : rule__SourceFile__Group__2__Impl ;
    public final void rule__SourceFile__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4122:1: ( rule__SourceFile__Group__2__Impl )
            // InternalGo.g:4123:2: rule__SourceFile__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SourceFile__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SourceFile__Group__2"


    // $ANTLR start "rule__SourceFile__Group__2__Impl"
    // InternalGo.g:4129:1: rule__SourceFile__Group__2__Impl : ( ( rule__SourceFile__TopLevelDeclAssignment_2 )* ) ;
    public final void rule__SourceFile__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4133:1: ( ( ( rule__SourceFile__TopLevelDeclAssignment_2 )* ) )
            // InternalGo.g:4134:1: ( ( rule__SourceFile__TopLevelDeclAssignment_2 )* )
            {
            // InternalGo.g:4134:1: ( ( rule__SourceFile__TopLevelDeclAssignment_2 )* )
            // InternalGo.g:4135:2: ( rule__SourceFile__TopLevelDeclAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSourceFileAccess().getTopLevelDeclAssignment_2()); 
            }
            // InternalGo.g:4136:2: ( rule__SourceFile__TopLevelDeclAssignment_2 )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==67||(LA54_0>=70 && LA54_0<=72)) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalGo.g:4136:3: rule__SourceFile__TopLevelDeclAssignment_2
            	    {
            	    pushFollow(FOLLOW_6);
            	    rule__SourceFile__TopLevelDeclAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSourceFileAccess().getTopLevelDeclAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SourceFile__Group__2__Impl"


    // $ANTLR start "rule__PackageClause__Group__0"
    // InternalGo.g:4145:1: rule__PackageClause__Group__0 : rule__PackageClause__Group__0__Impl rule__PackageClause__Group__1 ;
    public final void rule__PackageClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4149:1: ( rule__PackageClause__Group__0__Impl rule__PackageClause__Group__1 )
            // InternalGo.g:4150:2: rule__PackageClause__Group__0__Impl rule__PackageClause__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__PackageClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PackageClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PackageClause__Group__0"


    // $ANTLR start "rule__PackageClause__Group__0__Impl"
    // InternalGo.g:4157:1: rule__PackageClause__Group__0__Impl : ( 'package' ) ;
    public final void rule__PackageClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4161:1: ( ( 'package' ) )
            // InternalGo.g:4162:1: ( 'package' )
            {
            // InternalGo.g:4162:1: ( 'package' )
            // InternalGo.g:4163:2: 'package'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPackageClauseAccess().getPackageKeyword_0()); 
            }
            match(input,63,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPackageClauseAccess().getPackageKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PackageClause__Group__0__Impl"


    // $ANTLR start "rule__PackageClause__Group__1"
    // InternalGo.g:4172:1: rule__PackageClause__Group__1 : rule__PackageClause__Group__1__Impl ;
    public final void rule__PackageClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4176:1: ( rule__PackageClause__Group__1__Impl )
            // InternalGo.g:4177:2: rule__PackageClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PackageClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PackageClause__Group__1"


    // $ANTLR start "rule__PackageClause__Group__1__Impl"
    // InternalGo.g:4183:1: rule__PackageClause__Group__1__Impl : ( RULE_IDENTIFIER ) ;
    public final void rule__PackageClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4187:1: ( ( RULE_IDENTIFIER ) )
            // InternalGo.g:4188:1: ( RULE_IDENTIFIER )
            {
            // InternalGo.g:4188:1: ( RULE_IDENTIFIER )
            // InternalGo.g:4189:2: RULE_IDENTIFIER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPackageClauseAccess().getIDENTIFIERTerminalRuleCall_1()); 
            }
            match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPackageClauseAccess().getIDENTIFIERTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PackageClause__Group__1__Impl"


    // $ANTLR start "rule__ImportDecl__Group__0"
    // InternalGo.g:4199:1: rule__ImportDecl__Group__0 : rule__ImportDecl__Group__0__Impl rule__ImportDecl__Group__1 ;
    public final void rule__ImportDecl__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4203:1: ( rule__ImportDecl__Group__0__Impl rule__ImportDecl__Group__1 )
            // InternalGo.g:4204:2: rule__ImportDecl__Group__0__Impl rule__ImportDecl__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__ImportDecl__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ImportDecl__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportDecl__Group__0"


    // $ANTLR start "rule__ImportDecl__Group__0__Impl"
    // InternalGo.g:4211:1: rule__ImportDecl__Group__0__Impl : ( 'import' ) ;
    public final void rule__ImportDecl__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4215:1: ( ( 'import' ) )
            // InternalGo.g:4216:1: ( 'import' )
            {
            // InternalGo.g:4216:1: ( 'import' )
            // InternalGo.g:4217:2: 'import'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportDeclAccess().getImportKeyword_0()); 
            }
            match(input,64,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportDeclAccess().getImportKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportDecl__Group__0__Impl"


    // $ANTLR start "rule__ImportDecl__Group__1"
    // InternalGo.g:4226:1: rule__ImportDecl__Group__1 : rule__ImportDecl__Group__1__Impl ;
    public final void rule__ImportDecl__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4230:1: ( rule__ImportDecl__Group__1__Impl )
            // InternalGo.g:4231:2: rule__ImportDecl__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportDecl__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportDecl__Group__1"


    // $ANTLR start "rule__ImportDecl__Group__1__Impl"
    // InternalGo.g:4237:1: rule__ImportDecl__Group__1__Impl : ( ( rule__ImportDecl__Alternatives_1 ) ) ;
    public final void rule__ImportDecl__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4241:1: ( ( ( rule__ImportDecl__Alternatives_1 ) ) )
            // InternalGo.g:4242:1: ( ( rule__ImportDecl__Alternatives_1 ) )
            {
            // InternalGo.g:4242:1: ( ( rule__ImportDecl__Alternatives_1 ) )
            // InternalGo.g:4243:2: ( rule__ImportDecl__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportDeclAccess().getAlternatives_1()); 
            }
            // InternalGo.g:4244:2: ( rule__ImportDecl__Alternatives_1 )
            // InternalGo.g:4244:3: rule__ImportDecl__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportDecl__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportDeclAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportDecl__Group__1__Impl"


    // $ANTLR start "rule__ImportDecl__Group_1_1__0"
    // InternalGo.g:4253:1: rule__ImportDecl__Group_1_1__0 : rule__ImportDecl__Group_1_1__0__Impl rule__ImportDecl__Group_1_1__1 ;
    public final void rule__ImportDecl__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4257:1: ( rule__ImportDecl__Group_1_1__0__Impl rule__ImportDecl__Group_1_1__1 )
            // InternalGo.g:4258:2: rule__ImportDecl__Group_1_1__0__Impl rule__ImportDecl__Group_1_1__1
            {
            pushFollow(FOLLOW_9);
            rule__ImportDecl__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ImportDecl__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportDecl__Group_1_1__0"


    // $ANTLR start "rule__ImportDecl__Group_1_1__0__Impl"
    // InternalGo.g:4265:1: rule__ImportDecl__Group_1_1__0__Impl : ( '(' ) ;
    public final void rule__ImportDecl__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4269:1: ( ( '(' ) )
            // InternalGo.g:4270:1: ( '(' )
            {
            // InternalGo.g:4270:1: ( '(' )
            // InternalGo.g:4271:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_1_1_0()); 
            }
            match(input,65,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportDecl__Group_1_1__0__Impl"


    // $ANTLR start "rule__ImportDecl__Group_1_1__1"
    // InternalGo.g:4280:1: rule__ImportDecl__Group_1_1__1 : rule__ImportDecl__Group_1_1__1__Impl rule__ImportDecl__Group_1_1__2 ;
    public final void rule__ImportDecl__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4284:1: ( rule__ImportDecl__Group_1_1__1__Impl rule__ImportDecl__Group_1_1__2 )
            // InternalGo.g:4285:2: rule__ImportDecl__Group_1_1__1__Impl rule__ImportDecl__Group_1_1__2
            {
            pushFollow(FOLLOW_9);
            rule__ImportDecl__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ImportDecl__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportDecl__Group_1_1__1"


    // $ANTLR start "rule__ImportDecl__Group_1_1__1__Impl"
    // InternalGo.g:4292:1: rule__ImportDecl__Group_1_1__1__Impl : ( ( rule__ImportDecl__ImportSpecAssignment_1_1_1 )* ) ;
    public final void rule__ImportDecl__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4296:1: ( ( ( rule__ImportDecl__ImportSpecAssignment_1_1_1 )* ) )
            // InternalGo.g:4297:1: ( ( rule__ImportDecl__ImportSpecAssignment_1_1_1 )* )
            {
            // InternalGo.g:4297:1: ( ( rule__ImportDecl__ImportSpecAssignment_1_1_1 )* )
            // InternalGo.g:4298:2: ( rule__ImportDecl__ImportSpecAssignment_1_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportDeclAccess().getImportSpecAssignment_1_1_1()); 
            }
            // InternalGo.g:4299:2: ( rule__ImportDecl__ImportSpecAssignment_1_1_1 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==RULE_STRING_LIT||LA55_0==RULE_IDENTIFIER||LA55_0==45) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalGo.g:4299:3: rule__ImportDecl__ImportSpecAssignment_1_1_1
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__ImportDecl__ImportSpecAssignment_1_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportDeclAccess().getImportSpecAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportDecl__Group_1_1__1__Impl"


    // $ANTLR start "rule__ImportDecl__Group_1_1__2"
    // InternalGo.g:4307:1: rule__ImportDecl__Group_1_1__2 : rule__ImportDecl__Group_1_1__2__Impl ;
    public final void rule__ImportDecl__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4311:1: ( rule__ImportDecl__Group_1_1__2__Impl )
            // InternalGo.g:4312:2: rule__ImportDecl__Group_1_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportDecl__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportDecl__Group_1_1__2"


    // $ANTLR start "rule__ImportDecl__Group_1_1__2__Impl"
    // InternalGo.g:4318:1: rule__ImportDecl__Group_1_1__2__Impl : ( ')' ) ;
    public final void rule__ImportDecl__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4322:1: ( ( ')' ) )
            // InternalGo.g:4323:1: ( ')' )
            {
            // InternalGo.g:4323:1: ( ')' )
            // InternalGo.g:4324:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_1_1_2()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportDecl__Group_1_1__2__Impl"


    // $ANTLR start "rule__ImportSpec__Group__0"
    // InternalGo.g:4334:1: rule__ImportSpec__Group__0 : rule__ImportSpec__Group__0__Impl rule__ImportSpec__Group__1 ;
    public final void rule__ImportSpec__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4338:1: ( rule__ImportSpec__Group__0__Impl rule__ImportSpec__Group__1 )
            // InternalGo.g:4339:2: rule__ImportSpec__Group__0__Impl rule__ImportSpec__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__ImportSpec__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ImportSpec__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportSpec__Group__0"


    // $ANTLR start "rule__ImportSpec__Group__0__Impl"
    // InternalGo.g:4346:1: rule__ImportSpec__Group__0__Impl : ( ( rule__ImportSpec__Alternatives_0 )? ) ;
    public final void rule__ImportSpec__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4350:1: ( ( ( rule__ImportSpec__Alternatives_0 )? ) )
            // InternalGo.g:4351:1: ( ( rule__ImportSpec__Alternatives_0 )? )
            {
            // InternalGo.g:4351:1: ( ( rule__ImportSpec__Alternatives_0 )? )
            // InternalGo.g:4352:2: ( rule__ImportSpec__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportSpecAccess().getAlternatives_0()); 
            }
            // InternalGo.g:4353:2: ( rule__ImportSpec__Alternatives_0 )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==RULE_IDENTIFIER||LA56_0==45) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalGo.g:4353:3: rule__ImportSpec__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ImportSpec__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportSpecAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportSpec__Group__0__Impl"


    // $ANTLR start "rule__ImportSpec__Group__1"
    // InternalGo.g:4361:1: rule__ImportSpec__Group__1 : rule__ImportSpec__Group__1__Impl ;
    public final void rule__ImportSpec__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4365:1: ( rule__ImportSpec__Group__1__Impl )
            // InternalGo.g:4366:2: rule__ImportSpec__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ImportSpec__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportSpec__Group__1"


    // $ANTLR start "rule__ImportSpec__Group__1__Impl"
    // InternalGo.g:4372:1: rule__ImportSpec__Group__1__Impl : ( ( rule__ImportSpec__ImportPathAssignment_1 ) ) ;
    public final void rule__ImportSpec__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4376:1: ( ( ( rule__ImportSpec__ImportPathAssignment_1 ) ) )
            // InternalGo.g:4377:1: ( ( rule__ImportSpec__ImportPathAssignment_1 ) )
            {
            // InternalGo.g:4377:1: ( ( rule__ImportSpec__ImportPathAssignment_1 ) )
            // InternalGo.g:4378:2: ( rule__ImportSpec__ImportPathAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportSpecAccess().getImportPathAssignment_1()); 
            }
            // InternalGo.g:4379:2: ( rule__ImportSpec__ImportPathAssignment_1 )
            // InternalGo.g:4379:3: rule__ImportSpec__ImportPathAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ImportSpec__ImportPathAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportSpecAccess().getImportPathAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportSpec__Group__1__Impl"


    // $ANTLR start "rule__ConstDecl__Group__0"
    // InternalGo.g:4388:1: rule__ConstDecl__Group__0 : rule__ConstDecl__Group__0__Impl rule__ConstDecl__Group__1 ;
    public final void rule__ConstDecl__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4392:1: ( rule__ConstDecl__Group__0__Impl rule__ConstDecl__Group__1 )
            // InternalGo.g:4393:2: rule__ConstDecl__Group__0__Impl rule__ConstDecl__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__ConstDecl__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConstDecl__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstDecl__Group__0"


    // $ANTLR start "rule__ConstDecl__Group__0__Impl"
    // InternalGo.g:4400:1: rule__ConstDecl__Group__0__Impl : ( 'const' ) ;
    public final void rule__ConstDecl__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4404:1: ( ( 'const' ) )
            // InternalGo.g:4405:1: ( 'const' )
            {
            // InternalGo.g:4405:1: ( 'const' )
            // InternalGo.g:4406:2: 'const'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstDeclAccess().getConstKeyword_0()); 
            }
            match(input,67,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstDeclAccess().getConstKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstDecl__Group__0__Impl"


    // $ANTLR start "rule__ConstDecl__Group__1"
    // InternalGo.g:4415:1: rule__ConstDecl__Group__1 : rule__ConstDecl__Group__1__Impl ;
    public final void rule__ConstDecl__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4419:1: ( rule__ConstDecl__Group__1__Impl )
            // InternalGo.g:4420:2: rule__ConstDecl__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConstDecl__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstDecl__Group__1"


    // $ANTLR start "rule__ConstDecl__Group__1__Impl"
    // InternalGo.g:4426:1: rule__ConstDecl__Group__1__Impl : ( ( rule__ConstDecl__Alternatives_1 ) ) ;
    public final void rule__ConstDecl__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4430:1: ( ( ( rule__ConstDecl__Alternatives_1 ) ) )
            // InternalGo.g:4431:1: ( ( rule__ConstDecl__Alternatives_1 ) )
            {
            // InternalGo.g:4431:1: ( ( rule__ConstDecl__Alternatives_1 ) )
            // InternalGo.g:4432:2: ( rule__ConstDecl__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstDeclAccess().getAlternatives_1()); 
            }
            // InternalGo.g:4433:2: ( rule__ConstDecl__Alternatives_1 )
            // InternalGo.g:4433:3: rule__ConstDecl__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__ConstDecl__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstDeclAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstDecl__Group__1__Impl"


    // $ANTLR start "rule__ConstDecl__Group_1_1__0"
    // InternalGo.g:4442:1: rule__ConstDecl__Group_1_1__0 : rule__ConstDecl__Group_1_1__0__Impl rule__ConstDecl__Group_1_1__1 ;
    public final void rule__ConstDecl__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4446:1: ( rule__ConstDecl__Group_1_1__0__Impl rule__ConstDecl__Group_1_1__1 )
            // InternalGo.g:4447:2: rule__ConstDecl__Group_1_1__0__Impl rule__ConstDecl__Group_1_1__1
            {
            pushFollow(FOLLOW_13);
            rule__ConstDecl__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConstDecl__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstDecl__Group_1_1__0"


    // $ANTLR start "rule__ConstDecl__Group_1_1__0__Impl"
    // InternalGo.g:4454:1: rule__ConstDecl__Group_1_1__0__Impl : ( '(' ) ;
    public final void rule__ConstDecl__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4458:1: ( ( '(' ) )
            // InternalGo.g:4459:1: ( '(' )
            {
            // InternalGo.g:4459:1: ( '(' )
            // InternalGo.g:4460:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0()); 
            }
            match(input,65,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstDecl__Group_1_1__0__Impl"


    // $ANTLR start "rule__ConstDecl__Group_1_1__1"
    // InternalGo.g:4469:1: rule__ConstDecl__Group_1_1__1 : rule__ConstDecl__Group_1_1__1__Impl rule__ConstDecl__Group_1_1__2 ;
    public final void rule__ConstDecl__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4473:1: ( rule__ConstDecl__Group_1_1__1__Impl rule__ConstDecl__Group_1_1__2 )
            // InternalGo.g:4474:2: rule__ConstDecl__Group_1_1__1__Impl rule__ConstDecl__Group_1_1__2
            {
            pushFollow(FOLLOW_13);
            rule__ConstDecl__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConstDecl__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstDecl__Group_1_1__1"


    // $ANTLR start "rule__ConstDecl__Group_1_1__1__Impl"
    // InternalGo.g:4481:1: rule__ConstDecl__Group_1_1__1__Impl : ( ( rule__ConstDecl__ConstSpecAssignment_1_1_1 )* ) ;
    public final void rule__ConstDecl__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4485:1: ( ( ( rule__ConstDecl__ConstSpecAssignment_1_1_1 )* ) )
            // InternalGo.g:4486:1: ( ( rule__ConstDecl__ConstSpecAssignment_1_1_1 )* )
            {
            // InternalGo.g:4486:1: ( ( rule__ConstDecl__ConstSpecAssignment_1_1_1 )* )
            // InternalGo.g:4487:2: ( rule__ConstDecl__ConstSpecAssignment_1_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstDeclAccess().getConstSpecAssignment_1_1_1()); 
            }
            // InternalGo.g:4488:2: ( rule__ConstDecl__ConstSpecAssignment_1_1_1 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==RULE_IDENTIFIER) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalGo.g:4488:3: rule__ConstDecl__ConstSpecAssignment_1_1_1
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__ConstDecl__ConstSpecAssignment_1_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstDeclAccess().getConstSpecAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstDecl__Group_1_1__1__Impl"


    // $ANTLR start "rule__ConstDecl__Group_1_1__2"
    // InternalGo.g:4496:1: rule__ConstDecl__Group_1_1__2 : rule__ConstDecl__Group_1_1__2__Impl ;
    public final void rule__ConstDecl__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4500:1: ( rule__ConstDecl__Group_1_1__2__Impl )
            // InternalGo.g:4501:2: rule__ConstDecl__Group_1_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConstDecl__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstDecl__Group_1_1__2"


    // $ANTLR start "rule__ConstDecl__Group_1_1__2__Impl"
    // InternalGo.g:4507:1: rule__ConstDecl__Group_1_1__2__Impl : ( ')' ) ;
    public final void rule__ConstDecl__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4511:1: ( ( ')' ) )
            // InternalGo.g:4512:1: ( ')' )
            {
            // InternalGo.g:4512:1: ( ')' )
            // InternalGo.g:4513:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_1_1_2()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstDecl__Group_1_1__2__Impl"


    // $ANTLR start "rule__ConstSpec__Group__0"
    // InternalGo.g:4523:1: rule__ConstSpec__Group__0 : rule__ConstSpec__Group__0__Impl rule__ConstSpec__Group__1 ;
    public final void rule__ConstSpec__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4527:1: ( rule__ConstSpec__Group__0__Impl rule__ConstSpec__Group__1 )
            // InternalGo.g:4528:2: rule__ConstSpec__Group__0__Impl rule__ConstSpec__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__ConstSpec__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConstSpec__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstSpec__Group__0"


    // $ANTLR start "rule__ConstSpec__Group__0__Impl"
    // InternalGo.g:4535:1: rule__ConstSpec__Group__0__Impl : ( ( rule__ConstSpec__IdentifierListAssignment_0 ) ) ;
    public final void rule__ConstSpec__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4539:1: ( ( ( rule__ConstSpec__IdentifierListAssignment_0 ) ) )
            // InternalGo.g:4540:1: ( ( rule__ConstSpec__IdentifierListAssignment_0 ) )
            {
            // InternalGo.g:4540:1: ( ( rule__ConstSpec__IdentifierListAssignment_0 ) )
            // InternalGo.g:4541:2: ( rule__ConstSpec__IdentifierListAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstSpecAccess().getIdentifierListAssignment_0()); 
            }
            // InternalGo.g:4542:2: ( rule__ConstSpec__IdentifierListAssignment_0 )
            // InternalGo.g:4542:3: rule__ConstSpec__IdentifierListAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ConstSpec__IdentifierListAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstSpecAccess().getIdentifierListAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstSpec__Group__0__Impl"


    // $ANTLR start "rule__ConstSpec__Group__1"
    // InternalGo.g:4550:1: rule__ConstSpec__Group__1 : rule__ConstSpec__Group__1__Impl ;
    public final void rule__ConstSpec__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4554:1: ( rule__ConstSpec__Group__1__Impl )
            // InternalGo.g:4555:2: rule__ConstSpec__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConstSpec__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstSpec__Group__1"


    // $ANTLR start "rule__ConstSpec__Group__1__Impl"
    // InternalGo.g:4561:1: rule__ConstSpec__Group__1__Impl : ( ( rule__ConstSpec__Group_1__0 )? ) ;
    public final void rule__ConstSpec__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4565:1: ( ( ( rule__ConstSpec__Group_1__0 )? ) )
            // InternalGo.g:4566:1: ( ( rule__ConstSpec__Group_1__0 )? )
            {
            // InternalGo.g:4566:1: ( ( rule__ConstSpec__Group_1__0 )? )
            // InternalGo.g:4567:2: ( rule__ConstSpec__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstSpecAccess().getGroup_1()); 
            }
            // InternalGo.g:4568:2: ( rule__ConstSpec__Group_1__0 )?
            int alt58=2;
            alt58 = dfa58.predict(input);
            switch (alt58) {
                case 1 :
                    // InternalGo.g:4568:3: rule__ConstSpec__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConstSpec__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstSpecAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstSpec__Group__1__Impl"


    // $ANTLR start "rule__ConstSpec__Group_1__0"
    // InternalGo.g:4577:1: rule__ConstSpec__Group_1__0 : rule__ConstSpec__Group_1__0__Impl rule__ConstSpec__Group_1__1 ;
    public final void rule__ConstSpec__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4581:1: ( rule__ConstSpec__Group_1__0__Impl rule__ConstSpec__Group_1__1 )
            // InternalGo.g:4582:2: rule__ConstSpec__Group_1__0__Impl rule__ConstSpec__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__ConstSpec__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConstSpec__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstSpec__Group_1__0"


    // $ANTLR start "rule__ConstSpec__Group_1__0__Impl"
    // InternalGo.g:4589:1: rule__ConstSpec__Group_1__0__Impl : ( ( rule__ConstSpec__TypeAssignment_1_0 )? ) ;
    public final void rule__ConstSpec__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4593:1: ( ( ( rule__ConstSpec__TypeAssignment_1_0 )? ) )
            // InternalGo.g:4594:1: ( ( rule__ConstSpec__TypeAssignment_1_0 )? )
            {
            // InternalGo.g:4594:1: ( ( rule__ConstSpec__TypeAssignment_1_0 )? )
            // InternalGo.g:4595:2: ( rule__ConstSpec__TypeAssignment_1_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstSpecAccess().getTypeAssignment_1_0()); 
            }
            // InternalGo.g:4596:2: ( rule__ConstSpec__TypeAssignment_1_0 )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==RULE_IDENTIFIER||LA59_0==52||LA59_0==60||LA59_0==62||LA59_0==65||LA59_0==71||LA59_0==90||(LA59_0>=92 && LA59_0<=93)||LA59_0==95) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalGo.g:4596:3: rule__ConstSpec__TypeAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConstSpec__TypeAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstSpecAccess().getTypeAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstSpec__Group_1__0__Impl"


    // $ANTLR start "rule__ConstSpec__Group_1__1"
    // InternalGo.g:4604:1: rule__ConstSpec__Group_1__1 : rule__ConstSpec__Group_1__1__Impl rule__ConstSpec__Group_1__2 ;
    public final void rule__ConstSpec__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4608:1: ( rule__ConstSpec__Group_1__1__Impl rule__ConstSpec__Group_1__2 )
            // InternalGo.g:4609:2: rule__ConstSpec__Group_1__1__Impl rule__ConstSpec__Group_1__2
            {
            pushFollow(FOLLOW_16);
            rule__ConstSpec__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConstSpec__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstSpec__Group_1__1"


    // $ANTLR start "rule__ConstSpec__Group_1__1__Impl"
    // InternalGo.g:4616:1: rule__ConstSpec__Group_1__1__Impl : ( '=' ) ;
    public final void rule__ConstSpec__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4620:1: ( ( '=' ) )
            // InternalGo.g:4621:1: ( '=' )
            {
            // InternalGo.g:4621:1: ( '=' )
            // InternalGo.g:4622:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1()); 
            }
            match(input,68,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstSpec__Group_1__1__Impl"


    // $ANTLR start "rule__ConstSpec__Group_1__2"
    // InternalGo.g:4631:1: rule__ConstSpec__Group_1__2 : rule__ConstSpec__Group_1__2__Impl ;
    public final void rule__ConstSpec__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4635:1: ( rule__ConstSpec__Group_1__2__Impl )
            // InternalGo.g:4636:2: rule__ConstSpec__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConstSpec__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstSpec__Group_1__2"


    // $ANTLR start "rule__ConstSpec__Group_1__2__Impl"
    // InternalGo.g:4642:1: rule__ConstSpec__Group_1__2__Impl : ( ( rule__ConstSpec__ExpressionListAssignment_1_2 ) ) ;
    public final void rule__ConstSpec__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4646:1: ( ( ( rule__ConstSpec__ExpressionListAssignment_1_2 ) ) )
            // InternalGo.g:4647:1: ( ( rule__ConstSpec__ExpressionListAssignment_1_2 ) )
            {
            // InternalGo.g:4647:1: ( ( rule__ConstSpec__ExpressionListAssignment_1_2 ) )
            // InternalGo.g:4648:2: ( rule__ConstSpec__ExpressionListAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstSpecAccess().getExpressionListAssignment_1_2()); 
            }
            // InternalGo.g:4649:2: ( rule__ConstSpec__ExpressionListAssignment_1_2 )
            // InternalGo.g:4649:3: rule__ConstSpec__ExpressionListAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__ConstSpec__ExpressionListAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstSpecAccess().getExpressionListAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstSpec__Group_1__2__Impl"


    // $ANTLR start "rule__IdentifierList__Group__0"
    // InternalGo.g:4658:1: rule__IdentifierList__Group__0 : rule__IdentifierList__Group__0__Impl rule__IdentifierList__Group__1 ;
    public final void rule__IdentifierList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4662:1: ( rule__IdentifierList__Group__0__Impl rule__IdentifierList__Group__1 )
            // InternalGo.g:4663:2: rule__IdentifierList__Group__0__Impl rule__IdentifierList__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__IdentifierList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IdentifierList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdentifierList__Group__0"


    // $ANTLR start "rule__IdentifierList__Group__0__Impl"
    // InternalGo.g:4670:1: rule__IdentifierList__Group__0__Impl : ( RULE_IDENTIFIER ) ;
    public final void rule__IdentifierList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4674:1: ( ( RULE_IDENTIFIER ) )
            // InternalGo.g:4675:1: ( RULE_IDENTIFIER )
            {
            // InternalGo.g:4675:1: ( RULE_IDENTIFIER )
            // InternalGo.g:4676:2: RULE_IDENTIFIER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierListAccess().getIDENTIFIERTerminalRuleCall_0()); 
            }
            match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierListAccess().getIDENTIFIERTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdentifierList__Group__0__Impl"


    // $ANTLR start "rule__IdentifierList__Group__1"
    // InternalGo.g:4685:1: rule__IdentifierList__Group__1 : rule__IdentifierList__Group__1__Impl ;
    public final void rule__IdentifierList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4689:1: ( rule__IdentifierList__Group__1__Impl )
            // InternalGo.g:4690:2: rule__IdentifierList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IdentifierList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdentifierList__Group__1"


    // $ANTLR start "rule__IdentifierList__Group__1__Impl"
    // InternalGo.g:4696:1: rule__IdentifierList__Group__1__Impl : ( ( rule__IdentifierList__Group_1__0 )* ) ;
    public final void rule__IdentifierList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4700:1: ( ( ( rule__IdentifierList__Group_1__0 )* ) )
            // InternalGo.g:4701:1: ( ( rule__IdentifierList__Group_1__0 )* )
            {
            // InternalGo.g:4701:1: ( ( rule__IdentifierList__Group_1__0 )* )
            // InternalGo.g:4702:2: ( rule__IdentifierList__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierListAccess().getGroup_1()); 
            }
            // InternalGo.g:4703:2: ( rule__IdentifierList__Group_1__0 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==69) ) {
                    int LA60_2 = input.LA(2);

                    if ( (LA60_2==RULE_IDENTIFIER) ) {
                        int LA60_3 = input.LA(3);

                        if ( (synpred121_InternalGo()) ) {
                            alt60=1;
                        }


                    }


                }


                switch (alt60) {
            	case 1 :
            	    // InternalGo.g:4703:3: rule__IdentifierList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_18);
            	    rule__IdentifierList__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdentifierList__Group__1__Impl"


    // $ANTLR start "rule__IdentifierList__Group_1__0"
    // InternalGo.g:4712:1: rule__IdentifierList__Group_1__0 : rule__IdentifierList__Group_1__0__Impl rule__IdentifierList__Group_1__1 ;
    public final void rule__IdentifierList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4716:1: ( rule__IdentifierList__Group_1__0__Impl rule__IdentifierList__Group_1__1 )
            // InternalGo.g:4717:2: rule__IdentifierList__Group_1__0__Impl rule__IdentifierList__Group_1__1
            {
            pushFollow(FOLLOW_7);
            rule__IdentifierList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IdentifierList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdentifierList__Group_1__0"


    // $ANTLR start "rule__IdentifierList__Group_1__0__Impl"
    // InternalGo.g:4724:1: rule__IdentifierList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__IdentifierList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4728:1: ( ( ',' ) )
            // InternalGo.g:4729:1: ( ',' )
            {
            // InternalGo.g:4729:1: ( ',' )
            // InternalGo.g:4730:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0()); 
            }
            match(input,69,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdentifierList__Group_1__0__Impl"


    // $ANTLR start "rule__IdentifierList__Group_1__1"
    // InternalGo.g:4739:1: rule__IdentifierList__Group_1__1 : rule__IdentifierList__Group_1__1__Impl ;
    public final void rule__IdentifierList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4743:1: ( rule__IdentifierList__Group_1__1__Impl )
            // InternalGo.g:4744:2: rule__IdentifierList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IdentifierList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdentifierList__Group_1__1"


    // $ANTLR start "rule__IdentifierList__Group_1__1__Impl"
    // InternalGo.g:4750:1: rule__IdentifierList__Group_1__1__Impl : ( RULE_IDENTIFIER ) ;
    public final void rule__IdentifierList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4754:1: ( ( RULE_IDENTIFIER ) )
            // InternalGo.g:4755:1: ( RULE_IDENTIFIER )
            {
            // InternalGo.g:4755:1: ( RULE_IDENTIFIER )
            // InternalGo.g:4756:2: RULE_IDENTIFIER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierListAccess().getIDENTIFIERTerminalRuleCall_1_1()); 
            }
            match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierListAccess().getIDENTIFIERTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IdentifierList__Group_1__1__Impl"


    // $ANTLR start "rule__ExpressionList__Group__0"
    // InternalGo.g:4766:1: rule__ExpressionList__Group__0 : rule__ExpressionList__Group__0__Impl rule__ExpressionList__Group__1 ;
    public final void rule__ExpressionList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4770:1: ( rule__ExpressionList__Group__0__Impl rule__ExpressionList__Group__1 )
            // InternalGo.g:4771:2: rule__ExpressionList__Group__0__Impl rule__ExpressionList__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__ExpressionList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionList__Group__0"


    // $ANTLR start "rule__ExpressionList__Group__0__Impl"
    // InternalGo.g:4778:1: rule__ExpressionList__Group__0__Impl : ( ( rule__ExpressionList__ExpressionAssignment_0 ) ) ;
    public final void rule__ExpressionList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4782:1: ( ( ( rule__ExpressionList__ExpressionAssignment_0 ) ) )
            // InternalGo.g:4783:1: ( ( rule__ExpressionList__ExpressionAssignment_0 ) )
            {
            // InternalGo.g:4783:1: ( ( rule__ExpressionList__ExpressionAssignment_0 ) )
            // InternalGo.g:4784:2: ( rule__ExpressionList__ExpressionAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionListAccess().getExpressionAssignment_0()); 
            }
            // InternalGo.g:4785:2: ( rule__ExpressionList__ExpressionAssignment_0 )
            // InternalGo.g:4785:3: rule__ExpressionList__ExpressionAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionList__ExpressionAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionListAccess().getExpressionAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionList__Group__0__Impl"


    // $ANTLR start "rule__ExpressionList__Group__1"
    // InternalGo.g:4793:1: rule__ExpressionList__Group__1 : rule__ExpressionList__Group__1__Impl ;
    public final void rule__ExpressionList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4797:1: ( rule__ExpressionList__Group__1__Impl )
            // InternalGo.g:4798:2: rule__ExpressionList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionList__Group__1"


    // $ANTLR start "rule__ExpressionList__Group__1__Impl"
    // InternalGo.g:4804:1: rule__ExpressionList__Group__1__Impl : ( ( rule__ExpressionList__Group_1__0 )* ) ;
    public final void rule__ExpressionList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4808:1: ( ( ( rule__ExpressionList__Group_1__0 )* ) )
            // InternalGo.g:4809:1: ( ( rule__ExpressionList__Group_1__0 )* )
            {
            // InternalGo.g:4809:1: ( ( rule__ExpressionList__Group_1__0 )* )
            // InternalGo.g:4810:2: ( rule__ExpressionList__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionListAccess().getGroup_1()); 
            }
            // InternalGo.g:4811:2: ( rule__ExpressionList__Group_1__0 )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==69) ) {
                    int LA61_2 = input.LA(2);

                    if ( (synpred122_InternalGo()) ) {
                        alt61=1;
                    }


                }


                switch (alt61) {
            	case 1 :
            	    // InternalGo.g:4811:3: rule__ExpressionList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_18);
            	    rule__ExpressionList__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionList__Group__1__Impl"


    // $ANTLR start "rule__ExpressionList__Group_1__0"
    // InternalGo.g:4820:1: rule__ExpressionList__Group_1__0 : rule__ExpressionList__Group_1__0__Impl rule__ExpressionList__Group_1__1 ;
    public final void rule__ExpressionList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4824:1: ( rule__ExpressionList__Group_1__0__Impl rule__ExpressionList__Group_1__1 )
            // InternalGo.g:4825:2: rule__ExpressionList__Group_1__0__Impl rule__ExpressionList__Group_1__1
            {
            pushFollow(FOLLOW_16);
            rule__ExpressionList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionList__Group_1__0"


    // $ANTLR start "rule__ExpressionList__Group_1__0__Impl"
    // InternalGo.g:4832:1: rule__ExpressionList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__ExpressionList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4836:1: ( ( ',' ) )
            // InternalGo.g:4837:1: ( ',' )
            {
            // InternalGo.g:4837:1: ( ',' )
            // InternalGo.g:4838:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); 
            }
            match(input,69,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionList__Group_1__0__Impl"


    // $ANTLR start "rule__ExpressionList__Group_1__1"
    // InternalGo.g:4847:1: rule__ExpressionList__Group_1__1 : rule__ExpressionList__Group_1__1__Impl ;
    public final void rule__ExpressionList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4851:1: ( rule__ExpressionList__Group_1__1__Impl )
            // InternalGo.g:4852:2: rule__ExpressionList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionList__Group_1__1"


    // $ANTLR start "rule__ExpressionList__Group_1__1__Impl"
    // InternalGo.g:4858:1: rule__ExpressionList__Group_1__1__Impl : ( ( rule__ExpressionList__ExpressionAssignment_1_1 ) ) ;
    public final void rule__ExpressionList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4862:1: ( ( ( rule__ExpressionList__ExpressionAssignment_1_1 ) ) )
            // InternalGo.g:4863:1: ( ( rule__ExpressionList__ExpressionAssignment_1_1 ) )
            {
            // InternalGo.g:4863:1: ( ( rule__ExpressionList__ExpressionAssignment_1_1 ) )
            // InternalGo.g:4864:2: ( rule__ExpressionList__ExpressionAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionListAccess().getExpressionAssignment_1_1()); 
            }
            // InternalGo.g:4865:2: ( rule__ExpressionList__ExpressionAssignment_1_1 )
            // InternalGo.g:4865:3: rule__ExpressionList__ExpressionAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionList__ExpressionAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionListAccess().getExpressionAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionList__Group_1__1__Impl"


    // $ANTLR start "rule__TypeDecl__Group__0"
    // InternalGo.g:4874:1: rule__TypeDecl__Group__0 : rule__TypeDecl__Group__0__Impl rule__TypeDecl__Group__1 ;
    public final void rule__TypeDecl__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4878:1: ( rule__TypeDecl__Group__0__Impl rule__TypeDecl__Group__1 )
            // InternalGo.g:4879:2: rule__TypeDecl__Group__0__Impl rule__TypeDecl__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__TypeDecl__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeDecl__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeDecl__Group__0"


    // $ANTLR start "rule__TypeDecl__Group__0__Impl"
    // InternalGo.g:4886:1: rule__TypeDecl__Group__0__Impl : ( 'type' ) ;
    public final void rule__TypeDecl__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4890:1: ( ( 'type' ) )
            // InternalGo.g:4891:1: ( 'type' )
            {
            // InternalGo.g:4891:1: ( 'type' )
            // InternalGo.g:4892:2: 'type'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeDeclAccess().getTypeKeyword_0()); 
            }
            match(input,70,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeDeclAccess().getTypeKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeDecl__Group__0__Impl"


    // $ANTLR start "rule__TypeDecl__Group__1"
    // InternalGo.g:4901:1: rule__TypeDecl__Group__1 : rule__TypeDecl__Group__1__Impl ;
    public final void rule__TypeDecl__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4905:1: ( rule__TypeDecl__Group__1__Impl )
            // InternalGo.g:4906:2: rule__TypeDecl__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TypeDecl__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeDecl__Group__1"


    // $ANTLR start "rule__TypeDecl__Group__1__Impl"
    // InternalGo.g:4912:1: rule__TypeDecl__Group__1__Impl : ( ( rule__TypeDecl__Alternatives_1 ) ) ;
    public final void rule__TypeDecl__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4916:1: ( ( ( rule__TypeDecl__Alternatives_1 ) ) )
            // InternalGo.g:4917:1: ( ( rule__TypeDecl__Alternatives_1 ) )
            {
            // InternalGo.g:4917:1: ( ( rule__TypeDecl__Alternatives_1 ) )
            // InternalGo.g:4918:2: ( rule__TypeDecl__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeDeclAccess().getAlternatives_1()); 
            }
            // InternalGo.g:4919:2: ( rule__TypeDecl__Alternatives_1 )
            // InternalGo.g:4919:3: rule__TypeDecl__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__TypeDecl__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeDeclAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeDecl__Group__1__Impl"


    // $ANTLR start "rule__TypeDecl__Group_1_1__0"
    // InternalGo.g:4928:1: rule__TypeDecl__Group_1_1__0 : rule__TypeDecl__Group_1_1__0__Impl rule__TypeDecl__Group_1_1__1 ;
    public final void rule__TypeDecl__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4932:1: ( rule__TypeDecl__Group_1_1__0__Impl rule__TypeDecl__Group_1_1__1 )
            // InternalGo.g:4933:2: rule__TypeDecl__Group_1_1__0__Impl rule__TypeDecl__Group_1_1__1
            {
            pushFollow(FOLLOW_13);
            rule__TypeDecl__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeDecl__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeDecl__Group_1_1__0"


    // $ANTLR start "rule__TypeDecl__Group_1_1__0__Impl"
    // InternalGo.g:4940:1: rule__TypeDecl__Group_1_1__0__Impl : ( '(' ) ;
    public final void rule__TypeDecl__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4944:1: ( ( '(' ) )
            // InternalGo.g:4945:1: ( '(' )
            {
            // InternalGo.g:4945:1: ( '(' )
            // InternalGo.g:4946:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0()); 
            }
            match(input,65,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeDecl__Group_1_1__0__Impl"


    // $ANTLR start "rule__TypeDecl__Group_1_1__1"
    // InternalGo.g:4955:1: rule__TypeDecl__Group_1_1__1 : rule__TypeDecl__Group_1_1__1__Impl rule__TypeDecl__Group_1_1__2 ;
    public final void rule__TypeDecl__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4959:1: ( rule__TypeDecl__Group_1_1__1__Impl rule__TypeDecl__Group_1_1__2 )
            // InternalGo.g:4960:2: rule__TypeDecl__Group_1_1__1__Impl rule__TypeDecl__Group_1_1__2
            {
            pushFollow(FOLLOW_13);
            rule__TypeDecl__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeDecl__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeDecl__Group_1_1__1"


    // $ANTLR start "rule__TypeDecl__Group_1_1__1__Impl"
    // InternalGo.g:4967:1: rule__TypeDecl__Group_1_1__1__Impl : ( ( rule__TypeDecl__TypeSpecAssignment_1_1_1 )* ) ;
    public final void rule__TypeDecl__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4971:1: ( ( ( rule__TypeDecl__TypeSpecAssignment_1_1_1 )* ) )
            // InternalGo.g:4972:1: ( ( rule__TypeDecl__TypeSpecAssignment_1_1_1 )* )
            {
            // InternalGo.g:4972:1: ( ( rule__TypeDecl__TypeSpecAssignment_1_1_1 )* )
            // InternalGo.g:4973:2: ( rule__TypeDecl__TypeSpecAssignment_1_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeDeclAccess().getTypeSpecAssignment_1_1_1()); 
            }
            // InternalGo.g:4974:2: ( rule__TypeDecl__TypeSpecAssignment_1_1_1 )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==RULE_IDENTIFIER) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalGo.g:4974:3: rule__TypeDecl__TypeSpecAssignment_1_1_1
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__TypeDecl__TypeSpecAssignment_1_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeDeclAccess().getTypeSpecAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeDecl__Group_1_1__1__Impl"


    // $ANTLR start "rule__TypeDecl__Group_1_1__2"
    // InternalGo.g:4982:1: rule__TypeDecl__Group_1_1__2 : rule__TypeDecl__Group_1_1__2__Impl ;
    public final void rule__TypeDecl__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4986:1: ( rule__TypeDecl__Group_1_1__2__Impl )
            // InternalGo.g:4987:2: rule__TypeDecl__Group_1_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TypeDecl__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeDecl__Group_1_1__2"


    // $ANTLR start "rule__TypeDecl__Group_1_1__2__Impl"
    // InternalGo.g:4993:1: rule__TypeDecl__Group_1_1__2__Impl : ( ')' ) ;
    public final void rule__TypeDecl__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:4997:1: ( ( ')' ) )
            // InternalGo.g:4998:1: ( ')' )
            {
            // InternalGo.g:4998:1: ( ')' )
            // InternalGo.g:4999:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_1_1_2()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeDecl__Group_1_1__2__Impl"


    // $ANTLR start "rule__TypeSpec__Group__0"
    // InternalGo.g:5009:1: rule__TypeSpec__Group__0 : rule__TypeSpec__Group__0__Impl rule__TypeSpec__Group__1 ;
    public final void rule__TypeSpec__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5013:1: ( rule__TypeSpec__Group__0__Impl rule__TypeSpec__Group__1 )
            // InternalGo.g:5014:2: rule__TypeSpec__Group__0__Impl rule__TypeSpec__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__TypeSpec__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeSpec__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSpec__Group__0"


    // $ANTLR start "rule__TypeSpec__Group__0__Impl"
    // InternalGo.g:5021:1: rule__TypeSpec__Group__0__Impl : ( RULE_IDENTIFIER ) ;
    public final void rule__TypeSpec__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5025:1: ( ( RULE_IDENTIFIER ) )
            // InternalGo.g:5026:1: ( RULE_IDENTIFIER )
            {
            // InternalGo.g:5026:1: ( RULE_IDENTIFIER )
            // InternalGo.g:5027:2: RULE_IDENTIFIER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSpecAccess().getIDENTIFIERTerminalRuleCall_0()); 
            }
            match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSpecAccess().getIDENTIFIERTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSpec__Group__0__Impl"


    // $ANTLR start "rule__TypeSpec__Group__1"
    // InternalGo.g:5036:1: rule__TypeSpec__Group__1 : rule__TypeSpec__Group__1__Impl ;
    public final void rule__TypeSpec__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5040:1: ( rule__TypeSpec__Group__1__Impl )
            // InternalGo.g:5041:2: rule__TypeSpec__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TypeSpec__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSpec__Group__1"


    // $ANTLR start "rule__TypeSpec__Group__1__Impl"
    // InternalGo.g:5047:1: rule__TypeSpec__Group__1__Impl : ( ( rule__TypeSpec__TypeAssignment_1 ) ) ;
    public final void rule__TypeSpec__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5051:1: ( ( ( rule__TypeSpec__TypeAssignment_1 ) ) )
            // InternalGo.g:5052:1: ( ( rule__TypeSpec__TypeAssignment_1 ) )
            {
            // InternalGo.g:5052:1: ( ( rule__TypeSpec__TypeAssignment_1 ) )
            // InternalGo.g:5053:2: ( rule__TypeSpec__TypeAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSpecAccess().getTypeAssignment_1()); 
            }
            // InternalGo.g:5054:2: ( rule__TypeSpec__TypeAssignment_1 )
            // InternalGo.g:5054:3: rule__TypeSpec__TypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TypeSpec__TypeAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSpecAccess().getTypeAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSpec__Group__1__Impl"


    // $ANTLR start "rule__FunctionDecl__Group__0"
    // InternalGo.g:5063:1: rule__FunctionDecl__Group__0 : rule__FunctionDecl__Group__0__Impl rule__FunctionDecl__Group__1 ;
    public final void rule__FunctionDecl__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5067:1: ( rule__FunctionDecl__Group__0__Impl rule__FunctionDecl__Group__1 )
            // InternalGo.g:5068:2: rule__FunctionDecl__Group__0__Impl rule__FunctionDecl__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__FunctionDecl__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDecl__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDecl__Group__0"


    // $ANTLR start "rule__FunctionDecl__Group__0__Impl"
    // InternalGo.g:5075:1: rule__FunctionDecl__Group__0__Impl : ( 'func' ) ;
    public final void rule__FunctionDecl__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5079:1: ( ( 'func' ) )
            // InternalGo.g:5080:1: ( 'func' )
            {
            // InternalGo.g:5080:1: ( 'func' )
            // InternalGo.g:5081:2: 'func'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDeclAccess().getFuncKeyword_0()); 
            }
            match(input,71,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDeclAccess().getFuncKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDecl__Group__0__Impl"


    // $ANTLR start "rule__FunctionDecl__Group__1"
    // InternalGo.g:5090:1: rule__FunctionDecl__Group__1 : rule__FunctionDecl__Group__1__Impl rule__FunctionDecl__Group__2 ;
    public final void rule__FunctionDecl__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5094:1: ( rule__FunctionDecl__Group__1__Impl rule__FunctionDecl__Group__2 )
            // InternalGo.g:5095:2: rule__FunctionDecl__Group__1__Impl rule__FunctionDecl__Group__2
            {
            pushFollow(FOLLOW_20);
            rule__FunctionDecl__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDecl__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDecl__Group__1"


    // $ANTLR start "rule__FunctionDecl__Group__1__Impl"
    // InternalGo.g:5102:1: rule__FunctionDecl__Group__1__Impl : ( RULE_IDENTIFIER ) ;
    public final void rule__FunctionDecl__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5106:1: ( ( RULE_IDENTIFIER ) )
            // InternalGo.g:5107:1: ( RULE_IDENTIFIER )
            {
            // InternalGo.g:5107:1: ( RULE_IDENTIFIER )
            // InternalGo.g:5108:2: RULE_IDENTIFIER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDeclAccess().getIDENTIFIERTerminalRuleCall_1()); 
            }
            match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDeclAccess().getIDENTIFIERTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDecl__Group__1__Impl"


    // $ANTLR start "rule__FunctionDecl__Group__2"
    // InternalGo.g:5117:1: rule__FunctionDecl__Group__2 : rule__FunctionDecl__Group__2__Impl ;
    public final void rule__FunctionDecl__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5121:1: ( rule__FunctionDecl__Group__2__Impl )
            // InternalGo.g:5122:2: rule__FunctionDecl__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDecl__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDecl__Group__2"


    // $ANTLR start "rule__FunctionDecl__Group__2__Impl"
    // InternalGo.g:5128:1: rule__FunctionDecl__Group__2__Impl : ( ( rule__FunctionDecl__Alternatives_2 ) ) ;
    public final void rule__FunctionDecl__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5132:1: ( ( ( rule__FunctionDecl__Alternatives_2 ) ) )
            // InternalGo.g:5133:1: ( ( rule__FunctionDecl__Alternatives_2 ) )
            {
            // InternalGo.g:5133:1: ( ( rule__FunctionDecl__Alternatives_2 ) )
            // InternalGo.g:5134:2: ( rule__FunctionDecl__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDeclAccess().getAlternatives_2()); 
            }
            // InternalGo.g:5135:2: ( rule__FunctionDecl__Alternatives_2 )
            // InternalGo.g:5135:3: rule__FunctionDecl__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDecl__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDeclAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDecl__Group__2__Impl"


    // $ANTLR start "rule__Function__Group__0"
    // InternalGo.g:5144:1: rule__Function__Group__0 : rule__Function__Group__0__Impl rule__Function__Group__1 ;
    public final void rule__Function__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5148:1: ( rule__Function__Group__0__Impl rule__Function__Group__1 )
            // InternalGo.g:5149:2: rule__Function__Group__0__Impl rule__Function__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__Function__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Function__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__0"


    // $ANTLR start "rule__Function__Group__0__Impl"
    // InternalGo.g:5156:1: rule__Function__Group__0__Impl : ( ( rule__Function__SignatureAssignment_0 ) ) ;
    public final void rule__Function__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5160:1: ( ( ( rule__Function__SignatureAssignment_0 ) ) )
            // InternalGo.g:5161:1: ( ( rule__Function__SignatureAssignment_0 ) )
            {
            // InternalGo.g:5161:1: ( ( rule__Function__SignatureAssignment_0 ) )
            // InternalGo.g:5162:2: ( rule__Function__SignatureAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getSignatureAssignment_0()); 
            }
            // InternalGo.g:5163:2: ( rule__Function__SignatureAssignment_0 )
            // InternalGo.g:5163:3: rule__Function__SignatureAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Function__SignatureAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getSignatureAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__0__Impl"


    // $ANTLR start "rule__Function__Group__1"
    // InternalGo.g:5171:1: rule__Function__Group__1 : rule__Function__Group__1__Impl ;
    public final void rule__Function__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5175:1: ( rule__Function__Group__1__Impl )
            // InternalGo.g:5176:2: rule__Function__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Function__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__1"


    // $ANTLR start "rule__Function__Group__1__Impl"
    // InternalGo.g:5182:1: rule__Function__Group__1__Impl : ( ( rule__Function__BlockAssignment_1 ) ) ;
    public final void rule__Function__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5186:1: ( ( ( rule__Function__BlockAssignment_1 ) ) )
            // InternalGo.g:5187:1: ( ( rule__Function__BlockAssignment_1 ) )
            {
            // InternalGo.g:5187:1: ( ( rule__Function__BlockAssignment_1 ) )
            // InternalGo.g:5188:2: ( rule__Function__BlockAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getBlockAssignment_1()); 
            }
            // InternalGo.g:5189:2: ( rule__Function__BlockAssignment_1 )
            // InternalGo.g:5189:3: rule__Function__BlockAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Function__BlockAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getBlockAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__1__Impl"


    // $ANTLR start "rule__MethodDecl__Group__0"
    // InternalGo.g:5198:1: rule__MethodDecl__Group__0 : rule__MethodDecl__Group__0__Impl rule__MethodDecl__Group__1 ;
    public final void rule__MethodDecl__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5202:1: ( rule__MethodDecl__Group__0__Impl rule__MethodDecl__Group__1 )
            // InternalGo.g:5203:2: rule__MethodDecl__Group__0__Impl rule__MethodDecl__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__MethodDecl__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodDecl__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodDecl__Group__0"


    // $ANTLR start "rule__MethodDecl__Group__0__Impl"
    // InternalGo.g:5210:1: rule__MethodDecl__Group__0__Impl : ( 'func' ) ;
    public final void rule__MethodDecl__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5214:1: ( ( 'func' ) )
            // InternalGo.g:5215:1: ( 'func' )
            {
            // InternalGo.g:5215:1: ( 'func' )
            // InternalGo.g:5216:2: 'func'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodDeclAccess().getFuncKeyword_0()); 
            }
            match(input,71,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodDeclAccess().getFuncKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodDecl__Group__0__Impl"


    // $ANTLR start "rule__MethodDecl__Group__1"
    // InternalGo.g:5225:1: rule__MethodDecl__Group__1 : rule__MethodDecl__Group__1__Impl rule__MethodDecl__Group__2 ;
    public final void rule__MethodDecl__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5229:1: ( rule__MethodDecl__Group__1__Impl rule__MethodDecl__Group__2 )
            // InternalGo.g:5230:2: rule__MethodDecl__Group__1__Impl rule__MethodDecl__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__MethodDecl__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodDecl__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodDecl__Group__1"


    // $ANTLR start "rule__MethodDecl__Group__1__Impl"
    // InternalGo.g:5237:1: rule__MethodDecl__Group__1__Impl : ( ( rule__MethodDecl__ReceiverAssignment_1 ) ) ;
    public final void rule__MethodDecl__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5241:1: ( ( ( rule__MethodDecl__ReceiverAssignment_1 ) ) )
            // InternalGo.g:5242:1: ( ( rule__MethodDecl__ReceiverAssignment_1 ) )
            {
            // InternalGo.g:5242:1: ( ( rule__MethodDecl__ReceiverAssignment_1 ) )
            // InternalGo.g:5243:2: ( rule__MethodDecl__ReceiverAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodDeclAccess().getReceiverAssignment_1()); 
            }
            // InternalGo.g:5244:2: ( rule__MethodDecl__ReceiverAssignment_1 )
            // InternalGo.g:5244:3: rule__MethodDecl__ReceiverAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__MethodDecl__ReceiverAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodDeclAccess().getReceiverAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodDecl__Group__1__Impl"


    // $ANTLR start "rule__MethodDecl__Group__2"
    // InternalGo.g:5252:1: rule__MethodDecl__Group__2 : rule__MethodDecl__Group__2__Impl rule__MethodDecl__Group__3 ;
    public final void rule__MethodDecl__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5256:1: ( rule__MethodDecl__Group__2__Impl rule__MethodDecl__Group__3 )
            // InternalGo.g:5257:2: rule__MethodDecl__Group__2__Impl rule__MethodDecl__Group__3
            {
            pushFollow(FOLLOW_20);
            rule__MethodDecl__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodDecl__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodDecl__Group__2"


    // $ANTLR start "rule__MethodDecl__Group__2__Impl"
    // InternalGo.g:5264:1: rule__MethodDecl__Group__2__Impl : ( RULE_IDENTIFIER ) ;
    public final void rule__MethodDecl__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5268:1: ( ( RULE_IDENTIFIER ) )
            // InternalGo.g:5269:1: ( RULE_IDENTIFIER )
            {
            // InternalGo.g:5269:1: ( RULE_IDENTIFIER )
            // InternalGo.g:5270:2: RULE_IDENTIFIER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodDeclAccess().getIDENTIFIERTerminalRuleCall_2()); 
            }
            match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodDeclAccess().getIDENTIFIERTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodDecl__Group__2__Impl"


    // $ANTLR start "rule__MethodDecl__Group__3"
    // InternalGo.g:5279:1: rule__MethodDecl__Group__3 : rule__MethodDecl__Group__3__Impl ;
    public final void rule__MethodDecl__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5283:1: ( rule__MethodDecl__Group__3__Impl )
            // InternalGo.g:5284:2: rule__MethodDecl__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MethodDecl__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodDecl__Group__3"


    // $ANTLR start "rule__MethodDecl__Group__3__Impl"
    // InternalGo.g:5290:1: rule__MethodDecl__Group__3__Impl : ( ( rule__MethodDecl__Alternatives_3 ) ) ;
    public final void rule__MethodDecl__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5294:1: ( ( ( rule__MethodDecl__Alternatives_3 ) ) )
            // InternalGo.g:5295:1: ( ( rule__MethodDecl__Alternatives_3 ) )
            {
            // InternalGo.g:5295:1: ( ( rule__MethodDecl__Alternatives_3 ) )
            // InternalGo.g:5296:2: ( rule__MethodDecl__Alternatives_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodDeclAccess().getAlternatives_3()); 
            }
            // InternalGo.g:5297:2: ( rule__MethodDecl__Alternatives_3 )
            // InternalGo.g:5297:3: rule__MethodDecl__Alternatives_3
            {
            pushFollow(FOLLOW_2);
            rule__MethodDecl__Alternatives_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodDeclAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodDecl__Group__3__Impl"


    // $ANTLR start "rule__VarDecl__Group__0"
    // InternalGo.g:5306:1: rule__VarDecl__Group__0 : rule__VarDecl__Group__0__Impl rule__VarDecl__Group__1 ;
    public final void rule__VarDecl__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5310:1: ( rule__VarDecl__Group__0__Impl rule__VarDecl__Group__1 )
            // InternalGo.g:5311:2: rule__VarDecl__Group__0__Impl rule__VarDecl__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__VarDecl__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDecl__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDecl__Group__0"


    // $ANTLR start "rule__VarDecl__Group__0__Impl"
    // InternalGo.g:5318:1: rule__VarDecl__Group__0__Impl : ( 'var' ) ;
    public final void rule__VarDecl__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5322:1: ( ( 'var' ) )
            // InternalGo.g:5323:1: ( 'var' )
            {
            // InternalGo.g:5323:1: ( 'var' )
            // InternalGo.g:5324:2: 'var'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclAccess().getVarKeyword_0()); 
            }
            match(input,72,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclAccess().getVarKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDecl__Group__0__Impl"


    // $ANTLR start "rule__VarDecl__Group__1"
    // InternalGo.g:5333:1: rule__VarDecl__Group__1 : rule__VarDecl__Group__1__Impl ;
    public final void rule__VarDecl__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5337:1: ( rule__VarDecl__Group__1__Impl )
            // InternalGo.g:5338:2: rule__VarDecl__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDecl__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDecl__Group__1"


    // $ANTLR start "rule__VarDecl__Group__1__Impl"
    // InternalGo.g:5344:1: rule__VarDecl__Group__1__Impl : ( ( rule__VarDecl__Alternatives_1 ) ) ;
    public final void rule__VarDecl__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5348:1: ( ( ( rule__VarDecl__Alternatives_1 ) ) )
            // InternalGo.g:5349:1: ( ( rule__VarDecl__Alternatives_1 ) )
            {
            // InternalGo.g:5349:1: ( ( rule__VarDecl__Alternatives_1 ) )
            // InternalGo.g:5350:2: ( rule__VarDecl__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclAccess().getAlternatives_1()); 
            }
            // InternalGo.g:5351:2: ( rule__VarDecl__Alternatives_1 )
            // InternalGo.g:5351:3: rule__VarDecl__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDecl__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDecl__Group__1__Impl"


    // $ANTLR start "rule__VarDecl__Group_1_1__0"
    // InternalGo.g:5360:1: rule__VarDecl__Group_1_1__0 : rule__VarDecl__Group_1_1__0__Impl rule__VarDecl__Group_1_1__1 ;
    public final void rule__VarDecl__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5364:1: ( rule__VarDecl__Group_1_1__0__Impl rule__VarDecl__Group_1_1__1 )
            // InternalGo.g:5365:2: rule__VarDecl__Group_1_1__0__Impl rule__VarDecl__Group_1_1__1
            {
            pushFollow(FOLLOW_13);
            rule__VarDecl__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDecl__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDecl__Group_1_1__0"


    // $ANTLR start "rule__VarDecl__Group_1_1__0__Impl"
    // InternalGo.g:5372:1: rule__VarDecl__Group_1_1__0__Impl : ( '(' ) ;
    public final void rule__VarDecl__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5376:1: ( ( '(' ) )
            // InternalGo.g:5377:1: ( '(' )
            {
            // InternalGo.g:5377:1: ( '(' )
            // InternalGo.g:5378:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0()); 
            }
            match(input,65,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDecl__Group_1_1__0__Impl"


    // $ANTLR start "rule__VarDecl__Group_1_1__1"
    // InternalGo.g:5387:1: rule__VarDecl__Group_1_1__1 : rule__VarDecl__Group_1_1__1__Impl rule__VarDecl__Group_1_1__2 ;
    public final void rule__VarDecl__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5391:1: ( rule__VarDecl__Group_1_1__1__Impl rule__VarDecl__Group_1_1__2 )
            // InternalGo.g:5392:2: rule__VarDecl__Group_1_1__1__Impl rule__VarDecl__Group_1_1__2
            {
            pushFollow(FOLLOW_13);
            rule__VarDecl__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDecl__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDecl__Group_1_1__1"


    // $ANTLR start "rule__VarDecl__Group_1_1__1__Impl"
    // InternalGo.g:5399:1: rule__VarDecl__Group_1_1__1__Impl : ( ( rule__VarDecl__VarSpecAssignment_1_1_1 )* ) ;
    public final void rule__VarDecl__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5403:1: ( ( ( rule__VarDecl__VarSpecAssignment_1_1_1 )* ) )
            // InternalGo.g:5404:1: ( ( rule__VarDecl__VarSpecAssignment_1_1_1 )* )
            {
            // InternalGo.g:5404:1: ( ( rule__VarDecl__VarSpecAssignment_1_1_1 )* )
            // InternalGo.g:5405:2: ( rule__VarDecl__VarSpecAssignment_1_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclAccess().getVarSpecAssignment_1_1_1()); 
            }
            // InternalGo.g:5406:2: ( rule__VarDecl__VarSpecAssignment_1_1_1 )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==RULE_IDENTIFIER) ) {
                    alt63=1;
                }


                switch (alt63) {
            	case 1 :
            	    // InternalGo.g:5406:3: rule__VarDecl__VarSpecAssignment_1_1_1
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__VarDecl__VarSpecAssignment_1_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclAccess().getVarSpecAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDecl__Group_1_1__1__Impl"


    // $ANTLR start "rule__VarDecl__Group_1_1__2"
    // InternalGo.g:5414:1: rule__VarDecl__Group_1_1__2 : rule__VarDecl__Group_1_1__2__Impl ;
    public final void rule__VarDecl__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5418:1: ( rule__VarDecl__Group_1_1__2__Impl )
            // InternalGo.g:5419:2: rule__VarDecl__Group_1_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDecl__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDecl__Group_1_1__2"


    // $ANTLR start "rule__VarDecl__Group_1_1__2__Impl"
    // InternalGo.g:5425:1: rule__VarDecl__Group_1_1__2__Impl : ( ')' ) ;
    public final void rule__VarDecl__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5429:1: ( ( ')' ) )
            // InternalGo.g:5430:1: ( ')' )
            {
            // InternalGo.g:5430:1: ( ')' )
            // InternalGo.g:5431:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_1_1_2()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDecl__Group_1_1__2__Impl"


    // $ANTLR start "rule__VarSpec__Group__0"
    // InternalGo.g:5441:1: rule__VarSpec__Group__0 : rule__VarSpec__Group__0__Impl rule__VarSpec__Group__1 ;
    public final void rule__VarSpec__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5445:1: ( rule__VarSpec__Group__0__Impl rule__VarSpec__Group__1 )
            // InternalGo.g:5446:2: rule__VarSpec__Group__0__Impl rule__VarSpec__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__VarSpec__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarSpec__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__Group__0"


    // $ANTLR start "rule__VarSpec__Group__0__Impl"
    // InternalGo.g:5453:1: rule__VarSpec__Group__0__Impl : ( ( rule__VarSpec__IdentifierListAssignment_0 ) ) ;
    public final void rule__VarSpec__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5457:1: ( ( ( rule__VarSpec__IdentifierListAssignment_0 ) ) )
            // InternalGo.g:5458:1: ( ( rule__VarSpec__IdentifierListAssignment_0 ) )
            {
            // InternalGo.g:5458:1: ( ( rule__VarSpec__IdentifierListAssignment_0 ) )
            // InternalGo.g:5459:2: ( rule__VarSpec__IdentifierListAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarSpecAccess().getIdentifierListAssignment_0()); 
            }
            // InternalGo.g:5460:2: ( rule__VarSpec__IdentifierListAssignment_0 )
            // InternalGo.g:5460:3: rule__VarSpec__IdentifierListAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__VarSpec__IdentifierListAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarSpecAccess().getIdentifierListAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__Group__0__Impl"


    // $ANTLR start "rule__VarSpec__Group__1"
    // InternalGo.g:5468:1: rule__VarSpec__Group__1 : rule__VarSpec__Group__1__Impl ;
    public final void rule__VarSpec__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5472:1: ( rule__VarSpec__Group__1__Impl )
            // InternalGo.g:5473:2: rule__VarSpec__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarSpec__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__Group__1"


    // $ANTLR start "rule__VarSpec__Group__1__Impl"
    // InternalGo.g:5479:1: rule__VarSpec__Group__1__Impl : ( ( rule__VarSpec__Alternatives_1 ) ) ;
    public final void rule__VarSpec__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5483:1: ( ( ( rule__VarSpec__Alternatives_1 ) ) )
            // InternalGo.g:5484:1: ( ( rule__VarSpec__Alternatives_1 ) )
            {
            // InternalGo.g:5484:1: ( ( rule__VarSpec__Alternatives_1 ) )
            // InternalGo.g:5485:2: ( rule__VarSpec__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarSpecAccess().getAlternatives_1()); 
            }
            // InternalGo.g:5486:2: ( rule__VarSpec__Alternatives_1 )
            // InternalGo.g:5486:3: rule__VarSpec__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__VarSpec__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarSpecAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__Group__1__Impl"


    // $ANTLR start "rule__VarSpec__Group_1_0__0"
    // InternalGo.g:5495:1: rule__VarSpec__Group_1_0__0 : rule__VarSpec__Group_1_0__0__Impl rule__VarSpec__Group_1_0__1 ;
    public final void rule__VarSpec__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5499:1: ( rule__VarSpec__Group_1_0__0__Impl rule__VarSpec__Group_1_0__1 )
            // InternalGo.g:5500:2: rule__VarSpec__Group_1_0__0__Impl rule__VarSpec__Group_1_0__1
            {
            pushFollow(FOLLOW_22);
            rule__VarSpec__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarSpec__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__Group_1_0__0"


    // $ANTLR start "rule__VarSpec__Group_1_0__0__Impl"
    // InternalGo.g:5507:1: rule__VarSpec__Group_1_0__0__Impl : ( ( rule__VarSpec__TypeAssignment_1_0_0 ) ) ;
    public final void rule__VarSpec__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5511:1: ( ( ( rule__VarSpec__TypeAssignment_1_0_0 ) ) )
            // InternalGo.g:5512:1: ( ( rule__VarSpec__TypeAssignment_1_0_0 ) )
            {
            // InternalGo.g:5512:1: ( ( rule__VarSpec__TypeAssignment_1_0_0 ) )
            // InternalGo.g:5513:2: ( rule__VarSpec__TypeAssignment_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarSpecAccess().getTypeAssignment_1_0_0()); 
            }
            // InternalGo.g:5514:2: ( rule__VarSpec__TypeAssignment_1_0_0 )
            // InternalGo.g:5514:3: rule__VarSpec__TypeAssignment_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__VarSpec__TypeAssignment_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarSpecAccess().getTypeAssignment_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__Group_1_0__0__Impl"


    // $ANTLR start "rule__VarSpec__Group_1_0__1"
    // InternalGo.g:5522:1: rule__VarSpec__Group_1_0__1 : rule__VarSpec__Group_1_0__1__Impl ;
    public final void rule__VarSpec__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5526:1: ( rule__VarSpec__Group_1_0__1__Impl )
            // InternalGo.g:5527:2: rule__VarSpec__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarSpec__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__Group_1_0__1"


    // $ANTLR start "rule__VarSpec__Group_1_0__1__Impl"
    // InternalGo.g:5533:1: rule__VarSpec__Group_1_0__1__Impl : ( ( rule__VarSpec__Group_1_0_1__0 )? ) ;
    public final void rule__VarSpec__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5537:1: ( ( ( rule__VarSpec__Group_1_0_1__0 )? ) )
            // InternalGo.g:5538:1: ( ( rule__VarSpec__Group_1_0_1__0 )? )
            {
            // InternalGo.g:5538:1: ( ( rule__VarSpec__Group_1_0_1__0 )? )
            // InternalGo.g:5539:2: ( rule__VarSpec__Group_1_0_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarSpecAccess().getGroup_1_0_1()); 
            }
            // InternalGo.g:5540:2: ( rule__VarSpec__Group_1_0_1__0 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==68) ) {
                int LA64_1 = input.LA(2);

                if ( (synpred125_InternalGo()) ) {
                    alt64=1;
                }
            }
            switch (alt64) {
                case 1 :
                    // InternalGo.g:5540:3: rule__VarSpec__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarSpec__Group_1_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarSpecAccess().getGroup_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__Group_1_0__1__Impl"


    // $ANTLR start "rule__VarSpec__Group_1_0_1__0"
    // InternalGo.g:5549:1: rule__VarSpec__Group_1_0_1__0 : rule__VarSpec__Group_1_0_1__0__Impl rule__VarSpec__Group_1_0_1__1 ;
    public final void rule__VarSpec__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5553:1: ( rule__VarSpec__Group_1_0_1__0__Impl rule__VarSpec__Group_1_0_1__1 )
            // InternalGo.g:5554:2: rule__VarSpec__Group_1_0_1__0__Impl rule__VarSpec__Group_1_0_1__1
            {
            pushFollow(FOLLOW_16);
            rule__VarSpec__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarSpec__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__Group_1_0_1__0"


    // $ANTLR start "rule__VarSpec__Group_1_0_1__0__Impl"
    // InternalGo.g:5561:1: rule__VarSpec__Group_1_0_1__0__Impl : ( '=' ) ;
    public final void rule__VarSpec__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5565:1: ( ( '=' ) )
            // InternalGo.g:5566:1: ( '=' )
            {
            // InternalGo.g:5566:1: ( '=' )
            // InternalGo.g:5567:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0()); 
            }
            match(input,68,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__VarSpec__Group_1_0_1__1"
    // InternalGo.g:5576:1: rule__VarSpec__Group_1_0_1__1 : rule__VarSpec__Group_1_0_1__1__Impl ;
    public final void rule__VarSpec__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5580:1: ( rule__VarSpec__Group_1_0_1__1__Impl )
            // InternalGo.g:5581:2: rule__VarSpec__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarSpec__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__Group_1_0_1__1"


    // $ANTLR start "rule__VarSpec__Group_1_0_1__1__Impl"
    // InternalGo.g:5587:1: rule__VarSpec__Group_1_0_1__1__Impl : ( ( rule__VarSpec__ExpressionListAssignment_1_0_1_1 ) ) ;
    public final void rule__VarSpec__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5591:1: ( ( ( rule__VarSpec__ExpressionListAssignment_1_0_1_1 ) ) )
            // InternalGo.g:5592:1: ( ( rule__VarSpec__ExpressionListAssignment_1_0_1_1 ) )
            {
            // InternalGo.g:5592:1: ( ( rule__VarSpec__ExpressionListAssignment_1_0_1_1 ) )
            // InternalGo.g:5593:2: ( rule__VarSpec__ExpressionListAssignment_1_0_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_0_1_1()); 
            }
            // InternalGo.g:5594:2: ( rule__VarSpec__ExpressionListAssignment_1_0_1_1 )
            // InternalGo.g:5594:3: rule__VarSpec__ExpressionListAssignment_1_0_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VarSpec__ExpressionListAssignment_1_0_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__VarSpec__Group_1_1__0"
    // InternalGo.g:5603:1: rule__VarSpec__Group_1_1__0 : rule__VarSpec__Group_1_1__0__Impl rule__VarSpec__Group_1_1__1 ;
    public final void rule__VarSpec__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5607:1: ( rule__VarSpec__Group_1_1__0__Impl rule__VarSpec__Group_1_1__1 )
            // InternalGo.g:5608:2: rule__VarSpec__Group_1_1__0__Impl rule__VarSpec__Group_1_1__1
            {
            pushFollow(FOLLOW_16);
            rule__VarSpec__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarSpec__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__Group_1_1__0"


    // $ANTLR start "rule__VarSpec__Group_1_1__0__Impl"
    // InternalGo.g:5615:1: rule__VarSpec__Group_1_1__0__Impl : ( '=' ) ;
    public final void rule__VarSpec__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5619:1: ( ( '=' ) )
            // InternalGo.g:5620:1: ( '=' )
            {
            // InternalGo.g:5620:1: ( '=' )
            // InternalGo.g:5621:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0()); 
            }
            match(input,68,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__Group_1_1__0__Impl"


    // $ANTLR start "rule__VarSpec__Group_1_1__1"
    // InternalGo.g:5630:1: rule__VarSpec__Group_1_1__1 : rule__VarSpec__Group_1_1__1__Impl ;
    public final void rule__VarSpec__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5634:1: ( rule__VarSpec__Group_1_1__1__Impl )
            // InternalGo.g:5635:2: rule__VarSpec__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarSpec__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__Group_1_1__1"


    // $ANTLR start "rule__VarSpec__Group_1_1__1__Impl"
    // InternalGo.g:5641:1: rule__VarSpec__Group_1_1__1__Impl : ( ( rule__VarSpec__ExpressionListAssignment_1_1_1 ) ) ;
    public final void rule__VarSpec__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5645:1: ( ( ( rule__VarSpec__ExpressionListAssignment_1_1_1 ) ) )
            // InternalGo.g:5646:1: ( ( rule__VarSpec__ExpressionListAssignment_1_1_1 ) )
            {
            // InternalGo.g:5646:1: ( ( rule__VarSpec__ExpressionListAssignment_1_1_1 ) )
            // InternalGo.g:5647:2: ( rule__VarSpec__ExpressionListAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_1_1()); 
            }
            // InternalGo.g:5648:2: ( rule__VarSpec__ExpressionListAssignment_1_1_1 )
            // InternalGo.g:5648:3: rule__VarSpec__ExpressionListAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VarSpec__ExpressionListAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__Group_1_1__1__Impl"


    // $ANTLR start "rule__Block__Group__0"
    // InternalGo.g:5657:1: rule__Block__Group__0 : rule__Block__Group__0__Impl rule__Block__Group__1 ;
    public final void rule__Block__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5661:1: ( rule__Block__Group__0__Impl rule__Block__Group__1 )
            // InternalGo.g:5662:2: rule__Block__Group__0__Impl rule__Block__Group__1
            {
            pushFollow(FOLLOW_23);
            rule__Block__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Block__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__0"


    // $ANTLR start "rule__Block__Group__0__Impl"
    // InternalGo.g:5669:1: rule__Block__Group__0__Impl : ( '{' ) ;
    public final void rule__Block__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5673:1: ( ( '{' ) )
            // InternalGo.g:5674:1: ( '{' )
            {
            // InternalGo.g:5674:1: ( '{' )
            // InternalGo.g:5675:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); 
            }
            match(input,73,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__0__Impl"


    // $ANTLR start "rule__Block__Group__1"
    // InternalGo.g:5684:1: rule__Block__Group__1 : rule__Block__Group__1__Impl rule__Block__Group__2 ;
    public final void rule__Block__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5688:1: ( rule__Block__Group__1__Impl rule__Block__Group__2 )
            // InternalGo.g:5689:2: rule__Block__Group__1__Impl rule__Block__Group__2
            {
            pushFollow(FOLLOW_24);
            rule__Block__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Block__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__1"


    // $ANTLR start "rule__Block__Group__1__Impl"
    // InternalGo.g:5696:1: rule__Block__Group__1__Impl : ( ( rule__Block__StatementListAssignment_1 ) ) ;
    public final void rule__Block__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5700:1: ( ( ( rule__Block__StatementListAssignment_1 ) ) )
            // InternalGo.g:5701:1: ( ( rule__Block__StatementListAssignment_1 ) )
            {
            // InternalGo.g:5701:1: ( ( rule__Block__StatementListAssignment_1 ) )
            // InternalGo.g:5702:2: ( rule__Block__StatementListAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockAccess().getStatementListAssignment_1()); 
            }
            // InternalGo.g:5703:2: ( rule__Block__StatementListAssignment_1 )
            // InternalGo.g:5703:3: rule__Block__StatementListAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Block__StatementListAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockAccess().getStatementListAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__1__Impl"


    // $ANTLR start "rule__Block__Group__2"
    // InternalGo.g:5711:1: rule__Block__Group__2 : rule__Block__Group__2__Impl ;
    public final void rule__Block__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5715:1: ( rule__Block__Group__2__Impl )
            // InternalGo.g:5716:2: rule__Block__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Block__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__2"


    // $ANTLR start "rule__Block__Group__2__Impl"
    // InternalGo.g:5722:1: rule__Block__Group__2__Impl : ( '}' ) ;
    public final void rule__Block__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5726:1: ( ( '}' ) )
            // InternalGo.g:5727:1: ( '}' )
            {
            // InternalGo.g:5727:1: ( '}' )
            // InternalGo.g:5728:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); 
            }
            match(input,74,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__2__Impl"


    // $ANTLR start "rule__SendStmt__Group__0"
    // InternalGo.g:5738:1: rule__SendStmt__Group__0 : rule__SendStmt__Group__0__Impl rule__SendStmt__Group__1 ;
    public final void rule__SendStmt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5742:1: ( rule__SendStmt__Group__0__Impl rule__SendStmt__Group__1 )
            // InternalGo.g:5743:2: rule__SendStmt__Group__0__Impl rule__SendStmt__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__SendStmt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SendStmt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SendStmt__Group__0"


    // $ANTLR start "rule__SendStmt__Group__0__Impl"
    // InternalGo.g:5750:1: rule__SendStmt__Group__0__Impl : ( ( rule__SendStmt__ExpressionAssignment_0 ) ) ;
    public final void rule__SendStmt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5754:1: ( ( ( rule__SendStmt__ExpressionAssignment_0 ) ) )
            // InternalGo.g:5755:1: ( ( rule__SendStmt__ExpressionAssignment_0 ) )
            {
            // InternalGo.g:5755:1: ( ( rule__SendStmt__ExpressionAssignment_0 ) )
            // InternalGo.g:5756:2: ( rule__SendStmt__ExpressionAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSendStmtAccess().getExpressionAssignment_0()); 
            }
            // InternalGo.g:5757:2: ( rule__SendStmt__ExpressionAssignment_0 )
            // InternalGo.g:5757:3: rule__SendStmt__ExpressionAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__SendStmt__ExpressionAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSendStmtAccess().getExpressionAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SendStmt__Group__0__Impl"


    // $ANTLR start "rule__SendStmt__Group__1"
    // InternalGo.g:5765:1: rule__SendStmt__Group__1 : rule__SendStmt__Group__1__Impl rule__SendStmt__Group__2 ;
    public final void rule__SendStmt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5769:1: ( rule__SendStmt__Group__1__Impl rule__SendStmt__Group__2 )
            // InternalGo.g:5770:2: rule__SendStmt__Group__1__Impl rule__SendStmt__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__SendStmt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SendStmt__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SendStmt__Group__1"


    // $ANTLR start "rule__SendStmt__Group__1__Impl"
    // InternalGo.g:5777:1: rule__SendStmt__Group__1__Impl : ( '<-' ) ;
    public final void rule__SendStmt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5781:1: ( ( '<-' ) )
            // InternalGo.g:5782:1: ( '<-' )
            {
            // InternalGo.g:5782:1: ( '<-' )
            // InternalGo.g:5783:2: '<-'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSendStmtAccess().getLessThanSignHyphenMinusKeyword_1()); 
            }
            match(input,62,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSendStmtAccess().getLessThanSignHyphenMinusKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SendStmt__Group__1__Impl"


    // $ANTLR start "rule__SendStmt__Group__2"
    // InternalGo.g:5792:1: rule__SendStmt__Group__2 : rule__SendStmt__Group__2__Impl ;
    public final void rule__SendStmt__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5796:1: ( rule__SendStmt__Group__2__Impl )
            // InternalGo.g:5797:2: rule__SendStmt__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SendStmt__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SendStmt__Group__2"


    // $ANTLR start "rule__SendStmt__Group__2__Impl"
    // InternalGo.g:5803:1: rule__SendStmt__Group__2__Impl : ( ( rule__SendStmt__ExpressionAssignment_2 ) ) ;
    public final void rule__SendStmt__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5807:1: ( ( ( rule__SendStmt__ExpressionAssignment_2 ) ) )
            // InternalGo.g:5808:1: ( ( rule__SendStmt__ExpressionAssignment_2 ) )
            {
            // InternalGo.g:5808:1: ( ( rule__SendStmt__ExpressionAssignment_2 ) )
            // InternalGo.g:5809:2: ( rule__SendStmt__ExpressionAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSendStmtAccess().getExpressionAssignment_2()); 
            }
            // InternalGo.g:5810:2: ( rule__SendStmt__ExpressionAssignment_2 )
            // InternalGo.g:5810:3: rule__SendStmt__ExpressionAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SendStmt__ExpressionAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSendStmtAccess().getExpressionAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SendStmt__Group__2__Impl"


    // $ANTLR start "rule__IncDecStmt__Group__0"
    // InternalGo.g:5819:1: rule__IncDecStmt__Group__0 : rule__IncDecStmt__Group__0__Impl rule__IncDecStmt__Group__1 ;
    public final void rule__IncDecStmt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5823:1: ( rule__IncDecStmt__Group__0__Impl rule__IncDecStmt__Group__1 )
            // InternalGo.g:5824:2: rule__IncDecStmt__Group__0__Impl rule__IncDecStmt__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__IncDecStmt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IncDecStmt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IncDecStmt__Group__0"


    // $ANTLR start "rule__IncDecStmt__Group__0__Impl"
    // InternalGo.g:5831:1: rule__IncDecStmt__Group__0__Impl : ( ( rule__IncDecStmt__ExpressionAssignment_0 ) ) ;
    public final void rule__IncDecStmt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5835:1: ( ( ( rule__IncDecStmt__ExpressionAssignment_0 ) ) )
            // InternalGo.g:5836:1: ( ( rule__IncDecStmt__ExpressionAssignment_0 ) )
            {
            // InternalGo.g:5836:1: ( ( rule__IncDecStmt__ExpressionAssignment_0 ) )
            // InternalGo.g:5837:2: ( rule__IncDecStmt__ExpressionAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIncDecStmtAccess().getExpressionAssignment_0()); 
            }
            // InternalGo.g:5838:2: ( rule__IncDecStmt__ExpressionAssignment_0 )
            // InternalGo.g:5838:3: rule__IncDecStmt__ExpressionAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__IncDecStmt__ExpressionAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIncDecStmtAccess().getExpressionAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IncDecStmt__Group__0__Impl"


    // $ANTLR start "rule__IncDecStmt__Group__1"
    // InternalGo.g:5846:1: rule__IncDecStmt__Group__1 : rule__IncDecStmt__Group__1__Impl ;
    public final void rule__IncDecStmt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5850:1: ( rule__IncDecStmt__Group__1__Impl )
            // InternalGo.g:5851:2: rule__IncDecStmt__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IncDecStmt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IncDecStmt__Group__1"


    // $ANTLR start "rule__IncDecStmt__Group__1__Impl"
    // InternalGo.g:5857:1: rule__IncDecStmt__Group__1__Impl : ( ( rule__IncDecStmt__Alternatives_1 ) ) ;
    public final void rule__IncDecStmt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5861:1: ( ( ( rule__IncDecStmt__Alternatives_1 ) ) )
            // InternalGo.g:5862:1: ( ( rule__IncDecStmt__Alternatives_1 ) )
            {
            // InternalGo.g:5862:1: ( ( rule__IncDecStmt__Alternatives_1 ) )
            // InternalGo.g:5863:2: ( rule__IncDecStmt__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIncDecStmtAccess().getAlternatives_1()); 
            }
            // InternalGo.g:5864:2: ( rule__IncDecStmt__Alternatives_1 )
            // InternalGo.g:5864:3: rule__IncDecStmt__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__IncDecStmt__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIncDecStmtAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IncDecStmt__Group__1__Impl"


    // $ANTLR start "rule__Assignment__Group__0"
    // InternalGo.g:5873:1: rule__Assignment__Group__0 : rule__Assignment__Group__0__Impl rule__Assignment__Group__1 ;
    public final void rule__Assignment__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5877:1: ( rule__Assignment__Group__0__Impl rule__Assignment__Group__1 )
            // InternalGo.g:5878:2: rule__Assignment__Group__0__Impl rule__Assignment__Group__1
            {
            pushFollow(FOLLOW_27);
            rule__Assignment__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Assignment__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__Group__0"


    // $ANTLR start "rule__Assignment__Group__0__Impl"
    // InternalGo.g:5885:1: rule__Assignment__Group__0__Impl : ( ( rule__Assignment__ExpressionListAssignment_0 ) ) ;
    public final void rule__Assignment__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5889:1: ( ( ( rule__Assignment__ExpressionListAssignment_0 ) ) )
            // InternalGo.g:5890:1: ( ( rule__Assignment__ExpressionListAssignment_0 ) )
            {
            // InternalGo.g:5890:1: ( ( rule__Assignment__ExpressionListAssignment_0 ) )
            // InternalGo.g:5891:2: ( rule__Assignment__ExpressionListAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentAccess().getExpressionListAssignment_0()); 
            }
            // InternalGo.g:5892:2: ( rule__Assignment__ExpressionListAssignment_0 )
            // InternalGo.g:5892:3: rule__Assignment__ExpressionListAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Assignment__ExpressionListAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentAccess().getExpressionListAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__Group__0__Impl"


    // $ANTLR start "rule__Assignment__Group__1"
    // InternalGo.g:5900:1: rule__Assignment__Group__1 : rule__Assignment__Group__1__Impl rule__Assignment__Group__2 ;
    public final void rule__Assignment__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5904:1: ( rule__Assignment__Group__1__Impl rule__Assignment__Group__2 )
            // InternalGo.g:5905:2: rule__Assignment__Group__1__Impl rule__Assignment__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__Assignment__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Assignment__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__Group__1"


    // $ANTLR start "rule__Assignment__Group__1__Impl"
    // InternalGo.g:5912:1: rule__Assignment__Group__1__Impl : ( ( rule__Assignment__Assign_opAssignment_1 ) ) ;
    public final void rule__Assignment__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5916:1: ( ( ( rule__Assignment__Assign_opAssignment_1 ) ) )
            // InternalGo.g:5917:1: ( ( rule__Assignment__Assign_opAssignment_1 ) )
            {
            // InternalGo.g:5917:1: ( ( rule__Assignment__Assign_opAssignment_1 ) )
            // InternalGo.g:5918:2: ( rule__Assignment__Assign_opAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentAccess().getAssign_opAssignment_1()); 
            }
            // InternalGo.g:5919:2: ( rule__Assignment__Assign_opAssignment_1 )
            // InternalGo.g:5919:3: rule__Assignment__Assign_opAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Assignment__Assign_opAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentAccess().getAssign_opAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__Group__1__Impl"


    // $ANTLR start "rule__Assignment__Group__2"
    // InternalGo.g:5927:1: rule__Assignment__Group__2 : rule__Assignment__Group__2__Impl ;
    public final void rule__Assignment__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5931:1: ( rule__Assignment__Group__2__Impl )
            // InternalGo.g:5932:2: rule__Assignment__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Assignment__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__Group__2"


    // $ANTLR start "rule__Assignment__Group__2__Impl"
    // InternalGo.g:5938:1: rule__Assignment__Group__2__Impl : ( ( rule__Assignment__ExpressionListAssignment_2 ) ) ;
    public final void rule__Assignment__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5942:1: ( ( ( rule__Assignment__ExpressionListAssignment_2 ) ) )
            // InternalGo.g:5943:1: ( ( rule__Assignment__ExpressionListAssignment_2 ) )
            {
            // InternalGo.g:5943:1: ( ( rule__Assignment__ExpressionListAssignment_2 ) )
            // InternalGo.g:5944:2: ( rule__Assignment__ExpressionListAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentAccess().getExpressionListAssignment_2()); 
            }
            // InternalGo.g:5945:2: ( rule__Assignment__ExpressionListAssignment_2 )
            // InternalGo.g:5945:3: rule__Assignment__ExpressionListAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Assignment__ExpressionListAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentAccess().getExpressionListAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__Group__2__Impl"


    // $ANTLR start "rule__Assign_op__Group__0"
    // InternalGo.g:5954:1: rule__Assign_op__Group__0 : rule__Assign_op__Group__0__Impl rule__Assign_op__Group__1 ;
    public final void rule__Assign_op__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5958:1: ( rule__Assign_op__Group__0__Impl rule__Assign_op__Group__1 )
            // InternalGo.g:5959:2: rule__Assign_op__Group__0__Impl rule__Assign_op__Group__1
            {
            pushFollow(FOLLOW_27);
            rule__Assign_op__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Assign_op__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assign_op__Group__0"


    // $ANTLR start "rule__Assign_op__Group__0__Impl"
    // InternalGo.g:5966:1: rule__Assign_op__Group__0__Impl : ( ( rule__Assign_op__Alternatives_0 )? ) ;
    public final void rule__Assign_op__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5970:1: ( ( ( rule__Assign_op__Alternatives_0 )? ) )
            // InternalGo.g:5971:1: ( ( rule__Assign_op__Alternatives_0 )? )
            {
            // InternalGo.g:5971:1: ( ( rule__Assign_op__Alternatives_0 )? )
            // InternalGo.g:5972:2: ( rule__Assign_op__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssign_opAccess().getAlternatives_0()); 
            }
            // InternalGo.g:5973:2: ( rule__Assign_op__Alternatives_0 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( ((LA65_0>=48 && LA65_0<=58)) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalGo.g:5973:3: rule__Assign_op__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Assign_op__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssign_opAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assign_op__Group__0__Impl"


    // $ANTLR start "rule__Assign_op__Group__1"
    // InternalGo.g:5981:1: rule__Assign_op__Group__1 : rule__Assign_op__Group__1__Impl ;
    public final void rule__Assign_op__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5985:1: ( rule__Assign_op__Group__1__Impl )
            // InternalGo.g:5986:2: rule__Assign_op__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Assign_op__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assign_op__Group__1"


    // $ANTLR start "rule__Assign_op__Group__1__Impl"
    // InternalGo.g:5992:1: rule__Assign_op__Group__1__Impl : ( '=' ) ;
    public final void rule__Assign_op__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:5996:1: ( ( '=' ) )
            // InternalGo.g:5997:1: ( '=' )
            {
            // InternalGo.g:5997:1: ( '=' )
            // InternalGo.g:5998:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssign_opAccess().getEqualsSignKeyword_1()); 
            }
            match(input,68,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssign_opAccess().getEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assign_op__Group__1__Impl"


    // $ANTLR start "rule__ShortVarDecl__Group__0"
    // InternalGo.g:6008:1: rule__ShortVarDecl__Group__0 : rule__ShortVarDecl__Group__0__Impl rule__ShortVarDecl__Group__1 ;
    public final void rule__ShortVarDecl__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6012:1: ( rule__ShortVarDecl__Group__0__Impl rule__ShortVarDecl__Group__1 )
            // InternalGo.g:6013:2: rule__ShortVarDecl__Group__0__Impl rule__ShortVarDecl__Group__1
            {
            pushFollow(FOLLOW_28);
            rule__ShortVarDecl__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ShortVarDecl__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortVarDecl__Group__0"


    // $ANTLR start "rule__ShortVarDecl__Group__0__Impl"
    // InternalGo.g:6020:1: rule__ShortVarDecl__Group__0__Impl : ( ( rule__ShortVarDecl__IdentifierListAssignment_0 ) ) ;
    public final void rule__ShortVarDecl__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6024:1: ( ( ( rule__ShortVarDecl__IdentifierListAssignment_0 ) ) )
            // InternalGo.g:6025:1: ( ( rule__ShortVarDecl__IdentifierListAssignment_0 ) )
            {
            // InternalGo.g:6025:1: ( ( rule__ShortVarDecl__IdentifierListAssignment_0 ) )
            // InternalGo.g:6026:2: ( rule__ShortVarDecl__IdentifierListAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortVarDeclAccess().getIdentifierListAssignment_0()); 
            }
            // InternalGo.g:6027:2: ( rule__ShortVarDecl__IdentifierListAssignment_0 )
            // InternalGo.g:6027:3: rule__ShortVarDecl__IdentifierListAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ShortVarDecl__IdentifierListAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortVarDeclAccess().getIdentifierListAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortVarDecl__Group__0__Impl"


    // $ANTLR start "rule__ShortVarDecl__Group__1"
    // InternalGo.g:6035:1: rule__ShortVarDecl__Group__1 : rule__ShortVarDecl__Group__1__Impl rule__ShortVarDecl__Group__2 ;
    public final void rule__ShortVarDecl__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6039:1: ( rule__ShortVarDecl__Group__1__Impl rule__ShortVarDecl__Group__2 )
            // InternalGo.g:6040:2: rule__ShortVarDecl__Group__1__Impl rule__ShortVarDecl__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__ShortVarDecl__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ShortVarDecl__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortVarDecl__Group__1"


    // $ANTLR start "rule__ShortVarDecl__Group__1__Impl"
    // InternalGo.g:6047:1: rule__ShortVarDecl__Group__1__Impl : ( ':=' ) ;
    public final void rule__ShortVarDecl__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6051:1: ( ( ':=' ) )
            // InternalGo.g:6052:1: ( ':=' )
            {
            // InternalGo.g:6052:1: ( ':=' )
            // InternalGo.g:6053:2: ':='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,75,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortVarDecl__Group__1__Impl"


    // $ANTLR start "rule__ShortVarDecl__Group__2"
    // InternalGo.g:6062:1: rule__ShortVarDecl__Group__2 : rule__ShortVarDecl__Group__2__Impl ;
    public final void rule__ShortVarDecl__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6066:1: ( rule__ShortVarDecl__Group__2__Impl )
            // InternalGo.g:6067:2: rule__ShortVarDecl__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ShortVarDecl__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortVarDecl__Group__2"


    // $ANTLR start "rule__ShortVarDecl__Group__2__Impl"
    // InternalGo.g:6073:1: rule__ShortVarDecl__Group__2__Impl : ( ( rule__ShortVarDecl__ExpressionListAssignment_2 ) ) ;
    public final void rule__ShortVarDecl__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6077:1: ( ( ( rule__ShortVarDecl__ExpressionListAssignment_2 ) ) )
            // InternalGo.g:6078:1: ( ( rule__ShortVarDecl__ExpressionListAssignment_2 ) )
            {
            // InternalGo.g:6078:1: ( ( rule__ShortVarDecl__ExpressionListAssignment_2 ) )
            // InternalGo.g:6079:2: ( rule__ShortVarDecl__ExpressionListAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortVarDeclAccess().getExpressionListAssignment_2()); 
            }
            // InternalGo.g:6080:2: ( rule__ShortVarDecl__ExpressionListAssignment_2 )
            // InternalGo.g:6080:3: rule__ShortVarDecl__ExpressionListAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__ShortVarDecl__ExpressionListAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortVarDeclAccess().getExpressionListAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortVarDecl__Group__2__Impl"


    // $ANTLR start "rule__LabeledStmt__Group__0"
    // InternalGo.g:6089:1: rule__LabeledStmt__Group__0 : rule__LabeledStmt__Group__0__Impl rule__LabeledStmt__Group__1 ;
    public final void rule__LabeledStmt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6093:1: ( rule__LabeledStmt__Group__0__Impl rule__LabeledStmt__Group__1 )
            // InternalGo.g:6094:2: rule__LabeledStmt__Group__0__Impl rule__LabeledStmt__Group__1
            {
            pushFollow(FOLLOW_29);
            rule__LabeledStmt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LabeledStmt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LabeledStmt__Group__0"


    // $ANTLR start "rule__LabeledStmt__Group__0__Impl"
    // InternalGo.g:6101:1: rule__LabeledStmt__Group__0__Impl : ( RULE_IDENTIFIER ) ;
    public final void rule__LabeledStmt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6105:1: ( ( RULE_IDENTIFIER ) )
            // InternalGo.g:6106:1: ( RULE_IDENTIFIER )
            {
            // InternalGo.g:6106:1: ( RULE_IDENTIFIER )
            // InternalGo.g:6107:2: RULE_IDENTIFIER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabeledStmtAccess().getIDENTIFIERTerminalRuleCall_0()); 
            }
            match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabeledStmtAccess().getIDENTIFIERTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LabeledStmt__Group__0__Impl"


    // $ANTLR start "rule__LabeledStmt__Group__1"
    // InternalGo.g:6116:1: rule__LabeledStmt__Group__1 : rule__LabeledStmt__Group__1__Impl rule__LabeledStmt__Group__2 ;
    public final void rule__LabeledStmt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6120:1: ( rule__LabeledStmt__Group__1__Impl rule__LabeledStmt__Group__2 )
            // InternalGo.g:6121:2: rule__LabeledStmt__Group__1__Impl rule__LabeledStmt__Group__2
            {
            pushFollow(FOLLOW_23);
            rule__LabeledStmt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LabeledStmt__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LabeledStmt__Group__1"


    // $ANTLR start "rule__LabeledStmt__Group__1__Impl"
    // InternalGo.g:6128:1: rule__LabeledStmt__Group__1__Impl : ( ':' ) ;
    public final void rule__LabeledStmt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6132:1: ( ( ':' ) )
            // InternalGo.g:6133:1: ( ':' )
            {
            // InternalGo.g:6133:1: ( ':' )
            // InternalGo.g:6134:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabeledStmtAccess().getColonKeyword_1()); 
            }
            match(input,76,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabeledStmtAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LabeledStmt__Group__1__Impl"


    // $ANTLR start "rule__LabeledStmt__Group__2"
    // InternalGo.g:6143:1: rule__LabeledStmt__Group__2 : rule__LabeledStmt__Group__2__Impl ;
    public final void rule__LabeledStmt__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6147:1: ( rule__LabeledStmt__Group__2__Impl )
            // InternalGo.g:6148:2: rule__LabeledStmt__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LabeledStmt__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LabeledStmt__Group__2"


    // $ANTLR start "rule__LabeledStmt__Group__2__Impl"
    // InternalGo.g:6154:1: rule__LabeledStmt__Group__2__Impl : ( ( rule__LabeledStmt__StatementAssignment_2 ) ) ;
    public final void rule__LabeledStmt__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6158:1: ( ( ( rule__LabeledStmt__StatementAssignment_2 ) ) )
            // InternalGo.g:6159:1: ( ( rule__LabeledStmt__StatementAssignment_2 ) )
            {
            // InternalGo.g:6159:1: ( ( rule__LabeledStmt__StatementAssignment_2 ) )
            // InternalGo.g:6160:2: ( rule__LabeledStmt__StatementAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabeledStmtAccess().getStatementAssignment_2()); 
            }
            // InternalGo.g:6161:2: ( rule__LabeledStmt__StatementAssignment_2 )
            // InternalGo.g:6161:3: rule__LabeledStmt__StatementAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__LabeledStmt__StatementAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabeledStmtAccess().getStatementAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LabeledStmt__Group__2__Impl"


    // $ANTLR start "rule__ReturnStmt__Group__0"
    // InternalGo.g:6170:1: rule__ReturnStmt__Group__0 : rule__ReturnStmt__Group__0__Impl rule__ReturnStmt__Group__1 ;
    public final void rule__ReturnStmt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6174:1: ( rule__ReturnStmt__Group__0__Impl rule__ReturnStmt__Group__1 )
            // InternalGo.g:6175:2: rule__ReturnStmt__Group__0__Impl rule__ReturnStmt__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__ReturnStmt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ReturnStmt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReturnStmt__Group__0"


    // $ANTLR start "rule__ReturnStmt__Group__0__Impl"
    // InternalGo.g:6182:1: rule__ReturnStmt__Group__0__Impl : ( 'return' ) ;
    public final void rule__ReturnStmt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6186:1: ( ( 'return' ) )
            // InternalGo.g:6187:1: ( 'return' )
            {
            // InternalGo.g:6187:1: ( 'return' )
            // InternalGo.g:6188:2: 'return'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReturnStmtAccess().getReturnKeyword_0()); 
            }
            match(input,77,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReturnStmtAccess().getReturnKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReturnStmt__Group__0__Impl"


    // $ANTLR start "rule__ReturnStmt__Group__1"
    // InternalGo.g:6197:1: rule__ReturnStmt__Group__1 : rule__ReturnStmt__Group__1__Impl ;
    public final void rule__ReturnStmt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6201:1: ( rule__ReturnStmt__Group__1__Impl )
            // InternalGo.g:6202:2: rule__ReturnStmt__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ReturnStmt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReturnStmt__Group__1"


    // $ANTLR start "rule__ReturnStmt__Group__1__Impl"
    // InternalGo.g:6208:1: rule__ReturnStmt__Group__1__Impl : ( ( rule__ReturnStmt__ExpressionListAssignment_1 )? ) ;
    public final void rule__ReturnStmt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6212:1: ( ( ( rule__ReturnStmt__ExpressionListAssignment_1 )? ) )
            // InternalGo.g:6213:1: ( ( rule__ReturnStmt__ExpressionListAssignment_1 )? )
            {
            // InternalGo.g:6213:1: ( ( rule__ReturnStmt__ExpressionListAssignment_1 )? )
            // InternalGo.g:6214:2: ( rule__ReturnStmt__ExpressionListAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReturnStmtAccess().getExpressionListAssignment_1()); 
            }
            // InternalGo.g:6215:2: ( rule__ReturnStmt__ExpressionListAssignment_1 )?
            int alt66=2;
            alt66 = dfa66.predict(input);
            switch (alt66) {
                case 1 :
                    // InternalGo.g:6215:3: rule__ReturnStmt__ExpressionListAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ReturnStmt__ExpressionListAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReturnStmtAccess().getExpressionListAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReturnStmt__Group__1__Impl"


    // $ANTLR start "rule__BreakStmt__Group__0"
    // InternalGo.g:6224:1: rule__BreakStmt__Group__0 : rule__BreakStmt__Group__0__Impl rule__BreakStmt__Group__1 ;
    public final void rule__BreakStmt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6228:1: ( rule__BreakStmt__Group__0__Impl rule__BreakStmt__Group__1 )
            // InternalGo.g:6229:2: rule__BreakStmt__Group__0__Impl rule__BreakStmt__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__BreakStmt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BreakStmt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakStmt__Group__0"


    // $ANTLR start "rule__BreakStmt__Group__0__Impl"
    // InternalGo.g:6236:1: rule__BreakStmt__Group__0__Impl : ( 'break' ) ;
    public final void rule__BreakStmt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6240:1: ( ( 'break' ) )
            // InternalGo.g:6241:1: ( 'break' )
            {
            // InternalGo.g:6241:1: ( 'break' )
            // InternalGo.g:6242:2: 'break'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakStmtAccess().getBreakKeyword_0()); 
            }
            match(input,78,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakStmtAccess().getBreakKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakStmt__Group__0__Impl"


    // $ANTLR start "rule__BreakStmt__Group__1"
    // InternalGo.g:6251:1: rule__BreakStmt__Group__1 : rule__BreakStmt__Group__1__Impl ;
    public final void rule__BreakStmt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6255:1: ( rule__BreakStmt__Group__1__Impl )
            // InternalGo.g:6256:2: rule__BreakStmt__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BreakStmt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakStmt__Group__1"


    // $ANTLR start "rule__BreakStmt__Group__1__Impl"
    // InternalGo.g:6262:1: rule__BreakStmt__Group__1__Impl : ( ( RULE_IDENTIFIER )? ) ;
    public final void rule__BreakStmt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6266:1: ( ( ( RULE_IDENTIFIER )? ) )
            // InternalGo.g:6267:1: ( ( RULE_IDENTIFIER )? )
            {
            // InternalGo.g:6267:1: ( ( RULE_IDENTIFIER )? )
            // InternalGo.g:6268:2: ( RULE_IDENTIFIER )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakStmtAccess().getIDENTIFIERTerminalRuleCall_1()); 
            }
            // InternalGo.g:6269:2: ( RULE_IDENTIFIER )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==RULE_IDENTIFIER) ) {
                int LA67_1 = input.LA(2);

                if ( (synpred128_InternalGo()) ) {
                    alt67=1;
                }
            }
            switch (alt67) {
                case 1 :
                    // InternalGo.g:6269:3: RULE_IDENTIFIER
                    {
                    match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakStmtAccess().getIDENTIFIERTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakStmt__Group__1__Impl"


    // $ANTLR start "rule__ContinueStmt__Group__0"
    // InternalGo.g:6278:1: rule__ContinueStmt__Group__0 : rule__ContinueStmt__Group__0__Impl rule__ContinueStmt__Group__1 ;
    public final void rule__ContinueStmt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6282:1: ( rule__ContinueStmt__Group__0__Impl rule__ContinueStmt__Group__1 )
            // InternalGo.g:6283:2: rule__ContinueStmt__Group__0__Impl rule__ContinueStmt__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__ContinueStmt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ContinueStmt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContinueStmt__Group__0"


    // $ANTLR start "rule__ContinueStmt__Group__0__Impl"
    // InternalGo.g:6290:1: rule__ContinueStmt__Group__0__Impl : ( 'continue' ) ;
    public final void rule__ContinueStmt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6294:1: ( ( 'continue' ) )
            // InternalGo.g:6295:1: ( 'continue' )
            {
            // InternalGo.g:6295:1: ( 'continue' )
            // InternalGo.g:6296:2: 'continue'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getContinueStmtAccess().getContinueKeyword_0()); 
            }
            match(input,79,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getContinueStmtAccess().getContinueKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContinueStmt__Group__0__Impl"


    // $ANTLR start "rule__ContinueStmt__Group__1"
    // InternalGo.g:6305:1: rule__ContinueStmt__Group__1 : rule__ContinueStmt__Group__1__Impl ;
    public final void rule__ContinueStmt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6309:1: ( rule__ContinueStmt__Group__1__Impl )
            // InternalGo.g:6310:2: rule__ContinueStmt__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ContinueStmt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContinueStmt__Group__1"


    // $ANTLR start "rule__ContinueStmt__Group__1__Impl"
    // InternalGo.g:6316:1: rule__ContinueStmt__Group__1__Impl : ( ( RULE_IDENTIFIER )? ) ;
    public final void rule__ContinueStmt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6320:1: ( ( ( RULE_IDENTIFIER )? ) )
            // InternalGo.g:6321:1: ( ( RULE_IDENTIFIER )? )
            {
            // InternalGo.g:6321:1: ( ( RULE_IDENTIFIER )? )
            // InternalGo.g:6322:2: ( RULE_IDENTIFIER )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getContinueStmtAccess().getIDENTIFIERTerminalRuleCall_1()); 
            }
            // InternalGo.g:6323:2: ( RULE_IDENTIFIER )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==RULE_IDENTIFIER) ) {
                int LA68_1 = input.LA(2);

                if ( (synpred129_InternalGo()) ) {
                    alt68=1;
                }
            }
            switch (alt68) {
                case 1 :
                    // InternalGo.g:6323:3: RULE_IDENTIFIER
                    {
                    match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getContinueStmtAccess().getIDENTIFIERTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContinueStmt__Group__1__Impl"


    // $ANTLR start "rule__GotoStmt__Group__0"
    // InternalGo.g:6332:1: rule__GotoStmt__Group__0 : rule__GotoStmt__Group__0__Impl rule__GotoStmt__Group__1 ;
    public final void rule__GotoStmt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6336:1: ( rule__GotoStmt__Group__0__Impl rule__GotoStmt__Group__1 )
            // InternalGo.g:6337:2: rule__GotoStmt__Group__0__Impl rule__GotoStmt__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__GotoStmt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GotoStmt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GotoStmt__Group__0"


    // $ANTLR start "rule__GotoStmt__Group__0__Impl"
    // InternalGo.g:6344:1: rule__GotoStmt__Group__0__Impl : ( 'goto' ) ;
    public final void rule__GotoStmt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6348:1: ( ( 'goto' ) )
            // InternalGo.g:6349:1: ( 'goto' )
            {
            // InternalGo.g:6349:1: ( 'goto' )
            // InternalGo.g:6350:2: 'goto'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGotoStmtAccess().getGotoKeyword_0()); 
            }
            match(input,80,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGotoStmtAccess().getGotoKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GotoStmt__Group__0__Impl"


    // $ANTLR start "rule__GotoStmt__Group__1"
    // InternalGo.g:6359:1: rule__GotoStmt__Group__1 : rule__GotoStmt__Group__1__Impl ;
    public final void rule__GotoStmt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6363:1: ( rule__GotoStmt__Group__1__Impl )
            // InternalGo.g:6364:2: rule__GotoStmt__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GotoStmt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GotoStmt__Group__1"


    // $ANTLR start "rule__GotoStmt__Group__1__Impl"
    // InternalGo.g:6370:1: rule__GotoStmt__Group__1__Impl : ( RULE_IDENTIFIER ) ;
    public final void rule__GotoStmt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6374:1: ( ( RULE_IDENTIFIER ) )
            // InternalGo.g:6375:1: ( RULE_IDENTIFIER )
            {
            // InternalGo.g:6375:1: ( RULE_IDENTIFIER )
            // InternalGo.g:6376:2: RULE_IDENTIFIER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGotoStmtAccess().getIDENTIFIERTerminalRuleCall_1()); 
            }
            match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGotoStmtAccess().getIDENTIFIERTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GotoStmt__Group__1__Impl"


    // $ANTLR start "rule__DeferStmt__Group__0"
    // InternalGo.g:6386:1: rule__DeferStmt__Group__0 : rule__DeferStmt__Group__0__Impl rule__DeferStmt__Group__1 ;
    public final void rule__DeferStmt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6390:1: ( rule__DeferStmt__Group__0__Impl rule__DeferStmt__Group__1 )
            // InternalGo.g:6391:2: rule__DeferStmt__Group__0__Impl rule__DeferStmt__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__DeferStmt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DeferStmt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeferStmt__Group__0"


    // $ANTLR start "rule__DeferStmt__Group__0__Impl"
    // InternalGo.g:6398:1: rule__DeferStmt__Group__0__Impl : ( 'defer' ) ;
    public final void rule__DeferStmt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6402:1: ( ( 'defer' ) )
            // InternalGo.g:6403:1: ( 'defer' )
            {
            // InternalGo.g:6403:1: ( 'defer' )
            // InternalGo.g:6404:2: 'defer'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeferStmtAccess().getDeferKeyword_0()); 
            }
            match(input,81,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeferStmtAccess().getDeferKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeferStmt__Group__0__Impl"


    // $ANTLR start "rule__DeferStmt__Group__1"
    // InternalGo.g:6413:1: rule__DeferStmt__Group__1 : rule__DeferStmt__Group__1__Impl ;
    public final void rule__DeferStmt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6417:1: ( rule__DeferStmt__Group__1__Impl )
            // InternalGo.g:6418:2: rule__DeferStmt__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DeferStmt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeferStmt__Group__1"


    // $ANTLR start "rule__DeferStmt__Group__1__Impl"
    // InternalGo.g:6424:1: rule__DeferStmt__Group__1__Impl : ( ( rule__DeferStmt__ExpressionAssignment_1 ) ) ;
    public final void rule__DeferStmt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6428:1: ( ( ( rule__DeferStmt__ExpressionAssignment_1 ) ) )
            // InternalGo.g:6429:1: ( ( rule__DeferStmt__ExpressionAssignment_1 ) )
            {
            // InternalGo.g:6429:1: ( ( rule__DeferStmt__ExpressionAssignment_1 ) )
            // InternalGo.g:6430:2: ( rule__DeferStmt__ExpressionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeferStmtAccess().getExpressionAssignment_1()); 
            }
            // InternalGo.g:6431:2: ( rule__DeferStmt__ExpressionAssignment_1 )
            // InternalGo.g:6431:3: rule__DeferStmt__ExpressionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__DeferStmt__ExpressionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeferStmtAccess().getExpressionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeferStmt__Group__1__Impl"


    // $ANTLR start "rule__IfStmt__Group__0"
    // InternalGo.g:6440:1: rule__IfStmt__Group__0 : rule__IfStmt__Group__0__Impl rule__IfStmt__Group__1 ;
    public final void rule__IfStmt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6444:1: ( rule__IfStmt__Group__0__Impl rule__IfStmt__Group__1 )
            // InternalGo.g:6445:2: rule__IfStmt__Group__0__Impl rule__IfStmt__Group__1
            {
            pushFollow(FOLLOW_30);
            rule__IfStmt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IfStmt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__Group__0"


    // $ANTLR start "rule__IfStmt__Group__0__Impl"
    // InternalGo.g:6452:1: rule__IfStmt__Group__0__Impl : ( 'if' ) ;
    public final void rule__IfStmt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6456:1: ( ( 'if' ) )
            // InternalGo.g:6457:1: ( 'if' )
            {
            // InternalGo.g:6457:1: ( 'if' )
            // InternalGo.g:6458:2: 'if'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStmtAccess().getIfKeyword_0()); 
            }
            match(input,82,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStmtAccess().getIfKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__Group__0__Impl"


    // $ANTLR start "rule__IfStmt__Group__1"
    // InternalGo.g:6467:1: rule__IfStmt__Group__1 : rule__IfStmt__Group__1__Impl rule__IfStmt__Group__2 ;
    public final void rule__IfStmt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6471:1: ( rule__IfStmt__Group__1__Impl rule__IfStmt__Group__2 )
            // InternalGo.g:6472:2: rule__IfStmt__Group__1__Impl rule__IfStmt__Group__2
            {
            pushFollow(FOLLOW_30);
            rule__IfStmt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IfStmt__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__Group__1"


    // $ANTLR start "rule__IfStmt__Group__1__Impl"
    // InternalGo.g:6479:1: rule__IfStmt__Group__1__Impl : ( ( rule__IfStmt__SimpleStmtAssignment_1 )? ) ;
    public final void rule__IfStmt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6483:1: ( ( ( rule__IfStmt__SimpleStmtAssignment_1 )? ) )
            // InternalGo.g:6484:1: ( ( rule__IfStmt__SimpleStmtAssignment_1 )? )
            {
            // InternalGo.g:6484:1: ( ( rule__IfStmt__SimpleStmtAssignment_1 )? )
            // InternalGo.g:6485:2: ( rule__IfStmt__SimpleStmtAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStmtAccess().getSimpleStmtAssignment_1()); 
            }
            // InternalGo.g:6486:2: ( rule__IfStmt__SimpleStmtAssignment_1 )?
            int alt69=2;
            alt69 = dfa69.predict(input);
            switch (alt69) {
                case 1 :
                    // InternalGo.g:6486:3: rule__IfStmt__SimpleStmtAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__IfStmt__SimpleStmtAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStmtAccess().getSimpleStmtAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__Group__1__Impl"


    // $ANTLR start "rule__IfStmt__Group__2"
    // InternalGo.g:6494:1: rule__IfStmt__Group__2 : rule__IfStmt__Group__2__Impl rule__IfStmt__Group__3 ;
    public final void rule__IfStmt__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6498:1: ( rule__IfStmt__Group__2__Impl rule__IfStmt__Group__3 )
            // InternalGo.g:6499:2: rule__IfStmt__Group__2__Impl rule__IfStmt__Group__3
            {
            pushFollow(FOLLOW_21);
            rule__IfStmt__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IfStmt__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__Group__2"


    // $ANTLR start "rule__IfStmt__Group__2__Impl"
    // InternalGo.g:6506:1: rule__IfStmt__Group__2__Impl : ( ( rule__IfStmt__ExpressionAssignment_2 ) ) ;
    public final void rule__IfStmt__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6510:1: ( ( ( rule__IfStmt__ExpressionAssignment_2 ) ) )
            // InternalGo.g:6511:1: ( ( rule__IfStmt__ExpressionAssignment_2 ) )
            {
            // InternalGo.g:6511:1: ( ( rule__IfStmt__ExpressionAssignment_2 ) )
            // InternalGo.g:6512:2: ( rule__IfStmt__ExpressionAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStmtAccess().getExpressionAssignment_2()); 
            }
            // InternalGo.g:6513:2: ( rule__IfStmt__ExpressionAssignment_2 )
            // InternalGo.g:6513:3: rule__IfStmt__ExpressionAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__IfStmt__ExpressionAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStmtAccess().getExpressionAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__Group__2__Impl"


    // $ANTLR start "rule__IfStmt__Group__3"
    // InternalGo.g:6521:1: rule__IfStmt__Group__3 : rule__IfStmt__Group__3__Impl rule__IfStmt__Group__4 ;
    public final void rule__IfStmt__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6525:1: ( rule__IfStmt__Group__3__Impl rule__IfStmt__Group__4 )
            // InternalGo.g:6526:2: rule__IfStmt__Group__3__Impl rule__IfStmt__Group__4
            {
            pushFollow(FOLLOW_31);
            rule__IfStmt__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IfStmt__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__Group__3"


    // $ANTLR start "rule__IfStmt__Group__3__Impl"
    // InternalGo.g:6533:1: rule__IfStmt__Group__3__Impl : ( ( rule__IfStmt__BlockAssignment_3 ) ) ;
    public final void rule__IfStmt__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6537:1: ( ( ( rule__IfStmt__BlockAssignment_3 ) ) )
            // InternalGo.g:6538:1: ( ( rule__IfStmt__BlockAssignment_3 ) )
            {
            // InternalGo.g:6538:1: ( ( rule__IfStmt__BlockAssignment_3 ) )
            // InternalGo.g:6539:2: ( rule__IfStmt__BlockAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStmtAccess().getBlockAssignment_3()); 
            }
            // InternalGo.g:6540:2: ( rule__IfStmt__BlockAssignment_3 )
            // InternalGo.g:6540:3: rule__IfStmt__BlockAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__IfStmt__BlockAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStmtAccess().getBlockAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__Group__3__Impl"


    // $ANTLR start "rule__IfStmt__Group__4"
    // InternalGo.g:6548:1: rule__IfStmt__Group__4 : rule__IfStmt__Group__4__Impl ;
    public final void rule__IfStmt__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6552:1: ( rule__IfStmt__Group__4__Impl )
            // InternalGo.g:6553:2: rule__IfStmt__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IfStmt__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__Group__4"


    // $ANTLR start "rule__IfStmt__Group__4__Impl"
    // InternalGo.g:6559:1: rule__IfStmt__Group__4__Impl : ( ( rule__IfStmt__Group_4__0 )? ) ;
    public final void rule__IfStmt__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6563:1: ( ( ( rule__IfStmt__Group_4__0 )? ) )
            // InternalGo.g:6564:1: ( ( rule__IfStmt__Group_4__0 )? )
            {
            // InternalGo.g:6564:1: ( ( rule__IfStmt__Group_4__0 )? )
            // InternalGo.g:6565:2: ( rule__IfStmt__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStmtAccess().getGroup_4()); 
            }
            // InternalGo.g:6566:2: ( rule__IfStmt__Group_4__0 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==83) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalGo.g:6566:3: rule__IfStmt__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__IfStmt__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStmtAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__Group__4__Impl"


    // $ANTLR start "rule__IfStmt__Group_4__0"
    // InternalGo.g:6575:1: rule__IfStmt__Group_4__0 : rule__IfStmt__Group_4__0__Impl rule__IfStmt__Group_4__1 ;
    public final void rule__IfStmt__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6579:1: ( rule__IfStmt__Group_4__0__Impl rule__IfStmt__Group_4__1 )
            // InternalGo.g:6580:2: rule__IfStmt__Group_4__0__Impl rule__IfStmt__Group_4__1
            {
            pushFollow(FOLLOW_32);
            rule__IfStmt__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IfStmt__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__Group_4__0"


    // $ANTLR start "rule__IfStmt__Group_4__0__Impl"
    // InternalGo.g:6587:1: rule__IfStmt__Group_4__0__Impl : ( 'else' ) ;
    public final void rule__IfStmt__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6591:1: ( ( 'else' ) )
            // InternalGo.g:6592:1: ( 'else' )
            {
            // InternalGo.g:6592:1: ( 'else' )
            // InternalGo.g:6593:2: 'else'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStmtAccess().getElseKeyword_4_0()); 
            }
            match(input,83,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStmtAccess().getElseKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__Group_4__0__Impl"


    // $ANTLR start "rule__IfStmt__Group_4__1"
    // InternalGo.g:6602:1: rule__IfStmt__Group_4__1 : rule__IfStmt__Group_4__1__Impl ;
    public final void rule__IfStmt__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6606:1: ( rule__IfStmt__Group_4__1__Impl )
            // InternalGo.g:6607:2: rule__IfStmt__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IfStmt__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__Group_4__1"


    // $ANTLR start "rule__IfStmt__Group_4__1__Impl"
    // InternalGo.g:6613:1: rule__IfStmt__Group_4__1__Impl : ( ( rule__IfStmt__Alternatives_4_1 ) ) ;
    public final void rule__IfStmt__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6617:1: ( ( ( rule__IfStmt__Alternatives_4_1 ) ) )
            // InternalGo.g:6618:1: ( ( rule__IfStmt__Alternatives_4_1 ) )
            {
            // InternalGo.g:6618:1: ( ( rule__IfStmt__Alternatives_4_1 ) )
            // InternalGo.g:6619:2: ( rule__IfStmt__Alternatives_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStmtAccess().getAlternatives_4_1()); 
            }
            // InternalGo.g:6620:2: ( rule__IfStmt__Alternatives_4_1 )
            // InternalGo.g:6620:3: rule__IfStmt__Alternatives_4_1
            {
            pushFollow(FOLLOW_2);
            rule__IfStmt__Alternatives_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStmtAccess().getAlternatives_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__Group_4__1__Impl"


    // $ANTLR start "rule__ExprSwitchStmt__Group__0"
    // InternalGo.g:6629:1: rule__ExprSwitchStmt__Group__0 : rule__ExprSwitchStmt__Group__0__Impl rule__ExprSwitchStmt__Group__1 ;
    public final void rule__ExprSwitchStmt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6633:1: ( rule__ExprSwitchStmt__Group__0__Impl rule__ExprSwitchStmt__Group__1 )
            // InternalGo.g:6634:2: rule__ExprSwitchStmt__Group__0__Impl rule__ExprSwitchStmt__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__ExprSwitchStmt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExprSwitchStmt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchStmt__Group__0"


    // $ANTLR start "rule__ExprSwitchStmt__Group__0__Impl"
    // InternalGo.g:6641:1: rule__ExprSwitchStmt__Group__0__Impl : ( 'switch' ) ;
    public final void rule__ExprSwitchStmt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6645:1: ( ( 'switch' ) )
            // InternalGo.g:6646:1: ( 'switch' )
            {
            // InternalGo.g:6646:1: ( 'switch' )
            // InternalGo.g:6647:2: 'switch'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprSwitchStmtAccess().getSwitchKeyword_0()); 
            }
            match(input,84,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprSwitchStmtAccess().getSwitchKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchStmt__Group__0__Impl"


    // $ANTLR start "rule__ExprSwitchStmt__Group__1"
    // InternalGo.g:6656:1: rule__ExprSwitchStmt__Group__1 : rule__ExprSwitchStmt__Group__1__Impl rule__ExprSwitchStmt__Group__2 ;
    public final void rule__ExprSwitchStmt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6660:1: ( rule__ExprSwitchStmt__Group__1__Impl rule__ExprSwitchStmt__Group__2 )
            // InternalGo.g:6661:2: rule__ExprSwitchStmt__Group__1__Impl rule__ExprSwitchStmt__Group__2
            {
            pushFollow(FOLLOW_33);
            rule__ExprSwitchStmt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExprSwitchStmt__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchStmt__Group__1"


    // $ANTLR start "rule__ExprSwitchStmt__Group__1__Impl"
    // InternalGo.g:6668:1: rule__ExprSwitchStmt__Group__1__Impl : ( ( rule__ExprSwitchStmt__SimpleStmtAssignment_1 )? ) ;
    public final void rule__ExprSwitchStmt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6672:1: ( ( ( rule__ExprSwitchStmt__SimpleStmtAssignment_1 )? ) )
            // InternalGo.g:6673:1: ( ( rule__ExprSwitchStmt__SimpleStmtAssignment_1 )? )
            {
            // InternalGo.g:6673:1: ( ( rule__ExprSwitchStmt__SimpleStmtAssignment_1 )? )
            // InternalGo.g:6674:2: ( rule__ExprSwitchStmt__SimpleStmtAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprSwitchStmtAccess().getSimpleStmtAssignment_1()); 
            }
            // InternalGo.g:6675:2: ( rule__ExprSwitchStmt__SimpleStmtAssignment_1 )?
            int alt71=2;
            alt71 = dfa71.predict(input);
            switch (alt71) {
                case 1 :
                    // InternalGo.g:6675:3: rule__ExprSwitchStmt__SimpleStmtAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExprSwitchStmt__SimpleStmtAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprSwitchStmtAccess().getSimpleStmtAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchStmt__Group__1__Impl"


    // $ANTLR start "rule__ExprSwitchStmt__Group__2"
    // InternalGo.g:6683:1: rule__ExprSwitchStmt__Group__2 : rule__ExprSwitchStmt__Group__2__Impl rule__ExprSwitchStmt__Group__3 ;
    public final void rule__ExprSwitchStmt__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6687:1: ( rule__ExprSwitchStmt__Group__2__Impl rule__ExprSwitchStmt__Group__3 )
            // InternalGo.g:6688:2: rule__ExprSwitchStmt__Group__2__Impl rule__ExprSwitchStmt__Group__3
            {
            pushFollow(FOLLOW_33);
            rule__ExprSwitchStmt__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExprSwitchStmt__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchStmt__Group__2"


    // $ANTLR start "rule__ExprSwitchStmt__Group__2__Impl"
    // InternalGo.g:6695:1: rule__ExprSwitchStmt__Group__2__Impl : ( ( rule__ExprSwitchStmt__ExpressionAssignment_2 )? ) ;
    public final void rule__ExprSwitchStmt__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6699:1: ( ( ( rule__ExprSwitchStmt__ExpressionAssignment_2 )? ) )
            // InternalGo.g:6700:1: ( ( rule__ExprSwitchStmt__ExpressionAssignment_2 )? )
            {
            // InternalGo.g:6700:1: ( ( rule__ExprSwitchStmt__ExpressionAssignment_2 )? )
            // InternalGo.g:6701:2: ( rule__ExprSwitchStmt__ExpressionAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprSwitchStmtAccess().getExpressionAssignment_2()); 
            }
            // InternalGo.g:6702:2: ( rule__ExprSwitchStmt__ExpressionAssignment_2 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==RULE_STRING_LIT||(LA72_0>=RULE_IDENTIFIER && LA72_0<=RULE_BINARY_OP)||LA72_0==45||(LA72_0>=48 && LA72_0<=49)||(LA72_0>=51 && LA72_0<=52)||LA72_0==57||(LA72_0>=60 && LA72_0<=62)||LA72_0==65||LA72_0==71||LA72_0==90||(LA72_0>=92 && LA72_0<=93)||LA72_0==95) ) {
                alt72=1;
            }
            else if ( (LA72_0==73) ) {
                int LA72_2 = input.LA(2);

                if ( (synpred133_InternalGo()) ) {
                    alt72=1;
                }
            }
            switch (alt72) {
                case 1 :
                    // InternalGo.g:6702:3: rule__ExprSwitchStmt__ExpressionAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExprSwitchStmt__ExpressionAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprSwitchStmtAccess().getExpressionAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchStmt__Group__2__Impl"


    // $ANTLR start "rule__ExprSwitchStmt__Group__3"
    // InternalGo.g:6710:1: rule__ExprSwitchStmt__Group__3 : rule__ExprSwitchStmt__Group__3__Impl rule__ExprSwitchStmt__Group__4 ;
    public final void rule__ExprSwitchStmt__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6714:1: ( rule__ExprSwitchStmt__Group__3__Impl rule__ExprSwitchStmt__Group__4 )
            // InternalGo.g:6715:2: rule__ExprSwitchStmt__Group__3__Impl rule__ExprSwitchStmt__Group__4
            {
            pushFollow(FOLLOW_34);
            rule__ExprSwitchStmt__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExprSwitchStmt__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchStmt__Group__3"


    // $ANTLR start "rule__ExprSwitchStmt__Group__3__Impl"
    // InternalGo.g:6722:1: rule__ExprSwitchStmt__Group__3__Impl : ( '{' ) ;
    public final void rule__ExprSwitchStmt__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6726:1: ( ( '{' ) )
            // InternalGo.g:6727:1: ( '{' )
            {
            // InternalGo.g:6727:1: ( '{' )
            // InternalGo.g:6728:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprSwitchStmtAccess().getLeftCurlyBracketKeyword_3()); 
            }
            match(input,73,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprSwitchStmtAccess().getLeftCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchStmt__Group__3__Impl"


    // $ANTLR start "rule__ExprSwitchStmt__Group__4"
    // InternalGo.g:6737:1: rule__ExprSwitchStmt__Group__4 : rule__ExprSwitchStmt__Group__4__Impl rule__ExprSwitchStmt__Group__5 ;
    public final void rule__ExprSwitchStmt__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6741:1: ( rule__ExprSwitchStmt__Group__4__Impl rule__ExprSwitchStmt__Group__5 )
            // InternalGo.g:6742:2: rule__ExprSwitchStmt__Group__4__Impl rule__ExprSwitchStmt__Group__5
            {
            pushFollow(FOLLOW_34);
            rule__ExprSwitchStmt__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExprSwitchStmt__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchStmt__Group__4"


    // $ANTLR start "rule__ExprSwitchStmt__Group__4__Impl"
    // InternalGo.g:6749:1: rule__ExprSwitchStmt__Group__4__Impl : ( ( rule__ExprSwitchStmt__ExprCaseClauseAssignment_4 )* ) ;
    public final void rule__ExprSwitchStmt__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6753:1: ( ( ( rule__ExprSwitchStmt__ExprCaseClauseAssignment_4 )* ) )
            // InternalGo.g:6754:1: ( ( rule__ExprSwitchStmt__ExprCaseClauseAssignment_4 )* )
            {
            // InternalGo.g:6754:1: ( ( rule__ExprSwitchStmt__ExprCaseClauseAssignment_4 )* )
            // InternalGo.g:6755:2: ( rule__ExprSwitchStmt__ExprCaseClauseAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprSwitchStmtAccess().getExprCaseClauseAssignment_4()); 
            }
            // InternalGo.g:6756:2: ( rule__ExprSwitchStmt__ExprCaseClauseAssignment_4 )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==59||LA73_0==85) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalGo.g:6756:3: rule__ExprSwitchStmt__ExprCaseClauseAssignment_4
            	    {
            	    pushFollow(FOLLOW_35);
            	    rule__ExprSwitchStmt__ExprCaseClauseAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprSwitchStmtAccess().getExprCaseClauseAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchStmt__Group__4__Impl"


    // $ANTLR start "rule__ExprSwitchStmt__Group__5"
    // InternalGo.g:6764:1: rule__ExprSwitchStmt__Group__5 : rule__ExprSwitchStmt__Group__5__Impl ;
    public final void rule__ExprSwitchStmt__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6768:1: ( rule__ExprSwitchStmt__Group__5__Impl )
            // InternalGo.g:6769:2: rule__ExprSwitchStmt__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExprSwitchStmt__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchStmt__Group__5"


    // $ANTLR start "rule__ExprSwitchStmt__Group__5__Impl"
    // InternalGo.g:6775:1: rule__ExprSwitchStmt__Group__5__Impl : ( '}' ) ;
    public final void rule__ExprSwitchStmt__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6779:1: ( ( '}' ) )
            // InternalGo.g:6780:1: ( '}' )
            {
            // InternalGo.g:6780:1: ( '}' )
            // InternalGo.g:6781:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprSwitchStmtAccess().getRightCurlyBracketKeyword_5()); 
            }
            match(input,74,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprSwitchStmtAccess().getRightCurlyBracketKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchStmt__Group__5__Impl"


    // $ANTLR start "rule__ExprCaseClause__Group__0"
    // InternalGo.g:6791:1: rule__ExprCaseClause__Group__0 : rule__ExprCaseClause__Group__0__Impl rule__ExprCaseClause__Group__1 ;
    public final void rule__ExprCaseClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6795:1: ( rule__ExprCaseClause__Group__0__Impl rule__ExprCaseClause__Group__1 )
            // InternalGo.g:6796:2: rule__ExprCaseClause__Group__0__Impl rule__ExprCaseClause__Group__1
            {
            pushFollow(FOLLOW_29);
            rule__ExprCaseClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExprCaseClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprCaseClause__Group__0"


    // $ANTLR start "rule__ExprCaseClause__Group__0__Impl"
    // InternalGo.g:6803:1: rule__ExprCaseClause__Group__0__Impl : ( ( rule__ExprCaseClause__ExprSwitchCaseAssignment_0 ) ) ;
    public final void rule__ExprCaseClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6807:1: ( ( ( rule__ExprCaseClause__ExprSwitchCaseAssignment_0 ) ) )
            // InternalGo.g:6808:1: ( ( rule__ExprCaseClause__ExprSwitchCaseAssignment_0 ) )
            {
            // InternalGo.g:6808:1: ( ( rule__ExprCaseClause__ExprSwitchCaseAssignment_0 ) )
            // InternalGo.g:6809:2: ( rule__ExprCaseClause__ExprSwitchCaseAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseAssignment_0()); 
            }
            // InternalGo.g:6810:2: ( rule__ExprCaseClause__ExprSwitchCaseAssignment_0 )
            // InternalGo.g:6810:3: rule__ExprCaseClause__ExprSwitchCaseAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ExprCaseClause__ExprSwitchCaseAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprCaseClause__Group__0__Impl"


    // $ANTLR start "rule__ExprCaseClause__Group__1"
    // InternalGo.g:6818:1: rule__ExprCaseClause__Group__1 : rule__ExprCaseClause__Group__1__Impl rule__ExprCaseClause__Group__2 ;
    public final void rule__ExprCaseClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6822:1: ( rule__ExprCaseClause__Group__1__Impl rule__ExprCaseClause__Group__2 )
            // InternalGo.g:6823:2: rule__ExprCaseClause__Group__1__Impl rule__ExprCaseClause__Group__2
            {
            pushFollow(FOLLOW_23);
            rule__ExprCaseClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExprCaseClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprCaseClause__Group__1"


    // $ANTLR start "rule__ExprCaseClause__Group__1__Impl"
    // InternalGo.g:6830:1: rule__ExprCaseClause__Group__1__Impl : ( ':' ) ;
    public final void rule__ExprCaseClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6834:1: ( ( ':' ) )
            // InternalGo.g:6835:1: ( ':' )
            {
            // InternalGo.g:6835:1: ( ':' )
            // InternalGo.g:6836:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprCaseClauseAccess().getColonKeyword_1()); 
            }
            match(input,76,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprCaseClauseAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprCaseClause__Group__1__Impl"


    // $ANTLR start "rule__ExprCaseClause__Group__2"
    // InternalGo.g:6845:1: rule__ExprCaseClause__Group__2 : rule__ExprCaseClause__Group__2__Impl ;
    public final void rule__ExprCaseClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6849:1: ( rule__ExprCaseClause__Group__2__Impl )
            // InternalGo.g:6850:2: rule__ExprCaseClause__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExprCaseClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprCaseClause__Group__2"


    // $ANTLR start "rule__ExprCaseClause__Group__2__Impl"
    // InternalGo.g:6856:1: rule__ExprCaseClause__Group__2__Impl : ( ( rule__ExprCaseClause__StatementListAssignment_2 ) ) ;
    public final void rule__ExprCaseClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6860:1: ( ( ( rule__ExprCaseClause__StatementListAssignment_2 ) ) )
            // InternalGo.g:6861:1: ( ( rule__ExprCaseClause__StatementListAssignment_2 ) )
            {
            // InternalGo.g:6861:1: ( ( rule__ExprCaseClause__StatementListAssignment_2 ) )
            // InternalGo.g:6862:2: ( rule__ExprCaseClause__StatementListAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprCaseClauseAccess().getStatementListAssignment_2()); 
            }
            // InternalGo.g:6863:2: ( rule__ExprCaseClause__StatementListAssignment_2 )
            // InternalGo.g:6863:3: rule__ExprCaseClause__StatementListAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__ExprCaseClause__StatementListAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprCaseClauseAccess().getStatementListAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprCaseClause__Group__2__Impl"


    // $ANTLR start "rule__ExprSwitchCase__Group_0__0"
    // InternalGo.g:6872:1: rule__ExprSwitchCase__Group_0__0 : rule__ExprSwitchCase__Group_0__0__Impl rule__ExprSwitchCase__Group_0__1 ;
    public final void rule__ExprSwitchCase__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6876:1: ( rule__ExprSwitchCase__Group_0__0__Impl rule__ExprSwitchCase__Group_0__1 )
            // InternalGo.g:6877:2: rule__ExprSwitchCase__Group_0__0__Impl rule__ExprSwitchCase__Group_0__1
            {
            pushFollow(FOLLOW_16);
            rule__ExprSwitchCase__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExprSwitchCase__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchCase__Group_0__0"


    // $ANTLR start "rule__ExprSwitchCase__Group_0__0__Impl"
    // InternalGo.g:6884:1: rule__ExprSwitchCase__Group_0__0__Impl : ( 'case' ) ;
    public final void rule__ExprSwitchCase__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6888:1: ( ( 'case' ) )
            // InternalGo.g:6889:1: ( 'case' )
            {
            // InternalGo.g:6889:1: ( 'case' )
            // InternalGo.g:6890:2: 'case'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprSwitchCaseAccess().getCaseKeyword_0_0()); 
            }
            match(input,85,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprSwitchCaseAccess().getCaseKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchCase__Group_0__0__Impl"


    // $ANTLR start "rule__ExprSwitchCase__Group_0__1"
    // InternalGo.g:6899:1: rule__ExprSwitchCase__Group_0__1 : rule__ExprSwitchCase__Group_0__1__Impl ;
    public final void rule__ExprSwitchCase__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6903:1: ( rule__ExprSwitchCase__Group_0__1__Impl )
            // InternalGo.g:6904:2: rule__ExprSwitchCase__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExprSwitchCase__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchCase__Group_0__1"


    // $ANTLR start "rule__ExprSwitchCase__Group_0__1__Impl"
    // InternalGo.g:6910:1: rule__ExprSwitchCase__Group_0__1__Impl : ( ( rule__ExprSwitchCase__ExpressionListAssignment_0_1 ) ) ;
    public final void rule__ExprSwitchCase__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6914:1: ( ( ( rule__ExprSwitchCase__ExpressionListAssignment_0_1 ) ) )
            // InternalGo.g:6915:1: ( ( rule__ExprSwitchCase__ExpressionListAssignment_0_1 ) )
            {
            // InternalGo.g:6915:1: ( ( rule__ExprSwitchCase__ExpressionListAssignment_0_1 ) )
            // InternalGo.g:6916:2: ( rule__ExprSwitchCase__ExpressionListAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprSwitchCaseAccess().getExpressionListAssignment_0_1()); 
            }
            // InternalGo.g:6917:2: ( rule__ExprSwitchCase__ExpressionListAssignment_0_1 )
            // InternalGo.g:6917:3: rule__ExprSwitchCase__ExpressionListAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__ExprSwitchCase__ExpressionListAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprSwitchCaseAccess().getExpressionListAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchCase__Group_0__1__Impl"


    // $ANTLR start "rule__TypeSwitchStmt__Group__0"
    // InternalGo.g:6926:1: rule__TypeSwitchStmt__Group__0 : rule__TypeSwitchStmt__Group__0__Impl rule__TypeSwitchStmt__Group__1 ;
    public final void rule__TypeSwitchStmt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6930:1: ( rule__TypeSwitchStmt__Group__0__Impl rule__TypeSwitchStmt__Group__1 )
            // InternalGo.g:6931:2: rule__TypeSwitchStmt__Group__0__Impl rule__TypeSwitchStmt__Group__1
            {
            pushFollow(FOLLOW_30);
            rule__TypeSwitchStmt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeSwitchStmt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchStmt__Group__0"


    // $ANTLR start "rule__TypeSwitchStmt__Group__0__Impl"
    // InternalGo.g:6938:1: rule__TypeSwitchStmt__Group__0__Impl : ( 'switch' ) ;
    public final void rule__TypeSwitchStmt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6942:1: ( ( 'switch' ) )
            // InternalGo.g:6943:1: ( 'switch' )
            {
            // InternalGo.g:6943:1: ( 'switch' )
            // InternalGo.g:6944:2: 'switch'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchStmtAccess().getSwitchKeyword_0()); 
            }
            match(input,84,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchStmtAccess().getSwitchKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchStmt__Group__0__Impl"


    // $ANTLR start "rule__TypeSwitchStmt__Group__1"
    // InternalGo.g:6953:1: rule__TypeSwitchStmt__Group__1 : rule__TypeSwitchStmt__Group__1__Impl rule__TypeSwitchStmt__Group__2 ;
    public final void rule__TypeSwitchStmt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6957:1: ( rule__TypeSwitchStmt__Group__1__Impl rule__TypeSwitchStmt__Group__2 )
            // InternalGo.g:6958:2: rule__TypeSwitchStmt__Group__1__Impl rule__TypeSwitchStmt__Group__2
            {
            pushFollow(FOLLOW_30);
            rule__TypeSwitchStmt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeSwitchStmt__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchStmt__Group__1"


    // $ANTLR start "rule__TypeSwitchStmt__Group__1__Impl"
    // InternalGo.g:6965:1: rule__TypeSwitchStmt__Group__1__Impl : ( ( rule__TypeSwitchStmt__SimpleStmtAssignment_1 )? ) ;
    public final void rule__TypeSwitchStmt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6969:1: ( ( ( rule__TypeSwitchStmt__SimpleStmtAssignment_1 )? ) )
            // InternalGo.g:6970:1: ( ( rule__TypeSwitchStmt__SimpleStmtAssignment_1 )? )
            {
            // InternalGo.g:6970:1: ( ( rule__TypeSwitchStmt__SimpleStmtAssignment_1 )? )
            // InternalGo.g:6971:2: ( rule__TypeSwitchStmt__SimpleStmtAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchStmtAccess().getSimpleStmtAssignment_1()); 
            }
            // InternalGo.g:6972:2: ( rule__TypeSwitchStmt__SimpleStmtAssignment_1 )?
            int alt74=2;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // InternalGo.g:6972:3: rule__TypeSwitchStmt__SimpleStmtAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TypeSwitchStmt__SimpleStmtAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchStmtAccess().getSimpleStmtAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchStmt__Group__1__Impl"


    // $ANTLR start "rule__TypeSwitchStmt__Group__2"
    // InternalGo.g:6980:1: rule__TypeSwitchStmt__Group__2 : rule__TypeSwitchStmt__Group__2__Impl rule__TypeSwitchStmt__Group__3 ;
    public final void rule__TypeSwitchStmt__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6984:1: ( rule__TypeSwitchStmt__Group__2__Impl rule__TypeSwitchStmt__Group__3 )
            // InternalGo.g:6985:2: rule__TypeSwitchStmt__Group__2__Impl rule__TypeSwitchStmt__Group__3
            {
            pushFollow(FOLLOW_21);
            rule__TypeSwitchStmt__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeSwitchStmt__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchStmt__Group__2"


    // $ANTLR start "rule__TypeSwitchStmt__Group__2__Impl"
    // InternalGo.g:6992:1: rule__TypeSwitchStmt__Group__2__Impl : ( ( rule__TypeSwitchStmt__TypeSwitchGuardAssignment_2 ) ) ;
    public final void rule__TypeSwitchStmt__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:6996:1: ( ( ( rule__TypeSwitchStmt__TypeSwitchGuardAssignment_2 ) ) )
            // InternalGo.g:6997:1: ( ( rule__TypeSwitchStmt__TypeSwitchGuardAssignment_2 ) )
            {
            // InternalGo.g:6997:1: ( ( rule__TypeSwitchStmt__TypeSwitchGuardAssignment_2 ) )
            // InternalGo.g:6998:2: ( rule__TypeSwitchStmt__TypeSwitchGuardAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchStmtAccess().getTypeSwitchGuardAssignment_2()); 
            }
            // InternalGo.g:6999:2: ( rule__TypeSwitchStmt__TypeSwitchGuardAssignment_2 )
            // InternalGo.g:6999:3: rule__TypeSwitchStmt__TypeSwitchGuardAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__TypeSwitchStmt__TypeSwitchGuardAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchStmtAccess().getTypeSwitchGuardAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchStmt__Group__2__Impl"


    // $ANTLR start "rule__TypeSwitchStmt__Group__3"
    // InternalGo.g:7007:1: rule__TypeSwitchStmt__Group__3 : rule__TypeSwitchStmt__Group__3__Impl rule__TypeSwitchStmt__Group__4 ;
    public final void rule__TypeSwitchStmt__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7011:1: ( rule__TypeSwitchStmt__Group__3__Impl rule__TypeSwitchStmt__Group__4 )
            // InternalGo.g:7012:2: rule__TypeSwitchStmt__Group__3__Impl rule__TypeSwitchStmt__Group__4
            {
            pushFollow(FOLLOW_34);
            rule__TypeSwitchStmt__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeSwitchStmt__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchStmt__Group__3"


    // $ANTLR start "rule__TypeSwitchStmt__Group__3__Impl"
    // InternalGo.g:7019:1: rule__TypeSwitchStmt__Group__3__Impl : ( '{' ) ;
    public final void rule__TypeSwitchStmt__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7023:1: ( ( '{' ) )
            // InternalGo.g:7024:1: ( '{' )
            {
            // InternalGo.g:7024:1: ( '{' )
            // InternalGo.g:7025:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchStmtAccess().getLeftCurlyBracketKeyword_3()); 
            }
            match(input,73,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchStmtAccess().getLeftCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchStmt__Group__3__Impl"


    // $ANTLR start "rule__TypeSwitchStmt__Group__4"
    // InternalGo.g:7034:1: rule__TypeSwitchStmt__Group__4 : rule__TypeSwitchStmt__Group__4__Impl rule__TypeSwitchStmt__Group__5 ;
    public final void rule__TypeSwitchStmt__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7038:1: ( rule__TypeSwitchStmt__Group__4__Impl rule__TypeSwitchStmt__Group__5 )
            // InternalGo.g:7039:2: rule__TypeSwitchStmt__Group__4__Impl rule__TypeSwitchStmt__Group__5
            {
            pushFollow(FOLLOW_34);
            rule__TypeSwitchStmt__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeSwitchStmt__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchStmt__Group__4"


    // $ANTLR start "rule__TypeSwitchStmt__Group__4__Impl"
    // InternalGo.g:7046:1: rule__TypeSwitchStmt__Group__4__Impl : ( ( rule__TypeSwitchStmt__TypeCaseClauseAssignment_4 )* ) ;
    public final void rule__TypeSwitchStmt__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7050:1: ( ( ( rule__TypeSwitchStmt__TypeCaseClauseAssignment_4 )* ) )
            // InternalGo.g:7051:1: ( ( rule__TypeSwitchStmt__TypeCaseClauseAssignment_4 )* )
            {
            // InternalGo.g:7051:1: ( ( rule__TypeSwitchStmt__TypeCaseClauseAssignment_4 )* )
            // InternalGo.g:7052:2: ( rule__TypeSwitchStmt__TypeCaseClauseAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchStmtAccess().getTypeCaseClauseAssignment_4()); 
            }
            // InternalGo.g:7053:2: ( rule__TypeSwitchStmt__TypeCaseClauseAssignment_4 )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==59||LA75_0==85) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalGo.g:7053:3: rule__TypeSwitchStmt__TypeCaseClauseAssignment_4
            	    {
            	    pushFollow(FOLLOW_35);
            	    rule__TypeSwitchStmt__TypeCaseClauseAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchStmtAccess().getTypeCaseClauseAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchStmt__Group__4__Impl"


    // $ANTLR start "rule__TypeSwitchStmt__Group__5"
    // InternalGo.g:7061:1: rule__TypeSwitchStmt__Group__5 : rule__TypeSwitchStmt__Group__5__Impl ;
    public final void rule__TypeSwitchStmt__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7065:1: ( rule__TypeSwitchStmt__Group__5__Impl )
            // InternalGo.g:7066:2: rule__TypeSwitchStmt__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TypeSwitchStmt__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchStmt__Group__5"


    // $ANTLR start "rule__TypeSwitchStmt__Group__5__Impl"
    // InternalGo.g:7072:1: rule__TypeSwitchStmt__Group__5__Impl : ( '}' ) ;
    public final void rule__TypeSwitchStmt__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7076:1: ( ( '}' ) )
            // InternalGo.g:7077:1: ( '}' )
            {
            // InternalGo.g:7077:1: ( '}' )
            // InternalGo.g:7078:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchStmtAccess().getRightCurlyBracketKeyword_5()); 
            }
            match(input,74,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchStmtAccess().getRightCurlyBracketKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchStmt__Group__5__Impl"


    // $ANTLR start "rule__TypeSwitchGuard__Group__0"
    // InternalGo.g:7088:1: rule__TypeSwitchGuard__Group__0 : rule__TypeSwitchGuard__Group__0__Impl rule__TypeSwitchGuard__Group__1 ;
    public final void rule__TypeSwitchGuard__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7092:1: ( rule__TypeSwitchGuard__Group__0__Impl rule__TypeSwitchGuard__Group__1 )
            // InternalGo.g:7093:2: rule__TypeSwitchGuard__Group__0__Impl rule__TypeSwitchGuard__Group__1
            {
            pushFollow(FOLLOW_30);
            rule__TypeSwitchGuard__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeSwitchGuard__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchGuard__Group__0"


    // $ANTLR start "rule__TypeSwitchGuard__Group__0__Impl"
    // InternalGo.g:7100:1: rule__TypeSwitchGuard__Group__0__Impl : ( ( rule__TypeSwitchGuard__Group_0__0 )? ) ;
    public final void rule__TypeSwitchGuard__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7104:1: ( ( ( rule__TypeSwitchGuard__Group_0__0 )? ) )
            // InternalGo.g:7105:1: ( ( rule__TypeSwitchGuard__Group_0__0 )? )
            {
            // InternalGo.g:7105:1: ( ( rule__TypeSwitchGuard__Group_0__0 )? )
            // InternalGo.g:7106:2: ( rule__TypeSwitchGuard__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchGuardAccess().getGroup_0()); 
            }
            // InternalGo.g:7107:2: ( rule__TypeSwitchGuard__Group_0__0 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==RULE_IDENTIFIER) ) {
                int LA76_1 = input.LA(2);

                if ( (LA76_1==75) ) {
                    alt76=1;
                }
            }
            switch (alt76) {
                case 1 :
                    // InternalGo.g:7107:3: rule__TypeSwitchGuard__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TypeSwitchGuard__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchGuardAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchGuard__Group__0__Impl"


    // $ANTLR start "rule__TypeSwitchGuard__Group__1"
    // InternalGo.g:7115:1: rule__TypeSwitchGuard__Group__1 : rule__TypeSwitchGuard__Group__1__Impl rule__TypeSwitchGuard__Group__2 ;
    public final void rule__TypeSwitchGuard__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7119:1: ( rule__TypeSwitchGuard__Group__1__Impl rule__TypeSwitchGuard__Group__2 )
            // InternalGo.g:7120:2: rule__TypeSwitchGuard__Group__1__Impl rule__TypeSwitchGuard__Group__2
            {
            pushFollow(FOLLOW_36);
            rule__TypeSwitchGuard__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeSwitchGuard__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchGuard__Group__1"


    // $ANTLR start "rule__TypeSwitchGuard__Group__1__Impl"
    // InternalGo.g:7127:1: rule__TypeSwitchGuard__Group__1__Impl : ( ( rule__TypeSwitchGuard__PrimaryExprAssignment_1 ) ) ;
    public final void rule__TypeSwitchGuard__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7131:1: ( ( ( rule__TypeSwitchGuard__PrimaryExprAssignment_1 ) ) )
            // InternalGo.g:7132:1: ( ( rule__TypeSwitchGuard__PrimaryExprAssignment_1 ) )
            {
            // InternalGo.g:7132:1: ( ( rule__TypeSwitchGuard__PrimaryExprAssignment_1 ) )
            // InternalGo.g:7133:2: ( rule__TypeSwitchGuard__PrimaryExprAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprAssignment_1()); 
            }
            // InternalGo.g:7134:2: ( rule__TypeSwitchGuard__PrimaryExprAssignment_1 )
            // InternalGo.g:7134:3: rule__TypeSwitchGuard__PrimaryExprAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TypeSwitchGuard__PrimaryExprAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchGuard__Group__1__Impl"


    // $ANTLR start "rule__TypeSwitchGuard__Group__2"
    // InternalGo.g:7142:1: rule__TypeSwitchGuard__Group__2 : rule__TypeSwitchGuard__Group__2__Impl rule__TypeSwitchGuard__Group__3 ;
    public final void rule__TypeSwitchGuard__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7146:1: ( rule__TypeSwitchGuard__Group__2__Impl rule__TypeSwitchGuard__Group__3 )
            // InternalGo.g:7147:2: rule__TypeSwitchGuard__Group__2__Impl rule__TypeSwitchGuard__Group__3
            {
            pushFollow(FOLLOW_20);
            rule__TypeSwitchGuard__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeSwitchGuard__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchGuard__Group__2"


    // $ANTLR start "rule__TypeSwitchGuard__Group__2__Impl"
    // InternalGo.g:7154:1: rule__TypeSwitchGuard__Group__2__Impl : ( '.' ) ;
    public final void rule__TypeSwitchGuard__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7158:1: ( ( '.' ) )
            // InternalGo.g:7159:1: ( '.' )
            {
            // InternalGo.g:7159:1: ( '.' )
            // InternalGo.g:7160:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchGuardAccess().getFullStopKeyword_2()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchGuardAccess().getFullStopKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchGuard__Group__2__Impl"


    // $ANTLR start "rule__TypeSwitchGuard__Group__3"
    // InternalGo.g:7169:1: rule__TypeSwitchGuard__Group__3 : rule__TypeSwitchGuard__Group__3__Impl rule__TypeSwitchGuard__Group__4 ;
    public final void rule__TypeSwitchGuard__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7173:1: ( rule__TypeSwitchGuard__Group__3__Impl rule__TypeSwitchGuard__Group__4 )
            // InternalGo.g:7174:2: rule__TypeSwitchGuard__Group__3__Impl rule__TypeSwitchGuard__Group__4
            {
            pushFollow(FOLLOW_37);
            rule__TypeSwitchGuard__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeSwitchGuard__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchGuard__Group__3"


    // $ANTLR start "rule__TypeSwitchGuard__Group__3__Impl"
    // InternalGo.g:7181:1: rule__TypeSwitchGuard__Group__3__Impl : ( '(' ) ;
    public final void rule__TypeSwitchGuard__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7185:1: ( ( '(' ) )
            // InternalGo.g:7186:1: ( '(' )
            {
            // InternalGo.g:7186:1: ( '(' )
            // InternalGo.g:7187:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchGuardAccess().getLeftParenthesisKeyword_3()); 
            }
            match(input,65,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchGuardAccess().getLeftParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchGuard__Group__3__Impl"


    // $ANTLR start "rule__TypeSwitchGuard__Group__4"
    // InternalGo.g:7196:1: rule__TypeSwitchGuard__Group__4 : rule__TypeSwitchGuard__Group__4__Impl rule__TypeSwitchGuard__Group__5 ;
    public final void rule__TypeSwitchGuard__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7200:1: ( rule__TypeSwitchGuard__Group__4__Impl rule__TypeSwitchGuard__Group__5 )
            // InternalGo.g:7201:2: rule__TypeSwitchGuard__Group__4__Impl rule__TypeSwitchGuard__Group__5
            {
            pushFollow(FOLLOW_38);
            rule__TypeSwitchGuard__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeSwitchGuard__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchGuard__Group__4"


    // $ANTLR start "rule__TypeSwitchGuard__Group__4__Impl"
    // InternalGo.g:7208:1: rule__TypeSwitchGuard__Group__4__Impl : ( 'type' ) ;
    public final void rule__TypeSwitchGuard__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7212:1: ( ( 'type' ) )
            // InternalGo.g:7213:1: ( 'type' )
            {
            // InternalGo.g:7213:1: ( 'type' )
            // InternalGo.g:7214:2: 'type'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchGuardAccess().getTypeKeyword_4()); 
            }
            match(input,70,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchGuardAccess().getTypeKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchGuard__Group__4__Impl"


    // $ANTLR start "rule__TypeSwitchGuard__Group__5"
    // InternalGo.g:7223:1: rule__TypeSwitchGuard__Group__5 : rule__TypeSwitchGuard__Group__5__Impl ;
    public final void rule__TypeSwitchGuard__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7227:1: ( rule__TypeSwitchGuard__Group__5__Impl )
            // InternalGo.g:7228:2: rule__TypeSwitchGuard__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TypeSwitchGuard__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchGuard__Group__5"


    // $ANTLR start "rule__TypeSwitchGuard__Group__5__Impl"
    // InternalGo.g:7234:1: rule__TypeSwitchGuard__Group__5__Impl : ( ')' ) ;
    public final void rule__TypeSwitchGuard__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7238:1: ( ( ')' ) )
            // InternalGo.g:7239:1: ( ')' )
            {
            // InternalGo.g:7239:1: ( ')' )
            // InternalGo.g:7240:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchGuardAccess().getRightParenthesisKeyword_5()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchGuardAccess().getRightParenthesisKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchGuard__Group__5__Impl"


    // $ANTLR start "rule__TypeSwitchGuard__Group_0__0"
    // InternalGo.g:7250:1: rule__TypeSwitchGuard__Group_0__0 : rule__TypeSwitchGuard__Group_0__0__Impl rule__TypeSwitchGuard__Group_0__1 ;
    public final void rule__TypeSwitchGuard__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7254:1: ( rule__TypeSwitchGuard__Group_0__0__Impl rule__TypeSwitchGuard__Group_0__1 )
            // InternalGo.g:7255:2: rule__TypeSwitchGuard__Group_0__0__Impl rule__TypeSwitchGuard__Group_0__1
            {
            pushFollow(FOLLOW_28);
            rule__TypeSwitchGuard__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeSwitchGuard__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchGuard__Group_0__0"


    // $ANTLR start "rule__TypeSwitchGuard__Group_0__0__Impl"
    // InternalGo.g:7262:1: rule__TypeSwitchGuard__Group_0__0__Impl : ( RULE_IDENTIFIER ) ;
    public final void rule__TypeSwitchGuard__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7266:1: ( ( RULE_IDENTIFIER ) )
            // InternalGo.g:7267:1: ( RULE_IDENTIFIER )
            {
            // InternalGo.g:7267:1: ( RULE_IDENTIFIER )
            // InternalGo.g:7268:2: RULE_IDENTIFIER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchGuardAccess().getIDENTIFIERTerminalRuleCall_0_0()); 
            }
            match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchGuardAccess().getIDENTIFIERTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchGuard__Group_0__0__Impl"


    // $ANTLR start "rule__TypeSwitchGuard__Group_0__1"
    // InternalGo.g:7277:1: rule__TypeSwitchGuard__Group_0__1 : rule__TypeSwitchGuard__Group_0__1__Impl ;
    public final void rule__TypeSwitchGuard__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7281:1: ( rule__TypeSwitchGuard__Group_0__1__Impl )
            // InternalGo.g:7282:2: rule__TypeSwitchGuard__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TypeSwitchGuard__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchGuard__Group_0__1"


    // $ANTLR start "rule__TypeSwitchGuard__Group_0__1__Impl"
    // InternalGo.g:7288:1: rule__TypeSwitchGuard__Group_0__1__Impl : ( ':=' ) ;
    public final void rule__TypeSwitchGuard__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7292:1: ( ( ':=' ) )
            // InternalGo.g:7293:1: ( ':=' )
            {
            // InternalGo.g:7293:1: ( ':=' )
            // InternalGo.g:7294:2: ':='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1()); 
            }
            match(input,75,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchGuard__Group_0__1__Impl"


    // $ANTLR start "rule__TypeCaseClause__Group__0"
    // InternalGo.g:7304:1: rule__TypeCaseClause__Group__0 : rule__TypeCaseClause__Group__0__Impl rule__TypeCaseClause__Group__1 ;
    public final void rule__TypeCaseClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7308:1: ( rule__TypeCaseClause__Group__0__Impl rule__TypeCaseClause__Group__1 )
            // InternalGo.g:7309:2: rule__TypeCaseClause__Group__0__Impl rule__TypeCaseClause__Group__1
            {
            pushFollow(FOLLOW_29);
            rule__TypeCaseClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeCaseClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeCaseClause__Group__0"


    // $ANTLR start "rule__TypeCaseClause__Group__0__Impl"
    // InternalGo.g:7316:1: rule__TypeCaseClause__Group__0__Impl : ( ( rule__TypeCaseClause__TypeSwitchCaseAssignment_0 ) ) ;
    public final void rule__TypeCaseClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7320:1: ( ( ( rule__TypeCaseClause__TypeSwitchCaseAssignment_0 ) ) )
            // InternalGo.g:7321:1: ( ( rule__TypeCaseClause__TypeSwitchCaseAssignment_0 ) )
            {
            // InternalGo.g:7321:1: ( ( rule__TypeCaseClause__TypeSwitchCaseAssignment_0 ) )
            // InternalGo.g:7322:2: ( rule__TypeCaseClause__TypeSwitchCaseAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseAssignment_0()); 
            }
            // InternalGo.g:7323:2: ( rule__TypeCaseClause__TypeSwitchCaseAssignment_0 )
            // InternalGo.g:7323:3: rule__TypeCaseClause__TypeSwitchCaseAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TypeCaseClause__TypeSwitchCaseAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeCaseClause__Group__0__Impl"


    // $ANTLR start "rule__TypeCaseClause__Group__1"
    // InternalGo.g:7331:1: rule__TypeCaseClause__Group__1 : rule__TypeCaseClause__Group__1__Impl rule__TypeCaseClause__Group__2 ;
    public final void rule__TypeCaseClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7335:1: ( rule__TypeCaseClause__Group__1__Impl rule__TypeCaseClause__Group__2 )
            // InternalGo.g:7336:2: rule__TypeCaseClause__Group__1__Impl rule__TypeCaseClause__Group__2
            {
            pushFollow(FOLLOW_23);
            rule__TypeCaseClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeCaseClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeCaseClause__Group__1"


    // $ANTLR start "rule__TypeCaseClause__Group__1__Impl"
    // InternalGo.g:7343:1: rule__TypeCaseClause__Group__1__Impl : ( ':' ) ;
    public final void rule__TypeCaseClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7347:1: ( ( ':' ) )
            // InternalGo.g:7348:1: ( ':' )
            {
            // InternalGo.g:7348:1: ( ':' )
            // InternalGo.g:7349:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1()); 
            }
            match(input,76,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeCaseClause__Group__1__Impl"


    // $ANTLR start "rule__TypeCaseClause__Group__2"
    // InternalGo.g:7358:1: rule__TypeCaseClause__Group__2 : rule__TypeCaseClause__Group__2__Impl ;
    public final void rule__TypeCaseClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7362:1: ( rule__TypeCaseClause__Group__2__Impl )
            // InternalGo.g:7363:2: rule__TypeCaseClause__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TypeCaseClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeCaseClause__Group__2"


    // $ANTLR start "rule__TypeCaseClause__Group__2__Impl"
    // InternalGo.g:7369:1: rule__TypeCaseClause__Group__2__Impl : ( ( rule__TypeCaseClause__StatementListAssignment_2 ) ) ;
    public final void rule__TypeCaseClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7373:1: ( ( ( rule__TypeCaseClause__StatementListAssignment_2 ) ) )
            // InternalGo.g:7374:1: ( ( rule__TypeCaseClause__StatementListAssignment_2 ) )
            {
            // InternalGo.g:7374:1: ( ( rule__TypeCaseClause__StatementListAssignment_2 ) )
            // InternalGo.g:7375:2: ( rule__TypeCaseClause__StatementListAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeCaseClauseAccess().getStatementListAssignment_2()); 
            }
            // InternalGo.g:7376:2: ( rule__TypeCaseClause__StatementListAssignment_2 )
            // InternalGo.g:7376:3: rule__TypeCaseClause__StatementListAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__TypeCaseClause__StatementListAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeCaseClauseAccess().getStatementListAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeCaseClause__Group__2__Impl"


    // $ANTLR start "rule__TypeSwitchCase__Group_0__0"
    // InternalGo.g:7385:1: rule__TypeSwitchCase__Group_0__0 : rule__TypeSwitchCase__Group_0__0__Impl rule__TypeSwitchCase__Group_0__1 ;
    public final void rule__TypeSwitchCase__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7389:1: ( rule__TypeSwitchCase__Group_0__0__Impl rule__TypeSwitchCase__Group_0__1 )
            // InternalGo.g:7390:2: rule__TypeSwitchCase__Group_0__0__Impl rule__TypeSwitchCase__Group_0__1
            {
            pushFollow(FOLLOW_19);
            rule__TypeSwitchCase__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeSwitchCase__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchCase__Group_0__0"


    // $ANTLR start "rule__TypeSwitchCase__Group_0__0__Impl"
    // InternalGo.g:7397:1: rule__TypeSwitchCase__Group_0__0__Impl : ( 'case' ) ;
    public final void rule__TypeSwitchCase__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7401:1: ( ( 'case' ) )
            // InternalGo.g:7402:1: ( 'case' )
            {
            // InternalGo.g:7402:1: ( 'case' )
            // InternalGo.g:7403:2: 'case'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchCaseAccess().getCaseKeyword_0_0()); 
            }
            match(input,85,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchCaseAccess().getCaseKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchCase__Group_0__0__Impl"


    // $ANTLR start "rule__TypeSwitchCase__Group_0__1"
    // InternalGo.g:7412:1: rule__TypeSwitchCase__Group_0__1 : rule__TypeSwitchCase__Group_0__1__Impl ;
    public final void rule__TypeSwitchCase__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7416:1: ( rule__TypeSwitchCase__Group_0__1__Impl )
            // InternalGo.g:7417:2: rule__TypeSwitchCase__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TypeSwitchCase__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchCase__Group_0__1"


    // $ANTLR start "rule__TypeSwitchCase__Group_0__1__Impl"
    // InternalGo.g:7423:1: rule__TypeSwitchCase__Group_0__1__Impl : ( ( rule__TypeSwitchCase__TypeListAssignment_0_1 ) ) ;
    public final void rule__TypeSwitchCase__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7427:1: ( ( ( rule__TypeSwitchCase__TypeListAssignment_0_1 ) ) )
            // InternalGo.g:7428:1: ( ( rule__TypeSwitchCase__TypeListAssignment_0_1 ) )
            {
            // InternalGo.g:7428:1: ( ( rule__TypeSwitchCase__TypeListAssignment_0_1 ) )
            // InternalGo.g:7429:2: ( rule__TypeSwitchCase__TypeListAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchCaseAccess().getTypeListAssignment_0_1()); 
            }
            // InternalGo.g:7430:2: ( rule__TypeSwitchCase__TypeListAssignment_0_1 )
            // InternalGo.g:7430:3: rule__TypeSwitchCase__TypeListAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__TypeSwitchCase__TypeListAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchCaseAccess().getTypeListAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchCase__Group_0__1__Impl"


    // $ANTLR start "rule__TypeList__Group__0"
    // InternalGo.g:7439:1: rule__TypeList__Group__0 : rule__TypeList__Group__0__Impl rule__TypeList__Group__1 ;
    public final void rule__TypeList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7443:1: ( rule__TypeList__Group__0__Impl rule__TypeList__Group__1 )
            // InternalGo.g:7444:2: rule__TypeList__Group__0__Impl rule__TypeList__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__TypeList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeList__Group__0"


    // $ANTLR start "rule__TypeList__Group__0__Impl"
    // InternalGo.g:7451:1: rule__TypeList__Group__0__Impl : ( ( rule__TypeList__TypeAssignment_0 ) ) ;
    public final void rule__TypeList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7455:1: ( ( ( rule__TypeList__TypeAssignment_0 ) ) )
            // InternalGo.g:7456:1: ( ( rule__TypeList__TypeAssignment_0 ) )
            {
            // InternalGo.g:7456:1: ( ( rule__TypeList__TypeAssignment_0 ) )
            // InternalGo.g:7457:2: ( rule__TypeList__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeListAccess().getTypeAssignment_0()); 
            }
            // InternalGo.g:7458:2: ( rule__TypeList__TypeAssignment_0 )
            // InternalGo.g:7458:3: rule__TypeList__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TypeList__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeListAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeList__Group__0__Impl"


    // $ANTLR start "rule__TypeList__Group__1"
    // InternalGo.g:7466:1: rule__TypeList__Group__1 : rule__TypeList__Group__1__Impl ;
    public final void rule__TypeList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7470:1: ( rule__TypeList__Group__1__Impl )
            // InternalGo.g:7471:2: rule__TypeList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TypeList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeList__Group__1"


    // $ANTLR start "rule__TypeList__Group__1__Impl"
    // InternalGo.g:7477:1: rule__TypeList__Group__1__Impl : ( ( rule__TypeList__Group_1__0 )* ) ;
    public final void rule__TypeList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7481:1: ( ( ( rule__TypeList__Group_1__0 )* ) )
            // InternalGo.g:7482:1: ( ( rule__TypeList__Group_1__0 )* )
            {
            // InternalGo.g:7482:1: ( ( rule__TypeList__Group_1__0 )* )
            // InternalGo.g:7483:2: ( rule__TypeList__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeListAccess().getGroup_1()); 
            }
            // InternalGo.g:7484:2: ( rule__TypeList__Group_1__0 )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==69) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalGo.g:7484:3: rule__TypeList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_18);
            	    rule__TypeList__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeList__Group__1__Impl"


    // $ANTLR start "rule__TypeList__Group_1__0"
    // InternalGo.g:7493:1: rule__TypeList__Group_1__0 : rule__TypeList__Group_1__0__Impl rule__TypeList__Group_1__1 ;
    public final void rule__TypeList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7497:1: ( rule__TypeList__Group_1__0__Impl rule__TypeList__Group_1__1 )
            // InternalGo.g:7498:2: rule__TypeList__Group_1__0__Impl rule__TypeList__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__TypeList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeList__Group_1__0"


    // $ANTLR start "rule__TypeList__Group_1__0__Impl"
    // InternalGo.g:7505:1: rule__TypeList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__TypeList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7509:1: ( ( ',' ) )
            // InternalGo.g:7510:1: ( ',' )
            {
            // InternalGo.g:7510:1: ( ',' )
            // InternalGo.g:7511:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeListAccess().getCommaKeyword_1_0()); 
            }
            match(input,69,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeListAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeList__Group_1__0__Impl"


    // $ANTLR start "rule__TypeList__Group_1__1"
    // InternalGo.g:7520:1: rule__TypeList__Group_1__1 : rule__TypeList__Group_1__1__Impl ;
    public final void rule__TypeList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7524:1: ( rule__TypeList__Group_1__1__Impl )
            // InternalGo.g:7525:2: rule__TypeList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TypeList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeList__Group_1__1"


    // $ANTLR start "rule__TypeList__Group_1__1__Impl"
    // InternalGo.g:7531:1: rule__TypeList__Group_1__1__Impl : ( ( rule__TypeList__TypeAssignment_1_1 ) ) ;
    public final void rule__TypeList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7535:1: ( ( ( rule__TypeList__TypeAssignment_1_1 ) ) )
            // InternalGo.g:7536:1: ( ( rule__TypeList__TypeAssignment_1_1 ) )
            {
            // InternalGo.g:7536:1: ( ( rule__TypeList__TypeAssignment_1_1 ) )
            // InternalGo.g:7537:2: ( rule__TypeList__TypeAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeListAccess().getTypeAssignment_1_1()); 
            }
            // InternalGo.g:7538:2: ( rule__TypeList__TypeAssignment_1_1 )
            // InternalGo.g:7538:3: rule__TypeList__TypeAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__TypeList__TypeAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeListAccess().getTypeAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeList__Group_1__1__Impl"


    // $ANTLR start "rule__SelectStmt__Group__0"
    // InternalGo.g:7547:1: rule__SelectStmt__Group__0 : rule__SelectStmt__Group__0__Impl rule__SelectStmt__Group__1 ;
    public final void rule__SelectStmt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7551:1: ( rule__SelectStmt__Group__0__Impl rule__SelectStmt__Group__1 )
            // InternalGo.g:7552:2: rule__SelectStmt__Group__0__Impl rule__SelectStmt__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__SelectStmt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectStmt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStmt__Group__0"


    // $ANTLR start "rule__SelectStmt__Group__0__Impl"
    // InternalGo.g:7559:1: rule__SelectStmt__Group__0__Impl : ( 'select' ) ;
    public final void rule__SelectStmt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7563:1: ( ( 'select' ) )
            // InternalGo.g:7564:1: ( 'select' )
            {
            // InternalGo.g:7564:1: ( 'select' )
            // InternalGo.g:7565:2: 'select'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStmtAccess().getSelectKeyword_0()); 
            }
            match(input,86,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStmtAccess().getSelectKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStmt__Group__0__Impl"


    // $ANTLR start "rule__SelectStmt__Group__1"
    // InternalGo.g:7574:1: rule__SelectStmt__Group__1 : rule__SelectStmt__Group__1__Impl rule__SelectStmt__Group__2 ;
    public final void rule__SelectStmt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7578:1: ( rule__SelectStmt__Group__1__Impl rule__SelectStmt__Group__2 )
            // InternalGo.g:7579:2: rule__SelectStmt__Group__1__Impl rule__SelectStmt__Group__2
            {
            pushFollow(FOLLOW_34);
            rule__SelectStmt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectStmt__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStmt__Group__1"


    // $ANTLR start "rule__SelectStmt__Group__1__Impl"
    // InternalGo.g:7586:1: rule__SelectStmt__Group__1__Impl : ( '{' ) ;
    public final void rule__SelectStmt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7590:1: ( ( '{' ) )
            // InternalGo.g:7591:1: ( '{' )
            {
            // InternalGo.g:7591:1: ( '{' )
            // InternalGo.g:7592:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,73,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStmt__Group__1__Impl"


    // $ANTLR start "rule__SelectStmt__Group__2"
    // InternalGo.g:7601:1: rule__SelectStmt__Group__2 : rule__SelectStmt__Group__2__Impl rule__SelectStmt__Group__3 ;
    public final void rule__SelectStmt__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7605:1: ( rule__SelectStmt__Group__2__Impl rule__SelectStmt__Group__3 )
            // InternalGo.g:7606:2: rule__SelectStmt__Group__2__Impl rule__SelectStmt__Group__3
            {
            pushFollow(FOLLOW_34);
            rule__SelectStmt__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectStmt__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStmt__Group__2"


    // $ANTLR start "rule__SelectStmt__Group__2__Impl"
    // InternalGo.g:7613:1: rule__SelectStmt__Group__2__Impl : ( ( rule__SelectStmt__CommClauseAssignment_2 )* ) ;
    public final void rule__SelectStmt__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7617:1: ( ( ( rule__SelectStmt__CommClauseAssignment_2 )* ) )
            // InternalGo.g:7618:1: ( ( rule__SelectStmt__CommClauseAssignment_2 )* )
            {
            // InternalGo.g:7618:1: ( ( rule__SelectStmt__CommClauseAssignment_2 )* )
            // InternalGo.g:7619:2: ( rule__SelectStmt__CommClauseAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStmtAccess().getCommClauseAssignment_2()); 
            }
            // InternalGo.g:7620:2: ( rule__SelectStmt__CommClauseAssignment_2 )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==59||LA78_0==85) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // InternalGo.g:7620:3: rule__SelectStmt__CommClauseAssignment_2
            	    {
            	    pushFollow(FOLLOW_35);
            	    rule__SelectStmt__CommClauseAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStmtAccess().getCommClauseAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStmt__Group__2__Impl"


    // $ANTLR start "rule__SelectStmt__Group__3"
    // InternalGo.g:7628:1: rule__SelectStmt__Group__3 : rule__SelectStmt__Group__3__Impl ;
    public final void rule__SelectStmt__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7632:1: ( rule__SelectStmt__Group__3__Impl )
            // InternalGo.g:7633:2: rule__SelectStmt__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SelectStmt__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStmt__Group__3"


    // $ANTLR start "rule__SelectStmt__Group__3__Impl"
    // InternalGo.g:7639:1: rule__SelectStmt__Group__3__Impl : ( '}' ) ;
    public final void rule__SelectStmt__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7643:1: ( ( '}' ) )
            // InternalGo.g:7644:1: ( '}' )
            {
            // InternalGo.g:7644:1: ( '}' )
            // InternalGo.g:7645:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_3()); 
            }
            match(input,74,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStmt__Group__3__Impl"


    // $ANTLR start "rule__CommClause__Group__0"
    // InternalGo.g:7655:1: rule__CommClause__Group__0 : rule__CommClause__Group__0__Impl rule__CommClause__Group__1 ;
    public final void rule__CommClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7659:1: ( rule__CommClause__Group__0__Impl rule__CommClause__Group__1 )
            // InternalGo.g:7660:2: rule__CommClause__Group__0__Impl rule__CommClause__Group__1
            {
            pushFollow(FOLLOW_29);
            rule__CommClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CommClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommClause__Group__0"


    // $ANTLR start "rule__CommClause__Group__0__Impl"
    // InternalGo.g:7667:1: rule__CommClause__Group__0__Impl : ( ( rule__CommClause__CommCaseAssignment_0 ) ) ;
    public final void rule__CommClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7671:1: ( ( ( rule__CommClause__CommCaseAssignment_0 ) ) )
            // InternalGo.g:7672:1: ( ( rule__CommClause__CommCaseAssignment_0 ) )
            {
            // InternalGo.g:7672:1: ( ( rule__CommClause__CommCaseAssignment_0 ) )
            // InternalGo.g:7673:2: ( rule__CommClause__CommCaseAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommClauseAccess().getCommCaseAssignment_0()); 
            }
            // InternalGo.g:7674:2: ( rule__CommClause__CommCaseAssignment_0 )
            // InternalGo.g:7674:3: rule__CommClause__CommCaseAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__CommClause__CommCaseAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommClauseAccess().getCommCaseAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommClause__Group__0__Impl"


    // $ANTLR start "rule__CommClause__Group__1"
    // InternalGo.g:7682:1: rule__CommClause__Group__1 : rule__CommClause__Group__1__Impl rule__CommClause__Group__2 ;
    public final void rule__CommClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7686:1: ( rule__CommClause__Group__1__Impl rule__CommClause__Group__2 )
            // InternalGo.g:7687:2: rule__CommClause__Group__1__Impl rule__CommClause__Group__2
            {
            pushFollow(FOLLOW_23);
            rule__CommClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CommClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommClause__Group__1"


    // $ANTLR start "rule__CommClause__Group__1__Impl"
    // InternalGo.g:7694:1: rule__CommClause__Group__1__Impl : ( ':' ) ;
    public final void rule__CommClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7698:1: ( ( ':' ) )
            // InternalGo.g:7699:1: ( ':' )
            {
            // InternalGo.g:7699:1: ( ':' )
            // InternalGo.g:7700:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommClauseAccess().getColonKeyword_1()); 
            }
            match(input,76,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommClauseAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommClause__Group__1__Impl"


    // $ANTLR start "rule__CommClause__Group__2"
    // InternalGo.g:7709:1: rule__CommClause__Group__2 : rule__CommClause__Group__2__Impl ;
    public final void rule__CommClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7713:1: ( rule__CommClause__Group__2__Impl )
            // InternalGo.g:7714:2: rule__CommClause__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CommClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommClause__Group__2"


    // $ANTLR start "rule__CommClause__Group__2__Impl"
    // InternalGo.g:7720:1: rule__CommClause__Group__2__Impl : ( ( rule__CommClause__StatementListAssignment_2 ) ) ;
    public final void rule__CommClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7724:1: ( ( ( rule__CommClause__StatementListAssignment_2 ) ) )
            // InternalGo.g:7725:1: ( ( rule__CommClause__StatementListAssignment_2 ) )
            {
            // InternalGo.g:7725:1: ( ( rule__CommClause__StatementListAssignment_2 ) )
            // InternalGo.g:7726:2: ( rule__CommClause__StatementListAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommClauseAccess().getStatementListAssignment_2()); 
            }
            // InternalGo.g:7727:2: ( rule__CommClause__StatementListAssignment_2 )
            // InternalGo.g:7727:3: rule__CommClause__StatementListAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__CommClause__StatementListAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommClauseAccess().getStatementListAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommClause__Group__2__Impl"


    // $ANTLR start "rule__CommCase__Group_0__0"
    // InternalGo.g:7736:1: rule__CommCase__Group_0__0 : rule__CommCase__Group_0__0__Impl rule__CommCase__Group_0__1 ;
    public final void rule__CommCase__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7740:1: ( rule__CommCase__Group_0__0__Impl rule__CommCase__Group_0__1 )
            // InternalGo.g:7741:2: rule__CommCase__Group_0__0__Impl rule__CommCase__Group_0__1
            {
            pushFollow(FOLLOW_16);
            rule__CommCase__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CommCase__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommCase__Group_0__0"


    // $ANTLR start "rule__CommCase__Group_0__0__Impl"
    // InternalGo.g:7748:1: rule__CommCase__Group_0__0__Impl : ( 'case' ) ;
    public final void rule__CommCase__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7752:1: ( ( 'case' ) )
            // InternalGo.g:7753:1: ( 'case' )
            {
            // InternalGo.g:7753:1: ( 'case' )
            // InternalGo.g:7754:2: 'case'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommCaseAccess().getCaseKeyword_0_0()); 
            }
            match(input,85,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommCaseAccess().getCaseKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommCase__Group_0__0__Impl"


    // $ANTLR start "rule__CommCase__Group_0__1"
    // InternalGo.g:7763:1: rule__CommCase__Group_0__1 : rule__CommCase__Group_0__1__Impl ;
    public final void rule__CommCase__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7767:1: ( rule__CommCase__Group_0__1__Impl )
            // InternalGo.g:7768:2: rule__CommCase__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CommCase__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommCase__Group_0__1"


    // $ANTLR start "rule__CommCase__Group_0__1__Impl"
    // InternalGo.g:7774:1: rule__CommCase__Group_0__1__Impl : ( ( rule__CommCase__Alternatives_0_1 ) ) ;
    public final void rule__CommCase__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7778:1: ( ( ( rule__CommCase__Alternatives_0_1 ) ) )
            // InternalGo.g:7779:1: ( ( rule__CommCase__Alternatives_0_1 ) )
            {
            // InternalGo.g:7779:1: ( ( rule__CommCase__Alternatives_0_1 ) )
            // InternalGo.g:7780:2: ( rule__CommCase__Alternatives_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommCaseAccess().getAlternatives_0_1()); 
            }
            // InternalGo.g:7781:2: ( rule__CommCase__Alternatives_0_1 )
            // InternalGo.g:7781:3: rule__CommCase__Alternatives_0_1
            {
            pushFollow(FOLLOW_2);
            rule__CommCase__Alternatives_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommCaseAccess().getAlternatives_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommCase__Group_0__1__Impl"


    // $ANTLR start "rule__RecvStmt__Group__0"
    // InternalGo.g:7790:1: rule__RecvStmt__Group__0 : rule__RecvStmt__Group__0__Impl rule__RecvStmt__Group__1 ;
    public final void rule__RecvStmt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7794:1: ( rule__RecvStmt__Group__0__Impl rule__RecvStmt__Group__1 )
            // InternalGo.g:7795:2: rule__RecvStmt__Group__0__Impl rule__RecvStmt__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__RecvStmt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RecvStmt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RecvStmt__Group__0"


    // $ANTLR start "rule__RecvStmt__Group__0__Impl"
    // InternalGo.g:7802:1: rule__RecvStmt__Group__0__Impl : ( ( rule__RecvStmt__Alternatives_0 )? ) ;
    public final void rule__RecvStmt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7806:1: ( ( ( rule__RecvStmt__Alternatives_0 )? ) )
            // InternalGo.g:7807:1: ( ( rule__RecvStmt__Alternatives_0 )? )
            {
            // InternalGo.g:7807:1: ( ( rule__RecvStmt__Alternatives_0 )? )
            // InternalGo.g:7808:2: ( rule__RecvStmt__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecvStmtAccess().getAlternatives_0()); 
            }
            // InternalGo.g:7809:2: ( rule__RecvStmt__Alternatives_0 )?
            int alt79=2;
            alt79 = dfa79.predict(input);
            switch (alt79) {
                case 1 :
                    // InternalGo.g:7809:3: rule__RecvStmt__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RecvStmt__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecvStmtAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RecvStmt__Group__0__Impl"


    // $ANTLR start "rule__RecvStmt__Group__1"
    // InternalGo.g:7817:1: rule__RecvStmt__Group__1 : rule__RecvStmt__Group__1__Impl ;
    public final void rule__RecvStmt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7821:1: ( rule__RecvStmt__Group__1__Impl )
            // InternalGo.g:7822:2: rule__RecvStmt__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RecvStmt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RecvStmt__Group__1"


    // $ANTLR start "rule__RecvStmt__Group__1__Impl"
    // InternalGo.g:7828:1: rule__RecvStmt__Group__1__Impl : ( ( rule__RecvStmt__ExpressionAssignment_1 ) ) ;
    public final void rule__RecvStmt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7832:1: ( ( ( rule__RecvStmt__ExpressionAssignment_1 ) ) )
            // InternalGo.g:7833:1: ( ( rule__RecvStmt__ExpressionAssignment_1 ) )
            {
            // InternalGo.g:7833:1: ( ( rule__RecvStmt__ExpressionAssignment_1 ) )
            // InternalGo.g:7834:2: ( rule__RecvStmt__ExpressionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecvStmtAccess().getExpressionAssignment_1()); 
            }
            // InternalGo.g:7835:2: ( rule__RecvStmt__ExpressionAssignment_1 )
            // InternalGo.g:7835:3: rule__RecvStmt__ExpressionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__RecvStmt__ExpressionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecvStmtAccess().getExpressionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RecvStmt__Group__1__Impl"


    // $ANTLR start "rule__RecvStmt__Group_0_0__0"
    // InternalGo.g:7844:1: rule__RecvStmt__Group_0_0__0 : rule__RecvStmt__Group_0_0__0__Impl rule__RecvStmt__Group_0_0__1 ;
    public final void rule__RecvStmt__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7848:1: ( rule__RecvStmt__Group_0_0__0__Impl rule__RecvStmt__Group_0_0__1 )
            // InternalGo.g:7849:2: rule__RecvStmt__Group_0_0__0__Impl rule__RecvStmt__Group_0_0__1
            {
            pushFollow(FOLLOW_22);
            rule__RecvStmt__Group_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RecvStmt__Group_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RecvStmt__Group_0_0__0"


    // $ANTLR start "rule__RecvStmt__Group_0_0__0__Impl"
    // InternalGo.g:7856:1: rule__RecvStmt__Group_0_0__0__Impl : ( ( rule__RecvStmt__ExpressionListAssignment_0_0_0 ) ) ;
    public final void rule__RecvStmt__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7860:1: ( ( ( rule__RecvStmt__ExpressionListAssignment_0_0_0 ) ) )
            // InternalGo.g:7861:1: ( ( rule__RecvStmt__ExpressionListAssignment_0_0_0 ) )
            {
            // InternalGo.g:7861:1: ( ( rule__RecvStmt__ExpressionListAssignment_0_0_0 ) )
            // InternalGo.g:7862:2: ( rule__RecvStmt__ExpressionListAssignment_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecvStmtAccess().getExpressionListAssignment_0_0_0()); 
            }
            // InternalGo.g:7863:2: ( rule__RecvStmt__ExpressionListAssignment_0_0_0 )
            // InternalGo.g:7863:3: rule__RecvStmt__ExpressionListAssignment_0_0_0
            {
            pushFollow(FOLLOW_2);
            rule__RecvStmt__ExpressionListAssignment_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecvStmtAccess().getExpressionListAssignment_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RecvStmt__Group_0_0__0__Impl"


    // $ANTLR start "rule__RecvStmt__Group_0_0__1"
    // InternalGo.g:7871:1: rule__RecvStmt__Group_0_0__1 : rule__RecvStmt__Group_0_0__1__Impl ;
    public final void rule__RecvStmt__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7875:1: ( rule__RecvStmt__Group_0_0__1__Impl )
            // InternalGo.g:7876:2: rule__RecvStmt__Group_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RecvStmt__Group_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RecvStmt__Group_0_0__1"


    // $ANTLR start "rule__RecvStmt__Group_0_0__1__Impl"
    // InternalGo.g:7882:1: rule__RecvStmt__Group_0_0__1__Impl : ( '=' ) ;
    public final void rule__RecvStmt__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7886:1: ( ( '=' ) )
            // InternalGo.g:7887:1: ( '=' )
            {
            // InternalGo.g:7887:1: ( '=' )
            // InternalGo.g:7888:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecvStmtAccess().getEqualsSignKeyword_0_0_1()); 
            }
            match(input,68,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecvStmtAccess().getEqualsSignKeyword_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RecvStmt__Group_0_0__1__Impl"


    // $ANTLR start "rule__RecvStmt__Group_0_1__0"
    // InternalGo.g:7898:1: rule__RecvStmt__Group_0_1__0 : rule__RecvStmt__Group_0_1__0__Impl rule__RecvStmt__Group_0_1__1 ;
    public final void rule__RecvStmt__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7902:1: ( rule__RecvStmt__Group_0_1__0__Impl rule__RecvStmt__Group_0_1__1 )
            // InternalGo.g:7903:2: rule__RecvStmt__Group_0_1__0__Impl rule__RecvStmt__Group_0_1__1
            {
            pushFollow(FOLLOW_28);
            rule__RecvStmt__Group_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RecvStmt__Group_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RecvStmt__Group_0_1__0"


    // $ANTLR start "rule__RecvStmt__Group_0_1__0__Impl"
    // InternalGo.g:7910:1: rule__RecvStmt__Group_0_1__0__Impl : ( ( rule__RecvStmt__IdentifierListAssignment_0_1_0 ) ) ;
    public final void rule__RecvStmt__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7914:1: ( ( ( rule__RecvStmt__IdentifierListAssignment_0_1_0 ) ) )
            // InternalGo.g:7915:1: ( ( rule__RecvStmt__IdentifierListAssignment_0_1_0 ) )
            {
            // InternalGo.g:7915:1: ( ( rule__RecvStmt__IdentifierListAssignment_0_1_0 ) )
            // InternalGo.g:7916:2: ( rule__RecvStmt__IdentifierListAssignment_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecvStmtAccess().getIdentifierListAssignment_0_1_0()); 
            }
            // InternalGo.g:7917:2: ( rule__RecvStmt__IdentifierListAssignment_0_1_0 )
            // InternalGo.g:7917:3: rule__RecvStmt__IdentifierListAssignment_0_1_0
            {
            pushFollow(FOLLOW_2);
            rule__RecvStmt__IdentifierListAssignment_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecvStmtAccess().getIdentifierListAssignment_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RecvStmt__Group_0_1__0__Impl"


    // $ANTLR start "rule__RecvStmt__Group_0_1__1"
    // InternalGo.g:7925:1: rule__RecvStmt__Group_0_1__1 : rule__RecvStmt__Group_0_1__1__Impl ;
    public final void rule__RecvStmt__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7929:1: ( rule__RecvStmt__Group_0_1__1__Impl )
            // InternalGo.g:7930:2: rule__RecvStmt__Group_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RecvStmt__Group_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RecvStmt__Group_0_1__1"


    // $ANTLR start "rule__RecvStmt__Group_0_1__1__Impl"
    // InternalGo.g:7936:1: rule__RecvStmt__Group_0_1__1__Impl : ( ':=' ) ;
    public final void rule__RecvStmt__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7940:1: ( ( ':=' ) )
            // InternalGo.g:7941:1: ( ':=' )
            {
            // InternalGo.g:7941:1: ( ':=' )
            // InternalGo.g:7942:2: ':='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecvStmtAccess().getColonEqualsSignKeyword_0_1_1()); 
            }
            match(input,75,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecvStmtAccess().getColonEqualsSignKeyword_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RecvStmt__Group_0_1__1__Impl"


    // $ANTLR start "rule__ForStmt__Group__0"
    // InternalGo.g:7952:1: rule__ForStmt__Group__0 : rule__ForStmt__Group__0__Impl rule__ForStmt__Group__1 ;
    public final void rule__ForStmt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7956:1: ( rule__ForStmt__Group__0__Impl rule__ForStmt__Group__1 )
            // InternalGo.g:7957:2: rule__ForStmt__Group__0__Impl rule__ForStmt__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__ForStmt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStmt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStmt__Group__0"


    // $ANTLR start "rule__ForStmt__Group__0__Impl"
    // InternalGo.g:7964:1: rule__ForStmt__Group__0__Impl : ( 'for' ) ;
    public final void rule__ForStmt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7968:1: ( ( 'for' ) )
            // InternalGo.g:7969:1: ( 'for' )
            {
            // InternalGo.g:7969:1: ( 'for' )
            // InternalGo.g:7970:2: 'for'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStmtAccess().getForKeyword_0()); 
            }
            match(input,87,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStmtAccess().getForKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStmt__Group__0__Impl"


    // $ANTLR start "rule__ForStmt__Group__1"
    // InternalGo.g:7979:1: rule__ForStmt__Group__1 : rule__ForStmt__Group__1__Impl rule__ForStmt__Group__2 ;
    public final void rule__ForStmt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7983:1: ( rule__ForStmt__Group__1__Impl rule__ForStmt__Group__2 )
            // InternalGo.g:7984:2: rule__ForStmt__Group__1__Impl rule__ForStmt__Group__2
            {
            pushFollow(FOLLOW_39);
            rule__ForStmt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForStmt__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStmt__Group__1"


    // $ANTLR start "rule__ForStmt__Group__1__Impl"
    // InternalGo.g:7991:1: rule__ForStmt__Group__1__Impl : ( ( rule__ForStmt__Alternatives_1 )? ) ;
    public final void rule__ForStmt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:7995:1: ( ( ( rule__ForStmt__Alternatives_1 )? ) )
            // InternalGo.g:7996:1: ( ( rule__ForStmt__Alternatives_1 )? )
            {
            // InternalGo.g:7996:1: ( ( rule__ForStmt__Alternatives_1 )? )
            // InternalGo.g:7997:2: ( rule__ForStmt__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStmtAccess().getAlternatives_1()); 
            }
            // InternalGo.g:7998:2: ( rule__ForStmt__Alternatives_1 )?
            int alt80=2;
            alt80 = dfa80.predict(input);
            switch (alt80) {
                case 1 :
                    // InternalGo.g:7998:3: rule__ForStmt__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ForStmt__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStmtAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStmt__Group__1__Impl"


    // $ANTLR start "rule__ForStmt__Group__2"
    // InternalGo.g:8006:1: rule__ForStmt__Group__2 : rule__ForStmt__Group__2__Impl ;
    public final void rule__ForStmt__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8010:1: ( rule__ForStmt__Group__2__Impl )
            // InternalGo.g:8011:2: rule__ForStmt__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ForStmt__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStmt__Group__2"


    // $ANTLR start "rule__ForStmt__Group__2__Impl"
    // InternalGo.g:8017:1: rule__ForStmt__Group__2__Impl : ( ( rule__ForStmt__BlockAssignment_2 ) ) ;
    public final void rule__ForStmt__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8021:1: ( ( ( rule__ForStmt__BlockAssignment_2 ) ) )
            // InternalGo.g:8022:1: ( ( rule__ForStmt__BlockAssignment_2 ) )
            {
            // InternalGo.g:8022:1: ( ( rule__ForStmt__BlockAssignment_2 ) )
            // InternalGo.g:8023:2: ( rule__ForStmt__BlockAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStmtAccess().getBlockAssignment_2()); 
            }
            // InternalGo.g:8024:2: ( rule__ForStmt__BlockAssignment_2 )
            // InternalGo.g:8024:3: rule__ForStmt__BlockAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__ForStmt__BlockAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStmtAccess().getBlockAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStmt__Group__2__Impl"


    // $ANTLR start "rule__ForClause__Group__0"
    // InternalGo.g:8033:1: rule__ForClause__Group__0 : rule__ForClause__Group__0__Impl rule__ForClause__Group__1 ;
    public final void rule__ForClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8037:1: ( rule__ForClause__Group__0__Impl rule__ForClause__Group__1 )
            // InternalGo.g:8038:2: rule__ForClause__Group__0__Impl rule__ForClause__Group__1
            {
            pushFollow(FOLLOW_30);
            rule__ForClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForClause__Group__0"


    // $ANTLR start "rule__ForClause__Group__0__Impl"
    // InternalGo.g:8045:1: rule__ForClause__Group__0__Impl : ( ( rule__ForClause__SimpleStmtAssignment_0 )? ) ;
    public final void rule__ForClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8049:1: ( ( ( rule__ForClause__SimpleStmtAssignment_0 )? ) )
            // InternalGo.g:8050:1: ( ( rule__ForClause__SimpleStmtAssignment_0 )? )
            {
            // InternalGo.g:8050:1: ( ( rule__ForClause__SimpleStmtAssignment_0 )? )
            // InternalGo.g:8051:2: ( rule__ForClause__SimpleStmtAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForClauseAccess().getSimpleStmtAssignment_0()); 
            }
            // InternalGo.g:8052:2: ( rule__ForClause__SimpleStmtAssignment_0 )?
            int alt81=2;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalGo.g:8052:3: rule__ForClause__SimpleStmtAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ForClause__SimpleStmtAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForClauseAccess().getSimpleStmtAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForClause__Group__0__Impl"


    // $ANTLR start "rule__ForClause__Group__1"
    // InternalGo.g:8060:1: rule__ForClause__Group__1 : rule__ForClause__Group__1__Impl rule__ForClause__Group__2 ;
    public final void rule__ForClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8064:1: ( rule__ForClause__Group__1__Impl rule__ForClause__Group__2 )
            // InternalGo.g:8065:2: rule__ForClause__Group__1__Impl rule__ForClause__Group__2
            {
            pushFollow(FOLLOW_30);
            rule__ForClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForClause__Group__1"


    // $ANTLR start "rule__ForClause__Group__1__Impl"
    // InternalGo.g:8072:1: rule__ForClause__Group__1__Impl : ( ( rule__ForClause__ExpressionAssignment_1 )? ) ;
    public final void rule__ForClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8076:1: ( ( ( rule__ForClause__ExpressionAssignment_1 )? ) )
            // InternalGo.g:8077:1: ( ( rule__ForClause__ExpressionAssignment_1 )? )
            {
            // InternalGo.g:8077:1: ( ( rule__ForClause__ExpressionAssignment_1 )? )
            // InternalGo.g:8078:2: ( rule__ForClause__ExpressionAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForClauseAccess().getExpressionAssignment_1()); 
            }
            // InternalGo.g:8079:2: ( rule__ForClause__ExpressionAssignment_1 )?
            int alt82=2;
            alt82 = dfa82.predict(input);
            switch (alt82) {
                case 1 :
                    // InternalGo.g:8079:3: rule__ForClause__ExpressionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ForClause__ExpressionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForClauseAccess().getExpressionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForClause__Group__1__Impl"


    // $ANTLR start "rule__ForClause__Group__2"
    // InternalGo.g:8087:1: rule__ForClause__Group__2 : rule__ForClause__Group__2__Impl ;
    public final void rule__ForClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8091:1: ( rule__ForClause__Group__2__Impl )
            // InternalGo.g:8092:2: rule__ForClause__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ForClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForClause__Group__2"


    // $ANTLR start "rule__ForClause__Group__2__Impl"
    // InternalGo.g:8098:1: rule__ForClause__Group__2__Impl : ( ( rule__ForClause__SimpleStmtAssignment_2 )? ) ;
    public final void rule__ForClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8102:1: ( ( ( rule__ForClause__SimpleStmtAssignment_2 )? ) )
            // InternalGo.g:8103:1: ( ( rule__ForClause__SimpleStmtAssignment_2 )? )
            {
            // InternalGo.g:8103:1: ( ( rule__ForClause__SimpleStmtAssignment_2 )? )
            // InternalGo.g:8104:2: ( rule__ForClause__SimpleStmtAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForClauseAccess().getSimpleStmtAssignment_2()); 
            }
            // InternalGo.g:8105:2: ( rule__ForClause__SimpleStmtAssignment_2 )?
            int alt83=2;
            alt83 = dfa83.predict(input);
            switch (alt83) {
                case 1 :
                    // InternalGo.g:8105:3: rule__ForClause__SimpleStmtAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ForClause__SimpleStmtAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForClauseAccess().getSimpleStmtAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForClause__Group__2__Impl"


    // $ANTLR start "rule__RangeClause__Group__0"
    // InternalGo.g:8114:1: rule__RangeClause__Group__0 : rule__RangeClause__Group__0__Impl rule__RangeClause__Group__1 ;
    public final void rule__RangeClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8118:1: ( rule__RangeClause__Group__0__Impl rule__RangeClause__Group__1 )
            // InternalGo.g:8119:2: rule__RangeClause__Group__0__Impl rule__RangeClause__Group__1
            {
            pushFollow(FOLLOW_40);
            rule__RangeClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RangeClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeClause__Group__0"


    // $ANTLR start "rule__RangeClause__Group__0__Impl"
    // InternalGo.g:8126:1: rule__RangeClause__Group__0__Impl : ( ( rule__RangeClause__Alternatives_0 )? ) ;
    public final void rule__RangeClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8130:1: ( ( ( rule__RangeClause__Alternatives_0 )? ) )
            // InternalGo.g:8131:1: ( ( rule__RangeClause__Alternatives_0 )? )
            {
            // InternalGo.g:8131:1: ( ( rule__RangeClause__Alternatives_0 )? )
            // InternalGo.g:8132:2: ( rule__RangeClause__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeClauseAccess().getAlternatives_0()); 
            }
            // InternalGo.g:8133:2: ( rule__RangeClause__Alternatives_0 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==EOF||(LA84_0>=RULE_STRING_LIT && LA84_0<=RULE_BINARY_OP)||(LA84_0>=44 && LA84_0<=62)||(LA84_0>=65 && LA84_0<=74)||(LA84_0>=76 && LA84_0<=82)||(LA84_0>=84 && LA84_0<=87)||(LA84_0>=89 && LA84_0<=95)) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalGo.g:8133:3: rule__RangeClause__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RangeClause__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeClauseAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeClause__Group__0__Impl"


    // $ANTLR start "rule__RangeClause__Group__1"
    // InternalGo.g:8141:1: rule__RangeClause__Group__1 : rule__RangeClause__Group__1__Impl rule__RangeClause__Group__2 ;
    public final void rule__RangeClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8145:1: ( rule__RangeClause__Group__1__Impl rule__RangeClause__Group__2 )
            // InternalGo.g:8146:2: rule__RangeClause__Group__1__Impl rule__RangeClause__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__RangeClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RangeClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeClause__Group__1"


    // $ANTLR start "rule__RangeClause__Group__1__Impl"
    // InternalGo.g:8153:1: rule__RangeClause__Group__1__Impl : ( 'range' ) ;
    public final void rule__RangeClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8157:1: ( ( 'range' ) )
            // InternalGo.g:8158:1: ( 'range' )
            {
            // InternalGo.g:8158:1: ( 'range' )
            // InternalGo.g:8159:2: 'range'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeClauseAccess().getRangeKeyword_1()); 
            }
            match(input,88,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeClauseAccess().getRangeKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeClause__Group__1__Impl"


    // $ANTLR start "rule__RangeClause__Group__2"
    // InternalGo.g:8168:1: rule__RangeClause__Group__2 : rule__RangeClause__Group__2__Impl ;
    public final void rule__RangeClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8172:1: ( rule__RangeClause__Group__2__Impl )
            // InternalGo.g:8173:2: rule__RangeClause__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RangeClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeClause__Group__2"


    // $ANTLR start "rule__RangeClause__Group__2__Impl"
    // InternalGo.g:8179:1: rule__RangeClause__Group__2__Impl : ( ( rule__RangeClause__ExpressionAssignment_2 ) ) ;
    public final void rule__RangeClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8183:1: ( ( ( rule__RangeClause__ExpressionAssignment_2 ) ) )
            // InternalGo.g:8184:1: ( ( rule__RangeClause__ExpressionAssignment_2 ) )
            {
            // InternalGo.g:8184:1: ( ( rule__RangeClause__ExpressionAssignment_2 ) )
            // InternalGo.g:8185:2: ( rule__RangeClause__ExpressionAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeClauseAccess().getExpressionAssignment_2()); 
            }
            // InternalGo.g:8186:2: ( rule__RangeClause__ExpressionAssignment_2 )
            // InternalGo.g:8186:3: rule__RangeClause__ExpressionAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__RangeClause__ExpressionAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeClauseAccess().getExpressionAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeClause__Group__2__Impl"


    // $ANTLR start "rule__RangeClause__Group_0_0__0"
    // InternalGo.g:8195:1: rule__RangeClause__Group_0_0__0 : rule__RangeClause__Group_0_0__0__Impl rule__RangeClause__Group_0_0__1 ;
    public final void rule__RangeClause__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8199:1: ( rule__RangeClause__Group_0_0__0__Impl rule__RangeClause__Group_0_0__1 )
            // InternalGo.g:8200:2: rule__RangeClause__Group_0_0__0__Impl rule__RangeClause__Group_0_0__1
            {
            pushFollow(FOLLOW_22);
            rule__RangeClause__Group_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RangeClause__Group_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeClause__Group_0_0__0"


    // $ANTLR start "rule__RangeClause__Group_0_0__0__Impl"
    // InternalGo.g:8207:1: rule__RangeClause__Group_0_0__0__Impl : ( ( rule__RangeClause__ExpressionListAssignment_0_0_0 ) ) ;
    public final void rule__RangeClause__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8211:1: ( ( ( rule__RangeClause__ExpressionListAssignment_0_0_0 ) ) )
            // InternalGo.g:8212:1: ( ( rule__RangeClause__ExpressionListAssignment_0_0_0 ) )
            {
            // InternalGo.g:8212:1: ( ( rule__RangeClause__ExpressionListAssignment_0_0_0 ) )
            // InternalGo.g:8213:2: ( rule__RangeClause__ExpressionListAssignment_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeClauseAccess().getExpressionListAssignment_0_0_0()); 
            }
            // InternalGo.g:8214:2: ( rule__RangeClause__ExpressionListAssignment_0_0_0 )
            // InternalGo.g:8214:3: rule__RangeClause__ExpressionListAssignment_0_0_0
            {
            pushFollow(FOLLOW_2);
            rule__RangeClause__ExpressionListAssignment_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeClauseAccess().getExpressionListAssignment_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeClause__Group_0_0__0__Impl"


    // $ANTLR start "rule__RangeClause__Group_0_0__1"
    // InternalGo.g:8222:1: rule__RangeClause__Group_0_0__1 : rule__RangeClause__Group_0_0__1__Impl ;
    public final void rule__RangeClause__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8226:1: ( rule__RangeClause__Group_0_0__1__Impl )
            // InternalGo.g:8227:2: rule__RangeClause__Group_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RangeClause__Group_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeClause__Group_0_0__1"


    // $ANTLR start "rule__RangeClause__Group_0_0__1__Impl"
    // InternalGo.g:8233:1: rule__RangeClause__Group_0_0__1__Impl : ( '=' ) ;
    public final void rule__RangeClause__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8237:1: ( ( '=' ) )
            // InternalGo.g:8238:1: ( '=' )
            {
            // InternalGo.g:8238:1: ( '=' )
            // InternalGo.g:8239:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeClauseAccess().getEqualsSignKeyword_0_0_1()); 
            }
            match(input,68,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeClauseAccess().getEqualsSignKeyword_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeClause__Group_0_0__1__Impl"


    // $ANTLR start "rule__RangeClause__Group_0_1__0"
    // InternalGo.g:8249:1: rule__RangeClause__Group_0_1__0 : rule__RangeClause__Group_0_1__0__Impl rule__RangeClause__Group_0_1__1 ;
    public final void rule__RangeClause__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8253:1: ( rule__RangeClause__Group_0_1__0__Impl rule__RangeClause__Group_0_1__1 )
            // InternalGo.g:8254:2: rule__RangeClause__Group_0_1__0__Impl rule__RangeClause__Group_0_1__1
            {
            pushFollow(FOLLOW_28);
            rule__RangeClause__Group_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RangeClause__Group_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeClause__Group_0_1__0"


    // $ANTLR start "rule__RangeClause__Group_0_1__0__Impl"
    // InternalGo.g:8261:1: rule__RangeClause__Group_0_1__0__Impl : ( ( rule__RangeClause__IdentifierListAssignment_0_1_0 ) ) ;
    public final void rule__RangeClause__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8265:1: ( ( ( rule__RangeClause__IdentifierListAssignment_0_1_0 ) ) )
            // InternalGo.g:8266:1: ( ( rule__RangeClause__IdentifierListAssignment_0_1_0 ) )
            {
            // InternalGo.g:8266:1: ( ( rule__RangeClause__IdentifierListAssignment_0_1_0 ) )
            // InternalGo.g:8267:2: ( rule__RangeClause__IdentifierListAssignment_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeClauseAccess().getIdentifierListAssignment_0_1_0()); 
            }
            // InternalGo.g:8268:2: ( rule__RangeClause__IdentifierListAssignment_0_1_0 )
            // InternalGo.g:8268:3: rule__RangeClause__IdentifierListAssignment_0_1_0
            {
            pushFollow(FOLLOW_2);
            rule__RangeClause__IdentifierListAssignment_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeClauseAccess().getIdentifierListAssignment_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeClause__Group_0_1__0__Impl"


    // $ANTLR start "rule__RangeClause__Group_0_1__1"
    // InternalGo.g:8276:1: rule__RangeClause__Group_0_1__1 : rule__RangeClause__Group_0_1__1__Impl ;
    public final void rule__RangeClause__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8280:1: ( rule__RangeClause__Group_0_1__1__Impl )
            // InternalGo.g:8281:2: rule__RangeClause__Group_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RangeClause__Group_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeClause__Group_0_1__1"


    // $ANTLR start "rule__RangeClause__Group_0_1__1__Impl"
    // InternalGo.g:8287:1: rule__RangeClause__Group_0_1__1__Impl : ( ':=' ) ;
    public final void rule__RangeClause__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8291:1: ( ( ':=' ) )
            // InternalGo.g:8292:1: ( ':=' )
            {
            // InternalGo.g:8292:1: ( ':=' )
            // InternalGo.g:8293:2: ':='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1()); 
            }
            match(input,75,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeClause__Group_0_1__1__Impl"


    // $ANTLR start "rule__GoStmt__Group__0"
    // InternalGo.g:8303:1: rule__GoStmt__Group__0 : rule__GoStmt__Group__0__Impl rule__GoStmt__Group__1 ;
    public final void rule__GoStmt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8307:1: ( rule__GoStmt__Group__0__Impl rule__GoStmt__Group__1 )
            // InternalGo.g:8308:2: rule__GoStmt__Group__0__Impl rule__GoStmt__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__GoStmt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GoStmt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GoStmt__Group__0"


    // $ANTLR start "rule__GoStmt__Group__0__Impl"
    // InternalGo.g:8315:1: rule__GoStmt__Group__0__Impl : ( 'go' ) ;
    public final void rule__GoStmt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8319:1: ( ( 'go' ) )
            // InternalGo.g:8320:1: ( 'go' )
            {
            // InternalGo.g:8320:1: ( 'go' )
            // InternalGo.g:8321:2: 'go'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGoStmtAccess().getGoKeyword_0()); 
            }
            match(input,89,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGoStmtAccess().getGoKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GoStmt__Group__0__Impl"


    // $ANTLR start "rule__GoStmt__Group__1"
    // InternalGo.g:8330:1: rule__GoStmt__Group__1 : rule__GoStmt__Group__1__Impl ;
    public final void rule__GoStmt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8334:1: ( rule__GoStmt__Group__1__Impl )
            // InternalGo.g:8335:2: rule__GoStmt__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GoStmt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GoStmt__Group__1"


    // $ANTLR start "rule__GoStmt__Group__1__Impl"
    // InternalGo.g:8341:1: rule__GoStmt__Group__1__Impl : ( ( rule__GoStmt__ExpressionAssignment_1 ) ) ;
    public final void rule__GoStmt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8345:1: ( ( ( rule__GoStmt__ExpressionAssignment_1 ) ) )
            // InternalGo.g:8346:1: ( ( rule__GoStmt__ExpressionAssignment_1 ) )
            {
            // InternalGo.g:8346:1: ( ( rule__GoStmt__ExpressionAssignment_1 ) )
            // InternalGo.g:8347:2: ( rule__GoStmt__ExpressionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGoStmtAccess().getExpressionAssignment_1()); 
            }
            // InternalGo.g:8348:2: ( rule__GoStmt__ExpressionAssignment_1 )
            // InternalGo.g:8348:3: rule__GoStmt__ExpressionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__GoStmt__ExpressionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGoStmtAccess().getExpressionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GoStmt__Group__1__Impl"


    // $ANTLR start "rule__Type__Group_2__0"
    // InternalGo.g:8357:1: rule__Type__Group_2__0 : rule__Type__Group_2__0__Impl rule__Type__Group_2__1 ;
    public final void rule__Type__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8361:1: ( rule__Type__Group_2__0__Impl rule__Type__Group_2__1 )
            // InternalGo.g:8362:2: rule__Type__Group_2__0__Impl rule__Type__Group_2__1
            {
            pushFollow(FOLLOW_19);
            rule__Type__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Type__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type__Group_2__0"


    // $ANTLR start "rule__Type__Group_2__0__Impl"
    // InternalGo.g:8369:1: rule__Type__Group_2__0__Impl : ( '(' ) ;
    public final void rule__Type__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8373:1: ( ( '(' ) )
            // InternalGo.g:8374:1: ( '(' )
            {
            // InternalGo.g:8374:1: ( '(' )
            // InternalGo.g:8375:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()); 
            }
            match(input,65,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type__Group_2__0__Impl"


    // $ANTLR start "rule__Type__Group_2__1"
    // InternalGo.g:8384:1: rule__Type__Group_2__1 : rule__Type__Group_2__1__Impl rule__Type__Group_2__2 ;
    public final void rule__Type__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8388:1: ( rule__Type__Group_2__1__Impl rule__Type__Group_2__2 )
            // InternalGo.g:8389:2: rule__Type__Group_2__1__Impl rule__Type__Group_2__2
            {
            pushFollow(FOLLOW_38);
            rule__Type__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Type__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type__Group_2__1"


    // $ANTLR start "rule__Type__Group_2__1__Impl"
    // InternalGo.g:8396:1: rule__Type__Group_2__1__Impl : ( ( rule__Type__TypeAssignment_2_1 ) ) ;
    public final void rule__Type__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8400:1: ( ( ( rule__Type__TypeAssignment_2_1 ) ) )
            // InternalGo.g:8401:1: ( ( rule__Type__TypeAssignment_2_1 ) )
            {
            // InternalGo.g:8401:1: ( ( rule__Type__TypeAssignment_2_1 ) )
            // InternalGo.g:8402:2: ( rule__Type__TypeAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeAccess().getTypeAssignment_2_1()); 
            }
            // InternalGo.g:8403:2: ( rule__Type__TypeAssignment_2_1 )
            // InternalGo.g:8403:3: rule__Type__TypeAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Type__TypeAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeAccess().getTypeAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type__Group_2__1__Impl"


    // $ANTLR start "rule__Type__Group_2__2"
    // InternalGo.g:8411:1: rule__Type__Group_2__2 : rule__Type__Group_2__2__Impl ;
    public final void rule__Type__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8415:1: ( rule__Type__Group_2__2__Impl )
            // InternalGo.g:8416:2: rule__Type__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Type__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type__Group_2__2"


    // $ANTLR start "rule__Type__Group_2__2__Impl"
    // InternalGo.g:8422:1: rule__Type__Group_2__2__Impl : ( ')' ) ;
    public final void rule__Type__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8426:1: ( ( ')' ) )
            // InternalGo.g:8427:1: ( ')' )
            {
            // InternalGo.g:8427:1: ( ')' )
            // InternalGo.g:8428:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type__Group_2__2__Impl"


    // $ANTLR start "rule__ArrayType__Group__0"
    // InternalGo.g:8438:1: rule__ArrayType__Group__0 : rule__ArrayType__Group__0__Impl rule__ArrayType__Group__1 ;
    public final void rule__ArrayType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8442:1: ( rule__ArrayType__Group__0__Impl rule__ArrayType__Group__1 )
            // InternalGo.g:8443:2: rule__ArrayType__Group__0__Impl rule__ArrayType__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__ArrayType__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayType__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayType__Group__0"


    // $ANTLR start "rule__ArrayType__Group__0__Impl"
    // InternalGo.g:8450:1: rule__ArrayType__Group__0__Impl : ( '[' ) ;
    public final void rule__ArrayType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8454:1: ( ( '[' ) )
            // InternalGo.g:8455:1: ( '[' )
            {
            // InternalGo.g:8455:1: ( '[' )
            // InternalGo.g:8456:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0()); 
            }
            match(input,90,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayType__Group__0__Impl"


    // $ANTLR start "rule__ArrayType__Group__1"
    // InternalGo.g:8465:1: rule__ArrayType__Group__1 : rule__ArrayType__Group__1__Impl rule__ArrayType__Group__2 ;
    public final void rule__ArrayType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8469:1: ( rule__ArrayType__Group__1__Impl rule__ArrayType__Group__2 )
            // InternalGo.g:8470:2: rule__ArrayType__Group__1__Impl rule__ArrayType__Group__2
            {
            pushFollow(FOLLOW_41);
            rule__ArrayType__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayType__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayType__Group__1"


    // $ANTLR start "rule__ArrayType__Group__1__Impl"
    // InternalGo.g:8477:1: rule__ArrayType__Group__1__Impl : ( ( rule__ArrayType__ArrayLengthAssignment_1 ) ) ;
    public final void rule__ArrayType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8481:1: ( ( ( rule__ArrayType__ArrayLengthAssignment_1 ) ) )
            // InternalGo.g:8482:1: ( ( rule__ArrayType__ArrayLengthAssignment_1 ) )
            {
            // InternalGo.g:8482:1: ( ( rule__ArrayType__ArrayLengthAssignment_1 ) )
            // InternalGo.g:8483:2: ( rule__ArrayType__ArrayLengthAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayTypeAccess().getArrayLengthAssignment_1()); 
            }
            // InternalGo.g:8484:2: ( rule__ArrayType__ArrayLengthAssignment_1 )
            // InternalGo.g:8484:3: rule__ArrayType__ArrayLengthAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayType__ArrayLengthAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayTypeAccess().getArrayLengthAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayType__Group__1__Impl"


    // $ANTLR start "rule__ArrayType__Group__2"
    // InternalGo.g:8492:1: rule__ArrayType__Group__2 : rule__ArrayType__Group__2__Impl rule__ArrayType__Group__3 ;
    public final void rule__ArrayType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8496:1: ( rule__ArrayType__Group__2__Impl rule__ArrayType__Group__3 )
            // InternalGo.g:8497:2: rule__ArrayType__Group__2__Impl rule__ArrayType__Group__3
            {
            pushFollow(FOLLOW_19);
            rule__ArrayType__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayType__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayType__Group__2"


    // $ANTLR start "rule__ArrayType__Group__2__Impl"
    // InternalGo.g:8504:1: rule__ArrayType__Group__2__Impl : ( ']' ) ;
    public final void rule__ArrayType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8508:1: ( ( ']' ) )
            // InternalGo.g:8509:1: ( ']' )
            {
            // InternalGo.g:8509:1: ( ']' )
            // InternalGo.g:8510:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayType__Group__2__Impl"


    // $ANTLR start "rule__ArrayType__Group__3"
    // InternalGo.g:8519:1: rule__ArrayType__Group__3 : rule__ArrayType__Group__3__Impl ;
    public final void rule__ArrayType__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8523:1: ( rule__ArrayType__Group__3__Impl )
            // InternalGo.g:8524:2: rule__ArrayType__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayType__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayType__Group__3"


    // $ANTLR start "rule__ArrayType__Group__3__Impl"
    // InternalGo.g:8530:1: rule__ArrayType__Group__3__Impl : ( ( rule__ArrayType__ElementTypeAssignment_3 ) ) ;
    public final void rule__ArrayType__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8534:1: ( ( ( rule__ArrayType__ElementTypeAssignment_3 ) ) )
            // InternalGo.g:8535:1: ( ( rule__ArrayType__ElementTypeAssignment_3 ) )
            {
            // InternalGo.g:8535:1: ( ( rule__ArrayType__ElementTypeAssignment_3 ) )
            // InternalGo.g:8536:2: ( rule__ArrayType__ElementTypeAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayTypeAccess().getElementTypeAssignment_3()); 
            }
            // InternalGo.g:8537:2: ( rule__ArrayType__ElementTypeAssignment_3 )
            // InternalGo.g:8537:3: rule__ArrayType__ElementTypeAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__ArrayType__ElementTypeAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayTypeAccess().getElementTypeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayType__Group__3__Impl"


    // $ANTLR start "rule__PointerType__Group__0"
    // InternalGo.g:8546:1: rule__PointerType__Group__0 : rule__PointerType__Group__0__Impl rule__PointerType__Group__1 ;
    public final void rule__PointerType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8550:1: ( rule__PointerType__Group__0__Impl rule__PointerType__Group__1 )
            // InternalGo.g:8551:2: rule__PointerType__Group__0__Impl rule__PointerType__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__PointerType__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PointerType__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PointerType__Group__0"


    // $ANTLR start "rule__PointerType__Group__0__Impl"
    // InternalGo.g:8558:1: rule__PointerType__Group__0__Impl : ( '*' ) ;
    public final void rule__PointerType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8562:1: ( ( '*' ) )
            // InternalGo.g:8563:1: ( '*' )
            {
            // InternalGo.g:8563:1: ( '*' )
            // InternalGo.g:8564:2: '*'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0()); 
            }
            match(input,52,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PointerType__Group__0__Impl"


    // $ANTLR start "rule__PointerType__Group__1"
    // InternalGo.g:8573:1: rule__PointerType__Group__1 : rule__PointerType__Group__1__Impl ;
    public final void rule__PointerType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8577:1: ( rule__PointerType__Group__1__Impl )
            // InternalGo.g:8578:2: rule__PointerType__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PointerType__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PointerType__Group__1"


    // $ANTLR start "rule__PointerType__Group__1__Impl"
    // InternalGo.g:8584:1: rule__PointerType__Group__1__Impl : ( ( rule__PointerType__TypeAssignment_1 ) ) ;
    public final void rule__PointerType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8588:1: ( ( ( rule__PointerType__TypeAssignment_1 ) ) )
            // InternalGo.g:8589:1: ( ( rule__PointerType__TypeAssignment_1 ) )
            {
            // InternalGo.g:8589:1: ( ( rule__PointerType__TypeAssignment_1 ) )
            // InternalGo.g:8590:2: ( rule__PointerType__TypeAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPointerTypeAccess().getTypeAssignment_1()); 
            }
            // InternalGo.g:8591:2: ( rule__PointerType__TypeAssignment_1 )
            // InternalGo.g:8591:3: rule__PointerType__TypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__PointerType__TypeAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPointerTypeAccess().getTypeAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PointerType__Group__1__Impl"


    // $ANTLR start "rule__InterfaceType__Group__0"
    // InternalGo.g:8600:1: rule__InterfaceType__Group__0 : rule__InterfaceType__Group__0__Impl rule__InterfaceType__Group__1 ;
    public final void rule__InterfaceType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8604:1: ( rule__InterfaceType__Group__0__Impl rule__InterfaceType__Group__1 )
            // InternalGo.g:8605:2: rule__InterfaceType__Group__0__Impl rule__InterfaceType__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__InterfaceType__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InterfaceType__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InterfaceType__Group__0"


    // $ANTLR start "rule__InterfaceType__Group__0__Impl"
    // InternalGo.g:8612:1: rule__InterfaceType__Group__0__Impl : ( 'interface' ) ;
    public final void rule__InterfaceType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8616:1: ( ( 'interface' ) )
            // InternalGo.g:8617:1: ( 'interface' )
            {
            // InternalGo.g:8617:1: ( 'interface' )
            // InternalGo.g:8618:2: 'interface'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_0()); 
            }
            match(input,92,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InterfaceType__Group__0__Impl"


    // $ANTLR start "rule__InterfaceType__Group__1"
    // InternalGo.g:8627:1: rule__InterfaceType__Group__1 : rule__InterfaceType__Group__1__Impl rule__InterfaceType__Group__2 ;
    public final void rule__InterfaceType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8631:1: ( rule__InterfaceType__Group__1__Impl rule__InterfaceType__Group__2 )
            // InternalGo.g:8632:2: rule__InterfaceType__Group__1__Impl rule__InterfaceType__Group__2
            {
            pushFollow(FOLLOW_42);
            rule__InterfaceType__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InterfaceType__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InterfaceType__Group__1"


    // $ANTLR start "rule__InterfaceType__Group__1__Impl"
    // InternalGo.g:8639:1: rule__InterfaceType__Group__1__Impl : ( '{' ) ;
    public final void rule__InterfaceType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8643:1: ( ( '{' ) )
            // InternalGo.g:8644:1: ( '{' )
            {
            // InternalGo.g:8644:1: ( '{' )
            // InternalGo.g:8645:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,73,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InterfaceType__Group__1__Impl"


    // $ANTLR start "rule__InterfaceType__Group__2"
    // InternalGo.g:8654:1: rule__InterfaceType__Group__2 : rule__InterfaceType__Group__2__Impl rule__InterfaceType__Group__3 ;
    public final void rule__InterfaceType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8658:1: ( rule__InterfaceType__Group__2__Impl rule__InterfaceType__Group__3 )
            // InternalGo.g:8659:2: rule__InterfaceType__Group__2__Impl rule__InterfaceType__Group__3
            {
            pushFollow(FOLLOW_42);
            rule__InterfaceType__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InterfaceType__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InterfaceType__Group__2"


    // $ANTLR start "rule__InterfaceType__Group__2__Impl"
    // InternalGo.g:8666:1: rule__InterfaceType__Group__2__Impl : ( ( rule__InterfaceType__MethodSpecAssignment_2 )* ) ;
    public final void rule__InterfaceType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8670:1: ( ( ( rule__InterfaceType__MethodSpecAssignment_2 )* ) )
            // InternalGo.g:8671:1: ( ( rule__InterfaceType__MethodSpecAssignment_2 )* )
            {
            // InternalGo.g:8671:1: ( ( rule__InterfaceType__MethodSpecAssignment_2 )* )
            // InternalGo.g:8672:2: ( rule__InterfaceType__MethodSpecAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInterfaceTypeAccess().getMethodSpecAssignment_2()); 
            }
            // InternalGo.g:8673:2: ( rule__InterfaceType__MethodSpecAssignment_2 )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==RULE_IDENTIFIER) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // InternalGo.g:8673:3: rule__InterfaceType__MethodSpecAssignment_2
            	    {
            	    pushFollow(FOLLOW_43);
            	    rule__InterfaceType__MethodSpecAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInterfaceTypeAccess().getMethodSpecAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InterfaceType__Group__2__Impl"


    // $ANTLR start "rule__InterfaceType__Group__3"
    // InternalGo.g:8681:1: rule__InterfaceType__Group__3 : rule__InterfaceType__Group__3__Impl ;
    public final void rule__InterfaceType__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8685:1: ( rule__InterfaceType__Group__3__Impl )
            // InternalGo.g:8686:2: rule__InterfaceType__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InterfaceType__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InterfaceType__Group__3"


    // $ANTLR start "rule__InterfaceType__Group__3__Impl"
    // InternalGo.g:8692:1: rule__InterfaceType__Group__3__Impl : ( '}' ) ;
    public final void rule__InterfaceType__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8696:1: ( ( '}' ) )
            // InternalGo.g:8697:1: ( '}' )
            {
            // InternalGo.g:8697:1: ( '}' )
            // InternalGo.g:8698:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_3()); 
            }
            match(input,74,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InterfaceType__Group__3__Impl"


    // $ANTLR start "rule__SliceType__Group__0"
    // InternalGo.g:8708:1: rule__SliceType__Group__0 : rule__SliceType__Group__0__Impl rule__SliceType__Group__1 ;
    public final void rule__SliceType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8712:1: ( rule__SliceType__Group__0__Impl rule__SliceType__Group__1 )
            // InternalGo.g:8713:2: rule__SliceType__Group__0__Impl rule__SliceType__Group__1
            {
            pushFollow(FOLLOW_41);
            rule__SliceType__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SliceType__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SliceType__Group__0"


    // $ANTLR start "rule__SliceType__Group__0__Impl"
    // InternalGo.g:8720:1: rule__SliceType__Group__0__Impl : ( '[' ) ;
    public final void rule__SliceType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8724:1: ( ( '[' ) )
            // InternalGo.g:8725:1: ( '[' )
            {
            // InternalGo.g:8725:1: ( '[' )
            // InternalGo.g:8726:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceTypeAccess().getLeftSquareBracketKeyword_0()); 
            }
            match(input,90,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceTypeAccess().getLeftSquareBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SliceType__Group__0__Impl"


    // $ANTLR start "rule__SliceType__Group__1"
    // InternalGo.g:8735:1: rule__SliceType__Group__1 : rule__SliceType__Group__1__Impl rule__SliceType__Group__2 ;
    public final void rule__SliceType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8739:1: ( rule__SliceType__Group__1__Impl rule__SliceType__Group__2 )
            // InternalGo.g:8740:2: rule__SliceType__Group__1__Impl rule__SliceType__Group__2
            {
            pushFollow(FOLLOW_19);
            rule__SliceType__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SliceType__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SliceType__Group__1"


    // $ANTLR start "rule__SliceType__Group__1__Impl"
    // InternalGo.g:8747:1: rule__SliceType__Group__1__Impl : ( ']' ) ;
    public final void rule__SliceType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8751:1: ( ( ']' ) )
            // InternalGo.g:8752:1: ( ']' )
            {
            // InternalGo.g:8752:1: ( ']' )
            // InternalGo.g:8753:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceTypeAccess().getRightSquareBracketKeyword_1()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceTypeAccess().getRightSquareBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SliceType__Group__1__Impl"


    // $ANTLR start "rule__SliceType__Group__2"
    // InternalGo.g:8762:1: rule__SliceType__Group__2 : rule__SliceType__Group__2__Impl ;
    public final void rule__SliceType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8766:1: ( rule__SliceType__Group__2__Impl )
            // InternalGo.g:8767:2: rule__SliceType__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SliceType__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SliceType__Group__2"


    // $ANTLR start "rule__SliceType__Group__2__Impl"
    // InternalGo.g:8773:1: rule__SliceType__Group__2__Impl : ( ( rule__SliceType__ElementTypeAssignment_2 ) ) ;
    public final void rule__SliceType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8777:1: ( ( ( rule__SliceType__ElementTypeAssignment_2 ) ) )
            // InternalGo.g:8778:1: ( ( rule__SliceType__ElementTypeAssignment_2 ) )
            {
            // InternalGo.g:8778:1: ( ( rule__SliceType__ElementTypeAssignment_2 ) )
            // InternalGo.g:8779:2: ( rule__SliceType__ElementTypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceTypeAccess().getElementTypeAssignment_2()); 
            }
            // InternalGo.g:8780:2: ( rule__SliceType__ElementTypeAssignment_2 )
            // InternalGo.g:8780:3: rule__SliceType__ElementTypeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SliceType__ElementTypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceTypeAccess().getElementTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SliceType__Group__2__Impl"


    // $ANTLR start "rule__MapType__Group__0"
    // InternalGo.g:8789:1: rule__MapType__Group__0 : rule__MapType__Group__0__Impl rule__MapType__Group__1 ;
    public final void rule__MapType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8793:1: ( rule__MapType__Group__0__Impl rule__MapType__Group__1 )
            // InternalGo.g:8794:2: rule__MapType__Group__0__Impl rule__MapType__Group__1
            {
            pushFollow(FOLLOW_44);
            rule__MapType__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MapType__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapType__Group__0"


    // $ANTLR start "rule__MapType__Group__0__Impl"
    // InternalGo.g:8801:1: rule__MapType__Group__0__Impl : ( 'map' ) ;
    public final void rule__MapType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8805:1: ( ( 'map' ) )
            // InternalGo.g:8806:1: ( 'map' )
            {
            // InternalGo.g:8806:1: ( 'map' )
            // InternalGo.g:8807:2: 'map'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeAccess().getMapKeyword_0()); 
            }
            match(input,93,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeAccess().getMapKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapType__Group__0__Impl"


    // $ANTLR start "rule__MapType__Group__1"
    // InternalGo.g:8816:1: rule__MapType__Group__1 : rule__MapType__Group__1__Impl rule__MapType__Group__2 ;
    public final void rule__MapType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8820:1: ( rule__MapType__Group__1__Impl rule__MapType__Group__2 )
            // InternalGo.g:8821:2: rule__MapType__Group__1__Impl rule__MapType__Group__2
            {
            pushFollow(FOLLOW_19);
            rule__MapType__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MapType__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapType__Group__1"


    // $ANTLR start "rule__MapType__Group__1__Impl"
    // InternalGo.g:8828:1: rule__MapType__Group__1__Impl : ( '[' ) ;
    public final void rule__MapType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8832:1: ( ( '[' ) )
            // InternalGo.g:8833:1: ( '[' )
            {
            // InternalGo.g:8833:1: ( '[' )
            // InternalGo.g:8834:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1()); 
            }
            match(input,90,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapType__Group__1__Impl"


    // $ANTLR start "rule__MapType__Group__2"
    // InternalGo.g:8843:1: rule__MapType__Group__2 : rule__MapType__Group__2__Impl rule__MapType__Group__3 ;
    public final void rule__MapType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8847:1: ( rule__MapType__Group__2__Impl rule__MapType__Group__3 )
            // InternalGo.g:8848:2: rule__MapType__Group__2__Impl rule__MapType__Group__3
            {
            pushFollow(FOLLOW_41);
            rule__MapType__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MapType__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapType__Group__2"


    // $ANTLR start "rule__MapType__Group__2__Impl"
    // InternalGo.g:8855:1: rule__MapType__Group__2__Impl : ( ( rule__MapType__TypeAssignment_2 ) ) ;
    public final void rule__MapType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8859:1: ( ( ( rule__MapType__TypeAssignment_2 ) ) )
            // InternalGo.g:8860:1: ( ( rule__MapType__TypeAssignment_2 ) )
            {
            // InternalGo.g:8860:1: ( ( rule__MapType__TypeAssignment_2 ) )
            // InternalGo.g:8861:2: ( rule__MapType__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeAccess().getTypeAssignment_2()); 
            }
            // InternalGo.g:8862:2: ( rule__MapType__TypeAssignment_2 )
            // InternalGo.g:8862:3: rule__MapType__TypeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__MapType__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapType__Group__2__Impl"


    // $ANTLR start "rule__MapType__Group__3"
    // InternalGo.g:8870:1: rule__MapType__Group__3 : rule__MapType__Group__3__Impl rule__MapType__Group__4 ;
    public final void rule__MapType__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8874:1: ( rule__MapType__Group__3__Impl rule__MapType__Group__4 )
            // InternalGo.g:8875:2: rule__MapType__Group__3__Impl rule__MapType__Group__4
            {
            pushFollow(FOLLOW_19);
            rule__MapType__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MapType__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapType__Group__3"


    // $ANTLR start "rule__MapType__Group__3__Impl"
    // InternalGo.g:8882:1: rule__MapType__Group__3__Impl : ( ']' ) ;
    public final void rule__MapType__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8886:1: ( ( ']' ) )
            // InternalGo.g:8887:1: ( ']' )
            {
            // InternalGo.g:8887:1: ( ']' )
            // InternalGo.g:8888:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapType__Group__3__Impl"


    // $ANTLR start "rule__MapType__Group__4"
    // InternalGo.g:8897:1: rule__MapType__Group__4 : rule__MapType__Group__4__Impl ;
    public final void rule__MapType__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8901:1: ( rule__MapType__Group__4__Impl )
            // InternalGo.g:8902:2: rule__MapType__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MapType__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapType__Group__4"


    // $ANTLR start "rule__MapType__Group__4__Impl"
    // InternalGo.g:8908:1: rule__MapType__Group__4__Impl : ( ( rule__MapType__ElementTypeAssignment_4 ) ) ;
    public final void rule__MapType__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8912:1: ( ( ( rule__MapType__ElementTypeAssignment_4 ) ) )
            // InternalGo.g:8913:1: ( ( rule__MapType__ElementTypeAssignment_4 ) )
            {
            // InternalGo.g:8913:1: ( ( rule__MapType__ElementTypeAssignment_4 ) )
            // InternalGo.g:8914:2: ( rule__MapType__ElementTypeAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeAccess().getElementTypeAssignment_4()); 
            }
            // InternalGo.g:8915:2: ( rule__MapType__ElementTypeAssignment_4 )
            // InternalGo.g:8915:3: rule__MapType__ElementTypeAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__MapType__ElementTypeAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeAccess().getElementTypeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapType__Group__4__Impl"


    // $ANTLR start "rule__ChannelType__Group__0"
    // InternalGo.g:8924:1: rule__ChannelType__Group__0 : rule__ChannelType__Group__0__Impl rule__ChannelType__Group__1 ;
    public final void rule__ChannelType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8928:1: ( rule__ChannelType__Group__0__Impl rule__ChannelType__Group__1 )
            // InternalGo.g:8929:2: rule__ChannelType__Group__0__Impl rule__ChannelType__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__ChannelType__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ChannelType__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChannelType__Group__0"


    // $ANTLR start "rule__ChannelType__Group__0__Impl"
    // InternalGo.g:8936:1: rule__ChannelType__Group__0__Impl : ( ( rule__ChannelType__Alternatives_0 ) ) ;
    public final void rule__ChannelType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8940:1: ( ( ( rule__ChannelType__Alternatives_0 ) ) )
            // InternalGo.g:8941:1: ( ( rule__ChannelType__Alternatives_0 ) )
            {
            // InternalGo.g:8941:1: ( ( rule__ChannelType__Alternatives_0 ) )
            // InternalGo.g:8942:2: ( rule__ChannelType__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChannelTypeAccess().getAlternatives_0()); 
            }
            // InternalGo.g:8943:2: ( rule__ChannelType__Alternatives_0 )
            // InternalGo.g:8943:3: rule__ChannelType__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__ChannelType__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChannelTypeAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChannelType__Group__0__Impl"


    // $ANTLR start "rule__ChannelType__Group__1"
    // InternalGo.g:8951:1: rule__ChannelType__Group__1 : rule__ChannelType__Group__1__Impl ;
    public final void rule__ChannelType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8955:1: ( rule__ChannelType__Group__1__Impl )
            // InternalGo.g:8956:2: rule__ChannelType__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ChannelType__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChannelType__Group__1"


    // $ANTLR start "rule__ChannelType__Group__1__Impl"
    // InternalGo.g:8962:1: rule__ChannelType__Group__1__Impl : ( ( rule__ChannelType__ElementTypeAssignment_1 ) ) ;
    public final void rule__ChannelType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8966:1: ( ( ( rule__ChannelType__ElementTypeAssignment_1 ) ) )
            // InternalGo.g:8967:1: ( ( rule__ChannelType__ElementTypeAssignment_1 ) )
            {
            // InternalGo.g:8967:1: ( ( rule__ChannelType__ElementTypeAssignment_1 ) )
            // InternalGo.g:8968:2: ( rule__ChannelType__ElementTypeAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChannelTypeAccess().getElementTypeAssignment_1()); 
            }
            // InternalGo.g:8969:2: ( rule__ChannelType__ElementTypeAssignment_1 )
            // InternalGo.g:8969:3: rule__ChannelType__ElementTypeAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ChannelType__ElementTypeAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChannelTypeAccess().getElementTypeAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChannelType__Group__1__Impl"


    // $ANTLR start "rule__ChannelType__Group_0_1__0"
    // InternalGo.g:8978:1: rule__ChannelType__Group_0_1__0 : rule__ChannelType__Group_0_1__0__Impl rule__ChannelType__Group_0_1__1 ;
    public final void rule__ChannelType__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8982:1: ( rule__ChannelType__Group_0_1__0__Impl rule__ChannelType__Group_0_1__1 )
            // InternalGo.g:8983:2: rule__ChannelType__Group_0_1__0__Impl rule__ChannelType__Group_0_1__1
            {
            pushFollow(FOLLOW_25);
            rule__ChannelType__Group_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ChannelType__Group_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChannelType__Group_0_1__0"


    // $ANTLR start "rule__ChannelType__Group_0_1__0__Impl"
    // InternalGo.g:8990:1: rule__ChannelType__Group_0_1__0__Impl : ( 'chan' ) ;
    public final void rule__ChannelType__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:8994:1: ( ( 'chan' ) )
            // InternalGo.g:8995:1: ( 'chan' )
            {
            // InternalGo.g:8995:1: ( 'chan' )
            // InternalGo.g:8996:2: 'chan'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_0()); 
            }
            match(input,60,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChannelType__Group_0_1__0__Impl"


    // $ANTLR start "rule__ChannelType__Group_0_1__1"
    // InternalGo.g:9005:1: rule__ChannelType__Group_0_1__1 : rule__ChannelType__Group_0_1__1__Impl ;
    public final void rule__ChannelType__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9009:1: ( rule__ChannelType__Group_0_1__1__Impl )
            // InternalGo.g:9010:2: rule__ChannelType__Group_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ChannelType__Group_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChannelType__Group_0_1__1"


    // $ANTLR start "rule__ChannelType__Group_0_1__1__Impl"
    // InternalGo.g:9016:1: rule__ChannelType__Group_0_1__1__Impl : ( '<-' ) ;
    public final void rule__ChannelType__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9020:1: ( ( '<-' ) )
            // InternalGo.g:9021:1: ( '<-' )
            {
            // InternalGo.g:9021:1: ( '<-' )
            // InternalGo.g:9022:2: '<-'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_1()); 
            }
            match(input,62,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChannelType__Group_0_1__1__Impl"


    // $ANTLR start "rule__ChannelType__Group_0_2__0"
    // InternalGo.g:9032:1: rule__ChannelType__Group_0_2__0 : rule__ChannelType__Group_0_2__0__Impl rule__ChannelType__Group_0_2__1 ;
    public final void rule__ChannelType__Group_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9036:1: ( rule__ChannelType__Group_0_2__0__Impl rule__ChannelType__Group_0_2__1 )
            // InternalGo.g:9037:2: rule__ChannelType__Group_0_2__0__Impl rule__ChannelType__Group_0_2__1
            {
            pushFollow(FOLLOW_45);
            rule__ChannelType__Group_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ChannelType__Group_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChannelType__Group_0_2__0"


    // $ANTLR start "rule__ChannelType__Group_0_2__0__Impl"
    // InternalGo.g:9044:1: rule__ChannelType__Group_0_2__0__Impl : ( '<-' ) ;
    public final void rule__ChannelType__Group_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9048:1: ( ( '<-' ) )
            // InternalGo.g:9049:1: ( '<-' )
            {
            // InternalGo.g:9049:1: ( '<-' )
            // InternalGo.g:9050:2: '<-'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_2_0()); 
            }
            match(input,62,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChannelType__Group_0_2__0__Impl"


    // $ANTLR start "rule__ChannelType__Group_0_2__1"
    // InternalGo.g:9059:1: rule__ChannelType__Group_0_2__1 : rule__ChannelType__Group_0_2__1__Impl ;
    public final void rule__ChannelType__Group_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9063:1: ( rule__ChannelType__Group_0_2__1__Impl )
            // InternalGo.g:9064:2: rule__ChannelType__Group_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ChannelType__Group_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChannelType__Group_0_2__1"


    // $ANTLR start "rule__ChannelType__Group_0_2__1__Impl"
    // InternalGo.g:9070:1: rule__ChannelType__Group_0_2__1__Impl : ( 'chan' ) ;
    public final void rule__ChannelType__Group_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9074:1: ( ( 'chan' ) )
            // InternalGo.g:9075:1: ( 'chan' )
            {
            // InternalGo.g:9075:1: ( 'chan' )
            // InternalGo.g:9076:2: 'chan'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChannelTypeAccess().getChanKeyword_0_2_1()); 
            }
            match(input,60,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChannelTypeAccess().getChanKeyword_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChannelType__Group_0_2__1__Impl"


    // $ANTLR start "rule__MethodSpec__Group_0__0"
    // InternalGo.g:9086:1: rule__MethodSpec__Group_0__0 : rule__MethodSpec__Group_0__0__Impl rule__MethodSpec__Group_0__1 ;
    public final void rule__MethodSpec__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9090:1: ( rule__MethodSpec__Group_0__0__Impl rule__MethodSpec__Group_0__1 )
            // InternalGo.g:9091:2: rule__MethodSpec__Group_0__0__Impl rule__MethodSpec__Group_0__1
            {
            pushFollow(FOLLOW_20);
            rule__MethodSpec__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodSpec__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodSpec__Group_0__0"


    // $ANTLR start "rule__MethodSpec__Group_0__0__Impl"
    // InternalGo.g:9098:1: rule__MethodSpec__Group_0__0__Impl : ( RULE_IDENTIFIER ) ;
    public final void rule__MethodSpec__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9102:1: ( ( RULE_IDENTIFIER ) )
            // InternalGo.g:9103:1: ( RULE_IDENTIFIER )
            {
            // InternalGo.g:9103:1: ( RULE_IDENTIFIER )
            // InternalGo.g:9104:2: RULE_IDENTIFIER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodSpecAccess().getIDENTIFIERTerminalRuleCall_0_0()); 
            }
            match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodSpecAccess().getIDENTIFIERTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodSpec__Group_0__0__Impl"


    // $ANTLR start "rule__MethodSpec__Group_0__1"
    // InternalGo.g:9113:1: rule__MethodSpec__Group_0__1 : rule__MethodSpec__Group_0__1__Impl ;
    public final void rule__MethodSpec__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9117:1: ( rule__MethodSpec__Group_0__1__Impl )
            // InternalGo.g:9118:2: rule__MethodSpec__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MethodSpec__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodSpec__Group_0__1"


    // $ANTLR start "rule__MethodSpec__Group_0__1__Impl"
    // InternalGo.g:9124:1: rule__MethodSpec__Group_0__1__Impl : ( ( rule__MethodSpec__SignatureAssignment_0_1 ) ) ;
    public final void rule__MethodSpec__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9128:1: ( ( ( rule__MethodSpec__SignatureAssignment_0_1 ) ) )
            // InternalGo.g:9129:1: ( ( rule__MethodSpec__SignatureAssignment_0_1 ) )
            {
            // InternalGo.g:9129:1: ( ( rule__MethodSpec__SignatureAssignment_0_1 ) )
            // InternalGo.g:9130:2: ( rule__MethodSpec__SignatureAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodSpecAccess().getSignatureAssignment_0_1()); 
            }
            // InternalGo.g:9131:2: ( rule__MethodSpec__SignatureAssignment_0_1 )
            // InternalGo.g:9131:3: rule__MethodSpec__SignatureAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__MethodSpec__SignatureAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodSpecAccess().getSignatureAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodSpec__Group_0__1__Impl"


    // $ANTLR start "rule__FunctionType__Group__0"
    // InternalGo.g:9140:1: rule__FunctionType__Group__0 : rule__FunctionType__Group__0__Impl rule__FunctionType__Group__1 ;
    public final void rule__FunctionType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9144:1: ( rule__FunctionType__Group__0__Impl rule__FunctionType__Group__1 )
            // InternalGo.g:9145:2: rule__FunctionType__Group__0__Impl rule__FunctionType__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__FunctionType__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionType__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionType__Group__0"


    // $ANTLR start "rule__FunctionType__Group__0__Impl"
    // InternalGo.g:9152:1: rule__FunctionType__Group__0__Impl : ( 'func' ) ;
    public final void rule__FunctionType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9156:1: ( ( 'func' ) )
            // InternalGo.g:9157:1: ( 'func' )
            {
            // InternalGo.g:9157:1: ( 'func' )
            // InternalGo.g:9158:2: 'func'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionTypeAccess().getFuncKeyword_0()); 
            }
            match(input,71,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionTypeAccess().getFuncKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionType__Group__0__Impl"


    // $ANTLR start "rule__FunctionType__Group__1"
    // InternalGo.g:9167:1: rule__FunctionType__Group__1 : rule__FunctionType__Group__1__Impl ;
    public final void rule__FunctionType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9171:1: ( rule__FunctionType__Group__1__Impl )
            // InternalGo.g:9172:2: rule__FunctionType__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionType__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionType__Group__1"


    // $ANTLR start "rule__FunctionType__Group__1__Impl"
    // InternalGo.g:9178:1: rule__FunctionType__Group__1__Impl : ( ( rule__FunctionType__SignatureAssignment_1 ) ) ;
    public final void rule__FunctionType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9182:1: ( ( ( rule__FunctionType__SignatureAssignment_1 ) ) )
            // InternalGo.g:9183:1: ( ( rule__FunctionType__SignatureAssignment_1 ) )
            {
            // InternalGo.g:9183:1: ( ( rule__FunctionType__SignatureAssignment_1 ) )
            // InternalGo.g:9184:2: ( rule__FunctionType__SignatureAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionTypeAccess().getSignatureAssignment_1()); 
            }
            // InternalGo.g:9185:2: ( rule__FunctionType__SignatureAssignment_1 )
            // InternalGo.g:9185:3: rule__FunctionType__SignatureAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FunctionType__SignatureAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionTypeAccess().getSignatureAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionType__Group__1__Impl"


    // $ANTLR start "rule__Signature__Group__0"
    // InternalGo.g:9194:1: rule__Signature__Group__0 : rule__Signature__Group__0__Impl rule__Signature__Group__1 ;
    public final void rule__Signature__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9198:1: ( rule__Signature__Group__0__Impl rule__Signature__Group__1 )
            // InternalGo.g:9199:2: rule__Signature__Group__0__Impl rule__Signature__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__Signature__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Signature__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Signature__Group__0"


    // $ANTLR start "rule__Signature__Group__0__Impl"
    // InternalGo.g:9206:1: rule__Signature__Group__0__Impl : ( ( rule__Signature__ParametersAssignment_0 ) ) ;
    public final void rule__Signature__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9210:1: ( ( ( rule__Signature__ParametersAssignment_0 ) ) )
            // InternalGo.g:9211:1: ( ( rule__Signature__ParametersAssignment_0 ) )
            {
            // InternalGo.g:9211:1: ( ( rule__Signature__ParametersAssignment_0 ) )
            // InternalGo.g:9212:2: ( rule__Signature__ParametersAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignatureAccess().getParametersAssignment_0()); 
            }
            // InternalGo.g:9213:2: ( rule__Signature__ParametersAssignment_0 )
            // InternalGo.g:9213:3: rule__Signature__ParametersAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Signature__ParametersAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignatureAccess().getParametersAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Signature__Group__0__Impl"


    // $ANTLR start "rule__Signature__Group__1"
    // InternalGo.g:9221:1: rule__Signature__Group__1 : rule__Signature__Group__1__Impl ;
    public final void rule__Signature__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9225:1: ( rule__Signature__Group__1__Impl )
            // InternalGo.g:9226:2: rule__Signature__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Signature__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Signature__Group__1"


    // $ANTLR start "rule__Signature__Group__1__Impl"
    // InternalGo.g:9232:1: rule__Signature__Group__1__Impl : ( ( rule__Signature__ResultAssignment_1 )? ) ;
    public final void rule__Signature__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9236:1: ( ( ( rule__Signature__ResultAssignment_1 )? ) )
            // InternalGo.g:9237:1: ( ( rule__Signature__ResultAssignment_1 )? )
            {
            // InternalGo.g:9237:1: ( ( rule__Signature__ResultAssignment_1 )? )
            // InternalGo.g:9238:2: ( rule__Signature__ResultAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignatureAccess().getResultAssignment_1()); 
            }
            // InternalGo.g:9239:2: ( rule__Signature__ResultAssignment_1 )?
            int alt86=2;
            alt86 = dfa86.predict(input);
            switch (alt86) {
                case 1 :
                    // InternalGo.g:9239:3: rule__Signature__ResultAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Signature__ResultAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignatureAccess().getResultAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Signature__Group__1__Impl"


    // $ANTLR start "rule__Parameters__Group__0"
    // InternalGo.g:9248:1: rule__Parameters__Group__0 : rule__Parameters__Group__0__Impl rule__Parameters__Group__1 ;
    public final void rule__Parameters__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9252:1: ( rule__Parameters__Group__0__Impl rule__Parameters__Group__1 )
            // InternalGo.g:9253:2: rule__Parameters__Group__0__Impl rule__Parameters__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__Parameters__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Parameters__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameters__Group__0"


    // $ANTLR start "rule__Parameters__Group__0__Impl"
    // InternalGo.g:9260:1: rule__Parameters__Group__0__Impl : ( '(' ) ;
    public final void rule__Parameters__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9264:1: ( ( '(' ) )
            // InternalGo.g:9265:1: ( '(' )
            {
            // InternalGo.g:9265:1: ( '(' )
            // InternalGo.g:9266:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,65,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameters__Group__0__Impl"


    // $ANTLR start "rule__Parameters__Group__1"
    // InternalGo.g:9275:1: rule__Parameters__Group__1 : rule__Parameters__Group__1__Impl rule__Parameters__Group__2 ;
    public final void rule__Parameters__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9279:1: ( rule__Parameters__Group__1__Impl rule__Parameters__Group__2 )
            // InternalGo.g:9280:2: rule__Parameters__Group__1__Impl rule__Parameters__Group__2
            {
            pushFollow(FOLLOW_46);
            rule__Parameters__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Parameters__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameters__Group__1"


    // $ANTLR start "rule__Parameters__Group__1__Impl"
    // InternalGo.g:9287:1: rule__Parameters__Group__1__Impl : ( ( rule__Parameters__Group_1__0 )? ) ;
    public final void rule__Parameters__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9291:1: ( ( ( rule__Parameters__Group_1__0 )? ) )
            // InternalGo.g:9292:1: ( ( rule__Parameters__Group_1__0 )? )
            {
            // InternalGo.g:9292:1: ( ( rule__Parameters__Group_1__0 )? )
            // InternalGo.g:9293:2: ( rule__Parameters__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParametersAccess().getGroup_1()); 
            }
            // InternalGo.g:9294:2: ( rule__Parameters__Group_1__0 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==RULE_IDENTIFIER||LA87_0==52||LA87_0==60||LA87_0==62||LA87_0==65||LA87_0==71||LA87_0==90||(LA87_0>=92 && LA87_0<=95)) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalGo.g:9294:3: rule__Parameters__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Parameters__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParametersAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameters__Group__1__Impl"


    // $ANTLR start "rule__Parameters__Group__2"
    // InternalGo.g:9302:1: rule__Parameters__Group__2 : rule__Parameters__Group__2__Impl ;
    public final void rule__Parameters__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9306:1: ( rule__Parameters__Group__2__Impl )
            // InternalGo.g:9307:2: rule__Parameters__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Parameters__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameters__Group__2"


    // $ANTLR start "rule__Parameters__Group__2__Impl"
    // InternalGo.g:9313:1: rule__Parameters__Group__2__Impl : ( ')' ) ;
    public final void rule__Parameters__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9317:1: ( ( ')' ) )
            // InternalGo.g:9318:1: ( ')' )
            {
            // InternalGo.g:9318:1: ( ')' )
            // InternalGo.g:9319:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParametersAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParametersAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameters__Group__2__Impl"


    // $ANTLR start "rule__Parameters__Group_1__0"
    // InternalGo.g:9329:1: rule__Parameters__Group_1__0 : rule__Parameters__Group_1__0__Impl rule__Parameters__Group_1__1 ;
    public final void rule__Parameters__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9333:1: ( rule__Parameters__Group_1__0__Impl rule__Parameters__Group_1__1 )
            // InternalGo.g:9334:2: rule__Parameters__Group_1__0__Impl rule__Parameters__Group_1__1
            {
            pushFollow(FOLLOW_17);
            rule__Parameters__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Parameters__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameters__Group_1__0"


    // $ANTLR start "rule__Parameters__Group_1__0__Impl"
    // InternalGo.g:9341:1: rule__Parameters__Group_1__0__Impl : ( ( rule__Parameters__ParameterListAssignment_1_0 ) ) ;
    public final void rule__Parameters__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9345:1: ( ( ( rule__Parameters__ParameterListAssignment_1_0 ) ) )
            // InternalGo.g:9346:1: ( ( rule__Parameters__ParameterListAssignment_1_0 ) )
            {
            // InternalGo.g:9346:1: ( ( rule__Parameters__ParameterListAssignment_1_0 ) )
            // InternalGo.g:9347:2: ( rule__Parameters__ParameterListAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParametersAccess().getParameterListAssignment_1_0()); 
            }
            // InternalGo.g:9348:2: ( rule__Parameters__ParameterListAssignment_1_0 )
            // InternalGo.g:9348:3: rule__Parameters__ParameterListAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Parameters__ParameterListAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParametersAccess().getParameterListAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameters__Group_1__0__Impl"


    // $ANTLR start "rule__Parameters__Group_1__1"
    // InternalGo.g:9356:1: rule__Parameters__Group_1__1 : rule__Parameters__Group_1__1__Impl ;
    public final void rule__Parameters__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9360:1: ( rule__Parameters__Group_1__1__Impl )
            // InternalGo.g:9361:2: rule__Parameters__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Parameters__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameters__Group_1__1"


    // $ANTLR start "rule__Parameters__Group_1__1__Impl"
    // InternalGo.g:9367:1: rule__Parameters__Group_1__1__Impl : ( ( ',' )? ) ;
    public final void rule__Parameters__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9371:1: ( ( ( ',' )? ) )
            // InternalGo.g:9372:1: ( ( ',' )? )
            {
            // InternalGo.g:9372:1: ( ( ',' )? )
            // InternalGo.g:9373:2: ( ',' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParametersAccess().getCommaKeyword_1_1()); 
            }
            // InternalGo.g:9374:2: ( ',' )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==69) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalGo.g:9374:3: ','
                    {
                    match(input,69,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParametersAccess().getCommaKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameters__Group_1__1__Impl"


    // $ANTLR start "rule__ParameterList__Group__0"
    // InternalGo.g:9383:1: rule__ParameterList__Group__0 : rule__ParameterList__Group__0__Impl rule__ParameterList__Group__1 ;
    public final void rule__ParameterList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9387:1: ( rule__ParameterList__Group__0__Impl rule__ParameterList__Group__1 )
            // InternalGo.g:9388:2: rule__ParameterList__Group__0__Impl rule__ParameterList__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__ParameterList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__0"


    // $ANTLR start "rule__ParameterList__Group__0__Impl"
    // InternalGo.g:9395:1: rule__ParameterList__Group__0__Impl : ( ( rule__ParameterList__ParameterDeclAssignment_0 ) ) ;
    public final void rule__ParameterList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9399:1: ( ( ( rule__ParameterList__ParameterDeclAssignment_0 ) ) )
            // InternalGo.g:9400:1: ( ( rule__ParameterList__ParameterDeclAssignment_0 ) )
            {
            // InternalGo.g:9400:1: ( ( rule__ParameterList__ParameterDeclAssignment_0 ) )
            // InternalGo.g:9401:2: ( rule__ParameterList__ParameterDeclAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParameterDeclAssignment_0()); 
            }
            // InternalGo.g:9402:2: ( rule__ParameterList__ParameterDeclAssignment_0 )
            // InternalGo.g:9402:3: rule__ParameterList__ParameterDeclAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ParameterList__ParameterDeclAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParameterDeclAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__0__Impl"


    // $ANTLR start "rule__ParameterList__Group__1"
    // InternalGo.g:9410:1: rule__ParameterList__Group__1 : rule__ParameterList__Group__1__Impl ;
    public final void rule__ParameterList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9414:1: ( rule__ParameterList__Group__1__Impl )
            // InternalGo.g:9415:2: rule__ParameterList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__1"


    // $ANTLR start "rule__ParameterList__Group__1__Impl"
    // InternalGo.g:9421:1: rule__ParameterList__Group__1__Impl : ( ( rule__ParameterList__Group_1__0 )* ) ;
    public final void rule__ParameterList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9425:1: ( ( ( rule__ParameterList__Group_1__0 )* ) )
            // InternalGo.g:9426:1: ( ( rule__ParameterList__Group_1__0 )* )
            {
            // InternalGo.g:9426:1: ( ( rule__ParameterList__Group_1__0 )* )
            // InternalGo.g:9427:2: ( rule__ParameterList__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getGroup_1()); 
            }
            // InternalGo.g:9428:2: ( rule__ParameterList__Group_1__0 )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==69) ) {
                    int LA89_2 = input.LA(2);

                    if ( (LA89_2==RULE_IDENTIFIER||LA89_2==52||LA89_2==60||LA89_2==62||LA89_2==65||LA89_2==71||LA89_2==90||(LA89_2>=92 && LA89_2<=95)) ) {
                        alt89=1;
                    }


                }


                switch (alt89) {
            	case 1 :
            	    // InternalGo.g:9428:3: rule__ParameterList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_18);
            	    rule__ParameterList__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group__1__Impl"


    // $ANTLR start "rule__ParameterList__Group_1__0"
    // InternalGo.g:9437:1: rule__ParameterList__Group_1__0 : rule__ParameterList__Group_1__0__Impl rule__ParameterList__Group_1__1 ;
    public final void rule__ParameterList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9441:1: ( rule__ParameterList__Group_1__0__Impl rule__ParameterList__Group_1__1 )
            // InternalGo.g:9442:2: rule__ParameterList__Group_1__0__Impl rule__ParameterList__Group_1__1
            {
            pushFollow(FOLLOW_47);
            rule__ParameterList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__0"


    // $ANTLR start "rule__ParameterList__Group_1__0__Impl"
    // InternalGo.g:9449:1: rule__ParameterList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__ParameterList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9453:1: ( ( ',' ) )
            // InternalGo.g:9454:1: ( ',' )
            {
            // InternalGo.g:9454:1: ( ',' )
            // InternalGo.g:9455:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); 
            }
            match(input,69,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__0__Impl"


    // $ANTLR start "rule__ParameterList__Group_1__1"
    // InternalGo.g:9464:1: rule__ParameterList__Group_1__1 : rule__ParameterList__Group_1__1__Impl ;
    public final void rule__ParameterList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9468:1: ( rule__ParameterList__Group_1__1__Impl )
            // InternalGo.g:9469:2: rule__ParameterList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__1"


    // $ANTLR start "rule__ParameterList__Group_1__1__Impl"
    // InternalGo.g:9475:1: rule__ParameterList__Group_1__1__Impl : ( ( rule__ParameterList__ParameterDeclAssignment_1_1 ) ) ;
    public final void rule__ParameterList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9479:1: ( ( ( rule__ParameterList__ParameterDeclAssignment_1_1 ) ) )
            // InternalGo.g:9480:1: ( ( rule__ParameterList__ParameterDeclAssignment_1_1 ) )
            {
            // InternalGo.g:9480:1: ( ( rule__ParameterList__ParameterDeclAssignment_1_1 ) )
            // InternalGo.g:9481:2: ( rule__ParameterList__ParameterDeclAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParameterDeclAssignment_1_1()); 
            }
            // InternalGo.g:9482:2: ( rule__ParameterList__ParameterDeclAssignment_1_1 )
            // InternalGo.g:9482:3: rule__ParameterList__ParameterDeclAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ParameterList__ParameterDeclAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParameterDeclAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__Group_1__1__Impl"


    // $ANTLR start "rule__ParameterDecl__Group__0"
    // InternalGo.g:9491:1: rule__ParameterDecl__Group__0 : rule__ParameterDecl__Group__0__Impl rule__ParameterDecl__Group__1 ;
    public final void rule__ParameterDecl__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9495:1: ( rule__ParameterDecl__Group__0__Impl rule__ParameterDecl__Group__1 )
            // InternalGo.g:9496:2: rule__ParameterDecl__Group__0__Impl rule__ParameterDecl__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__ParameterDecl__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterDecl__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDecl__Group__0"


    // $ANTLR start "rule__ParameterDecl__Group__0__Impl"
    // InternalGo.g:9503:1: rule__ParameterDecl__Group__0__Impl : ( ( rule__ParameterDecl__IdentifierListAssignment_0 )? ) ;
    public final void rule__ParameterDecl__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9507:1: ( ( ( rule__ParameterDecl__IdentifierListAssignment_0 )? ) )
            // InternalGo.g:9508:1: ( ( rule__ParameterDecl__IdentifierListAssignment_0 )? )
            {
            // InternalGo.g:9508:1: ( ( rule__ParameterDecl__IdentifierListAssignment_0 )? )
            // InternalGo.g:9509:2: ( rule__ParameterDecl__IdentifierListAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclAccess().getIdentifierListAssignment_0()); 
            }
            // InternalGo.g:9510:2: ( rule__ParameterDecl__IdentifierListAssignment_0 )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==RULE_IDENTIFIER) ) {
                int LA90_1 = input.LA(2);

                if ( (LA90_1==69) ) {
                    int LA90_3 = input.LA(3);

                    if ( (LA90_3==RULE_IDENTIFIER) ) {
                        int LA90_5 = input.LA(4);

                        if ( (synpred151_InternalGo()) ) {
                            alt90=1;
                        }
                    }
                }
                else if ( (LA90_1==RULE_IDENTIFIER||LA90_1==52||LA90_1==60||LA90_1==62||LA90_1==65||LA90_1==71||LA90_1==90||(LA90_1>=92 && LA90_1<=95)) ) {
                    alt90=1;
                }
            }
            switch (alt90) {
                case 1 :
                    // InternalGo.g:9510:3: rule__ParameterDecl__IdentifierListAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ParameterDecl__IdentifierListAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclAccess().getIdentifierListAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDecl__Group__0__Impl"


    // $ANTLR start "rule__ParameterDecl__Group__1"
    // InternalGo.g:9518:1: rule__ParameterDecl__Group__1 : rule__ParameterDecl__Group__1__Impl rule__ParameterDecl__Group__2 ;
    public final void rule__ParameterDecl__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9522:1: ( rule__ParameterDecl__Group__1__Impl rule__ParameterDecl__Group__2 )
            // InternalGo.g:9523:2: rule__ParameterDecl__Group__1__Impl rule__ParameterDecl__Group__2
            {
            pushFollow(FOLLOW_47);
            rule__ParameterDecl__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ParameterDecl__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDecl__Group__1"


    // $ANTLR start "rule__ParameterDecl__Group__1__Impl"
    // InternalGo.g:9530:1: rule__ParameterDecl__Group__1__Impl : ( ( '...' )? ) ;
    public final void rule__ParameterDecl__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9534:1: ( ( ( '...' )? ) )
            // InternalGo.g:9535:1: ( ( '...' )? )
            {
            // InternalGo.g:9535:1: ( ( '...' )? )
            // InternalGo.g:9536:2: ( '...' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1()); 
            }
            // InternalGo.g:9537:2: ( '...' )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==94) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalGo.g:9537:3: '...'
                    {
                    match(input,94,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDecl__Group__1__Impl"


    // $ANTLR start "rule__ParameterDecl__Group__2"
    // InternalGo.g:9545:1: rule__ParameterDecl__Group__2 : rule__ParameterDecl__Group__2__Impl ;
    public final void rule__ParameterDecl__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9549:1: ( rule__ParameterDecl__Group__2__Impl )
            // InternalGo.g:9550:2: rule__ParameterDecl__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDecl__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDecl__Group__2"


    // $ANTLR start "rule__ParameterDecl__Group__2__Impl"
    // InternalGo.g:9556:1: rule__ParameterDecl__Group__2__Impl : ( ( rule__ParameterDecl__TypeAssignment_2 ) ) ;
    public final void rule__ParameterDecl__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9560:1: ( ( ( rule__ParameterDecl__TypeAssignment_2 ) ) )
            // InternalGo.g:9561:1: ( ( rule__ParameterDecl__TypeAssignment_2 ) )
            {
            // InternalGo.g:9561:1: ( ( rule__ParameterDecl__TypeAssignment_2 ) )
            // InternalGo.g:9562:2: ( rule__ParameterDecl__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclAccess().getTypeAssignment_2()); 
            }
            // InternalGo.g:9563:2: ( rule__ParameterDecl__TypeAssignment_2 )
            // InternalGo.g:9563:3: rule__ParameterDecl__TypeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__ParameterDecl__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDecl__Group__2__Impl"


    // $ANTLR start "rule__Operand__Group_3__0"
    // InternalGo.g:9572:1: rule__Operand__Group_3__0 : rule__Operand__Group_3__0__Impl rule__Operand__Group_3__1 ;
    public final void rule__Operand__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9576:1: ( rule__Operand__Group_3__0__Impl rule__Operand__Group_3__1 )
            // InternalGo.g:9577:2: rule__Operand__Group_3__0__Impl rule__Operand__Group_3__1
            {
            pushFollow(FOLLOW_16);
            rule__Operand__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_3__0"


    // $ANTLR start "rule__Operand__Group_3__0__Impl"
    // InternalGo.g:9584:1: rule__Operand__Group_3__0__Impl : ( '(' ) ;
    public final void rule__Operand__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9588:1: ( ( '(' ) )
            // InternalGo.g:9589:1: ( '(' )
            {
            // InternalGo.g:9589:1: ( '(' )
            // InternalGo.g:9590:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getLeftParenthesisKeyword_3_0()); 
            }
            match(input,65,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getLeftParenthesisKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_3__0__Impl"


    // $ANTLR start "rule__Operand__Group_3__1"
    // InternalGo.g:9599:1: rule__Operand__Group_3__1 : rule__Operand__Group_3__1__Impl rule__Operand__Group_3__2 ;
    public final void rule__Operand__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9603:1: ( rule__Operand__Group_3__1__Impl rule__Operand__Group_3__2 )
            // InternalGo.g:9604:2: rule__Operand__Group_3__1__Impl rule__Operand__Group_3__2
            {
            pushFollow(FOLLOW_38);
            rule__Operand__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_3__1"


    // $ANTLR start "rule__Operand__Group_3__1__Impl"
    // InternalGo.g:9611:1: rule__Operand__Group_3__1__Impl : ( ( rule__Operand__ExpressionAssignment_3_1 ) ) ;
    public final void rule__Operand__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9615:1: ( ( ( rule__Operand__ExpressionAssignment_3_1 ) ) )
            // InternalGo.g:9616:1: ( ( rule__Operand__ExpressionAssignment_3_1 ) )
            {
            // InternalGo.g:9616:1: ( ( rule__Operand__ExpressionAssignment_3_1 ) )
            // InternalGo.g:9617:2: ( rule__Operand__ExpressionAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getExpressionAssignment_3_1()); 
            }
            // InternalGo.g:9618:2: ( rule__Operand__ExpressionAssignment_3_1 )
            // InternalGo.g:9618:3: rule__Operand__ExpressionAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Operand__ExpressionAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getExpressionAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_3__1__Impl"


    // $ANTLR start "rule__Operand__Group_3__2"
    // InternalGo.g:9626:1: rule__Operand__Group_3__2 : rule__Operand__Group_3__2__Impl ;
    public final void rule__Operand__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9630:1: ( rule__Operand__Group_3__2__Impl )
            // InternalGo.g:9631:2: rule__Operand__Group_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_3__2"


    // $ANTLR start "rule__Operand__Group_3__2__Impl"
    // InternalGo.g:9637:1: rule__Operand__Group_3__2__Impl : ( ')' ) ;
    public final void rule__Operand__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9641:1: ( ( ')' ) )
            // InternalGo.g:9642:1: ( ')' )
            {
            // InternalGo.g:9642:1: ( ')' )
            // InternalGo.g:9643:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getRightParenthesisKeyword_3_2()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getRightParenthesisKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_3__2__Impl"


    // $ANTLR start "rule__QualifiedIdent__Group__0"
    // InternalGo.g:9653:1: rule__QualifiedIdent__Group__0 : rule__QualifiedIdent__Group__0__Impl rule__QualifiedIdent__Group__1 ;
    public final void rule__QualifiedIdent__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9657:1: ( rule__QualifiedIdent__Group__0__Impl rule__QualifiedIdent__Group__1 )
            // InternalGo.g:9658:2: rule__QualifiedIdent__Group__0__Impl rule__QualifiedIdent__Group__1
            {
            pushFollow(FOLLOW_36);
            rule__QualifiedIdent__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QualifiedIdent__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedIdent__Group__0"


    // $ANTLR start "rule__QualifiedIdent__Group__0__Impl"
    // InternalGo.g:9665:1: rule__QualifiedIdent__Group__0__Impl : ( RULE_IDENTIFIER ) ;
    public final void rule__QualifiedIdent__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9669:1: ( ( RULE_IDENTIFIER ) )
            // InternalGo.g:9670:1: ( RULE_IDENTIFIER )
            {
            // InternalGo.g:9670:1: ( RULE_IDENTIFIER )
            // InternalGo.g:9671:2: RULE_IDENTIFIER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedIdentAccess().getIDENTIFIERTerminalRuleCall_0()); 
            }
            match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedIdentAccess().getIDENTIFIERTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedIdent__Group__0__Impl"


    // $ANTLR start "rule__QualifiedIdent__Group__1"
    // InternalGo.g:9680:1: rule__QualifiedIdent__Group__1 : rule__QualifiedIdent__Group__1__Impl rule__QualifiedIdent__Group__2 ;
    public final void rule__QualifiedIdent__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9684:1: ( rule__QualifiedIdent__Group__1__Impl rule__QualifiedIdent__Group__2 )
            // InternalGo.g:9685:2: rule__QualifiedIdent__Group__1__Impl rule__QualifiedIdent__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__QualifiedIdent__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QualifiedIdent__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedIdent__Group__1"


    // $ANTLR start "rule__QualifiedIdent__Group__1__Impl"
    // InternalGo.g:9692:1: rule__QualifiedIdent__Group__1__Impl : ( '.' ) ;
    public final void rule__QualifiedIdent__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9696:1: ( ( '.' ) )
            // InternalGo.g:9697:1: ( '.' )
            {
            // InternalGo.g:9697:1: ( '.' )
            // InternalGo.g:9698:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedIdent__Group__1__Impl"


    // $ANTLR start "rule__QualifiedIdent__Group__2"
    // InternalGo.g:9707:1: rule__QualifiedIdent__Group__2 : rule__QualifiedIdent__Group__2__Impl ;
    public final void rule__QualifiedIdent__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9711:1: ( rule__QualifiedIdent__Group__2__Impl )
            // InternalGo.g:9712:2: rule__QualifiedIdent__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QualifiedIdent__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedIdent__Group__2"


    // $ANTLR start "rule__QualifiedIdent__Group__2__Impl"
    // InternalGo.g:9718:1: rule__QualifiedIdent__Group__2__Impl : ( RULE_IDENTIFIER ) ;
    public final void rule__QualifiedIdent__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9722:1: ( ( RULE_IDENTIFIER ) )
            // InternalGo.g:9723:1: ( RULE_IDENTIFIER )
            {
            // InternalGo.g:9723:1: ( RULE_IDENTIFIER )
            // InternalGo.g:9724:2: RULE_IDENTIFIER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQualifiedIdentAccess().getIDENTIFIERTerminalRuleCall_2()); 
            }
            match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQualifiedIdentAccess().getIDENTIFIERTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QualifiedIdent__Group__2__Impl"


    // $ANTLR start "rule__CompositeLit__Group__0"
    // InternalGo.g:9734:1: rule__CompositeLit__Group__0 : rule__CompositeLit__Group__0__Impl rule__CompositeLit__Group__1 ;
    public final void rule__CompositeLit__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9738:1: ( rule__CompositeLit__Group__0__Impl rule__CompositeLit__Group__1 )
            // InternalGo.g:9739:2: rule__CompositeLit__Group__0__Impl rule__CompositeLit__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__CompositeLit__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CompositeLit__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompositeLit__Group__0"


    // $ANTLR start "rule__CompositeLit__Group__0__Impl"
    // InternalGo.g:9746:1: rule__CompositeLit__Group__0__Impl : ( ( rule__CompositeLit__LiteralTypeAssignment_0 ) ) ;
    public final void rule__CompositeLit__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9750:1: ( ( ( rule__CompositeLit__LiteralTypeAssignment_0 ) ) )
            // InternalGo.g:9751:1: ( ( rule__CompositeLit__LiteralTypeAssignment_0 ) )
            {
            // InternalGo.g:9751:1: ( ( rule__CompositeLit__LiteralTypeAssignment_0 ) )
            // InternalGo.g:9752:2: ( rule__CompositeLit__LiteralTypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompositeLitAccess().getLiteralTypeAssignment_0()); 
            }
            // InternalGo.g:9753:2: ( rule__CompositeLit__LiteralTypeAssignment_0 )
            // InternalGo.g:9753:3: rule__CompositeLit__LiteralTypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__CompositeLit__LiteralTypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompositeLitAccess().getLiteralTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompositeLit__Group__0__Impl"


    // $ANTLR start "rule__CompositeLit__Group__1"
    // InternalGo.g:9761:1: rule__CompositeLit__Group__1 : rule__CompositeLit__Group__1__Impl ;
    public final void rule__CompositeLit__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9765:1: ( rule__CompositeLit__Group__1__Impl )
            // InternalGo.g:9766:2: rule__CompositeLit__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CompositeLit__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompositeLit__Group__1"


    // $ANTLR start "rule__CompositeLit__Group__1__Impl"
    // InternalGo.g:9772:1: rule__CompositeLit__Group__1__Impl : ( ( rule__CompositeLit__LiteralValueAssignment_1 ) ) ;
    public final void rule__CompositeLit__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9776:1: ( ( ( rule__CompositeLit__LiteralValueAssignment_1 ) ) )
            // InternalGo.g:9777:1: ( ( rule__CompositeLit__LiteralValueAssignment_1 ) )
            {
            // InternalGo.g:9777:1: ( ( rule__CompositeLit__LiteralValueAssignment_1 ) )
            // InternalGo.g:9778:2: ( rule__CompositeLit__LiteralValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompositeLitAccess().getLiteralValueAssignment_1()); 
            }
            // InternalGo.g:9779:2: ( rule__CompositeLit__LiteralValueAssignment_1 )
            // InternalGo.g:9779:3: rule__CompositeLit__LiteralValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__CompositeLit__LiteralValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompositeLitAccess().getLiteralValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompositeLit__Group__1__Impl"


    // $ANTLR start "rule__LiteralType__Group_2__0"
    // InternalGo.g:9788:1: rule__LiteralType__Group_2__0 : rule__LiteralType__Group_2__0__Impl rule__LiteralType__Group_2__1 ;
    public final void rule__LiteralType__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9792:1: ( rule__LiteralType__Group_2__0__Impl rule__LiteralType__Group_2__1 )
            // InternalGo.g:9793:2: rule__LiteralType__Group_2__0__Impl rule__LiteralType__Group_2__1
            {
            pushFollow(FOLLOW_48);
            rule__LiteralType__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LiteralType__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralType__Group_2__0"


    // $ANTLR start "rule__LiteralType__Group_2__0__Impl"
    // InternalGo.g:9800:1: rule__LiteralType__Group_2__0__Impl : ( '[' ) ;
    public final void rule__LiteralType__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9804:1: ( ( '[' ) )
            // InternalGo.g:9805:1: ( '[' )
            {
            // InternalGo.g:9805:1: ( '[' )
            // InternalGo.g:9806:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_2_0()); 
            }
            match(input,90,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralType__Group_2__0__Impl"


    // $ANTLR start "rule__LiteralType__Group_2__1"
    // InternalGo.g:9815:1: rule__LiteralType__Group_2__1 : rule__LiteralType__Group_2__1__Impl rule__LiteralType__Group_2__2 ;
    public final void rule__LiteralType__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9819:1: ( rule__LiteralType__Group_2__1__Impl rule__LiteralType__Group_2__2 )
            // InternalGo.g:9820:2: rule__LiteralType__Group_2__1__Impl rule__LiteralType__Group_2__2
            {
            pushFollow(FOLLOW_41);
            rule__LiteralType__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LiteralType__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralType__Group_2__1"


    // $ANTLR start "rule__LiteralType__Group_2__1__Impl"
    // InternalGo.g:9827:1: rule__LiteralType__Group_2__1__Impl : ( '...' ) ;
    public final void rule__LiteralType__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9831:1: ( ( '...' ) )
            // InternalGo.g:9832:1: ( '...' )
            {
            // InternalGo.g:9832:1: ( '...' )
            // InternalGo.g:9833:2: '...'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralTypeAccess().getFullStopFullStopFullStopKeyword_2_1()); 
            }
            match(input,94,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralTypeAccess().getFullStopFullStopFullStopKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralType__Group_2__1__Impl"


    // $ANTLR start "rule__LiteralType__Group_2__2"
    // InternalGo.g:9842:1: rule__LiteralType__Group_2__2 : rule__LiteralType__Group_2__2__Impl rule__LiteralType__Group_2__3 ;
    public final void rule__LiteralType__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9846:1: ( rule__LiteralType__Group_2__2__Impl rule__LiteralType__Group_2__3 )
            // InternalGo.g:9847:2: rule__LiteralType__Group_2__2__Impl rule__LiteralType__Group_2__3
            {
            pushFollow(FOLLOW_19);
            rule__LiteralType__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LiteralType__Group_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralType__Group_2__2"


    // $ANTLR start "rule__LiteralType__Group_2__2__Impl"
    // InternalGo.g:9854:1: rule__LiteralType__Group_2__2__Impl : ( ']' ) ;
    public final void rule__LiteralType__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9858:1: ( ( ']' ) )
            // InternalGo.g:9859:1: ( ']' )
            {
            // InternalGo.g:9859:1: ( ']' )
            // InternalGo.g:9860:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralTypeAccess().getRightSquareBracketKeyword_2_2()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralTypeAccess().getRightSquareBracketKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralType__Group_2__2__Impl"


    // $ANTLR start "rule__LiteralType__Group_2__3"
    // InternalGo.g:9869:1: rule__LiteralType__Group_2__3 : rule__LiteralType__Group_2__3__Impl ;
    public final void rule__LiteralType__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9873:1: ( rule__LiteralType__Group_2__3__Impl )
            // InternalGo.g:9874:2: rule__LiteralType__Group_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralType__Group_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralType__Group_2__3"


    // $ANTLR start "rule__LiteralType__Group_2__3__Impl"
    // InternalGo.g:9880:1: rule__LiteralType__Group_2__3__Impl : ( ( rule__LiteralType__ElementTypeAssignment_2_3 ) ) ;
    public final void rule__LiteralType__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9884:1: ( ( ( rule__LiteralType__ElementTypeAssignment_2_3 ) ) )
            // InternalGo.g:9885:1: ( ( rule__LiteralType__ElementTypeAssignment_2_3 ) )
            {
            // InternalGo.g:9885:1: ( ( rule__LiteralType__ElementTypeAssignment_2_3 ) )
            // InternalGo.g:9886:2: ( rule__LiteralType__ElementTypeAssignment_2_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralTypeAccess().getElementTypeAssignment_2_3()); 
            }
            // InternalGo.g:9887:2: ( rule__LiteralType__ElementTypeAssignment_2_3 )
            // InternalGo.g:9887:3: rule__LiteralType__ElementTypeAssignment_2_3
            {
            pushFollow(FOLLOW_2);
            rule__LiteralType__ElementTypeAssignment_2_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralTypeAccess().getElementTypeAssignment_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralType__Group_2__3__Impl"


    // $ANTLR start "rule__LiteralValue__Group__0"
    // InternalGo.g:9896:1: rule__LiteralValue__Group__0 : rule__LiteralValue__Group__0__Impl rule__LiteralValue__Group__1 ;
    public final void rule__LiteralValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9900:1: ( rule__LiteralValue__Group__0__Impl rule__LiteralValue__Group__1 )
            // InternalGo.g:9901:2: rule__LiteralValue__Group__0__Impl rule__LiteralValue__Group__1
            {
            pushFollow(FOLLOW_49);
            rule__LiteralValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LiteralValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralValue__Group__0"


    // $ANTLR start "rule__LiteralValue__Group__0__Impl"
    // InternalGo.g:9908:1: rule__LiteralValue__Group__0__Impl : ( '{' ) ;
    public final void rule__LiteralValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9912:1: ( ( '{' ) )
            // InternalGo.g:9913:1: ( '{' )
            {
            // InternalGo.g:9913:1: ( '{' )
            // InternalGo.g:9914:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_0()); 
            }
            match(input,73,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralValue__Group__0__Impl"


    // $ANTLR start "rule__LiteralValue__Group__1"
    // InternalGo.g:9923:1: rule__LiteralValue__Group__1 : rule__LiteralValue__Group__1__Impl rule__LiteralValue__Group__2 ;
    public final void rule__LiteralValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9927:1: ( rule__LiteralValue__Group__1__Impl rule__LiteralValue__Group__2 )
            // InternalGo.g:9928:2: rule__LiteralValue__Group__1__Impl rule__LiteralValue__Group__2
            {
            pushFollow(FOLLOW_49);
            rule__LiteralValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LiteralValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralValue__Group__1"


    // $ANTLR start "rule__LiteralValue__Group__1__Impl"
    // InternalGo.g:9935:1: rule__LiteralValue__Group__1__Impl : ( ( rule__LiteralValue__Group_1__0 )? ) ;
    public final void rule__LiteralValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9939:1: ( ( ( rule__LiteralValue__Group_1__0 )? ) )
            // InternalGo.g:9940:1: ( ( rule__LiteralValue__Group_1__0 )? )
            {
            // InternalGo.g:9940:1: ( ( rule__LiteralValue__Group_1__0 )? )
            // InternalGo.g:9941:2: ( rule__LiteralValue__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralValueAccess().getGroup_1()); 
            }
            // InternalGo.g:9942:2: ( rule__LiteralValue__Group_1__0 )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==RULE_STRING_LIT||(LA92_0>=RULE_IDENTIFIER && LA92_0<=RULE_BINARY_OP)||LA92_0==45||(LA92_0>=48 && LA92_0<=49)||(LA92_0>=51 && LA92_0<=52)||LA92_0==57||(LA92_0>=60 && LA92_0<=62)||LA92_0==65||LA92_0==69||LA92_0==71||LA92_0==73||LA92_0==76||LA92_0==90||(LA92_0>=92 && LA92_0<=93)||LA92_0==95) ) {
                alt92=1;
            }
            else if ( (LA92_0==74) ) {
                int LA92_2 = input.LA(2);

                if ( (synpred153_InternalGo()) ) {
                    alt92=1;
                }
            }
            switch (alt92) {
                case 1 :
                    // InternalGo.g:9942:3: rule__LiteralValue__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LiteralValue__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralValueAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralValue__Group__1__Impl"


    // $ANTLR start "rule__LiteralValue__Group__2"
    // InternalGo.g:9950:1: rule__LiteralValue__Group__2 : rule__LiteralValue__Group__2__Impl ;
    public final void rule__LiteralValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9954:1: ( rule__LiteralValue__Group__2__Impl )
            // InternalGo.g:9955:2: rule__LiteralValue__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralValue__Group__2"


    // $ANTLR start "rule__LiteralValue__Group__2__Impl"
    // InternalGo.g:9961:1: rule__LiteralValue__Group__2__Impl : ( '}' ) ;
    public final void rule__LiteralValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9965:1: ( ( '}' ) )
            // InternalGo.g:9966:1: ( '}' )
            {
            // InternalGo.g:9966:1: ( '}' )
            // InternalGo.g:9967:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_2()); 
            }
            match(input,74,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralValue__Group__2__Impl"


    // $ANTLR start "rule__LiteralValue__Group_1__0"
    // InternalGo.g:9977:1: rule__LiteralValue__Group_1__0 : rule__LiteralValue__Group_1__0__Impl rule__LiteralValue__Group_1__1 ;
    public final void rule__LiteralValue__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9981:1: ( rule__LiteralValue__Group_1__0__Impl rule__LiteralValue__Group_1__1 )
            // InternalGo.g:9982:2: rule__LiteralValue__Group_1__0__Impl rule__LiteralValue__Group_1__1
            {
            pushFollow(FOLLOW_17);
            rule__LiteralValue__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LiteralValue__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralValue__Group_1__0"


    // $ANTLR start "rule__LiteralValue__Group_1__0__Impl"
    // InternalGo.g:9989:1: rule__LiteralValue__Group_1__0__Impl : ( ( rule__LiteralValue__ElementListAssignment_1_0 ) ) ;
    public final void rule__LiteralValue__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:9993:1: ( ( ( rule__LiteralValue__ElementListAssignment_1_0 ) ) )
            // InternalGo.g:9994:1: ( ( rule__LiteralValue__ElementListAssignment_1_0 ) )
            {
            // InternalGo.g:9994:1: ( ( rule__LiteralValue__ElementListAssignment_1_0 ) )
            // InternalGo.g:9995:2: ( rule__LiteralValue__ElementListAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralValueAccess().getElementListAssignment_1_0()); 
            }
            // InternalGo.g:9996:2: ( rule__LiteralValue__ElementListAssignment_1_0 )
            // InternalGo.g:9996:3: rule__LiteralValue__ElementListAssignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__LiteralValue__ElementListAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralValueAccess().getElementListAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralValue__Group_1__0__Impl"


    // $ANTLR start "rule__LiteralValue__Group_1__1"
    // InternalGo.g:10004:1: rule__LiteralValue__Group_1__1 : rule__LiteralValue__Group_1__1__Impl ;
    public final void rule__LiteralValue__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10008:1: ( rule__LiteralValue__Group_1__1__Impl )
            // InternalGo.g:10009:2: rule__LiteralValue__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LiteralValue__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralValue__Group_1__1"


    // $ANTLR start "rule__LiteralValue__Group_1__1__Impl"
    // InternalGo.g:10015:1: rule__LiteralValue__Group_1__1__Impl : ( ( ',' )? ) ;
    public final void rule__LiteralValue__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10019:1: ( ( ( ',' )? ) )
            // InternalGo.g:10020:1: ( ( ',' )? )
            {
            // InternalGo.g:10020:1: ( ( ',' )? )
            // InternalGo.g:10021:2: ( ',' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralValueAccess().getCommaKeyword_1_1()); 
            }
            // InternalGo.g:10022:2: ( ',' )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==69) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalGo.g:10022:3: ','
                    {
                    match(input,69,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralValueAccess().getCommaKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralValue__Group_1__1__Impl"


    // $ANTLR start "rule__ElementList__Group__0"
    // InternalGo.g:10031:1: rule__ElementList__Group__0 : rule__ElementList__Group__0__Impl rule__ElementList__Group__1 ;
    public final void rule__ElementList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10035:1: ( rule__ElementList__Group__0__Impl rule__ElementList__Group__1 )
            // InternalGo.g:10036:2: rule__ElementList__Group__0__Impl rule__ElementList__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__ElementList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ElementList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElementList__Group__0"


    // $ANTLR start "rule__ElementList__Group__0__Impl"
    // InternalGo.g:10043:1: rule__ElementList__Group__0__Impl : ( ( rule__ElementList__KeyedElementAssignment_0 ) ) ;
    public final void rule__ElementList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10047:1: ( ( ( rule__ElementList__KeyedElementAssignment_0 ) ) )
            // InternalGo.g:10048:1: ( ( rule__ElementList__KeyedElementAssignment_0 ) )
            {
            // InternalGo.g:10048:1: ( ( rule__ElementList__KeyedElementAssignment_0 ) )
            // InternalGo.g:10049:2: ( rule__ElementList__KeyedElementAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElementListAccess().getKeyedElementAssignment_0()); 
            }
            // InternalGo.g:10050:2: ( rule__ElementList__KeyedElementAssignment_0 )
            // InternalGo.g:10050:3: rule__ElementList__KeyedElementAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ElementList__KeyedElementAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getElementListAccess().getKeyedElementAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElementList__Group__0__Impl"


    // $ANTLR start "rule__ElementList__Group__1"
    // InternalGo.g:10058:1: rule__ElementList__Group__1 : rule__ElementList__Group__1__Impl ;
    public final void rule__ElementList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10062:1: ( rule__ElementList__Group__1__Impl )
            // InternalGo.g:10063:2: rule__ElementList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ElementList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElementList__Group__1"


    // $ANTLR start "rule__ElementList__Group__1__Impl"
    // InternalGo.g:10069:1: rule__ElementList__Group__1__Impl : ( ( rule__ElementList__Group_1__0 )* ) ;
    public final void rule__ElementList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10073:1: ( ( ( rule__ElementList__Group_1__0 )* ) )
            // InternalGo.g:10074:1: ( ( rule__ElementList__Group_1__0 )* )
            {
            // InternalGo.g:10074:1: ( ( rule__ElementList__Group_1__0 )* )
            // InternalGo.g:10075:2: ( rule__ElementList__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElementListAccess().getGroup_1()); 
            }
            // InternalGo.g:10076:2: ( rule__ElementList__Group_1__0 )*
            loop94:
            do {
                int alt94=2;
                int LA94_0 = input.LA(1);

                if ( (LA94_0==69) ) {
                    int LA94_2 = input.LA(2);

                    if ( (synpred155_InternalGo()) ) {
                        alt94=1;
                    }


                }


                switch (alt94) {
            	case 1 :
            	    // InternalGo.g:10076:3: rule__ElementList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_18);
            	    rule__ElementList__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getElementListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElementList__Group__1__Impl"


    // $ANTLR start "rule__ElementList__Group_1__0"
    // InternalGo.g:10085:1: rule__ElementList__Group_1__0 : rule__ElementList__Group_1__0__Impl rule__ElementList__Group_1__1 ;
    public final void rule__ElementList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10089:1: ( rule__ElementList__Group_1__0__Impl rule__ElementList__Group_1__1 )
            // InternalGo.g:10090:2: rule__ElementList__Group_1__0__Impl rule__ElementList__Group_1__1
            {
            pushFollow(FOLLOW_50);
            rule__ElementList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ElementList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElementList__Group_1__0"


    // $ANTLR start "rule__ElementList__Group_1__0__Impl"
    // InternalGo.g:10097:1: rule__ElementList__Group_1__0__Impl : ( ',' ) ;
    public final void rule__ElementList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10101:1: ( ( ',' ) )
            // InternalGo.g:10102:1: ( ',' )
            {
            // InternalGo.g:10102:1: ( ',' )
            // InternalGo.g:10103:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElementListAccess().getCommaKeyword_1_0()); 
            }
            match(input,69,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElementListAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElementList__Group_1__0__Impl"


    // $ANTLR start "rule__ElementList__Group_1__1"
    // InternalGo.g:10112:1: rule__ElementList__Group_1__1 : rule__ElementList__Group_1__1__Impl ;
    public final void rule__ElementList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10116:1: ( rule__ElementList__Group_1__1__Impl )
            // InternalGo.g:10117:2: rule__ElementList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ElementList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElementList__Group_1__1"


    // $ANTLR start "rule__ElementList__Group_1__1__Impl"
    // InternalGo.g:10123:1: rule__ElementList__Group_1__1__Impl : ( ( rule__ElementList__KeyedElementAssignment_1_1 ) ) ;
    public final void rule__ElementList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10127:1: ( ( ( rule__ElementList__KeyedElementAssignment_1_1 ) ) )
            // InternalGo.g:10128:1: ( ( rule__ElementList__KeyedElementAssignment_1_1 ) )
            {
            // InternalGo.g:10128:1: ( ( rule__ElementList__KeyedElementAssignment_1_1 ) )
            // InternalGo.g:10129:2: ( rule__ElementList__KeyedElementAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElementListAccess().getKeyedElementAssignment_1_1()); 
            }
            // InternalGo.g:10130:2: ( rule__ElementList__KeyedElementAssignment_1_1 )
            // InternalGo.g:10130:3: rule__ElementList__KeyedElementAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ElementList__KeyedElementAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getElementListAccess().getKeyedElementAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElementList__Group_1__1__Impl"


    // $ANTLR start "rule__KeyedElement__Group__0"
    // InternalGo.g:10139:1: rule__KeyedElement__Group__0 : rule__KeyedElement__Group__0__Impl rule__KeyedElement__Group__1 ;
    public final void rule__KeyedElement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10143:1: ( rule__KeyedElement__Group__0__Impl rule__KeyedElement__Group__1 )
            // InternalGo.g:10144:2: rule__KeyedElement__Group__0__Impl rule__KeyedElement__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__KeyedElement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__KeyedElement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyedElement__Group__0"


    // $ANTLR start "rule__KeyedElement__Group__0__Impl"
    // InternalGo.g:10151:1: rule__KeyedElement__Group__0__Impl : ( ( rule__KeyedElement__Group_0__0 )? ) ;
    public final void rule__KeyedElement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10155:1: ( ( ( rule__KeyedElement__Group_0__0 )? ) )
            // InternalGo.g:10156:1: ( ( rule__KeyedElement__Group_0__0 )? )
            {
            // InternalGo.g:10156:1: ( ( rule__KeyedElement__Group_0__0 )? )
            // InternalGo.g:10157:2: ( rule__KeyedElement__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyedElementAccess().getGroup_0()); 
            }
            // InternalGo.g:10158:2: ( rule__KeyedElement__Group_0__0 )?
            int alt95=2;
            alt95 = dfa95.predict(input);
            switch (alt95) {
                case 1 :
                    // InternalGo.g:10158:3: rule__KeyedElement__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__KeyedElement__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyedElementAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyedElement__Group__0__Impl"


    // $ANTLR start "rule__KeyedElement__Group__1"
    // InternalGo.g:10166:1: rule__KeyedElement__Group__1 : rule__KeyedElement__Group__1__Impl ;
    public final void rule__KeyedElement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10170:1: ( rule__KeyedElement__Group__1__Impl )
            // InternalGo.g:10171:2: rule__KeyedElement__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__KeyedElement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyedElement__Group__1"


    // $ANTLR start "rule__KeyedElement__Group__1__Impl"
    // InternalGo.g:10177:1: rule__KeyedElement__Group__1__Impl : ( ( rule__KeyedElement__ElementAssignment_1 ) ) ;
    public final void rule__KeyedElement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10181:1: ( ( ( rule__KeyedElement__ElementAssignment_1 ) ) )
            // InternalGo.g:10182:1: ( ( rule__KeyedElement__ElementAssignment_1 ) )
            {
            // InternalGo.g:10182:1: ( ( rule__KeyedElement__ElementAssignment_1 ) )
            // InternalGo.g:10183:2: ( rule__KeyedElement__ElementAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyedElementAccess().getElementAssignment_1()); 
            }
            // InternalGo.g:10184:2: ( rule__KeyedElement__ElementAssignment_1 )
            // InternalGo.g:10184:3: rule__KeyedElement__ElementAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__KeyedElement__ElementAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyedElementAccess().getElementAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyedElement__Group__1__Impl"


    // $ANTLR start "rule__KeyedElement__Group_0__0"
    // InternalGo.g:10193:1: rule__KeyedElement__Group_0__0 : rule__KeyedElement__Group_0__0__Impl rule__KeyedElement__Group_0__1 ;
    public final void rule__KeyedElement__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10197:1: ( rule__KeyedElement__Group_0__0__Impl rule__KeyedElement__Group_0__1 )
            // InternalGo.g:10198:2: rule__KeyedElement__Group_0__0__Impl rule__KeyedElement__Group_0__1
            {
            pushFollow(FOLLOW_29);
            rule__KeyedElement__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__KeyedElement__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyedElement__Group_0__0"


    // $ANTLR start "rule__KeyedElement__Group_0__0__Impl"
    // InternalGo.g:10205:1: rule__KeyedElement__Group_0__0__Impl : ( ( rule__KeyedElement__KeyAssignment_0_0 ) ) ;
    public final void rule__KeyedElement__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10209:1: ( ( ( rule__KeyedElement__KeyAssignment_0_0 ) ) )
            // InternalGo.g:10210:1: ( ( rule__KeyedElement__KeyAssignment_0_0 ) )
            {
            // InternalGo.g:10210:1: ( ( rule__KeyedElement__KeyAssignment_0_0 ) )
            // InternalGo.g:10211:2: ( rule__KeyedElement__KeyAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyedElementAccess().getKeyAssignment_0_0()); 
            }
            // InternalGo.g:10212:2: ( rule__KeyedElement__KeyAssignment_0_0 )
            // InternalGo.g:10212:3: rule__KeyedElement__KeyAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__KeyedElement__KeyAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyedElementAccess().getKeyAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyedElement__Group_0__0__Impl"


    // $ANTLR start "rule__KeyedElement__Group_0__1"
    // InternalGo.g:10220:1: rule__KeyedElement__Group_0__1 : rule__KeyedElement__Group_0__1__Impl ;
    public final void rule__KeyedElement__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10224:1: ( rule__KeyedElement__Group_0__1__Impl )
            // InternalGo.g:10225:2: rule__KeyedElement__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__KeyedElement__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyedElement__Group_0__1"


    // $ANTLR start "rule__KeyedElement__Group_0__1__Impl"
    // InternalGo.g:10231:1: rule__KeyedElement__Group_0__1__Impl : ( ':' ) ;
    public final void rule__KeyedElement__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10235:1: ( ( ':' ) )
            // InternalGo.g:10236:1: ( ':' )
            {
            // InternalGo.g:10236:1: ( ':' )
            // InternalGo.g:10237:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyedElementAccess().getColonKeyword_0_1()); 
            }
            match(input,76,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyedElementAccess().getColonKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyedElement__Group_0__1__Impl"


    // $ANTLR start "rule__StructType__Group__0"
    // InternalGo.g:10247:1: rule__StructType__Group__0 : rule__StructType__Group__0__Impl rule__StructType__Group__1 ;
    public final void rule__StructType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10251:1: ( rule__StructType__Group__0__Impl rule__StructType__Group__1 )
            // InternalGo.g:10252:2: rule__StructType__Group__0__Impl rule__StructType__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__StructType__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__StructType__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StructType__Group__0"


    // $ANTLR start "rule__StructType__Group__0__Impl"
    // InternalGo.g:10259:1: rule__StructType__Group__0__Impl : ( 'struct' ) ;
    public final void rule__StructType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10263:1: ( ( 'struct' ) )
            // InternalGo.g:10264:1: ( 'struct' )
            {
            // InternalGo.g:10264:1: ( 'struct' )
            // InternalGo.g:10265:2: 'struct'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructTypeAccess().getStructKeyword_0()); 
            }
            match(input,95,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructTypeAccess().getStructKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StructType__Group__0__Impl"


    // $ANTLR start "rule__StructType__Group__1"
    // InternalGo.g:10274:1: rule__StructType__Group__1 : rule__StructType__Group__1__Impl rule__StructType__Group__2 ;
    public final void rule__StructType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10278:1: ( rule__StructType__Group__1__Impl rule__StructType__Group__2 )
            // InternalGo.g:10279:2: rule__StructType__Group__1__Impl rule__StructType__Group__2
            {
            pushFollow(FOLLOW_51);
            rule__StructType__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__StructType__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StructType__Group__1"


    // $ANTLR start "rule__StructType__Group__1__Impl"
    // InternalGo.g:10286:1: rule__StructType__Group__1__Impl : ( '{' ) ;
    public final void rule__StructType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10290:1: ( ( '{' ) )
            // InternalGo.g:10291:1: ( '{' )
            {
            // InternalGo.g:10291:1: ( '{' )
            // InternalGo.g:10292:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1()); 
            }
            match(input,73,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StructType__Group__1__Impl"


    // $ANTLR start "rule__StructType__Group__2"
    // InternalGo.g:10301:1: rule__StructType__Group__2 : rule__StructType__Group__2__Impl rule__StructType__Group__3 ;
    public final void rule__StructType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10305:1: ( rule__StructType__Group__2__Impl rule__StructType__Group__3 )
            // InternalGo.g:10306:2: rule__StructType__Group__2__Impl rule__StructType__Group__3
            {
            pushFollow(FOLLOW_51);
            rule__StructType__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__StructType__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StructType__Group__2"


    // $ANTLR start "rule__StructType__Group__2__Impl"
    // InternalGo.g:10313:1: rule__StructType__Group__2__Impl : ( ( rule__StructType__FieldDeclAssignment_2 )* ) ;
    public final void rule__StructType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10317:1: ( ( ( rule__StructType__FieldDeclAssignment_2 )* ) )
            // InternalGo.g:10318:1: ( ( rule__StructType__FieldDeclAssignment_2 )* )
            {
            // InternalGo.g:10318:1: ( ( rule__StructType__FieldDeclAssignment_2 )* )
            // InternalGo.g:10319:2: ( rule__StructType__FieldDeclAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructTypeAccess().getFieldDeclAssignment_2()); 
            }
            // InternalGo.g:10320:2: ( rule__StructType__FieldDeclAssignment_2 )*
            loop96:
            do {
                int alt96=2;
                int LA96_0 = input.LA(1);

                if ( (LA96_0==RULE_IDENTIFIER||LA96_0==52) ) {
                    alt96=1;
                }


                switch (alt96) {
            	case 1 :
            	    // InternalGo.g:10320:3: rule__StructType__FieldDeclAssignment_2
            	    {
            	    pushFollow(FOLLOW_52);
            	    rule__StructType__FieldDeclAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop96;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructTypeAccess().getFieldDeclAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StructType__Group__2__Impl"


    // $ANTLR start "rule__StructType__Group__3"
    // InternalGo.g:10328:1: rule__StructType__Group__3 : rule__StructType__Group__3__Impl ;
    public final void rule__StructType__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10332:1: ( rule__StructType__Group__3__Impl )
            // InternalGo.g:10333:2: rule__StructType__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__StructType__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StructType__Group__3"


    // $ANTLR start "rule__StructType__Group__3__Impl"
    // InternalGo.g:10339:1: rule__StructType__Group__3__Impl : ( '}' ) ;
    public final void rule__StructType__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10343:1: ( ( '}' ) )
            // InternalGo.g:10344:1: ( '}' )
            {
            // InternalGo.g:10344:1: ( '}' )
            // InternalGo.g:10345:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_3()); 
            }
            match(input,74,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StructType__Group__3__Impl"


    // $ANTLR start "rule__FieldDecl__Group__0"
    // InternalGo.g:10355:1: rule__FieldDecl__Group__0 : rule__FieldDecl__Group__0__Impl rule__FieldDecl__Group__1 ;
    public final void rule__FieldDecl__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10359:1: ( rule__FieldDecl__Group__0__Impl rule__FieldDecl__Group__1 )
            // InternalGo.g:10360:2: rule__FieldDecl__Group__0__Impl rule__FieldDecl__Group__1
            {
            pushFollow(FOLLOW_53);
            rule__FieldDecl__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group__0"


    // $ANTLR start "rule__FieldDecl__Group__0__Impl"
    // InternalGo.g:10367:1: rule__FieldDecl__Group__0__Impl : ( ( rule__FieldDecl__Alternatives_0 ) ) ;
    public final void rule__FieldDecl__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10371:1: ( ( ( rule__FieldDecl__Alternatives_0 ) ) )
            // InternalGo.g:10372:1: ( ( rule__FieldDecl__Alternatives_0 ) )
            {
            // InternalGo.g:10372:1: ( ( rule__FieldDecl__Alternatives_0 ) )
            // InternalGo.g:10373:2: ( rule__FieldDecl__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldDeclAccess().getAlternatives_0()); 
            }
            // InternalGo.g:10374:2: ( rule__FieldDecl__Alternatives_0 )
            // InternalGo.g:10374:3: rule__FieldDecl__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldDeclAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group__1"
    // InternalGo.g:10382:1: rule__FieldDecl__Group__1 : rule__FieldDecl__Group__1__Impl ;
    public final void rule__FieldDecl__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10386:1: ( rule__FieldDecl__Group__1__Impl )
            // InternalGo.g:10387:2: rule__FieldDecl__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group__1"


    // $ANTLR start "rule__FieldDecl__Group__1__Impl"
    // InternalGo.g:10393:1: rule__FieldDecl__Group__1__Impl : ( ( RULE_STRING_LIT )? ) ;
    public final void rule__FieldDecl__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10397:1: ( ( ( RULE_STRING_LIT )? ) )
            // InternalGo.g:10398:1: ( ( RULE_STRING_LIT )? )
            {
            // InternalGo.g:10398:1: ( ( RULE_STRING_LIT )? )
            // InternalGo.g:10399:2: ( RULE_STRING_LIT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldDeclAccess().getSTRING_LITTerminalRuleCall_1()); 
            }
            // InternalGo.g:10400:2: ( RULE_STRING_LIT )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==RULE_STRING_LIT) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalGo.g:10400:3: RULE_STRING_LIT
                    {
                    match(input,RULE_STRING_LIT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldDeclAccess().getSTRING_LITTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group__1__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0_0__0"
    // InternalGo.g:10409:1: rule__FieldDecl__Group_0_0__0 : rule__FieldDecl__Group_0_0__0__Impl rule__FieldDecl__Group_0_0__1 ;
    public final void rule__FieldDecl__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10413:1: ( rule__FieldDecl__Group_0_0__0__Impl rule__FieldDecl__Group_0_0__1 )
            // InternalGo.g:10414:2: rule__FieldDecl__Group_0_0__0__Impl rule__FieldDecl__Group_0_0__1
            {
            pushFollow(FOLLOW_19);
            rule__FieldDecl__Group_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0_0__0"


    // $ANTLR start "rule__FieldDecl__Group_0_0__0__Impl"
    // InternalGo.g:10421:1: rule__FieldDecl__Group_0_0__0__Impl : ( ( rule__FieldDecl__IdentifierListAssignment_0_0_0 ) ) ;
    public final void rule__FieldDecl__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10425:1: ( ( ( rule__FieldDecl__IdentifierListAssignment_0_0_0 ) ) )
            // InternalGo.g:10426:1: ( ( rule__FieldDecl__IdentifierListAssignment_0_0_0 ) )
            {
            // InternalGo.g:10426:1: ( ( rule__FieldDecl__IdentifierListAssignment_0_0_0 ) )
            // InternalGo.g:10427:2: ( rule__FieldDecl__IdentifierListAssignment_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldDeclAccess().getIdentifierListAssignment_0_0_0()); 
            }
            // InternalGo.g:10428:2: ( rule__FieldDecl__IdentifierListAssignment_0_0_0 )
            // InternalGo.g:10428:3: rule__FieldDecl__IdentifierListAssignment_0_0_0
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__IdentifierListAssignment_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldDeclAccess().getIdentifierListAssignment_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0_0__0__Impl"


    // $ANTLR start "rule__FieldDecl__Group_0_0__1"
    // InternalGo.g:10436:1: rule__FieldDecl__Group_0_0__1 : rule__FieldDecl__Group_0_0__1__Impl ;
    public final void rule__FieldDecl__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10440:1: ( rule__FieldDecl__Group_0_0__1__Impl )
            // InternalGo.g:10441:2: rule__FieldDecl__Group_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__Group_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0_0__1"


    // $ANTLR start "rule__FieldDecl__Group_0_0__1__Impl"
    // InternalGo.g:10447:1: rule__FieldDecl__Group_0_0__1__Impl : ( ( rule__FieldDecl__TypeAssignment_0_0_1 ) ) ;
    public final void rule__FieldDecl__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10451:1: ( ( ( rule__FieldDecl__TypeAssignment_0_0_1 ) ) )
            // InternalGo.g:10452:1: ( ( rule__FieldDecl__TypeAssignment_0_0_1 ) )
            {
            // InternalGo.g:10452:1: ( ( rule__FieldDecl__TypeAssignment_0_0_1 ) )
            // InternalGo.g:10453:2: ( rule__FieldDecl__TypeAssignment_0_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldDeclAccess().getTypeAssignment_0_0_1()); 
            }
            // InternalGo.g:10454:2: ( rule__FieldDecl__TypeAssignment_0_0_1 )
            // InternalGo.g:10454:3: rule__FieldDecl__TypeAssignment_0_0_1
            {
            pushFollow(FOLLOW_2);
            rule__FieldDecl__TypeAssignment_0_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldDeclAccess().getTypeAssignment_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__Group_0_0__1__Impl"


    // $ANTLR start "rule__AnonymousField__Group__0"
    // InternalGo.g:10463:1: rule__AnonymousField__Group__0 : rule__AnonymousField__Group__0__Impl rule__AnonymousField__Group__1 ;
    public final void rule__AnonymousField__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10467:1: ( rule__AnonymousField__Group__0__Impl rule__AnonymousField__Group__1 )
            // InternalGo.g:10468:2: rule__AnonymousField__Group__0__Impl rule__AnonymousField__Group__1
            {
            pushFollow(FOLLOW_54);
            rule__AnonymousField__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnonymousField__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnonymousField__Group__0"


    // $ANTLR start "rule__AnonymousField__Group__0__Impl"
    // InternalGo.g:10475:1: rule__AnonymousField__Group__0__Impl : ( ( '*' )? ) ;
    public final void rule__AnonymousField__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10479:1: ( ( ( '*' )? ) )
            // InternalGo.g:10480:1: ( ( '*' )? )
            {
            // InternalGo.g:10480:1: ( ( '*' )? )
            // InternalGo.g:10481:2: ( '*' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnonymousFieldAccess().getAsteriskKeyword_0()); 
            }
            // InternalGo.g:10482:2: ( '*' )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==52) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalGo.g:10482:3: '*'
                    {
                    match(input,52,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnonymousFieldAccess().getAsteriskKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnonymousField__Group__0__Impl"


    // $ANTLR start "rule__AnonymousField__Group__1"
    // InternalGo.g:10490:1: rule__AnonymousField__Group__1 : rule__AnonymousField__Group__1__Impl ;
    public final void rule__AnonymousField__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10494:1: ( rule__AnonymousField__Group__1__Impl )
            // InternalGo.g:10495:2: rule__AnonymousField__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnonymousField__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnonymousField__Group__1"


    // $ANTLR start "rule__AnonymousField__Group__1__Impl"
    // InternalGo.g:10501:1: rule__AnonymousField__Group__1__Impl : ( ( rule__AnonymousField__TypeNameAssignment_1 ) ) ;
    public final void rule__AnonymousField__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10505:1: ( ( ( rule__AnonymousField__TypeNameAssignment_1 ) ) )
            // InternalGo.g:10506:1: ( ( rule__AnonymousField__TypeNameAssignment_1 ) )
            {
            // InternalGo.g:10506:1: ( ( rule__AnonymousField__TypeNameAssignment_1 ) )
            // InternalGo.g:10507:2: ( rule__AnonymousField__TypeNameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnonymousFieldAccess().getTypeNameAssignment_1()); 
            }
            // InternalGo.g:10508:2: ( rule__AnonymousField__TypeNameAssignment_1 )
            // InternalGo.g:10508:3: rule__AnonymousField__TypeNameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__AnonymousField__TypeNameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnonymousFieldAccess().getTypeNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnonymousField__Group__1__Impl"


    // $ANTLR start "rule__FunctionLit__Group__0"
    // InternalGo.g:10517:1: rule__FunctionLit__Group__0 : rule__FunctionLit__Group__0__Impl rule__FunctionLit__Group__1 ;
    public final void rule__FunctionLit__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10521:1: ( rule__FunctionLit__Group__0__Impl rule__FunctionLit__Group__1 )
            // InternalGo.g:10522:2: rule__FunctionLit__Group__0__Impl rule__FunctionLit__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__FunctionLit__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionLit__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionLit__Group__0"


    // $ANTLR start "rule__FunctionLit__Group__0__Impl"
    // InternalGo.g:10529:1: rule__FunctionLit__Group__0__Impl : ( 'func' ) ;
    public final void rule__FunctionLit__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10533:1: ( ( 'func' ) )
            // InternalGo.g:10534:1: ( 'func' )
            {
            // InternalGo.g:10534:1: ( 'func' )
            // InternalGo.g:10535:2: 'func'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionLitAccess().getFuncKeyword_0()); 
            }
            match(input,71,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionLitAccess().getFuncKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionLit__Group__0__Impl"


    // $ANTLR start "rule__FunctionLit__Group__1"
    // InternalGo.g:10544:1: rule__FunctionLit__Group__1 : rule__FunctionLit__Group__1__Impl ;
    public final void rule__FunctionLit__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10548:1: ( rule__FunctionLit__Group__1__Impl )
            // InternalGo.g:10549:2: rule__FunctionLit__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionLit__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionLit__Group__1"


    // $ANTLR start "rule__FunctionLit__Group__1__Impl"
    // InternalGo.g:10555:1: rule__FunctionLit__Group__1__Impl : ( ( rule__FunctionLit__FunctionAssignment_1 ) ) ;
    public final void rule__FunctionLit__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10559:1: ( ( ( rule__FunctionLit__FunctionAssignment_1 ) ) )
            // InternalGo.g:10560:1: ( ( rule__FunctionLit__FunctionAssignment_1 ) )
            {
            // InternalGo.g:10560:1: ( ( rule__FunctionLit__FunctionAssignment_1 ) )
            // InternalGo.g:10561:2: ( rule__FunctionLit__FunctionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionLitAccess().getFunctionAssignment_1()); 
            }
            // InternalGo.g:10562:2: ( rule__FunctionLit__FunctionAssignment_1 )
            // InternalGo.g:10562:3: rule__FunctionLit__FunctionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FunctionLit__FunctionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionLitAccess().getFunctionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionLit__Group__1__Impl"


    // $ANTLR start "rule__PrimaryExprSelector__Group__0"
    // InternalGo.g:10571:1: rule__PrimaryExprSelector__Group__0 : rule__PrimaryExprSelector__Group__0__Impl rule__PrimaryExprSelector__Group__1 ;
    public final void rule__PrimaryExprSelector__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10575:1: ( rule__PrimaryExprSelector__Group__0__Impl rule__PrimaryExprSelector__Group__1 )
            // InternalGo.g:10576:2: rule__PrimaryExprSelector__Group__0__Impl rule__PrimaryExprSelector__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__PrimaryExprSelector__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryExprSelector__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprSelector__Group__0"


    // $ANTLR start "rule__PrimaryExprSelector__Group__0__Impl"
    // InternalGo.g:10583:1: rule__PrimaryExprSelector__Group__0__Impl : ( ( rule__PrimaryExprSelector__PrimaryExprStuffAssignment_0 ) ) ;
    public final void rule__PrimaryExprSelector__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10587:1: ( ( ( rule__PrimaryExprSelector__PrimaryExprStuffAssignment_0 ) ) )
            // InternalGo.g:10588:1: ( ( rule__PrimaryExprSelector__PrimaryExprStuffAssignment_0 ) )
            {
            // InternalGo.g:10588:1: ( ( rule__PrimaryExprSelector__PrimaryExprStuffAssignment_0 ) )
            // InternalGo.g:10589:2: ( rule__PrimaryExprSelector__PrimaryExprStuffAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprStuffAssignment_0()); 
            }
            // InternalGo.g:10590:2: ( rule__PrimaryExprSelector__PrimaryExprStuffAssignment_0 )
            // InternalGo.g:10590:3: rule__PrimaryExprSelector__PrimaryExprStuffAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExprSelector__PrimaryExprStuffAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprStuffAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprSelector__Group__0__Impl"


    // $ANTLR start "rule__PrimaryExprSelector__Group__1"
    // InternalGo.g:10598:1: rule__PrimaryExprSelector__Group__1 : rule__PrimaryExprSelector__Group__1__Impl ;
    public final void rule__PrimaryExprSelector__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10602:1: ( rule__PrimaryExprSelector__Group__1__Impl )
            // InternalGo.g:10603:2: rule__PrimaryExprSelector__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExprSelector__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprSelector__Group__1"


    // $ANTLR start "rule__PrimaryExprSelector__Group__1__Impl"
    // InternalGo.g:10609:1: rule__PrimaryExprSelector__Group__1__Impl : ( ( rule__PrimaryExprSelector__PrimaryExprSelectorAssignment_1 ) ) ;
    public final void rule__PrimaryExprSelector__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10613:1: ( ( ( rule__PrimaryExprSelector__PrimaryExprSelectorAssignment_1 ) ) )
            // InternalGo.g:10614:1: ( ( rule__PrimaryExprSelector__PrimaryExprSelectorAssignment_1 ) )
            {
            // InternalGo.g:10614:1: ( ( rule__PrimaryExprSelector__PrimaryExprSelectorAssignment_1 ) )
            // InternalGo.g:10615:2: ( rule__PrimaryExprSelector__PrimaryExprSelectorAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprSelectorAssignment_1()); 
            }
            // InternalGo.g:10616:2: ( rule__PrimaryExprSelector__PrimaryExprSelectorAssignment_1 )
            // InternalGo.g:10616:3: rule__PrimaryExprSelector__PrimaryExprSelectorAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExprSelector__PrimaryExprSelectorAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprSelectorAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprSelector__Group__1__Impl"


    // $ANTLR start "rule__PrimaryExprIndex__Group__0"
    // InternalGo.g:10625:1: rule__PrimaryExprIndex__Group__0 : rule__PrimaryExprIndex__Group__0__Impl rule__PrimaryExprIndex__Group__1 ;
    public final void rule__PrimaryExprIndex__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10629:1: ( rule__PrimaryExprIndex__Group__0__Impl rule__PrimaryExprIndex__Group__1 )
            // InternalGo.g:10630:2: rule__PrimaryExprIndex__Group__0__Impl rule__PrimaryExprIndex__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__PrimaryExprIndex__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryExprIndex__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprIndex__Group__0"


    // $ANTLR start "rule__PrimaryExprIndex__Group__0__Impl"
    // InternalGo.g:10637:1: rule__PrimaryExprIndex__Group__0__Impl : ( ( rule__PrimaryExprIndex__PrimaryExprStuffAssignment_0 ) ) ;
    public final void rule__PrimaryExprIndex__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10641:1: ( ( ( rule__PrimaryExprIndex__PrimaryExprStuffAssignment_0 ) ) )
            // InternalGo.g:10642:1: ( ( rule__PrimaryExprIndex__PrimaryExprStuffAssignment_0 ) )
            {
            // InternalGo.g:10642:1: ( ( rule__PrimaryExprIndex__PrimaryExprStuffAssignment_0 ) )
            // InternalGo.g:10643:2: ( rule__PrimaryExprIndex__PrimaryExprStuffAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprStuffAssignment_0()); 
            }
            // InternalGo.g:10644:2: ( rule__PrimaryExprIndex__PrimaryExprStuffAssignment_0 )
            // InternalGo.g:10644:3: rule__PrimaryExprIndex__PrimaryExprStuffAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExprIndex__PrimaryExprStuffAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprStuffAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprIndex__Group__0__Impl"


    // $ANTLR start "rule__PrimaryExprIndex__Group__1"
    // InternalGo.g:10652:1: rule__PrimaryExprIndex__Group__1 : rule__PrimaryExprIndex__Group__1__Impl ;
    public final void rule__PrimaryExprIndex__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10656:1: ( rule__PrimaryExprIndex__Group__1__Impl )
            // InternalGo.g:10657:2: rule__PrimaryExprIndex__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExprIndex__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprIndex__Group__1"


    // $ANTLR start "rule__PrimaryExprIndex__Group__1__Impl"
    // InternalGo.g:10663:1: rule__PrimaryExprIndex__Group__1__Impl : ( ( rule__PrimaryExprIndex__PrimaryExprIndexAssignment_1 ) ) ;
    public final void rule__PrimaryExprIndex__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10667:1: ( ( ( rule__PrimaryExprIndex__PrimaryExprIndexAssignment_1 ) ) )
            // InternalGo.g:10668:1: ( ( rule__PrimaryExprIndex__PrimaryExprIndexAssignment_1 ) )
            {
            // InternalGo.g:10668:1: ( ( rule__PrimaryExprIndex__PrimaryExprIndexAssignment_1 ) )
            // InternalGo.g:10669:2: ( rule__PrimaryExprIndex__PrimaryExprIndexAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprIndexAssignment_1()); 
            }
            // InternalGo.g:10670:2: ( rule__PrimaryExprIndex__PrimaryExprIndexAssignment_1 )
            // InternalGo.g:10670:3: rule__PrimaryExprIndex__PrimaryExprIndexAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExprIndex__PrimaryExprIndexAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprIndexAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprIndex__Group__1__Impl"


    // $ANTLR start "rule__PrimaryExprSlice__Group__0"
    // InternalGo.g:10679:1: rule__PrimaryExprSlice__Group__0 : rule__PrimaryExprSlice__Group__0__Impl rule__PrimaryExprSlice__Group__1 ;
    public final void rule__PrimaryExprSlice__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10683:1: ( rule__PrimaryExprSlice__Group__0__Impl rule__PrimaryExprSlice__Group__1 )
            // InternalGo.g:10684:2: rule__PrimaryExprSlice__Group__0__Impl rule__PrimaryExprSlice__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__PrimaryExprSlice__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryExprSlice__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprSlice__Group__0"


    // $ANTLR start "rule__PrimaryExprSlice__Group__0__Impl"
    // InternalGo.g:10691:1: rule__PrimaryExprSlice__Group__0__Impl : ( ( rule__PrimaryExprSlice__PrimaryExprStuffAssignment_0 ) ) ;
    public final void rule__PrimaryExprSlice__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10695:1: ( ( ( rule__PrimaryExprSlice__PrimaryExprStuffAssignment_0 ) ) )
            // InternalGo.g:10696:1: ( ( rule__PrimaryExprSlice__PrimaryExprStuffAssignment_0 ) )
            {
            // InternalGo.g:10696:1: ( ( rule__PrimaryExprSlice__PrimaryExprStuffAssignment_0 ) )
            // InternalGo.g:10697:2: ( rule__PrimaryExprSlice__PrimaryExprStuffAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprStuffAssignment_0()); 
            }
            // InternalGo.g:10698:2: ( rule__PrimaryExprSlice__PrimaryExprStuffAssignment_0 )
            // InternalGo.g:10698:3: rule__PrimaryExprSlice__PrimaryExprStuffAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExprSlice__PrimaryExprStuffAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprStuffAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprSlice__Group__0__Impl"


    // $ANTLR start "rule__PrimaryExprSlice__Group__1"
    // InternalGo.g:10706:1: rule__PrimaryExprSlice__Group__1 : rule__PrimaryExprSlice__Group__1__Impl ;
    public final void rule__PrimaryExprSlice__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10710:1: ( rule__PrimaryExprSlice__Group__1__Impl )
            // InternalGo.g:10711:2: rule__PrimaryExprSlice__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExprSlice__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprSlice__Group__1"


    // $ANTLR start "rule__PrimaryExprSlice__Group__1__Impl"
    // InternalGo.g:10717:1: rule__PrimaryExprSlice__Group__1__Impl : ( ( rule__PrimaryExprSlice__PrimaryExprSliceAssignment_1 ) ) ;
    public final void rule__PrimaryExprSlice__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10721:1: ( ( ( rule__PrimaryExprSlice__PrimaryExprSliceAssignment_1 ) ) )
            // InternalGo.g:10722:1: ( ( rule__PrimaryExprSlice__PrimaryExprSliceAssignment_1 ) )
            {
            // InternalGo.g:10722:1: ( ( rule__PrimaryExprSlice__PrimaryExprSliceAssignment_1 ) )
            // InternalGo.g:10723:2: ( rule__PrimaryExprSlice__PrimaryExprSliceAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprSliceAssignment_1()); 
            }
            // InternalGo.g:10724:2: ( rule__PrimaryExprSlice__PrimaryExprSliceAssignment_1 )
            // InternalGo.g:10724:3: rule__PrimaryExprSlice__PrimaryExprSliceAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExprSlice__PrimaryExprSliceAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprSliceAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprSlice__Group__1__Impl"


    // $ANTLR start "rule__PrimaryExprTypeAssertion__Group__0"
    // InternalGo.g:10733:1: rule__PrimaryExprTypeAssertion__Group__0 : rule__PrimaryExprTypeAssertion__Group__0__Impl rule__PrimaryExprTypeAssertion__Group__1 ;
    public final void rule__PrimaryExprTypeAssertion__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10737:1: ( rule__PrimaryExprTypeAssertion__Group__0__Impl rule__PrimaryExprTypeAssertion__Group__1 )
            // InternalGo.g:10738:2: rule__PrimaryExprTypeAssertion__Group__0__Impl rule__PrimaryExprTypeAssertion__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__PrimaryExprTypeAssertion__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryExprTypeAssertion__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprTypeAssertion__Group__0"


    // $ANTLR start "rule__PrimaryExprTypeAssertion__Group__0__Impl"
    // InternalGo.g:10745:1: rule__PrimaryExprTypeAssertion__Group__0__Impl : ( ( rule__PrimaryExprTypeAssertion__PrimaryExprStuffAssignment_0 ) ) ;
    public final void rule__PrimaryExprTypeAssertion__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10749:1: ( ( ( rule__PrimaryExprTypeAssertion__PrimaryExprStuffAssignment_0 ) ) )
            // InternalGo.g:10750:1: ( ( rule__PrimaryExprTypeAssertion__PrimaryExprStuffAssignment_0 ) )
            {
            // InternalGo.g:10750:1: ( ( rule__PrimaryExprTypeAssertion__PrimaryExprStuffAssignment_0 ) )
            // InternalGo.g:10751:2: ( rule__PrimaryExprTypeAssertion__PrimaryExprStuffAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprStuffAssignment_0()); 
            }
            // InternalGo.g:10752:2: ( rule__PrimaryExprTypeAssertion__PrimaryExprStuffAssignment_0 )
            // InternalGo.g:10752:3: rule__PrimaryExprTypeAssertion__PrimaryExprStuffAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExprTypeAssertion__PrimaryExprStuffAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprStuffAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprTypeAssertion__Group__0__Impl"


    // $ANTLR start "rule__PrimaryExprTypeAssertion__Group__1"
    // InternalGo.g:10760:1: rule__PrimaryExprTypeAssertion__Group__1 : rule__PrimaryExprTypeAssertion__Group__1__Impl ;
    public final void rule__PrimaryExprTypeAssertion__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10764:1: ( rule__PrimaryExprTypeAssertion__Group__1__Impl )
            // InternalGo.g:10765:2: rule__PrimaryExprTypeAssertion__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExprTypeAssertion__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprTypeAssertion__Group__1"


    // $ANTLR start "rule__PrimaryExprTypeAssertion__Group__1__Impl"
    // InternalGo.g:10771:1: rule__PrimaryExprTypeAssertion__Group__1__Impl : ( ( rule__PrimaryExprTypeAssertion__PrimaryExprTypeAssertionAssignment_1 ) ) ;
    public final void rule__PrimaryExprTypeAssertion__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10775:1: ( ( ( rule__PrimaryExprTypeAssertion__PrimaryExprTypeAssertionAssignment_1 ) ) )
            // InternalGo.g:10776:1: ( ( rule__PrimaryExprTypeAssertion__PrimaryExprTypeAssertionAssignment_1 ) )
            {
            // InternalGo.g:10776:1: ( ( rule__PrimaryExprTypeAssertion__PrimaryExprTypeAssertionAssignment_1 ) )
            // InternalGo.g:10777:2: ( rule__PrimaryExprTypeAssertion__PrimaryExprTypeAssertionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprTypeAssertionAssignment_1()); 
            }
            // InternalGo.g:10778:2: ( rule__PrimaryExprTypeAssertion__PrimaryExprTypeAssertionAssignment_1 )
            // InternalGo.g:10778:3: rule__PrimaryExprTypeAssertion__PrimaryExprTypeAssertionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExprTypeAssertion__PrimaryExprTypeAssertionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprTypeAssertionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprTypeAssertion__Group__1__Impl"


    // $ANTLR start "rule__PrimaryExprArguments__Group__0"
    // InternalGo.g:10787:1: rule__PrimaryExprArguments__Group__0 : rule__PrimaryExprArguments__Group__0__Impl rule__PrimaryExprArguments__Group__1 ;
    public final void rule__PrimaryExprArguments__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10791:1: ( rule__PrimaryExprArguments__Group__0__Impl rule__PrimaryExprArguments__Group__1 )
            // InternalGo.g:10792:2: rule__PrimaryExprArguments__Group__0__Impl rule__PrimaryExprArguments__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__PrimaryExprArguments__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryExprArguments__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprArguments__Group__0"


    // $ANTLR start "rule__PrimaryExprArguments__Group__0__Impl"
    // InternalGo.g:10799:1: rule__PrimaryExprArguments__Group__0__Impl : ( ( rule__PrimaryExprArguments__PrimaryExprStuffAssignment_0 ) ) ;
    public final void rule__PrimaryExprArguments__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10803:1: ( ( ( rule__PrimaryExprArguments__PrimaryExprStuffAssignment_0 ) ) )
            // InternalGo.g:10804:1: ( ( rule__PrimaryExprArguments__PrimaryExprStuffAssignment_0 ) )
            {
            // InternalGo.g:10804:1: ( ( rule__PrimaryExprArguments__PrimaryExprStuffAssignment_0 ) )
            // InternalGo.g:10805:2: ( rule__PrimaryExprArguments__PrimaryExprStuffAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprStuffAssignment_0()); 
            }
            // InternalGo.g:10806:2: ( rule__PrimaryExprArguments__PrimaryExprStuffAssignment_0 )
            // InternalGo.g:10806:3: rule__PrimaryExprArguments__PrimaryExprStuffAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExprArguments__PrimaryExprStuffAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprStuffAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprArguments__Group__0__Impl"


    // $ANTLR start "rule__PrimaryExprArguments__Group__1"
    // InternalGo.g:10814:1: rule__PrimaryExprArguments__Group__1 : rule__PrimaryExprArguments__Group__1__Impl ;
    public final void rule__PrimaryExprArguments__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10818:1: ( rule__PrimaryExprArguments__Group__1__Impl )
            // InternalGo.g:10819:2: rule__PrimaryExprArguments__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExprArguments__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprArguments__Group__1"


    // $ANTLR start "rule__PrimaryExprArguments__Group__1__Impl"
    // InternalGo.g:10825:1: rule__PrimaryExprArguments__Group__1__Impl : ( ( rule__PrimaryExprArguments__PrimaryExprArgumentsAssignment_1 ) ) ;
    public final void rule__PrimaryExprArguments__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10829:1: ( ( ( rule__PrimaryExprArguments__PrimaryExprArgumentsAssignment_1 ) ) )
            // InternalGo.g:10830:1: ( ( rule__PrimaryExprArguments__PrimaryExprArgumentsAssignment_1 ) )
            {
            // InternalGo.g:10830:1: ( ( rule__PrimaryExprArguments__PrimaryExprArgumentsAssignment_1 ) )
            // InternalGo.g:10831:2: ( rule__PrimaryExprArguments__PrimaryExprArgumentsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprArgumentsAssignment_1()); 
            }
            // InternalGo.g:10832:2: ( rule__PrimaryExprArguments__PrimaryExprArgumentsAssignment_1 )
            // InternalGo.g:10832:3: rule__PrimaryExprArguments__PrimaryExprArgumentsAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryExprArguments__PrimaryExprArgumentsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprArgumentsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprArguments__Group__1__Impl"


    // $ANTLR start "rule__Selector__Group__0"
    // InternalGo.g:10841:1: rule__Selector__Group__0 : rule__Selector__Group__0__Impl rule__Selector__Group__1 ;
    public final void rule__Selector__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10845:1: ( rule__Selector__Group__0__Impl rule__Selector__Group__1 )
            // InternalGo.g:10846:2: rule__Selector__Group__0__Impl rule__Selector__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__Selector__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Selector__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Selector__Group__0"


    // $ANTLR start "rule__Selector__Group__0__Impl"
    // InternalGo.g:10853:1: rule__Selector__Group__0__Impl : ( '.' ) ;
    public final void rule__Selector__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10857:1: ( ( '.' ) )
            // InternalGo.g:10858:1: ( '.' )
            {
            // InternalGo.g:10858:1: ( '.' )
            // InternalGo.g:10859:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectorAccess().getFullStopKeyword_0()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectorAccess().getFullStopKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Selector__Group__0__Impl"


    // $ANTLR start "rule__Selector__Group__1"
    // InternalGo.g:10868:1: rule__Selector__Group__1 : rule__Selector__Group__1__Impl ;
    public final void rule__Selector__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10872:1: ( rule__Selector__Group__1__Impl )
            // InternalGo.g:10873:2: rule__Selector__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Selector__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Selector__Group__1"


    // $ANTLR start "rule__Selector__Group__1__Impl"
    // InternalGo.g:10879:1: rule__Selector__Group__1__Impl : ( RULE_IDENTIFIER ) ;
    public final void rule__Selector__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10883:1: ( ( RULE_IDENTIFIER ) )
            // InternalGo.g:10884:1: ( RULE_IDENTIFIER )
            {
            // InternalGo.g:10884:1: ( RULE_IDENTIFIER )
            // InternalGo.g:10885:2: RULE_IDENTIFIER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectorAccess().getIDENTIFIERTerminalRuleCall_1()); 
            }
            match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectorAccess().getIDENTIFIERTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Selector__Group__1__Impl"


    // $ANTLR start "rule__Index__Group__0"
    // InternalGo.g:10895:1: rule__Index__Group__0 : rule__Index__Group__0__Impl rule__Index__Group__1 ;
    public final void rule__Index__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10899:1: ( rule__Index__Group__0__Impl rule__Index__Group__1 )
            // InternalGo.g:10900:2: rule__Index__Group__0__Impl rule__Index__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__Index__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Index__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Index__Group__0"


    // $ANTLR start "rule__Index__Group__0__Impl"
    // InternalGo.g:10907:1: rule__Index__Group__0__Impl : ( '[' ) ;
    public final void rule__Index__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10911:1: ( ( '[' ) )
            // InternalGo.g:10912:1: ( '[' )
            {
            // InternalGo.g:10912:1: ( '[' )
            // InternalGo.g:10913:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); 
            }
            match(input,90,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Index__Group__0__Impl"


    // $ANTLR start "rule__Index__Group__1"
    // InternalGo.g:10922:1: rule__Index__Group__1 : rule__Index__Group__1__Impl rule__Index__Group__2 ;
    public final void rule__Index__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10926:1: ( rule__Index__Group__1__Impl rule__Index__Group__2 )
            // InternalGo.g:10927:2: rule__Index__Group__1__Impl rule__Index__Group__2
            {
            pushFollow(FOLLOW_41);
            rule__Index__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Index__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Index__Group__1"


    // $ANTLR start "rule__Index__Group__1__Impl"
    // InternalGo.g:10934:1: rule__Index__Group__1__Impl : ( ruleexpression ) ;
    public final void rule__Index__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10938:1: ( ( ruleexpression ) )
            // InternalGo.g:10939:1: ( ruleexpression )
            {
            // InternalGo.g:10939:1: ( ruleexpression )
            // InternalGo.g:10940:2: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndexAccess().getExpressionParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndexAccess().getExpressionParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Index__Group__1__Impl"


    // $ANTLR start "rule__Index__Group__2"
    // InternalGo.g:10949:1: rule__Index__Group__2 : rule__Index__Group__2__Impl ;
    public final void rule__Index__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10953:1: ( rule__Index__Group__2__Impl )
            // InternalGo.g:10954:2: rule__Index__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Index__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Index__Group__2"


    // $ANTLR start "rule__Index__Group__2__Impl"
    // InternalGo.g:10960:1: rule__Index__Group__2__Impl : ( ']' ) ;
    public final void rule__Index__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10964:1: ( ( ']' ) )
            // InternalGo.g:10965:1: ( ']' )
            {
            // InternalGo.g:10965:1: ( ']' )
            // InternalGo.g:10966:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Index__Group__2__Impl"


    // $ANTLR start "rule__Slice__Group__0"
    // InternalGo.g:10976:1: rule__Slice__Group__0 : rule__Slice__Group__0__Impl rule__Slice__Group__1 ;
    public final void rule__Slice__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10980:1: ( rule__Slice__Group__0__Impl rule__Slice__Group__1 )
            // InternalGo.g:10981:2: rule__Slice__Group__0__Impl rule__Slice__Group__1
            {
            pushFollow(FOLLOW_56);
            rule__Slice__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Slice__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group__0"


    // $ANTLR start "rule__Slice__Group__0__Impl"
    // InternalGo.g:10988:1: rule__Slice__Group__0__Impl : ( '[' ) ;
    public final void rule__Slice__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:10992:1: ( ( '[' ) )
            // InternalGo.g:10993:1: ( '[' )
            {
            // InternalGo.g:10993:1: ( '[' )
            // InternalGo.g:10994:2: '['
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_0()); 
            }
            match(input,90,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group__0__Impl"


    // $ANTLR start "rule__Slice__Group__1"
    // InternalGo.g:11003:1: rule__Slice__Group__1 : rule__Slice__Group__1__Impl rule__Slice__Group__2 ;
    public final void rule__Slice__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11007:1: ( rule__Slice__Group__1__Impl rule__Slice__Group__2 )
            // InternalGo.g:11008:2: rule__Slice__Group__1__Impl rule__Slice__Group__2
            {
            pushFollow(FOLLOW_41);
            rule__Slice__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Slice__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group__1"


    // $ANTLR start "rule__Slice__Group__1__Impl"
    // InternalGo.g:11015:1: rule__Slice__Group__1__Impl : ( ( rule__Slice__Alternatives_1 ) ) ;
    public final void rule__Slice__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11019:1: ( ( ( rule__Slice__Alternatives_1 ) ) )
            // InternalGo.g:11020:1: ( ( rule__Slice__Alternatives_1 ) )
            {
            // InternalGo.g:11020:1: ( ( rule__Slice__Alternatives_1 ) )
            // InternalGo.g:11021:2: ( rule__Slice__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceAccess().getAlternatives_1()); 
            }
            // InternalGo.g:11022:2: ( rule__Slice__Alternatives_1 )
            // InternalGo.g:11022:3: rule__Slice__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__Slice__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group__1__Impl"


    // $ANTLR start "rule__Slice__Group__2"
    // InternalGo.g:11030:1: rule__Slice__Group__2 : rule__Slice__Group__2__Impl ;
    public final void rule__Slice__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11034:1: ( rule__Slice__Group__2__Impl )
            // InternalGo.g:11035:2: rule__Slice__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Slice__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group__2"


    // $ANTLR start "rule__Slice__Group__2__Impl"
    // InternalGo.g:11041:1: rule__Slice__Group__2__Impl : ( ']' ) ;
    public final void rule__Slice__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11045:1: ( ( ']' ) )
            // InternalGo.g:11046:1: ( ']' )
            {
            // InternalGo.g:11046:1: ( ']' )
            // InternalGo.g:11047:2: ']'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceAccess().getRightSquareBracketKeyword_2()); 
            }
            match(input,91,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceAccess().getRightSquareBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group__2__Impl"


    // $ANTLR start "rule__Slice__Group_1_0__0"
    // InternalGo.g:11057:1: rule__Slice__Group_1_0__0 : rule__Slice__Group_1_0__0__Impl rule__Slice__Group_1_0__1 ;
    public final void rule__Slice__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11061:1: ( rule__Slice__Group_1_0__0__Impl rule__Slice__Group_1_0__1 )
            // InternalGo.g:11062:2: rule__Slice__Group_1_0__0__Impl rule__Slice__Group_1_0__1
            {
            pushFollow(FOLLOW_56);
            rule__Slice__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Slice__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group_1_0__0"


    // $ANTLR start "rule__Slice__Group_1_0__0__Impl"
    // InternalGo.g:11069:1: rule__Slice__Group_1_0__0__Impl : ( ( rule__Slice__ExpressionAssignment_1_0_0 )? ) ;
    public final void rule__Slice__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11073:1: ( ( ( rule__Slice__ExpressionAssignment_1_0_0 )? ) )
            // InternalGo.g:11074:1: ( ( rule__Slice__ExpressionAssignment_1_0_0 )? )
            {
            // InternalGo.g:11074:1: ( ( rule__Slice__ExpressionAssignment_1_0_0 )? )
            // InternalGo.g:11075:2: ( rule__Slice__ExpressionAssignment_1_0_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceAccess().getExpressionAssignment_1_0_0()); 
            }
            // InternalGo.g:11076:2: ( rule__Slice__ExpressionAssignment_1_0_0 )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==RULE_STRING_LIT||(LA99_0>=RULE_IDENTIFIER && LA99_0<=RULE_BINARY_OP)||LA99_0==45||(LA99_0>=48 && LA99_0<=49)||(LA99_0>=51 && LA99_0<=52)||LA99_0==57||(LA99_0>=60 && LA99_0<=62)||LA99_0==65||LA99_0==71||LA99_0==90||(LA99_0>=92 && LA99_0<=93)||LA99_0==95) ) {
                alt99=1;
            }
            else if ( (LA99_0==76) ) {
                int LA99_2 = input.LA(2);

                if ( (synpred160_InternalGo()) ) {
                    alt99=1;
                }
            }
            switch (alt99) {
                case 1 :
                    // InternalGo.g:11076:3: rule__Slice__ExpressionAssignment_1_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Slice__ExpressionAssignment_1_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceAccess().getExpressionAssignment_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group_1_0__0__Impl"


    // $ANTLR start "rule__Slice__Group_1_0__1"
    // InternalGo.g:11084:1: rule__Slice__Group_1_0__1 : rule__Slice__Group_1_0__1__Impl rule__Slice__Group_1_0__2 ;
    public final void rule__Slice__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11088:1: ( rule__Slice__Group_1_0__1__Impl rule__Slice__Group_1_0__2 )
            // InternalGo.g:11089:2: rule__Slice__Group_1_0__1__Impl rule__Slice__Group_1_0__2
            {
            pushFollow(FOLLOW_16);
            rule__Slice__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Slice__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group_1_0__1"


    // $ANTLR start "rule__Slice__Group_1_0__1__Impl"
    // InternalGo.g:11096:1: rule__Slice__Group_1_0__1__Impl : ( ':' ) ;
    public final void rule__Slice__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11100:1: ( ( ':' ) )
            // InternalGo.g:11101:1: ( ':' )
            {
            // InternalGo.g:11101:1: ( ':' )
            // InternalGo.g:11102:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceAccess().getColonKeyword_1_0_1()); 
            }
            match(input,76,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceAccess().getColonKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group_1_0__1__Impl"


    // $ANTLR start "rule__Slice__Group_1_0__2"
    // InternalGo.g:11111:1: rule__Slice__Group_1_0__2 : rule__Slice__Group_1_0__2__Impl ;
    public final void rule__Slice__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11115:1: ( rule__Slice__Group_1_0__2__Impl )
            // InternalGo.g:11116:2: rule__Slice__Group_1_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Slice__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group_1_0__2"


    // $ANTLR start "rule__Slice__Group_1_0__2__Impl"
    // InternalGo.g:11122:1: rule__Slice__Group_1_0__2__Impl : ( ( rule__Slice__ExpressionAssignment_1_0_2 )? ) ;
    public final void rule__Slice__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11126:1: ( ( ( rule__Slice__ExpressionAssignment_1_0_2 )? ) )
            // InternalGo.g:11127:1: ( ( rule__Slice__ExpressionAssignment_1_0_2 )? )
            {
            // InternalGo.g:11127:1: ( ( rule__Slice__ExpressionAssignment_1_0_2 )? )
            // InternalGo.g:11128:2: ( rule__Slice__ExpressionAssignment_1_0_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceAccess().getExpressionAssignment_1_0_2()); 
            }
            // InternalGo.g:11129:2: ( rule__Slice__ExpressionAssignment_1_0_2 )?
            int alt100=2;
            switch ( input.LA(1) ) {
                case RULE_STRING_LIT:
                case RULE_IDENTIFIER:
                case RULE_INT_LIT:
                case RULE_FLOAT_LIT:
                case RULE_IMAGINARY_LIT:
                case RULE_RUNE_LIT:
                case RULE_BINARY_OP:
                case 45:
                case 48:
                case 49:
                case 51:
                case 52:
                case 57:
                case 60:
                case 61:
                case 62:
                case 65:
                case 71:
                case 90:
                case 92:
                case 93:
                case 95:
                    {
                    alt100=1;
                    }
                    break;
                case 91:
                    {
                    int LA100_2 = input.LA(2);

                    if ( (synpred161_InternalGo()) ) {
                        alt100=1;
                    }
                    }
                    break;
                case EOF:
                    {
                    int LA100_3 = input.LA(2);

                    if ( (synpred161_InternalGo()) ) {
                        alt100=1;
                    }
                    }
                    break;
            }

            switch (alt100) {
                case 1 :
                    // InternalGo.g:11129:3: rule__Slice__ExpressionAssignment_1_0_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Slice__ExpressionAssignment_1_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceAccess().getExpressionAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group_1_0__2__Impl"


    // $ANTLR start "rule__Slice__Group_1_1__0"
    // InternalGo.g:11138:1: rule__Slice__Group_1_1__0 : rule__Slice__Group_1_1__0__Impl rule__Slice__Group_1_1__1 ;
    public final void rule__Slice__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11142:1: ( rule__Slice__Group_1_1__0__Impl rule__Slice__Group_1_1__1 )
            // InternalGo.g:11143:2: rule__Slice__Group_1_1__0__Impl rule__Slice__Group_1_1__1
            {
            pushFollow(FOLLOW_56);
            rule__Slice__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Slice__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group_1_1__0"


    // $ANTLR start "rule__Slice__Group_1_1__0__Impl"
    // InternalGo.g:11150:1: rule__Slice__Group_1_1__0__Impl : ( ( rule__Slice__ExpressionAssignment_1_1_0 )? ) ;
    public final void rule__Slice__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11154:1: ( ( ( rule__Slice__ExpressionAssignment_1_1_0 )? ) )
            // InternalGo.g:11155:1: ( ( rule__Slice__ExpressionAssignment_1_1_0 )? )
            {
            // InternalGo.g:11155:1: ( ( rule__Slice__ExpressionAssignment_1_1_0 )? )
            // InternalGo.g:11156:2: ( rule__Slice__ExpressionAssignment_1_1_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceAccess().getExpressionAssignment_1_1_0()); 
            }
            // InternalGo.g:11157:2: ( rule__Slice__ExpressionAssignment_1_1_0 )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==RULE_STRING_LIT||(LA101_0>=RULE_IDENTIFIER && LA101_0<=RULE_BINARY_OP)||LA101_0==45||(LA101_0>=48 && LA101_0<=49)||(LA101_0>=51 && LA101_0<=52)||LA101_0==57||(LA101_0>=60 && LA101_0<=62)||LA101_0==65||LA101_0==71||LA101_0==90||(LA101_0>=92 && LA101_0<=93)||LA101_0==95) ) {
                alt101=1;
            }
            else if ( (LA101_0==76) ) {
                int LA101_2 = input.LA(2);

                if ( (synpred162_InternalGo()) ) {
                    alt101=1;
                }
            }
            switch (alt101) {
                case 1 :
                    // InternalGo.g:11157:3: rule__Slice__ExpressionAssignment_1_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Slice__ExpressionAssignment_1_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceAccess().getExpressionAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group_1_1__0__Impl"


    // $ANTLR start "rule__Slice__Group_1_1__1"
    // InternalGo.g:11165:1: rule__Slice__Group_1_1__1 : rule__Slice__Group_1_1__1__Impl rule__Slice__Group_1_1__2 ;
    public final void rule__Slice__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11169:1: ( rule__Slice__Group_1_1__1__Impl rule__Slice__Group_1_1__2 )
            // InternalGo.g:11170:2: rule__Slice__Group_1_1__1__Impl rule__Slice__Group_1_1__2
            {
            pushFollow(FOLLOW_16);
            rule__Slice__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Slice__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group_1_1__1"


    // $ANTLR start "rule__Slice__Group_1_1__1__Impl"
    // InternalGo.g:11177:1: rule__Slice__Group_1_1__1__Impl : ( ':' ) ;
    public final void rule__Slice__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11181:1: ( ( ':' ) )
            // InternalGo.g:11182:1: ( ':' )
            {
            // InternalGo.g:11182:1: ( ':' )
            // InternalGo.g:11183:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceAccess().getColonKeyword_1_1_1()); 
            }
            match(input,76,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceAccess().getColonKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group_1_1__1__Impl"


    // $ANTLR start "rule__Slice__Group_1_1__2"
    // InternalGo.g:11192:1: rule__Slice__Group_1_1__2 : rule__Slice__Group_1_1__2__Impl rule__Slice__Group_1_1__3 ;
    public final void rule__Slice__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11196:1: ( rule__Slice__Group_1_1__2__Impl rule__Slice__Group_1_1__3 )
            // InternalGo.g:11197:2: rule__Slice__Group_1_1__2__Impl rule__Slice__Group_1_1__3
            {
            pushFollow(FOLLOW_29);
            rule__Slice__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Slice__Group_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group_1_1__2"


    // $ANTLR start "rule__Slice__Group_1_1__2__Impl"
    // InternalGo.g:11204:1: rule__Slice__Group_1_1__2__Impl : ( ( rule__Slice__ExpressionAssignment_1_1_2 ) ) ;
    public final void rule__Slice__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11208:1: ( ( ( rule__Slice__ExpressionAssignment_1_1_2 ) ) )
            // InternalGo.g:11209:1: ( ( rule__Slice__ExpressionAssignment_1_1_2 ) )
            {
            // InternalGo.g:11209:1: ( ( rule__Slice__ExpressionAssignment_1_1_2 ) )
            // InternalGo.g:11210:2: ( rule__Slice__ExpressionAssignment_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceAccess().getExpressionAssignment_1_1_2()); 
            }
            // InternalGo.g:11211:2: ( rule__Slice__ExpressionAssignment_1_1_2 )
            // InternalGo.g:11211:3: rule__Slice__ExpressionAssignment_1_1_2
            {
            pushFollow(FOLLOW_2);
            rule__Slice__ExpressionAssignment_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceAccess().getExpressionAssignment_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group_1_1__2__Impl"


    // $ANTLR start "rule__Slice__Group_1_1__3"
    // InternalGo.g:11219:1: rule__Slice__Group_1_1__3 : rule__Slice__Group_1_1__3__Impl rule__Slice__Group_1_1__4 ;
    public final void rule__Slice__Group_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11223:1: ( rule__Slice__Group_1_1__3__Impl rule__Slice__Group_1_1__4 )
            // InternalGo.g:11224:2: rule__Slice__Group_1_1__3__Impl rule__Slice__Group_1_1__4
            {
            pushFollow(FOLLOW_16);
            rule__Slice__Group_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Slice__Group_1_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group_1_1__3"


    // $ANTLR start "rule__Slice__Group_1_1__3__Impl"
    // InternalGo.g:11231:1: rule__Slice__Group_1_1__3__Impl : ( ':' ) ;
    public final void rule__Slice__Group_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11235:1: ( ( ':' ) )
            // InternalGo.g:11236:1: ( ':' )
            {
            // InternalGo.g:11236:1: ( ':' )
            // InternalGo.g:11237:2: ':'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceAccess().getColonKeyword_1_1_3()); 
            }
            match(input,76,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceAccess().getColonKeyword_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group_1_1__3__Impl"


    // $ANTLR start "rule__Slice__Group_1_1__4"
    // InternalGo.g:11246:1: rule__Slice__Group_1_1__4 : rule__Slice__Group_1_1__4__Impl ;
    public final void rule__Slice__Group_1_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11250:1: ( rule__Slice__Group_1_1__4__Impl )
            // InternalGo.g:11251:2: rule__Slice__Group_1_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Slice__Group_1_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group_1_1__4"


    // $ANTLR start "rule__Slice__Group_1_1__4__Impl"
    // InternalGo.g:11257:1: rule__Slice__Group_1_1__4__Impl : ( ( rule__Slice__ExpressionAssignment_1_1_4 ) ) ;
    public final void rule__Slice__Group_1_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11261:1: ( ( ( rule__Slice__ExpressionAssignment_1_1_4 ) ) )
            // InternalGo.g:11262:1: ( ( rule__Slice__ExpressionAssignment_1_1_4 ) )
            {
            // InternalGo.g:11262:1: ( ( rule__Slice__ExpressionAssignment_1_1_4 ) )
            // InternalGo.g:11263:2: ( rule__Slice__ExpressionAssignment_1_1_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceAccess().getExpressionAssignment_1_1_4()); 
            }
            // InternalGo.g:11264:2: ( rule__Slice__ExpressionAssignment_1_1_4 )
            // InternalGo.g:11264:3: rule__Slice__ExpressionAssignment_1_1_4
            {
            pushFollow(FOLLOW_2);
            rule__Slice__ExpressionAssignment_1_1_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceAccess().getExpressionAssignment_1_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__Group_1_1__4__Impl"


    // $ANTLR start "rule__TypeAssertion__Group__0"
    // InternalGo.g:11273:1: rule__TypeAssertion__Group__0 : rule__TypeAssertion__Group__0__Impl rule__TypeAssertion__Group__1 ;
    public final void rule__TypeAssertion__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11277:1: ( rule__TypeAssertion__Group__0__Impl rule__TypeAssertion__Group__1 )
            // InternalGo.g:11278:2: rule__TypeAssertion__Group__0__Impl rule__TypeAssertion__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__TypeAssertion__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeAssertion__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeAssertion__Group__0"


    // $ANTLR start "rule__TypeAssertion__Group__0__Impl"
    // InternalGo.g:11285:1: rule__TypeAssertion__Group__0__Impl : ( '.' ) ;
    public final void rule__TypeAssertion__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11289:1: ( ( '.' ) )
            // InternalGo.g:11290:1: ( '.' )
            {
            // InternalGo.g:11290:1: ( '.' )
            // InternalGo.g:11291:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeAssertion__Group__0__Impl"


    // $ANTLR start "rule__TypeAssertion__Group__1"
    // InternalGo.g:11300:1: rule__TypeAssertion__Group__1 : rule__TypeAssertion__Group__1__Impl rule__TypeAssertion__Group__2 ;
    public final void rule__TypeAssertion__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11304:1: ( rule__TypeAssertion__Group__1__Impl rule__TypeAssertion__Group__2 )
            // InternalGo.g:11305:2: rule__TypeAssertion__Group__1__Impl rule__TypeAssertion__Group__2
            {
            pushFollow(FOLLOW_19);
            rule__TypeAssertion__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeAssertion__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeAssertion__Group__1"


    // $ANTLR start "rule__TypeAssertion__Group__1__Impl"
    // InternalGo.g:11312:1: rule__TypeAssertion__Group__1__Impl : ( '(' ) ;
    public final void rule__TypeAssertion__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11316:1: ( ( '(' ) )
            // InternalGo.g:11317:1: ( '(' )
            {
            // InternalGo.g:11317:1: ( '(' )
            // InternalGo.g:11318:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,65,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeAssertion__Group__1__Impl"


    // $ANTLR start "rule__TypeAssertion__Group__2"
    // InternalGo.g:11327:1: rule__TypeAssertion__Group__2 : rule__TypeAssertion__Group__2__Impl rule__TypeAssertion__Group__3 ;
    public final void rule__TypeAssertion__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11331:1: ( rule__TypeAssertion__Group__2__Impl rule__TypeAssertion__Group__3 )
            // InternalGo.g:11332:2: rule__TypeAssertion__Group__2__Impl rule__TypeAssertion__Group__3
            {
            pushFollow(FOLLOW_38);
            rule__TypeAssertion__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TypeAssertion__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeAssertion__Group__2"


    // $ANTLR start "rule__TypeAssertion__Group__2__Impl"
    // InternalGo.g:11339:1: rule__TypeAssertion__Group__2__Impl : ( ( rule__TypeAssertion__TypeAssignment_2 ) ) ;
    public final void rule__TypeAssertion__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11343:1: ( ( ( rule__TypeAssertion__TypeAssignment_2 ) ) )
            // InternalGo.g:11344:1: ( ( rule__TypeAssertion__TypeAssignment_2 ) )
            {
            // InternalGo.g:11344:1: ( ( rule__TypeAssertion__TypeAssignment_2 ) )
            // InternalGo.g:11345:2: ( rule__TypeAssertion__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeAssertionAccess().getTypeAssignment_2()); 
            }
            // InternalGo.g:11346:2: ( rule__TypeAssertion__TypeAssignment_2 )
            // InternalGo.g:11346:3: rule__TypeAssertion__TypeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__TypeAssertion__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeAssertionAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeAssertion__Group__2__Impl"


    // $ANTLR start "rule__TypeAssertion__Group__3"
    // InternalGo.g:11354:1: rule__TypeAssertion__Group__3 : rule__TypeAssertion__Group__3__Impl ;
    public final void rule__TypeAssertion__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11358:1: ( rule__TypeAssertion__Group__3__Impl )
            // InternalGo.g:11359:2: rule__TypeAssertion__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TypeAssertion__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeAssertion__Group__3"


    // $ANTLR start "rule__TypeAssertion__Group__3__Impl"
    // InternalGo.g:11365:1: rule__TypeAssertion__Group__3__Impl : ( ')' ) ;
    public final void rule__TypeAssertion__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11369:1: ( ( ')' ) )
            // InternalGo.g:11370:1: ( ')' )
            {
            // InternalGo.g:11370:1: ( ')' )
            // InternalGo.g:11371:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeAssertion__Group__3__Impl"


    // $ANTLR start "rule__Arguments__Group__0"
    // InternalGo.g:11381:1: rule__Arguments__Group__0 : rule__Arguments__Group__0__Impl rule__Arguments__Group__1 ;
    public final void rule__Arguments__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11385:1: ( rule__Arguments__Group__0__Impl rule__Arguments__Group__1 )
            // InternalGo.g:11386:2: rule__Arguments__Group__0__Impl rule__Arguments__Group__1
            {
            pushFollow(FOLLOW_57);
            rule__Arguments__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Arguments__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group__0"


    // $ANTLR start "rule__Arguments__Group__0__Impl"
    // InternalGo.g:11393:1: rule__Arguments__Group__0__Impl : ( '(' ) ;
    public final void rule__Arguments__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11397:1: ( ( '(' ) )
            // InternalGo.g:11398:1: ( '(' )
            {
            // InternalGo.g:11398:1: ( '(' )
            // InternalGo.g:11399:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,65,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group__0__Impl"


    // $ANTLR start "rule__Arguments__Group__1"
    // InternalGo.g:11408:1: rule__Arguments__Group__1 : rule__Arguments__Group__1__Impl rule__Arguments__Group__2 ;
    public final void rule__Arguments__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11412:1: ( rule__Arguments__Group__1__Impl rule__Arguments__Group__2 )
            // InternalGo.g:11413:2: rule__Arguments__Group__1__Impl rule__Arguments__Group__2
            {
            pushFollow(FOLLOW_57);
            rule__Arguments__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Arguments__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group__1"


    // $ANTLR start "rule__Arguments__Group__1__Impl"
    // InternalGo.g:11420:1: rule__Arguments__Group__1__Impl : ( ( rule__Arguments__Group_1__0 )? ) ;
    public final void rule__Arguments__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11424:1: ( ( ( rule__Arguments__Group_1__0 )? ) )
            // InternalGo.g:11425:1: ( ( rule__Arguments__Group_1__0 )? )
            {
            // InternalGo.g:11425:1: ( ( rule__Arguments__Group_1__0 )? )
            // InternalGo.g:11426:2: ( rule__Arguments__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArgumentsAccess().getGroup_1()); 
            }
            // InternalGo.g:11427:2: ( rule__Arguments__Group_1__0 )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==RULE_STRING_LIT||(LA102_0>=RULE_IDENTIFIER && LA102_0<=RULE_BINARY_OP)||LA102_0==45||(LA102_0>=48 && LA102_0<=49)||(LA102_0>=51 && LA102_0<=52)||LA102_0==57||(LA102_0>=60 && LA102_0<=62)||LA102_0==65||LA102_0==69||LA102_0==71||LA102_0==90||(LA102_0>=92 && LA102_0<=95)) ) {
                alt102=1;
            }
            else if ( (LA102_0==66) ) {
                int LA102_2 = input.LA(2);

                if ( (synpred163_InternalGo()) ) {
                    alt102=1;
                }
            }
            switch (alt102) {
                case 1 :
                    // InternalGo.g:11427:3: rule__Arguments__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Arguments__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArgumentsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group__1__Impl"


    // $ANTLR start "rule__Arguments__Group__2"
    // InternalGo.g:11435:1: rule__Arguments__Group__2 : rule__Arguments__Group__2__Impl ;
    public final void rule__Arguments__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11439:1: ( rule__Arguments__Group__2__Impl )
            // InternalGo.g:11440:2: rule__Arguments__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Arguments__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group__2"


    // $ANTLR start "rule__Arguments__Group__2__Impl"
    // InternalGo.g:11446:1: rule__Arguments__Group__2__Impl : ( ')' ) ;
    public final void rule__Arguments__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11450:1: ( ( ')' ) )
            // InternalGo.g:11451:1: ( ')' )
            {
            // InternalGo.g:11451:1: ( ')' )
            // InternalGo.g:11452:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group__2__Impl"


    // $ANTLR start "rule__Arguments__Group_1__0"
    // InternalGo.g:11462:1: rule__Arguments__Group_1__0 : rule__Arguments__Group_1__0__Impl rule__Arguments__Group_1__1 ;
    public final void rule__Arguments__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11466:1: ( rule__Arguments__Group_1__0__Impl rule__Arguments__Group_1__1 )
            // InternalGo.g:11467:2: rule__Arguments__Group_1__0__Impl rule__Arguments__Group_1__1
            {
            pushFollow(FOLLOW_58);
            rule__Arguments__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Arguments__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group_1__0"


    // $ANTLR start "rule__Arguments__Group_1__0__Impl"
    // InternalGo.g:11474:1: rule__Arguments__Group_1__0__Impl : ( ( rule__Arguments__Alternatives_1_0 ) ) ;
    public final void rule__Arguments__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11478:1: ( ( ( rule__Arguments__Alternatives_1_0 ) ) )
            // InternalGo.g:11479:1: ( ( rule__Arguments__Alternatives_1_0 ) )
            {
            // InternalGo.g:11479:1: ( ( rule__Arguments__Alternatives_1_0 ) )
            // InternalGo.g:11480:2: ( rule__Arguments__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArgumentsAccess().getAlternatives_1_0()); 
            }
            // InternalGo.g:11481:2: ( rule__Arguments__Alternatives_1_0 )
            // InternalGo.g:11481:3: rule__Arguments__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Arguments__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArgumentsAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group_1__0__Impl"


    // $ANTLR start "rule__Arguments__Group_1__1"
    // InternalGo.g:11489:1: rule__Arguments__Group_1__1 : rule__Arguments__Group_1__1__Impl rule__Arguments__Group_1__2 ;
    public final void rule__Arguments__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11493:1: ( rule__Arguments__Group_1__1__Impl rule__Arguments__Group_1__2 )
            // InternalGo.g:11494:2: rule__Arguments__Group_1__1__Impl rule__Arguments__Group_1__2
            {
            pushFollow(FOLLOW_58);
            rule__Arguments__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Arguments__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group_1__1"


    // $ANTLR start "rule__Arguments__Group_1__1__Impl"
    // InternalGo.g:11501:1: rule__Arguments__Group_1__1__Impl : ( ( '...' )? ) ;
    public final void rule__Arguments__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11505:1: ( ( ( '...' )? ) )
            // InternalGo.g:11506:1: ( ( '...' )? )
            {
            // InternalGo.g:11506:1: ( ( '...' )? )
            // InternalGo.g:11507:2: ( '...' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_1_1()); 
            }
            // InternalGo.g:11508:2: ( '...' )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==94) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalGo.g:11508:3: '...'
                    {
                    match(input,94,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group_1__1__Impl"


    // $ANTLR start "rule__Arguments__Group_1__2"
    // InternalGo.g:11516:1: rule__Arguments__Group_1__2 : rule__Arguments__Group_1__2__Impl ;
    public final void rule__Arguments__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11520:1: ( rule__Arguments__Group_1__2__Impl )
            // InternalGo.g:11521:2: rule__Arguments__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Arguments__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group_1__2"


    // $ANTLR start "rule__Arguments__Group_1__2__Impl"
    // InternalGo.g:11527:1: rule__Arguments__Group_1__2__Impl : ( ( ',' )? ) ;
    public final void rule__Arguments__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11531:1: ( ( ( ',' )? ) )
            // InternalGo.g:11532:1: ( ( ',' )? )
            {
            // InternalGo.g:11532:1: ( ( ',' )? )
            // InternalGo.g:11533:2: ( ',' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArgumentsAccess().getCommaKeyword_1_2()); 
            }
            // InternalGo.g:11534:2: ( ',' )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==69) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalGo.g:11534:3: ','
                    {
                    match(input,69,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArgumentsAccess().getCommaKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group_1__2__Impl"


    // $ANTLR start "rule__Arguments__Group_1_0_1__0"
    // InternalGo.g:11543:1: rule__Arguments__Group_1_0_1__0 : rule__Arguments__Group_1_0_1__0__Impl rule__Arguments__Group_1_0_1__1 ;
    public final void rule__Arguments__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11547:1: ( rule__Arguments__Group_1_0_1__0__Impl rule__Arguments__Group_1_0_1__1 )
            // InternalGo.g:11548:2: rule__Arguments__Group_1_0_1__0__Impl rule__Arguments__Group_1_0_1__1
            {
            pushFollow(FOLLOW_17);
            rule__Arguments__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Arguments__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group_1_0_1__0"


    // $ANTLR start "rule__Arguments__Group_1_0_1__0__Impl"
    // InternalGo.g:11555:1: rule__Arguments__Group_1_0_1__0__Impl : ( ( rule__Arguments__TypeAssignment_1_0_1_0 ) ) ;
    public final void rule__Arguments__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11559:1: ( ( ( rule__Arguments__TypeAssignment_1_0_1_0 ) ) )
            // InternalGo.g:11560:1: ( ( rule__Arguments__TypeAssignment_1_0_1_0 ) )
            {
            // InternalGo.g:11560:1: ( ( rule__Arguments__TypeAssignment_1_0_1_0 ) )
            // InternalGo.g:11561:2: ( rule__Arguments__TypeAssignment_1_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArgumentsAccess().getTypeAssignment_1_0_1_0()); 
            }
            // InternalGo.g:11562:2: ( rule__Arguments__TypeAssignment_1_0_1_0 )
            // InternalGo.g:11562:3: rule__Arguments__TypeAssignment_1_0_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Arguments__TypeAssignment_1_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArgumentsAccess().getTypeAssignment_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__Arguments__Group_1_0_1__1"
    // InternalGo.g:11570:1: rule__Arguments__Group_1_0_1__1 : rule__Arguments__Group_1_0_1__1__Impl ;
    public final void rule__Arguments__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11574:1: ( rule__Arguments__Group_1_0_1__1__Impl )
            // InternalGo.g:11575:2: rule__Arguments__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Arguments__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group_1_0_1__1"


    // $ANTLR start "rule__Arguments__Group_1_0_1__1__Impl"
    // InternalGo.g:11581:1: rule__Arguments__Group_1_0_1__1__Impl : ( ( rule__Arguments__Group_1_0_1_1__0 )? ) ;
    public final void rule__Arguments__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11585:1: ( ( ( rule__Arguments__Group_1_0_1_1__0 )? ) )
            // InternalGo.g:11586:1: ( ( rule__Arguments__Group_1_0_1_1__0 )? )
            {
            // InternalGo.g:11586:1: ( ( rule__Arguments__Group_1_0_1_1__0 )? )
            // InternalGo.g:11587:2: ( rule__Arguments__Group_1_0_1_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArgumentsAccess().getGroup_1_0_1_1()); 
            }
            // InternalGo.g:11588:2: ( rule__Arguments__Group_1_0_1_1__0 )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==69) ) {
                int LA105_1 = input.LA(2);

                if ( (synpred166_InternalGo()) ) {
                    alt105=1;
                }
            }
            switch (alt105) {
                case 1 :
                    // InternalGo.g:11588:3: rule__Arguments__Group_1_0_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Arguments__Group_1_0_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArgumentsAccess().getGroup_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__Arguments__Group_1_0_1_1__0"
    // InternalGo.g:11597:1: rule__Arguments__Group_1_0_1_1__0 : rule__Arguments__Group_1_0_1_1__0__Impl rule__Arguments__Group_1_0_1_1__1 ;
    public final void rule__Arguments__Group_1_0_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11601:1: ( rule__Arguments__Group_1_0_1_1__0__Impl rule__Arguments__Group_1_0_1_1__1 )
            // InternalGo.g:11602:2: rule__Arguments__Group_1_0_1_1__0__Impl rule__Arguments__Group_1_0_1_1__1
            {
            pushFollow(FOLLOW_16);
            rule__Arguments__Group_1_0_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Arguments__Group_1_0_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group_1_0_1_1__0"


    // $ANTLR start "rule__Arguments__Group_1_0_1_1__0__Impl"
    // InternalGo.g:11609:1: rule__Arguments__Group_1_0_1_1__0__Impl : ( ',' ) ;
    public final void rule__Arguments__Group_1_0_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11613:1: ( ( ',' ) )
            // InternalGo.g:11614:1: ( ',' )
            {
            // InternalGo.g:11614:1: ( ',' )
            // InternalGo.g:11615:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArgumentsAccess().getCommaKeyword_1_0_1_1_0()); 
            }
            match(input,69,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArgumentsAccess().getCommaKeyword_1_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group_1_0_1_1__0__Impl"


    // $ANTLR start "rule__Arguments__Group_1_0_1_1__1"
    // InternalGo.g:11624:1: rule__Arguments__Group_1_0_1_1__1 : rule__Arguments__Group_1_0_1_1__1__Impl ;
    public final void rule__Arguments__Group_1_0_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11628:1: ( rule__Arguments__Group_1_0_1_1__1__Impl )
            // InternalGo.g:11629:2: rule__Arguments__Group_1_0_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Arguments__Group_1_0_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group_1_0_1_1__1"


    // $ANTLR start "rule__Arguments__Group_1_0_1_1__1__Impl"
    // InternalGo.g:11635:1: rule__Arguments__Group_1_0_1_1__1__Impl : ( ( rule__Arguments__ExpressionListAssignment_1_0_1_1_1 ) ) ;
    public final void rule__Arguments__Group_1_0_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11639:1: ( ( ( rule__Arguments__ExpressionListAssignment_1_0_1_1_1 ) ) )
            // InternalGo.g:11640:1: ( ( rule__Arguments__ExpressionListAssignment_1_0_1_1_1 ) )
            {
            // InternalGo.g:11640:1: ( ( rule__Arguments__ExpressionListAssignment_1_0_1_1_1 ) )
            // InternalGo.g:11641:2: ( rule__Arguments__ExpressionListAssignment_1_0_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArgumentsAccess().getExpressionListAssignment_1_0_1_1_1()); 
            }
            // InternalGo.g:11642:2: ( rule__Arguments__ExpressionListAssignment_1_0_1_1_1 )
            // InternalGo.g:11642:3: rule__Arguments__ExpressionListAssignment_1_0_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Arguments__ExpressionListAssignment_1_0_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArgumentsAccess().getExpressionListAssignment_1_0_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__Group_1_0_1_1__1__Impl"


    // $ANTLR start "rule__MethodExpr__Group__0"
    // InternalGo.g:11651:1: rule__MethodExpr__Group__0 : rule__MethodExpr__Group__0__Impl rule__MethodExpr__Group__1 ;
    public final void rule__MethodExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11655:1: ( rule__MethodExpr__Group__0__Impl rule__MethodExpr__Group__1 )
            // InternalGo.g:11656:2: rule__MethodExpr__Group__0__Impl rule__MethodExpr__Group__1
            {
            pushFollow(FOLLOW_36);
            rule__MethodExpr__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodExpr__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodExpr__Group__0"


    // $ANTLR start "rule__MethodExpr__Group__0__Impl"
    // InternalGo.g:11663:1: rule__MethodExpr__Group__0__Impl : ( ( rule__MethodExpr__ReceiverTypeAssignment_0 ) ) ;
    public final void rule__MethodExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11667:1: ( ( ( rule__MethodExpr__ReceiverTypeAssignment_0 ) ) )
            // InternalGo.g:11668:1: ( ( rule__MethodExpr__ReceiverTypeAssignment_0 ) )
            {
            // InternalGo.g:11668:1: ( ( rule__MethodExpr__ReceiverTypeAssignment_0 ) )
            // InternalGo.g:11669:2: ( rule__MethodExpr__ReceiverTypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodExprAccess().getReceiverTypeAssignment_0()); 
            }
            // InternalGo.g:11670:2: ( rule__MethodExpr__ReceiverTypeAssignment_0 )
            // InternalGo.g:11670:3: rule__MethodExpr__ReceiverTypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__MethodExpr__ReceiverTypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodExprAccess().getReceiverTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodExpr__Group__0__Impl"


    // $ANTLR start "rule__MethodExpr__Group__1"
    // InternalGo.g:11678:1: rule__MethodExpr__Group__1 : rule__MethodExpr__Group__1__Impl rule__MethodExpr__Group__2 ;
    public final void rule__MethodExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11682:1: ( rule__MethodExpr__Group__1__Impl rule__MethodExpr__Group__2 )
            // InternalGo.g:11683:2: rule__MethodExpr__Group__1__Impl rule__MethodExpr__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__MethodExpr__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodExpr__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodExpr__Group__1"


    // $ANTLR start "rule__MethodExpr__Group__1__Impl"
    // InternalGo.g:11690:1: rule__MethodExpr__Group__1__Impl : ( '.' ) ;
    public final void rule__MethodExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11694:1: ( ( '.' ) )
            // InternalGo.g:11695:1: ( '.' )
            {
            // InternalGo.g:11695:1: ( '.' )
            // InternalGo.g:11696:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodExprAccess().getFullStopKeyword_1()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodExprAccess().getFullStopKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodExpr__Group__1__Impl"


    // $ANTLR start "rule__MethodExpr__Group__2"
    // InternalGo.g:11705:1: rule__MethodExpr__Group__2 : rule__MethodExpr__Group__2__Impl ;
    public final void rule__MethodExpr__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11709:1: ( rule__MethodExpr__Group__2__Impl )
            // InternalGo.g:11710:2: rule__MethodExpr__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MethodExpr__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodExpr__Group__2"


    // $ANTLR start "rule__MethodExpr__Group__2__Impl"
    // InternalGo.g:11716:1: rule__MethodExpr__Group__2__Impl : ( RULE_IDENTIFIER ) ;
    public final void rule__MethodExpr__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11720:1: ( ( RULE_IDENTIFIER ) )
            // InternalGo.g:11721:1: ( RULE_IDENTIFIER )
            {
            // InternalGo.g:11721:1: ( RULE_IDENTIFIER )
            // InternalGo.g:11722:2: RULE_IDENTIFIER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodExprAccess().getIDENTIFIERTerminalRuleCall_2()); 
            }
            match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodExprAccess().getIDENTIFIERTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodExpr__Group__2__Impl"


    // $ANTLR start "rule__ReceiverType__Group_1__0"
    // InternalGo.g:11732:1: rule__ReceiverType__Group_1__0 : rule__ReceiverType__Group_1__0__Impl rule__ReceiverType__Group_1__1 ;
    public final void rule__ReceiverType__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11736:1: ( rule__ReceiverType__Group_1__0__Impl rule__ReceiverType__Group_1__1 )
            // InternalGo.g:11737:2: rule__ReceiverType__Group_1__0__Impl rule__ReceiverType__Group_1__1
            {
            pushFollow(FOLLOW_59);
            rule__ReceiverType__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ReceiverType__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReceiverType__Group_1__0"


    // $ANTLR start "rule__ReceiverType__Group_1__0__Impl"
    // InternalGo.g:11744:1: rule__ReceiverType__Group_1__0__Impl : ( '(' ) ;
    public final void rule__ReceiverType__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11748:1: ( ( '(' ) )
            // InternalGo.g:11749:1: ( '(' )
            {
            // InternalGo.g:11749:1: ( '(' )
            // InternalGo.g:11750:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReceiverTypeAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,65,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReceiverTypeAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReceiverType__Group_1__0__Impl"


    // $ANTLR start "rule__ReceiverType__Group_1__1"
    // InternalGo.g:11759:1: rule__ReceiverType__Group_1__1 : rule__ReceiverType__Group_1__1__Impl rule__ReceiverType__Group_1__2 ;
    public final void rule__ReceiverType__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11763:1: ( rule__ReceiverType__Group_1__1__Impl rule__ReceiverType__Group_1__2 )
            // InternalGo.g:11764:2: rule__ReceiverType__Group_1__1__Impl rule__ReceiverType__Group_1__2
            {
            pushFollow(FOLLOW_60);
            rule__ReceiverType__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ReceiverType__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReceiverType__Group_1__1"


    // $ANTLR start "rule__ReceiverType__Group_1__1__Impl"
    // InternalGo.g:11771:1: rule__ReceiverType__Group_1__1__Impl : ( '*' ) ;
    public final void rule__ReceiverType__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11775:1: ( ( '*' ) )
            // InternalGo.g:11776:1: ( '*' )
            {
            // InternalGo.g:11776:1: ( '*' )
            // InternalGo.g:11777:2: '*'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReceiverTypeAccess().getAsteriskKeyword_1_1()); 
            }
            match(input,52,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReceiverTypeAccess().getAsteriskKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReceiverType__Group_1__1__Impl"


    // $ANTLR start "rule__ReceiverType__Group_1__2"
    // InternalGo.g:11786:1: rule__ReceiverType__Group_1__2 : rule__ReceiverType__Group_1__2__Impl rule__ReceiverType__Group_1__3 ;
    public final void rule__ReceiverType__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11790:1: ( rule__ReceiverType__Group_1__2__Impl rule__ReceiverType__Group_1__3 )
            // InternalGo.g:11791:2: rule__ReceiverType__Group_1__2__Impl rule__ReceiverType__Group_1__3
            {
            pushFollow(FOLLOW_38);
            rule__ReceiverType__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ReceiverType__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReceiverType__Group_1__2"


    // $ANTLR start "rule__ReceiverType__Group_1__2__Impl"
    // InternalGo.g:11798:1: rule__ReceiverType__Group_1__2__Impl : ( ( rule__ReceiverType__TypeNameAssignment_1_2 ) ) ;
    public final void rule__ReceiverType__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11802:1: ( ( ( rule__ReceiverType__TypeNameAssignment_1_2 ) ) )
            // InternalGo.g:11803:1: ( ( rule__ReceiverType__TypeNameAssignment_1_2 ) )
            {
            // InternalGo.g:11803:1: ( ( rule__ReceiverType__TypeNameAssignment_1_2 ) )
            // InternalGo.g:11804:2: ( rule__ReceiverType__TypeNameAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReceiverTypeAccess().getTypeNameAssignment_1_2()); 
            }
            // InternalGo.g:11805:2: ( rule__ReceiverType__TypeNameAssignment_1_2 )
            // InternalGo.g:11805:3: rule__ReceiverType__TypeNameAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__ReceiverType__TypeNameAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReceiverTypeAccess().getTypeNameAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReceiverType__Group_1__2__Impl"


    // $ANTLR start "rule__ReceiverType__Group_1__3"
    // InternalGo.g:11813:1: rule__ReceiverType__Group_1__3 : rule__ReceiverType__Group_1__3__Impl ;
    public final void rule__ReceiverType__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11817:1: ( rule__ReceiverType__Group_1__3__Impl )
            // InternalGo.g:11818:2: rule__ReceiverType__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ReceiverType__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReceiverType__Group_1__3"


    // $ANTLR start "rule__ReceiverType__Group_1__3__Impl"
    // InternalGo.g:11824:1: rule__ReceiverType__Group_1__3__Impl : ( ')' ) ;
    public final void rule__ReceiverType__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11828:1: ( ( ')' ) )
            // InternalGo.g:11829:1: ( ')' )
            {
            // InternalGo.g:11829:1: ( ')' )
            // InternalGo.g:11830:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReceiverTypeAccess().getRightParenthesisKeyword_1_3()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReceiverTypeAccess().getRightParenthesisKeyword_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReceiverType__Group_1__3__Impl"


    // $ANTLR start "rule__ReceiverType__Group_2__0"
    // InternalGo.g:11840:1: rule__ReceiverType__Group_2__0 : rule__ReceiverType__Group_2__0__Impl rule__ReceiverType__Group_2__1 ;
    public final void rule__ReceiverType__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11844:1: ( rule__ReceiverType__Group_2__0__Impl rule__ReceiverType__Group_2__1 )
            // InternalGo.g:11845:2: rule__ReceiverType__Group_2__0__Impl rule__ReceiverType__Group_2__1
            {
            pushFollow(FOLLOW_61);
            rule__ReceiverType__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ReceiverType__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReceiverType__Group_2__0"


    // $ANTLR start "rule__ReceiverType__Group_2__0__Impl"
    // InternalGo.g:11852:1: rule__ReceiverType__Group_2__0__Impl : ( '(' ) ;
    public final void rule__ReceiverType__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11856:1: ( ( '(' ) )
            // InternalGo.g:11857:1: ( '(' )
            {
            // InternalGo.g:11857:1: ( '(' )
            // InternalGo.g:11858:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReceiverTypeAccess().getLeftParenthesisKeyword_2_0()); 
            }
            match(input,65,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReceiverTypeAccess().getLeftParenthesisKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReceiverType__Group_2__0__Impl"


    // $ANTLR start "rule__ReceiverType__Group_2__1"
    // InternalGo.g:11867:1: rule__ReceiverType__Group_2__1 : rule__ReceiverType__Group_2__1__Impl rule__ReceiverType__Group_2__2 ;
    public final void rule__ReceiverType__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11871:1: ( rule__ReceiverType__Group_2__1__Impl rule__ReceiverType__Group_2__2 )
            // InternalGo.g:11872:2: rule__ReceiverType__Group_2__1__Impl rule__ReceiverType__Group_2__2
            {
            pushFollow(FOLLOW_38);
            rule__ReceiverType__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ReceiverType__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReceiverType__Group_2__1"


    // $ANTLR start "rule__ReceiverType__Group_2__1__Impl"
    // InternalGo.g:11879:1: rule__ReceiverType__Group_2__1__Impl : ( ( rule__ReceiverType__ReceiverTypeAssignment_2_1 ) ) ;
    public final void rule__ReceiverType__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11883:1: ( ( ( rule__ReceiverType__ReceiverTypeAssignment_2_1 ) ) )
            // InternalGo.g:11884:1: ( ( rule__ReceiverType__ReceiverTypeAssignment_2_1 ) )
            {
            // InternalGo.g:11884:1: ( ( rule__ReceiverType__ReceiverTypeAssignment_2_1 ) )
            // InternalGo.g:11885:2: ( rule__ReceiverType__ReceiverTypeAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReceiverTypeAccess().getReceiverTypeAssignment_2_1()); 
            }
            // InternalGo.g:11886:2: ( rule__ReceiverType__ReceiverTypeAssignment_2_1 )
            // InternalGo.g:11886:3: rule__ReceiverType__ReceiverTypeAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ReceiverType__ReceiverTypeAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getReceiverTypeAccess().getReceiverTypeAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReceiverType__Group_2__1__Impl"


    // $ANTLR start "rule__ReceiverType__Group_2__2"
    // InternalGo.g:11894:1: rule__ReceiverType__Group_2__2 : rule__ReceiverType__Group_2__2__Impl ;
    public final void rule__ReceiverType__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11898:1: ( rule__ReceiverType__Group_2__2__Impl )
            // InternalGo.g:11899:2: rule__ReceiverType__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ReceiverType__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReceiverType__Group_2__2"


    // $ANTLR start "rule__ReceiverType__Group_2__2__Impl"
    // InternalGo.g:11905:1: rule__ReceiverType__Group_2__2__Impl : ( ')' ) ;
    public final void rule__ReceiverType__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11909:1: ( ( ')' ) )
            // InternalGo.g:11910:1: ( ')' )
            {
            // InternalGo.g:11910:1: ( ')' )
            // InternalGo.g:11911:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReceiverTypeAccess().getRightParenthesisKeyword_2_2()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReceiverTypeAccess().getRightParenthesisKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReceiverType__Group_2__2__Impl"


    // $ANTLR start "rule__Expression__Group__0"
    // InternalGo.g:11921:1: rule__Expression__Group__0 : rule__Expression__Group__0__Impl rule__Expression__Group__1 ;
    public final void rule__Expression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11925:1: ( rule__Expression__Group__0__Impl rule__Expression__Group__1 )
            // InternalGo.g:11926:2: rule__Expression__Group__0__Impl rule__Expression__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__Expression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Expression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__0"


    // $ANTLR start "rule__Expression__Group__0__Impl"
    // InternalGo.g:11933:1: rule__Expression__Group__0__Impl : ( ( rule__Expression__UnaryExprAssignment_0 ) ) ;
    public final void rule__Expression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11937:1: ( ( ( rule__Expression__UnaryExprAssignment_0 ) ) )
            // InternalGo.g:11938:1: ( ( rule__Expression__UnaryExprAssignment_0 ) )
            {
            // InternalGo.g:11938:1: ( ( rule__Expression__UnaryExprAssignment_0 ) )
            // InternalGo.g:11939:2: ( rule__Expression__UnaryExprAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getUnaryExprAssignment_0()); 
            }
            // InternalGo.g:11940:2: ( rule__Expression__UnaryExprAssignment_0 )
            // InternalGo.g:11940:3: rule__Expression__UnaryExprAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__UnaryExprAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getUnaryExprAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__0__Impl"


    // $ANTLR start "rule__Expression__Group__1"
    // InternalGo.g:11948:1: rule__Expression__Group__1 : rule__Expression__Group__1__Impl ;
    public final void rule__Expression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11952:1: ( rule__Expression__Group__1__Impl )
            // InternalGo.g:11953:2: rule__Expression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__1"


    // $ANTLR start "rule__Expression__Group__1__Impl"
    // InternalGo.g:11959:1: rule__Expression__Group__1__Impl : ( ( rule__Expression__ExpressionMatchedAssignment_1 ) ) ;
    public final void rule__Expression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11963:1: ( ( ( rule__Expression__ExpressionMatchedAssignment_1 ) ) )
            // InternalGo.g:11964:1: ( ( rule__Expression__ExpressionMatchedAssignment_1 ) )
            {
            // InternalGo.g:11964:1: ( ( rule__Expression__ExpressionMatchedAssignment_1 ) )
            // InternalGo.g:11965:2: ( rule__Expression__ExpressionMatchedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getExpressionMatchedAssignment_1()); 
            }
            // InternalGo.g:11966:2: ( rule__Expression__ExpressionMatchedAssignment_1 )
            // InternalGo.g:11966:3: rule__Expression__ExpressionMatchedAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Expression__ExpressionMatchedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getExpressionMatchedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__1__Impl"


    // $ANTLR start "rule__ExpressionMatched__Group__0"
    // InternalGo.g:11975:1: rule__ExpressionMatched__Group__0 : rule__ExpressionMatched__Group__0__Impl rule__ExpressionMatched__Group__1 ;
    public final void rule__ExpressionMatched__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11979:1: ( rule__ExpressionMatched__Group__0__Impl rule__ExpressionMatched__Group__1 )
            // InternalGo.g:11980:2: rule__ExpressionMatched__Group__0__Impl rule__ExpressionMatched__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__ExpressionMatched__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionMatched__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionMatched__Group__0"


    // $ANTLR start "rule__ExpressionMatched__Group__0__Impl"
    // InternalGo.g:11987:1: rule__ExpressionMatched__Group__0__Impl : ( RULE_BINARY_OP ) ;
    public final void rule__ExpressionMatched__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:11991:1: ( ( RULE_BINARY_OP ) )
            // InternalGo.g:11992:1: ( RULE_BINARY_OP )
            {
            // InternalGo.g:11992:1: ( RULE_BINARY_OP )
            // InternalGo.g:11993:2: RULE_BINARY_OP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionMatchedAccess().getBINARY_OPTerminalRuleCall_0()); 
            }
            match(input,RULE_BINARY_OP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionMatchedAccess().getBINARY_OPTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionMatched__Group__0__Impl"


    // $ANTLR start "rule__ExpressionMatched__Group__1"
    // InternalGo.g:12002:1: rule__ExpressionMatched__Group__1 : rule__ExpressionMatched__Group__1__Impl ;
    public final void rule__ExpressionMatched__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12006:1: ( rule__ExpressionMatched__Group__1__Impl )
            // InternalGo.g:12007:2: rule__ExpressionMatched__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionMatched__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionMatched__Group__1"


    // $ANTLR start "rule__ExpressionMatched__Group__1__Impl"
    // InternalGo.g:12013:1: rule__ExpressionMatched__Group__1__Impl : ( ( rule__ExpressionMatched__ExpressionAssignment_1 ) ) ;
    public final void rule__ExpressionMatched__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12017:1: ( ( ( rule__ExpressionMatched__ExpressionAssignment_1 ) ) )
            // InternalGo.g:12018:1: ( ( rule__ExpressionMatched__ExpressionAssignment_1 ) )
            {
            // InternalGo.g:12018:1: ( ( rule__ExpressionMatched__ExpressionAssignment_1 ) )
            // InternalGo.g:12019:2: ( rule__ExpressionMatched__ExpressionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionMatchedAccess().getExpressionAssignment_1()); 
            }
            // InternalGo.g:12020:2: ( rule__ExpressionMatched__ExpressionAssignment_1 )
            // InternalGo.g:12020:3: rule__ExpressionMatched__ExpressionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionMatched__ExpressionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionMatchedAccess().getExpressionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionMatched__Group__1__Impl"


    // $ANTLR start "rule__UnaryExpr__Group_1__0"
    // InternalGo.g:12029:1: rule__UnaryExpr__Group_1__0 : rule__UnaryExpr__Group_1__0__Impl rule__UnaryExpr__Group_1__1 ;
    public final void rule__UnaryExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12033:1: ( rule__UnaryExpr__Group_1__0__Impl rule__UnaryExpr__Group_1__1 )
            // InternalGo.g:12034:2: rule__UnaryExpr__Group_1__0__Impl rule__UnaryExpr__Group_1__1
            {
            pushFollow(FOLLOW_16);
            rule__UnaryExpr__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnaryExpr__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpr__Group_1__0"


    // $ANTLR start "rule__UnaryExpr__Group_1__0__Impl"
    // InternalGo.g:12041:1: rule__UnaryExpr__Group_1__0__Impl : ( ( rule__UnaryExpr__Alternatives_1_0 ) ) ;
    public final void rule__UnaryExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12045:1: ( ( ( rule__UnaryExpr__Alternatives_1_0 ) ) )
            // InternalGo.g:12046:1: ( ( rule__UnaryExpr__Alternatives_1_0 ) )
            {
            // InternalGo.g:12046:1: ( ( rule__UnaryExpr__Alternatives_1_0 ) )
            // InternalGo.g:12047:2: ( rule__UnaryExpr__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExprAccess().getAlternatives_1_0()); 
            }
            // InternalGo.g:12048:2: ( rule__UnaryExpr__Alternatives_1_0 )
            // InternalGo.g:12048:3: rule__UnaryExpr__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__UnaryExpr__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExprAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpr__Group_1__0__Impl"


    // $ANTLR start "rule__UnaryExpr__Group_1__1"
    // InternalGo.g:12056:1: rule__UnaryExpr__Group_1__1 : rule__UnaryExpr__Group_1__1__Impl ;
    public final void rule__UnaryExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12060:1: ( rule__UnaryExpr__Group_1__1__Impl )
            // InternalGo.g:12061:2: rule__UnaryExpr__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnaryExpr__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpr__Group_1__1"


    // $ANTLR start "rule__UnaryExpr__Group_1__1__Impl"
    // InternalGo.g:12067:1: rule__UnaryExpr__Group_1__1__Impl : ( ( rule__UnaryExpr__UnaryExprAssignment_1_1 ) ) ;
    public final void rule__UnaryExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12071:1: ( ( ( rule__UnaryExpr__UnaryExprAssignment_1_1 ) ) )
            // InternalGo.g:12072:1: ( ( rule__UnaryExpr__UnaryExprAssignment_1_1 ) )
            {
            // InternalGo.g:12072:1: ( ( rule__UnaryExpr__UnaryExprAssignment_1_1 ) )
            // InternalGo.g:12073:2: ( rule__UnaryExpr__UnaryExprAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExprAccess().getUnaryExprAssignment_1_1()); 
            }
            // InternalGo.g:12074:2: ( rule__UnaryExpr__UnaryExprAssignment_1_1 )
            // InternalGo.g:12074:3: rule__UnaryExpr__UnaryExprAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UnaryExpr__UnaryExprAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExprAccess().getUnaryExprAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpr__Group_1__1__Impl"


    // $ANTLR start "rule__Conversion__Group__0"
    // InternalGo.g:12083:1: rule__Conversion__Group__0 : rule__Conversion__Group__0__Impl rule__Conversion__Group__1 ;
    public final void rule__Conversion__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12087:1: ( rule__Conversion__Group__0__Impl rule__Conversion__Group__1 )
            // InternalGo.g:12088:2: rule__Conversion__Group__0__Impl rule__Conversion__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__Conversion__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Conversion__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Conversion__Group__0"


    // $ANTLR start "rule__Conversion__Group__0__Impl"
    // InternalGo.g:12095:1: rule__Conversion__Group__0__Impl : ( ( rule__Conversion__TypeAssignment_0 ) ) ;
    public final void rule__Conversion__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12099:1: ( ( ( rule__Conversion__TypeAssignment_0 ) ) )
            // InternalGo.g:12100:1: ( ( rule__Conversion__TypeAssignment_0 ) )
            {
            // InternalGo.g:12100:1: ( ( rule__Conversion__TypeAssignment_0 ) )
            // InternalGo.g:12101:2: ( rule__Conversion__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConversionAccess().getTypeAssignment_0()); 
            }
            // InternalGo.g:12102:2: ( rule__Conversion__TypeAssignment_0 )
            // InternalGo.g:12102:3: rule__Conversion__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Conversion__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConversionAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Conversion__Group__0__Impl"


    // $ANTLR start "rule__Conversion__Group__1"
    // InternalGo.g:12110:1: rule__Conversion__Group__1 : rule__Conversion__Group__1__Impl rule__Conversion__Group__2 ;
    public final void rule__Conversion__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12114:1: ( rule__Conversion__Group__1__Impl rule__Conversion__Group__2 )
            // InternalGo.g:12115:2: rule__Conversion__Group__1__Impl rule__Conversion__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__Conversion__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Conversion__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Conversion__Group__1"


    // $ANTLR start "rule__Conversion__Group__1__Impl"
    // InternalGo.g:12122:1: rule__Conversion__Group__1__Impl : ( '(' ) ;
    public final void rule__Conversion__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12126:1: ( ( '(' ) )
            // InternalGo.g:12127:1: ( '(' )
            {
            // InternalGo.g:12127:1: ( '(' )
            // InternalGo.g:12128:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,65,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Conversion__Group__1__Impl"


    // $ANTLR start "rule__Conversion__Group__2"
    // InternalGo.g:12137:1: rule__Conversion__Group__2 : rule__Conversion__Group__2__Impl rule__Conversion__Group__3 ;
    public final void rule__Conversion__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12141:1: ( rule__Conversion__Group__2__Impl rule__Conversion__Group__3 )
            // InternalGo.g:12142:2: rule__Conversion__Group__2__Impl rule__Conversion__Group__3
            {
            pushFollow(FOLLOW_63);
            rule__Conversion__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Conversion__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Conversion__Group__2"


    // $ANTLR start "rule__Conversion__Group__2__Impl"
    // InternalGo.g:12149:1: rule__Conversion__Group__2__Impl : ( ( rule__Conversion__ExpressionAssignment_2 ) ) ;
    public final void rule__Conversion__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12153:1: ( ( ( rule__Conversion__ExpressionAssignment_2 ) ) )
            // InternalGo.g:12154:1: ( ( rule__Conversion__ExpressionAssignment_2 ) )
            {
            // InternalGo.g:12154:1: ( ( rule__Conversion__ExpressionAssignment_2 ) )
            // InternalGo.g:12155:2: ( rule__Conversion__ExpressionAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConversionAccess().getExpressionAssignment_2()); 
            }
            // InternalGo.g:12156:2: ( rule__Conversion__ExpressionAssignment_2 )
            // InternalGo.g:12156:3: rule__Conversion__ExpressionAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Conversion__ExpressionAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConversionAccess().getExpressionAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Conversion__Group__2__Impl"


    // $ANTLR start "rule__Conversion__Group__3"
    // InternalGo.g:12164:1: rule__Conversion__Group__3 : rule__Conversion__Group__3__Impl rule__Conversion__Group__4 ;
    public final void rule__Conversion__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12168:1: ( rule__Conversion__Group__3__Impl rule__Conversion__Group__4 )
            // InternalGo.g:12169:2: rule__Conversion__Group__3__Impl rule__Conversion__Group__4
            {
            pushFollow(FOLLOW_63);
            rule__Conversion__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Conversion__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Conversion__Group__3"


    // $ANTLR start "rule__Conversion__Group__3__Impl"
    // InternalGo.g:12176:1: rule__Conversion__Group__3__Impl : ( ( ',' )? ) ;
    public final void rule__Conversion__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12180:1: ( ( ( ',' )? ) )
            // InternalGo.g:12181:1: ( ( ',' )? )
            {
            // InternalGo.g:12181:1: ( ( ',' )? )
            // InternalGo.g:12182:2: ( ',' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConversionAccess().getCommaKeyword_3()); 
            }
            // InternalGo.g:12183:2: ( ',' )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==69) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalGo.g:12183:3: ','
                    {
                    match(input,69,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConversionAccess().getCommaKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Conversion__Group__3__Impl"


    // $ANTLR start "rule__Conversion__Group__4"
    // InternalGo.g:12191:1: rule__Conversion__Group__4 : rule__Conversion__Group__4__Impl ;
    public final void rule__Conversion__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12195:1: ( rule__Conversion__Group__4__Impl )
            // InternalGo.g:12196:2: rule__Conversion__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Conversion__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Conversion__Group__4"


    // $ANTLR start "rule__Conversion__Group__4__Impl"
    // InternalGo.g:12202:1: rule__Conversion__Group__4__Impl : ( ')' ) ;
    public final void rule__Conversion__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12206:1: ( ( ')' ) )
            // InternalGo.g:12207:1: ( ')' )
            {
            // InternalGo.g:12207:1: ( ')' )
            // InternalGo.g:12208:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConversionAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConversionAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Conversion__Group__4__Impl"


    // $ANTLR start "rule__Model__GreetingsAssignment"
    // InternalGo.g:12218:1: rule__Model__GreetingsAssignment : ( rulesourceFile ) ;
    public final void rule__Model__GreetingsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12222:1: ( ( rulesourceFile ) )
            // InternalGo.g:12223:2: ( rulesourceFile )
            {
            // InternalGo.g:12223:2: ( rulesourceFile )
            // InternalGo.g:12224:3: rulesourceFile
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getGreetingsSourceFileParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesourceFile();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getGreetingsSourceFileParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__GreetingsAssignment"


    // $ANTLR start "rule__SourceFile__PackageClauseAssignment_0"
    // InternalGo.g:12233:1: rule__SourceFile__PackageClauseAssignment_0 : ( rulepackageClause ) ;
    public final void rule__SourceFile__PackageClauseAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12237:1: ( ( rulepackageClause ) )
            // InternalGo.g:12238:2: ( rulepackageClause )
            {
            // InternalGo.g:12238:2: ( rulepackageClause )
            // InternalGo.g:12239:3: rulepackageClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSourceFileAccess().getPackageClausePackageClauseParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulepackageClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSourceFileAccess().getPackageClausePackageClauseParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SourceFile__PackageClauseAssignment_0"


    // $ANTLR start "rule__SourceFile__ImportDeclAssignment_1"
    // InternalGo.g:12248:1: rule__SourceFile__ImportDeclAssignment_1 : ( ruleimportDecl ) ;
    public final void rule__SourceFile__ImportDeclAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12252:1: ( ( ruleimportDecl ) )
            // InternalGo.g:12253:2: ( ruleimportDecl )
            {
            // InternalGo.g:12253:2: ( ruleimportDecl )
            // InternalGo.g:12254:3: ruleimportDecl
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSourceFileAccess().getImportDeclImportDeclParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleimportDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSourceFileAccess().getImportDeclImportDeclParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SourceFile__ImportDeclAssignment_1"


    // $ANTLR start "rule__SourceFile__TopLevelDeclAssignment_2"
    // InternalGo.g:12263:1: rule__SourceFile__TopLevelDeclAssignment_2 : ( ruletopLevelDecl ) ;
    public final void rule__SourceFile__TopLevelDeclAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12267:1: ( ( ruletopLevelDecl ) )
            // InternalGo.g:12268:2: ( ruletopLevelDecl )
            {
            // InternalGo.g:12268:2: ( ruletopLevelDecl )
            // InternalGo.g:12269:3: ruletopLevelDecl
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSourceFileAccess().getTopLevelDeclTopLevelDeclParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletopLevelDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSourceFileAccess().getTopLevelDeclTopLevelDeclParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SourceFile__TopLevelDeclAssignment_2"


    // $ANTLR start "rule__ImportDecl__ImportSpecAssignment_1_0"
    // InternalGo.g:12278:1: rule__ImportDecl__ImportSpecAssignment_1_0 : ( ruleimportSpec ) ;
    public final void rule__ImportDecl__ImportSpecAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12282:1: ( ( ruleimportSpec ) )
            // InternalGo.g:12283:2: ( ruleimportSpec )
            {
            // InternalGo.g:12283:2: ( ruleimportSpec )
            // InternalGo.g:12284:3: ruleimportSpec
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleimportSpec();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportDecl__ImportSpecAssignment_1_0"


    // $ANTLR start "rule__ImportDecl__ImportSpecAssignment_1_1_1"
    // InternalGo.g:12293:1: rule__ImportDecl__ImportSpecAssignment_1_1_1 : ( ruleimportSpec ) ;
    public final void rule__ImportDecl__ImportSpecAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12297:1: ( ( ruleimportSpec ) )
            // InternalGo.g:12298:2: ( ruleimportSpec )
            {
            // InternalGo.g:12298:2: ( ruleimportSpec )
            // InternalGo.g:12299:3: ruleimportSpec
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleimportSpec();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportDecl__ImportSpecAssignment_1_1_1"


    // $ANTLR start "rule__ImportSpec__ImportPathAssignment_1"
    // InternalGo.g:12308:1: rule__ImportSpec__ImportPathAssignment_1 : ( ruleimportPath ) ;
    public final void rule__ImportSpec__ImportPathAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12312:1: ( ( ruleimportPath ) )
            // InternalGo.g:12313:2: ( ruleimportPath )
            {
            // InternalGo.g:12313:2: ( ruleimportPath )
            // InternalGo.g:12314:3: ruleimportPath
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getImportSpecAccess().getImportPathImportPathParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleimportPath();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getImportSpecAccess().getImportPathImportPathParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ImportSpec__ImportPathAssignment_1"


    // $ANTLR start "rule__TopLevelDecl__DeclarationAssignment_0"
    // InternalGo.g:12323:1: rule__TopLevelDecl__DeclarationAssignment_0 : ( ruledeclaration ) ;
    public final void rule__TopLevelDecl__DeclarationAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12327:1: ( ( ruledeclaration ) )
            // InternalGo.g:12328:2: ( ruledeclaration )
            {
            // InternalGo.g:12328:2: ( ruledeclaration )
            // InternalGo.g:12329:3: ruledeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTopLevelDeclAccess().getDeclarationDeclarationParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruledeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTopLevelDeclAccess().getDeclarationDeclarationParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TopLevelDecl__DeclarationAssignment_0"


    // $ANTLR start "rule__TopLevelDecl__FunctionDeclAssignment_1"
    // InternalGo.g:12338:1: rule__TopLevelDecl__FunctionDeclAssignment_1 : ( rulefunctionDecl ) ;
    public final void rule__TopLevelDecl__FunctionDeclAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12342:1: ( ( rulefunctionDecl ) )
            // InternalGo.g:12343:2: ( rulefunctionDecl )
            {
            // InternalGo.g:12343:2: ( rulefunctionDecl )
            // InternalGo.g:12344:3: rulefunctionDecl
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTopLevelDeclAccess().getFunctionDeclFunctionDeclParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefunctionDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTopLevelDeclAccess().getFunctionDeclFunctionDeclParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TopLevelDecl__FunctionDeclAssignment_1"


    // $ANTLR start "rule__TopLevelDecl__MethodDeclAssignment_2"
    // InternalGo.g:12353:1: rule__TopLevelDecl__MethodDeclAssignment_2 : ( rulemethodDecl ) ;
    public final void rule__TopLevelDecl__MethodDeclAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12357:1: ( ( rulemethodDecl ) )
            // InternalGo.g:12358:2: ( rulemethodDecl )
            {
            // InternalGo.g:12358:2: ( rulemethodDecl )
            // InternalGo.g:12359:3: rulemethodDecl
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTopLevelDeclAccess().getMethodDeclMethodDeclParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulemethodDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTopLevelDeclAccess().getMethodDeclMethodDeclParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TopLevelDecl__MethodDeclAssignment_2"


    // $ANTLR start "rule__Declaration__ConstDeclAssignment_0"
    // InternalGo.g:12368:1: rule__Declaration__ConstDeclAssignment_0 : ( ruleconstDecl ) ;
    public final void rule__Declaration__ConstDeclAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12372:1: ( ( ruleconstDecl ) )
            // InternalGo.g:12373:2: ( ruleconstDecl )
            {
            // InternalGo.g:12373:2: ( ruleconstDecl )
            // InternalGo.g:12374:3: ruleconstDecl
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationAccess().getConstDeclConstDeclParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleconstDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationAccess().getConstDeclConstDeclParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Declaration__ConstDeclAssignment_0"


    // $ANTLR start "rule__Declaration__TypeDeclAssignment_1"
    // InternalGo.g:12383:1: rule__Declaration__TypeDeclAssignment_1 : ( ruletypeDecl ) ;
    public final void rule__Declaration__TypeDeclAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12387:1: ( ( ruletypeDecl ) )
            // InternalGo.g:12388:2: ( ruletypeDecl )
            {
            // InternalGo.g:12388:2: ( ruletypeDecl )
            // InternalGo.g:12389:3: ruletypeDecl
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationAccess().getTypeDeclTypeDeclParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletypeDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationAccess().getTypeDeclTypeDeclParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Declaration__TypeDeclAssignment_1"


    // $ANTLR start "rule__Declaration__VarDeclAssignment_2"
    // InternalGo.g:12398:1: rule__Declaration__VarDeclAssignment_2 : ( rulevarDecl ) ;
    public final void rule__Declaration__VarDeclAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12402:1: ( ( rulevarDecl ) )
            // InternalGo.g:12403:2: ( rulevarDecl )
            {
            // InternalGo.g:12403:2: ( rulevarDecl )
            // InternalGo.g:12404:3: rulevarDecl
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeclarationAccess().getVarDeclVarDeclParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevarDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeclarationAccess().getVarDeclVarDeclParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Declaration__VarDeclAssignment_2"


    // $ANTLR start "rule__ConstDecl__ConstSpecAssignment_1_0"
    // InternalGo.g:12413:1: rule__ConstDecl__ConstSpecAssignment_1_0 : ( ruleconstSpec ) ;
    public final void rule__ConstDecl__ConstSpecAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12417:1: ( ( ruleconstSpec ) )
            // InternalGo.g:12418:2: ( ruleconstSpec )
            {
            // InternalGo.g:12418:2: ( ruleconstSpec )
            // InternalGo.g:12419:3: ruleconstSpec
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleconstSpec();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstDecl__ConstSpecAssignment_1_0"


    // $ANTLR start "rule__ConstDecl__ConstSpecAssignment_1_1_1"
    // InternalGo.g:12428:1: rule__ConstDecl__ConstSpecAssignment_1_1_1 : ( ruleconstSpec ) ;
    public final void rule__ConstDecl__ConstSpecAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12432:1: ( ( ruleconstSpec ) )
            // InternalGo.g:12433:2: ( ruleconstSpec )
            {
            // InternalGo.g:12433:2: ( ruleconstSpec )
            // InternalGo.g:12434:3: ruleconstSpec
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleconstSpec();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstDecl__ConstSpecAssignment_1_1_1"


    // $ANTLR start "rule__ConstSpec__IdentifierListAssignment_0"
    // InternalGo.g:12443:1: rule__ConstSpec__IdentifierListAssignment_0 : ( ruleidentifierList ) ;
    public final void rule__ConstSpec__IdentifierListAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12447:1: ( ( ruleidentifierList ) )
            // InternalGo.g:12448:2: ( ruleidentifierList )
            {
            // InternalGo.g:12448:2: ( ruleidentifierList )
            // InternalGo.g:12449:3: ruleidentifierList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleidentifierList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstSpec__IdentifierListAssignment_0"


    // $ANTLR start "rule__ConstSpec__TypeAssignment_1_0"
    // InternalGo.g:12458:1: rule__ConstSpec__TypeAssignment_1_0 : ( ruletype ) ;
    public final void rule__ConstSpec__TypeAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12462:1: ( ( ruletype ) )
            // InternalGo.g:12463:2: ( ruletype )
            {
            // InternalGo.g:12463:2: ( ruletype )
            // InternalGo.g:12464:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstSpecAccess().getTypeTypeParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstSpecAccess().getTypeTypeParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstSpec__TypeAssignment_1_0"


    // $ANTLR start "rule__ConstSpec__ExpressionListAssignment_1_2"
    // InternalGo.g:12473:1: rule__ConstSpec__ExpressionListAssignment_1_2 : ( ruleexpressionList ) ;
    public final void rule__ConstSpec__ExpressionListAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12477:1: ( ( ruleexpressionList ) )
            // InternalGo.g:12478:2: ( ruleexpressionList )
            {
            // InternalGo.g:12478:2: ( ruleexpressionList )
            // InternalGo.g:12479:3: ruleexpressionList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConstSpecAccess().getExpressionListExpressionListParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpressionList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConstSpecAccess().getExpressionListExpressionListParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConstSpec__ExpressionListAssignment_1_2"


    // $ANTLR start "rule__ExpressionList__ExpressionAssignment_0"
    // InternalGo.g:12488:1: rule__ExpressionList__ExpressionAssignment_0 : ( ruleexpression ) ;
    public final void rule__ExpressionList__ExpressionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12492:1: ( ( ruleexpression ) )
            // InternalGo.g:12493:2: ( ruleexpression )
            {
            // InternalGo.g:12493:2: ( ruleexpression )
            // InternalGo.g:12494:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionList__ExpressionAssignment_0"


    // $ANTLR start "rule__ExpressionList__ExpressionAssignment_1_1"
    // InternalGo.g:12503:1: rule__ExpressionList__ExpressionAssignment_1_1 : ( ruleexpression ) ;
    public final void rule__ExpressionList__ExpressionAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12507:1: ( ( ruleexpression ) )
            // InternalGo.g:12508:2: ( ruleexpression )
            {
            // InternalGo.g:12508:2: ( ruleexpression )
            // InternalGo.g:12509:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionList__ExpressionAssignment_1_1"


    // $ANTLR start "rule__TypeDecl__TypeSpecAssignment_1_0"
    // InternalGo.g:12518:1: rule__TypeDecl__TypeSpecAssignment_1_0 : ( ruletypeSpec ) ;
    public final void rule__TypeDecl__TypeSpecAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12522:1: ( ( ruletypeSpec ) )
            // InternalGo.g:12523:2: ( ruletypeSpec )
            {
            // InternalGo.g:12523:2: ( ruletypeSpec )
            // InternalGo.g:12524:3: ruletypeSpec
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletypeSpec();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeDecl__TypeSpecAssignment_1_0"


    // $ANTLR start "rule__TypeDecl__TypeSpecAssignment_1_1_1"
    // InternalGo.g:12533:1: rule__TypeDecl__TypeSpecAssignment_1_1_1 : ( ruletypeSpec ) ;
    public final void rule__TypeDecl__TypeSpecAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12537:1: ( ( ruletypeSpec ) )
            // InternalGo.g:12538:2: ( ruletypeSpec )
            {
            // InternalGo.g:12538:2: ( ruletypeSpec )
            // InternalGo.g:12539:3: ruletypeSpec
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletypeSpec();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeDecl__TypeSpecAssignment_1_1_1"


    // $ANTLR start "rule__TypeSpec__TypeAssignment_1"
    // InternalGo.g:12548:1: rule__TypeSpec__TypeAssignment_1 : ( ruletype ) ;
    public final void rule__TypeSpec__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12552:1: ( ( ruletype ) )
            // InternalGo.g:12553:2: ( ruletype )
            {
            // InternalGo.g:12553:2: ( ruletype )
            // InternalGo.g:12554:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSpecAccess().getTypeTypeParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSpecAccess().getTypeTypeParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSpec__TypeAssignment_1"


    // $ANTLR start "rule__FunctionDecl__FunctionAssignment_2_0"
    // InternalGo.g:12563:1: rule__FunctionDecl__FunctionAssignment_2_0 : ( rulefunction ) ;
    public final void rule__FunctionDecl__FunctionAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12567:1: ( ( rulefunction ) )
            // InternalGo.g:12568:2: ( rulefunction )
            {
            // InternalGo.g:12568:2: ( rulefunction )
            // InternalGo.g:12569:3: rulefunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDeclAccess().getFunctionFunctionParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDeclAccess().getFunctionFunctionParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDecl__FunctionAssignment_2_0"


    // $ANTLR start "rule__FunctionDecl__SignatureAssignment_2_1"
    // InternalGo.g:12578:1: rule__FunctionDecl__SignatureAssignment_2_1 : ( rulesignature ) ;
    public final void rule__FunctionDecl__SignatureAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12582:1: ( ( rulesignature ) )
            // InternalGo.g:12583:2: ( rulesignature )
            {
            // InternalGo.g:12583:2: ( rulesignature )
            // InternalGo.g:12584:3: rulesignature
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDeclAccess().getSignatureSignatureParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesignature();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDeclAccess().getSignatureSignatureParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDecl__SignatureAssignment_2_1"


    // $ANTLR start "rule__Function__SignatureAssignment_0"
    // InternalGo.g:12593:1: rule__Function__SignatureAssignment_0 : ( rulesignature ) ;
    public final void rule__Function__SignatureAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12597:1: ( ( rulesignature ) )
            // InternalGo.g:12598:2: ( rulesignature )
            {
            // InternalGo.g:12598:2: ( rulesignature )
            // InternalGo.g:12599:3: rulesignature
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getSignatureSignatureParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesignature();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getSignatureSignatureParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__SignatureAssignment_0"


    // $ANTLR start "rule__Function__BlockAssignment_1"
    // InternalGo.g:12608:1: rule__Function__BlockAssignment_1 : ( ruleblock ) ;
    public final void rule__Function__BlockAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12612:1: ( ( ruleblock ) )
            // InternalGo.g:12613:2: ( ruleblock )
            {
            // InternalGo.g:12613:2: ( ruleblock )
            // InternalGo.g:12614:3: ruleblock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAccess().getBlockBlockParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleblock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAccess().getBlockBlockParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__BlockAssignment_1"


    // $ANTLR start "rule__MethodDecl__ReceiverAssignment_1"
    // InternalGo.g:12623:1: rule__MethodDecl__ReceiverAssignment_1 : ( rulereceiver ) ;
    public final void rule__MethodDecl__ReceiverAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12627:1: ( ( rulereceiver ) )
            // InternalGo.g:12628:2: ( rulereceiver )
            {
            // InternalGo.g:12628:2: ( rulereceiver )
            // InternalGo.g:12629:3: rulereceiver
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodDeclAccess().getReceiverReceiverParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulereceiver();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodDeclAccess().getReceiverReceiverParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodDecl__ReceiverAssignment_1"


    // $ANTLR start "rule__MethodDecl__FunctionAssignment_3_0"
    // InternalGo.g:12638:1: rule__MethodDecl__FunctionAssignment_3_0 : ( rulefunction ) ;
    public final void rule__MethodDecl__FunctionAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12642:1: ( ( rulefunction ) )
            // InternalGo.g:12643:2: ( rulefunction )
            {
            // InternalGo.g:12643:2: ( rulefunction )
            // InternalGo.g:12644:3: rulefunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodDeclAccess().getFunctionFunctionParserRuleCall_3_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodDeclAccess().getFunctionFunctionParserRuleCall_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodDecl__FunctionAssignment_3_0"


    // $ANTLR start "rule__MethodDecl__SignatureAssignment_3_1"
    // InternalGo.g:12653:1: rule__MethodDecl__SignatureAssignment_3_1 : ( rulesignature ) ;
    public final void rule__MethodDecl__SignatureAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12657:1: ( ( rulesignature ) )
            // InternalGo.g:12658:2: ( rulesignature )
            {
            // InternalGo.g:12658:2: ( rulesignature )
            // InternalGo.g:12659:3: rulesignature
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodDeclAccess().getSignatureSignatureParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesignature();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodDeclAccess().getSignatureSignatureParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodDecl__SignatureAssignment_3_1"


    // $ANTLR start "rule__Receiver__ParametersAssignment"
    // InternalGo.g:12668:1: rule__Receiver__ParametersAssignment : ( ruleparameters ) ;
    public final void rule__Receiver__ParametersAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12672:1: ( ( ruleparameters ) )
            // InternalGo.g:12673:2: ( ruleparameters )
            {
            // InternalGo.g:12673:2: ( ruleparameters )
            // InternalGo.g:12674:3: ruleparameters
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReceiverAccess().getParametersParametersParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleparameters();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReceiverAccess().getParametersParametersParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Receiver__ParametersAssignment"


    // $ANTLR start "rule__VarDecl__VarSpecAssignment_1_0"
    // InternalGo.g:12683:1: rule__VarDecl__VarSpecAssignment_1_0 : ( rulevarSpec ) ;
    public final void rule__VarDecl__VarSpecAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12687:1: ( ( rulevarSpec ) )
            // InternalGo.g:12688:2: ( rulevarSpec )
            {
            // InternalGo.g:12688:2: ( rulevarSpec )
            // InternalGo.g:12689:3: rulevarSpec
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevarSpec();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDecl__VarSpecAssignment_1_0"


    // $ANTLR start "rule__VarDecl__VarSpecAssignment_1_1_1"
    // InternalGo.g:12698:1: rule__VarDecl__VarSpecAssignment_1_1_1 : ( rulevarSpec ) ;
    public final void rule__VarDecl__VarSpecAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12702:1: ( ( rulevarSpec ) )
            // InternalGo.g:12703:2: ( rulevarSpec )
            {
            // InternalGo.g:12703:2: ( rulevarSpec )
            // InternalGo.g:12704:3: rulevarSpec
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulevarSpec();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDecl__VarSpecAssignment_1_1_1"


    // $ANTLR start "rule__VarSpec__IdentifierListAssignment_0"
    // InternalGo.g:12713:1: rule__VarSpec__IdentifierListAssignment_0 : ( ruleidentifierList ) ;
    public final void rule__VarSpec__IdentifierListAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12717:1: ( ( ruleidentifierList ) )
            // InternalGo.g:12718:2: ( ruleidentifierList )
            {
            // InternalGo.g:12718:2: ( ruleidentifierList )
            // InternalGo.g:12719:3: ruleidentifierList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleidentifierList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__IdentifierListAssignment_0"


    // $ANTLR start "rule__VarSpec__TypeAssignment_1_0_0"
    // InternalGo.g:12728:1: rule__VarSpec__TypeAssignment_1_0_0 : ( ruletype ) ;
    public final void rule__VarSpec__TypeAssignment_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12732:1: ( ( ruletype ) )
            // InternalGo.g:12733:2: ( ruletype )
            {
            // InternalGo.g:12733:2: ( ruletype )
            // InternalGo.g:12734:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarSpecAccess().getTypeTypeParserRuleCall_1_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarSpecAccess().getTypeTypeParserRuleCall_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__TypeAssignment_1_0_0"


    // $ANTLR start "rule__VarSpec__ExpressionListAssignment_1_0_1_1"
    // InternalGo.g:12743:1: rule__VarSpec__ExpressionListAssignment_1_0_1_1 : ( ruleexpressionList ) ;
    public final void rule__VarSpec__ExpressionListAssignment_1_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12747:1: ( ( ruleexpressionList ) )
            // InternalGo.g:12748:2: ( ruleexpressionList )
            {
            // InternalGo.g:12748:2: ( ruleexpressionList )
            // InternalGo.g:12749:3: ruleexpressionList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpressionList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__ExpressionListAssignment_1_0_1_1"


    // $ANTLR start "rule__VarSpec__ExpressionListAssignment_1_1_1"
    // InternalGo.g:12758:1: rule__VarSpec__ExpressionListAssignment_1_1_1 : ( ruleexpressionList ) ;
    public final void rule__VarSpec__ExpressionListAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12762:1: ( ( ruleexpressionList ) )
            // InternalGo.g:12763:2: ( ruleexpressionList )
            {
            // InternalGo.g:12763:2: ( ruleexpressionList )
            // InternalGo.g:12764:3: ruleexpressionList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpressionList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarSpec__ExpressionListAssignment_1_1_1"


    // $ANTLR start "rule__Block__StatementListAssignment_1"
    // InternalGo.g:12773:1: rule__Block__StatementListAssignment_1 : ( rulestatementList ) ;
    public final void rule__Block__StatementListAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12777:1: ( ( rulestatementList ) )
            // InternalGo.g:12778:2: ( rulestatementList )
            {
            // InternalGo.g:12778:2: ( rulestatementList )
            // InternalGo.g:12779:3: rulestatementList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBlockAccess().getStatementListStatementListParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestatementList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBlockAccess().getStatementListStatementListParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__StatementListAssignment_1"


    // $ANTLR start "rule__StatementList__StatementAssignment"
    // InternalGo.g:12788:1: rule__StatementList__StatementAssignment : ( rulestatement ) ;
    public final void rule__StatementList__StatementAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12792:1: ( ( rulestatement ) )
            // InternalGo.g:12793:2: ( rulestatement )
            {
            // InternalGo.g:12793:2: ( rulestatement )
            // InternalGo.g:12794:3: rulestatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementListAccess().getStatementStatementParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementListAccess().getStatementStatementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StatementList__StatementAssignment"


    // $ANTLR start "rule__Statement__DeclarationAssignment_0"
    // InternalGo.g:12803:1: rule__Statement__DeclarationAssignment_0 : ( ruledeclaration ) ;
    public final void rule__Statement__DeclarationAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12807:1: ( ( ruledeclaration ) )
            // InternalGo.g:12808:2: ( ruledeclaration )
            {
            // InternalGo.g:12808:2: ( ruledeclaration )
            // InternalGo.g:12809:3: ruledeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruledeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__DeclarationAssignment_0"


    // $ANTLR start "rule__Statement__LabeledStmtAssignment_1"
    // InternalGo.g:12818:1: rule__Statement__LabeledStmtAssignment_1 : ( rulelabeledStmt ) ;
    public final void rule__Statement__LabeledStmtAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12822:1: ( ( rulelabeledStmt ) )
            // InternalGo.g:12823:2: ( rulelabeledStmt )
            {
            // InternalGo.g:12823:2: ( rulelabeledStmt )
            // InternalGo.g:12824:3: rulelabeledStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getLabeledStmtLabeledStmtParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulelabeledStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getLabeledStmtLabeledStmtParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__LabeledStmtAssignment_1"


    // $ANTLR start "rule__Statement__SimpleStmtAssignment_2"
    // InternalGo.g:12833:1: rule__Statement__SimpleStmtAssignment_2 : ( rulesimpleStmt ) ;
    public final void rule__Statement__SimpleStmtAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12837:1: ( ( rulesimpleStmt ) )
            // InternalGo.g:12838:2: ( rulesimpleStmt )
            {
            // InternalGo.g:12838:2: ( rulesimpleStmt )
            // InternalGo.g:12839:3: rulesimpleStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getSimpleStmtSimpleStmtParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesimpleStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getSimpleStmtSimpleStmtParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__SimpleStmtAssignment_2"


    // $ANTLR start "rule__Statement__GoStmtAssignment_3"
    // InternalGo.g:12848:1: rule__Statement__GoStmtAssignment_3 : ( rulegoStmt ) ;
    public final void rule__Statement__GoStmtAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12852:1: ( ( rulegoStmt ) )
            // InternalGo.g:12853:2: ( rulegoStmt )
            {
            // InternalGo.g:12853:2: ( rulegoStmt )
            // InternalGo.g:12854:3: rulegoStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getGoStmtGoStmtParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulegoStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getGoStmtGoStmtParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__GoStmtAssignment_3"


    // $ANTLR start "rule__Statement__ReturnStmtAssignment_4"
    // InternalGo.g:12863:1: rule__Statement__ReturnStmtAssignment_4 : ( rulereturnStmt ) ;
    public final void rule__Statement__ReturnStmtAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12867:1: ( ( rulereturnStmt ) )
            // InternalGo.g:12868:2: ( rulereturnStmt )
            {
            // InternalGo.g:12868:2: ( rulereturnStmt )
            // InternalGo.g:12869:3: rulereturnStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getReturnStmtReturnStmtParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            rulereturnStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getReturnStmtReturnStmtParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__ReturnStmtAssignment_4"


    // $ANTLR start "rule__Statement__BreakStmtAssignment_5"
    // InternalGo.g:12878:1: rule__Statement__BreakStmtAssignment_5 : ( rulebreakStmt ) ;
    public final void rule__Statement__BreakStmtAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12882:1: ( ( rulebreakStmt ) )
            // InternalGo.g:12883:2: ( rulebreakStmt )
            {
            // InternalGo.g:12883:2: ( rulebreakStmt )
            // InternalGo.g:12884:3: rulebreakStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getBreakStmtBreakStmtParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            rulebreakStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getBreakStmtBreakStmtParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__BreakStmtAssignment_5"


    // $ANTLR start "rule__Statement__ContinueStmtAssignment_6"
    // InternalGo.g:12893:1: rule__Statement__ContinueStmtAssignment_6 : ( rulecontinueStmt ) ;
    public final void rule__Statement__ContinueStmtAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12897:1: ( ( rulecontinueStmt ) )
            // InternalGo.g:12898:2: ( rulecontinueStmt )
            {
            // InternalGo.g:12898:2: ( rulecontinueStmt )
            // InternalGo.g:12899:3: rulecontinueStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getContinueStmtContinueStmtParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            rulecontinueStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getContinueStmtContinueStmtParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__ContinueStmtAssignment_6"


    // $ANTLR start "rule__Statement__GotoStmtAssignment_7"
    // InternalGo.g:12908:1: rule__Statement__GotoStmtAssignment_7 : ( rulegotoStmt ) ;
    public final void rule__Statement__GotoStmtAssignment_7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12912:1: ( ( rulegotoStmt ) )
            // InternalGo.g:12913:2: ( rulegotoStmt )
            {
            // InternalGo.g:12913:2: ( rulegotoStmt )
            // InternalGo.g:12914:3: rulegotoStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getGotoStmtGotoStmtParserRuleCall_7_0()); 
            }
            pushFollow(FOLLOW_2);
            rulegotoStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getGotoStmtGotoStmtParserRuleCall_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__GotoStmtAssignment_7"


    // $ANTLR start "rule__Statement__FallthroughStmtAssignment_8"
    // InternalGo.g:12923:1: rule__Statement__FallthroughStmtAssignment_8 : ( rulefallthroughStmt ) ;
    public final void rule__Statement__FallthroughStmtAssignment_8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12927:1: ( ( rulefallthroughStmt ) )
            // InternalGo.g:12928:2: ( rulefallthroughStmt )
            {
            // InternalGo.g:12928:2: ( rulefallthroughStmt )
            // InternalGo.g:12929:3: rulefallthroughStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getFallthroughStmtFallthroughStmtParserRuleCall_8_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefallthroughStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getFallthroughStmtFallthroughStmtParserRuleCall_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__FallthroughStmtAssignment_8"


    // $ANTLR start "rule__Statement__BlockAssignment_9"
    // InternalGo.g:12938:1: rule__Statement__BlockAssignment_9 : ( ruleblock ) ;
    public final void rule__Statement__BlockAssignment_9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12942:1: ( ( ruleblock ) )
            // InternalGo.g:12943:2: ( ruleblock )
            {
            // InternalGo.g:12943:2: ( ruleblock )
            // InternalGo.g:12944:3: ruleblock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getBlockBlockParserRuleCall_9_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleblock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getBlockBlockParserRuleCall_9_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__BlockAssignment_9"


    // $ANTLR start "rule__Statement__IfStmtAssignment_10"
    // InternalGo.g:12953:1: rule__Statement__IfStmtAssignment_10 : ( ruleifStmt ) ;
    public final void rule__Statement__IfStmtAssignment_10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12957:1: ( ( ruleifStmt ) )
            // InternalGo.g:12958:2: ( ruleifStmt )
            {
            // InternalGo.g:12958:2: ( ruleifStmt )
            // InternalGo.g:12959:3: ruleifStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getIfStmtIfStmtParserRuleCall_10_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleifStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getIfStmtIfStmtParserRuleCall_10_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__IfStmtAssignment_10"


    // $ANTLR start "rule__Statement__SwitchStmtAssignment_11"
    // InternalGo.g:12968:1: rule__Statement__SwitchStmtAssignment_11 : ( ruleswitchStmt ) ;
    public final void rule__Statement__SwitchStmtAssignment_11() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12972:1: ( ( ruleswitchStmt ) )
            // InternalGo.g:12973:2: ( ruleswitchStmt )
            {
            // InternalGo.g:12973:2: ( ruleswitchStmt )
            // InternalGo.g:12974:3: ruleswitchStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getSwitchStmtSwitchStmtParserRuleCall_11_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleswitchStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getSwitchStmtSwitchStmtParserRuleCall_11_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__SwitchStmtAssignment_11"


    // $ANTLR start "rule__Statement__SelectStmtAssignment_12"
    // InternalGo.g:12983:1: rule__Statement__SelectStmtAssignment_12 : ( ruleselectStmt ) ;
    public final void rule__Statement__SelectStmtAssignment_12() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:12987:1: ( ( ruleselectStmt ) )
            // InternalGo.g:12988:2: ( ruleselectStmt )
            {
            // InternalGo.g:12988:2: ( ruleselectStmt )
            // InternalGo.g:12989:3: ruleselectStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getSelectStmtSelectStmtParserRuleCall_12_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleselectStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getSelectStmtSelectStmtParserRuleCall_12_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__SelectStmtAssignment_12"


    // $ANTLR start "rule__Statement__ForStmtAssignment_13"
    // InternalGo.g:12998:1: rule__Statement__ForStmtAssignment_13 : ( ruleforStmt ) ;
    public final void rule__Statement__ForStmtAssignment_13() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13002:1: ( ( ruleforStmt ) )
            // InternalGo.g:13003:2: ( ruleforStmt )
            {
            // InternalGo.g:13003:2: ( ruleforStmt )
            // InternalGo.g:13004:3: ruleforStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getForStmtForStmtParserRuleCall_13_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleforStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getForStmtForStmtParserRuleCall_13_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__ForStmtAssignment_13"


    // $ANTLR start "rule__Statement__DeferStmtAssignment_14"
    // InternalGo.g:13013:1: rule__Statement__DeferStmtAssignment_14 : ( ruledeferStmt ) ;
    public final void rule__Statement__DeferStmtAssignment_14() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13017:1: ( ( ruledeferStmt ) )
            // InternalGo.g:13018:2: ( ruledeferStmt )
            {
            // InternalGo.g:13018:2: ( ruledeferStmt )
            // InternalGo.g:13019:3: ruledeferStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getDeferStmtDeferStmtParserRuleCall_14_0()); 
            }
            pushFollow(FOLLOW_2);
            ruledeferStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getDeferStmtDeferStmtParserRuleCall_14_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__DeferStmtAssignment_14"


    // $ANTLR start "rule__SimpleStmt__SendStmtAssignment_0"
    // InternalGo.g:13028:1: rule__SimpleStmt__SendStmtAssignment_0 : ( rulesendStmt ) ;
    public final void rule__SimpleStmt__SendStmtAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13032:1: ( ( rulesendStmt ) )
            // InternalGo.g:13033:2: ( rulesendStmt )
            {
            // InternalGo.g:13033:2: ( rulesendStmt )
            // InternalGo.g:13034:3: rulesendStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleStmtAccess().getSendStmtSendStmtParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesendStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleStmtAccess().getSendStmtSendStmtParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleStmt__SendStmtAssignment_0"


    // $ANTLR start "rule__SimpleStmt__ExpressionStmtAssignment_1"
    // InternalGo.g:13043:1: rule__SimpleStmt__ExpressionStmtAssignment_1 : ( ruleexpressionStmt ) ;
    public final void rule__SimpleStmt__ExpressionStmtAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13047:1: ( ( ruleexpressionStmt ) )
            // InternalGo.g:13048:2: ( ruleexpressionStmt )
            {
            // InternalGo.g:13048:2: ( ruleexpressionStmt )
            // InternalGo.g:13049:3: ruleexpressionStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleStmtAccess().getExpressionStmtExpressionStmtParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpressionStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleStmtAccess().getExpressionStmtExpressionStmtParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleStmt__ExpressionStmtAssignment_1"


    // $ANTLR start "rule__SimpleStmt__IncDecStmtAssignment_2"
    // InternalGo.g:13058:1: rule__SimpleStmt__IncDecStmtAssignment_2 : ( ruleincDecStmt ) ;
    public final void rule__SimpleStmt__IncDecStmtAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13062:1: ( ( ruleincDecStmt ) )
            // InternalGo.g:13063:2: ( ruleincDecStmt )
            {
            // InternalGo.g:13063:2: ( ruleincDecStmt )
            // InternalGo.g:13064:3: ruleincDecStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleStmtAccess().getIncDecStmtIncDecStmtParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleincDecStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleStmtAccess().getIncDecStmtIncDecStmtParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleStmt__IncDecStmtAssignment_2"


    // $ANTLR start "rule__SimpleStmt__AssignmentAssignment_3"
    // InternalGo.g:13073:1: rule__SimpleStmt__AssignmentAssignment_3 : ( ruleassignment ) ;
    public final void rule__SimpleStmt__AssignmentAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13077:1: ( ( ruleassignment ) )
            // InternalGo.g:13078:2: ( ruleassignment )
            {
            // InternalGo.g:13078:2: ( ruleassignment )
            // InternalGo.g:13079:3: ruleassignment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleStmtAccess().getAssignmentAssignmentParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleassignment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleStmtAccess().getAssignmentAssignmentParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleStmt__AssignmentAssignment_3"


    // $ANTLR start "rule__SimpleStmt__ShortVarDeclAssignment_4"
    // InternalGo.g:13088:1: rule__SimpleStmt__ShortVarDeclAssignment_4 : ( ruleshortVarDecl ) ;
    public final void rule__SimpleStmt__ShortVarDeclAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13092:1: ( ( ruleshortVarDecl ) )
            // InternalGo.g:13093:2: ( ruleshortVarDecl )
            {
            // InternalGo.g:13093:2: ( ruleshortVarDecl )
            // InternalGo.g:13094:3: ruleshortVarDecl
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleshortVarDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleStmt__ShortVarDeclAssignment_4"


    // $ANTLR start "rule__SimpleStmt__EmptyStmtAssignment_5"
    // InternalGo.g:13103:1: rule__SimpleStmt__EmptyStmtAssignment_5 : ( ruleemptyStmt ) ;
    public final void rule__SimpleStmt__EmptyStmtAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13107:1: ( ( ruleemptyStmt ) )
            // InternalGo.g:13108:2: ( ruleemptyStmt )
            {
            // InternalGo.g:13108:2: ( ruleemptyStmt )
            // InternalGo.g:13109:3: ruleemptyStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleStmtAccess().getEmptyStmtEmptyStmtParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleemptyStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleStmtAccess().getEmptyStmtEmptyStmtParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleStmt__EmptyStmtAssignment_5"


    // $ANTLR start "rule__ExpressionStmt__ExpressionAssignment"
    // InternalGo.g:13118:1: rule__ExpressionStmt__ExpressionAssignment : ( ruleexpression ) ;
    public final void rule__ExpressionStmt__ExpressionAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13122:1: ( ( ruleexpression ) )
            // InternalGo.g:13123:2: ( ruleexpression )
            {
            // InternalGo.g:13123:2: ( ruleexpression )
            // InternalGo.g:13124:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionStmtAccess().getExpressionExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionStmtAccess().getExpressionExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionStmt__ExpressionAssignment"


    // $ANTLR start "rule__SendStmt__ExpressionAssignment_0"
    // InternalGo.g:13133:1: rule__SendStmt__ExpressionAssignment_0 : ( ruleexpression ) ;
    public final void rule__SendStmt__ExpressionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13137:1: ( ( ruleexpression ) )
            // InternalGo.g:13138:2: ( ruleexpression )
            {
            // InternalGo.g:13138:2: ( ruleexpression )
            // InternalGo.g:13139:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SendStmt__ExpressionAssignment_0"


    // $ANTLR start "rule__SendStmt__ExpressionAssignment_2"
    // InternalGo.g:13148:1: rule__SendStmt__ExpressionAssignment_2 : ( ruleexpression ) ;
    public final void rule__SendStmt__ExpressionAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13152:1: ( ( ruleexpression ) )
            // InternalGo.g:13153:2: ( ruleexpression )
            {
            // InternalGo.g:13153:2: ( ruleexpression )
            // InternalGo.g:13154:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SendStmt__ExpressionAssignment_2"


    // $ANTLR start "rule__IncDecStmt__ExpressionAssignment_0"
    // InternalGo.g:13163:1: rule__IncDecStmt__ExpressionAssignment_0 : ( ruleexpression ) ;
    public final void rule__IncDecStmt__ExpressionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13167:1: ( ( ruleexpression ) )
            // InternalGo.g:13168:2: ( ruleexpression )
            {
            // InternalGo.g:13168:2: ( ruleexpression )
            // InternalGo.g:13169:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIncDecStmtAccess().getExpressionExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIncDecStmtAccess().getExpressionExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IncDecStmt__ExpressionAssignment_0"


    // $ANTLR start "rule__Assignment__ExpressionListAssignment_0"
    // InternalGo.g:13178:1: rule__Assignment__ExpressionListAssignment_0 : ( ruleexpressionList ) ;
    public final void rule__Assignment__ExpressionListAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13182:1: ( ( ruleexpressionList ) )
            // InternalGo.g:13183:2: ( ruleexpressionList )
            {
            // InternalGo.g:13183:2: ( ruleexpressionList )
            // InternalGo.g:13184:3: ruleexpressionList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentAccess().getExpressionListExpressionListParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpressionList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentAccess().getExpressionListExpressionListParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__ExpressionListAssignment_0"


    // $ANTLR start "rule__Assignment__Assign_opAssignment_1"
    // InternalGo.g:13193:1: rule__Assignment__Assign_opAssignment_1 : ( ruleassign_op ) ;
    public final void rule__Assignment__Assign_opAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13197:1: ( ( ruleassign_op ) )
            // InternalGo.g:13198:2: ( ruleassign_op )
            {
            // InternalGo.g:13198:2: ( ruleassign_op )
            // InternalGo.g:13199:3: ruleassign_op
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentAccess().getAssign_opAssign_opParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleassign_op();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentAccess().getAssign_opAssign_opParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__Assign_opAssignment_1"


    // $ANTLR start "rule__Assignment__ExpressionListAssignment_2"
    // InternalGo.g:13208:1: rule__Assignment__ExpressionListAssignment_2 : ( ruleexpressionList ) ;
    public final void rule__Assignment__ExpressionListAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13212:1: ( ( ruleexpressionList ) )
            // InternalGo.g:13213:2: ( ruleexpressionList )
            {
            // InternalGo.g:13213:2: ( ruleexpressionList )
            // InternalGo.g:13214:3: ruleexpressionList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignmentAccess().getExpressionListExpressionListParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpressionList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignmentAccess().getExpressionListExpressionListParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignment__ExpressionListAssignment_2"


    // $ANTLR start "rule__ShortVarDecl__IdentifierListAssignment_0"
    // InternalGo.g:13223:1: rule__ShortVarDecl__IdentifierListAssignment_0 : ( ruleidentifierList ) ;
    public final void rule__ShortVarDecl__IdentifierListAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13227:1: ( ( ruleidentifierList ) )
            // InternalGo.g:13228:2: ( ruleidentifierList )
            {
            // InternalGo.g:13228:2: ( ruleidentifierList )
            // InternalGo.g:13229:3: ruleidentifierList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortVarDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleidentifierList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortVarDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortVarDecl__IdentifierListAssignment_0"


    // $ANTLR start "rule__ShortVarDecl__ExpressionListAssignment_2"
    // InternalGo.g:13238:1: rule__ShortVarDecl__ExpressionListAssignment_2 : ( ruleexpressionList ) ;
    public final void rule__ShortVarDecl__ExpressionListAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13242:1: ( ( ruleexpressionList ) )
            // InternalGo.g:13243:2: ( ruleexpressionList )
            {
            // InternalGo.g:13243:2: ( ruleexpressionList )
            // InternalGo.g:13244:3: ruleexpressionList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShortVarDeclAccess().getExpressionListExpressionListParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpressionList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShortVarDeclAccess().getExpressionListExpressionListParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShortVarDecl__ExpressionListAssignment_2"


    // $ANTLR start "rule__LabeledStmt__StatementAssignment_2"
    // InternalGo.g:13253:1: rule__LabeledStmt__StatementAssignment_2 : ( rulestatement ) ;
    public final void rule__LabeledStmt__StatementAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13257:1: ( ( rulestatement ) )
            // InternalGo.g:13258:2: ( rulestatement )
            {
            // InternalGo.g:13258:2: ( rulestatement )
            // InternalGo.g:13259:3: rulestatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLabeledStmtAccess().getStatementStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLabeledStmtAccess().getStatementStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LabeledStmt__StatementAssignment_2"


    // $ANTLR start "rule__ReturnStmt__ExpressionListAssignment_1"
    // InternalGo.g:13268:1: rule__ReturnStmt__ExpressionListAssignment_1 : ( ruleexpressionList ) ;
    public final void rule__ReturnStmt__ExpressionListAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13272:1: ( ( ruleexpressionList ) )
            // InternalGo.g:13273:2: ( ruleexpressionList )
            {
            // InternalGo.g:13273:2: ( ruleexpressionList )
            // InternalGo.g:13274:3: ruleexpressionList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReturnStmtAccess().getExpressionListExpressionListParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpressionList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReturnStmtAccess().getExpressionListExpressionListParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReturnStmt__ExpressionListAssignment_1"


    // $ANTLR start "rule__DeferStmt__ExpressionAssignment_1"
    // InternalGo.g:13283:1: rule__DeferStmt__ExpressionAssignment_1 : ( ruleexpression ) ;
    public final void rule__DeferStmt__ExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13287:1: ( ( ruleexpression ) )
            // InternalGo.g:13288:2: ( ruleexpression )
            {
            // InternalGo.g:13288:2: ( ruleexpression )
            // InternalGo.g:13289:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDeferStmtAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDeferStmtAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DeferStmt__ExpressionAssignment_1"


    // $ANTLR start "rule__IfStmt__SimpleStmtAssignment_1"
    // InternalGo.g:13298:1: rule__IfStmt__SimpleStmtAssignment_1 : ( rulesimpleStmt ) ;
    public final void rule__IfStmt__SimpleStmtAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13302:1: ( ( rulesimpleStmt ) )
            // InternalGo.g:13303:2: ( rulesimpleStmt )
            {
            // InternalGo.g:13303:2: ( rulesimpleStmt )
            // InternalGo.g:13304:3: rulesimpleStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesimpleStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__SimpleStmtAssignment_1"


    // $ANTLR start "rule__IfStmt__ExpressionAssignment_2"
    // InternalGo.g:13313:1: rule__IfStmt__ExpressionAssignment_2 : ( ruleexpression ) ;
    public final void rule__IfStmt__ExpressionAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13317:1: ( ( ruleexpression ) )
            // InternalGo.g:13318:2: ( ruleexpression )
            {
            // InternalGo.g:13318:2: ( ruleexpression )
            // InternalGo.g:13319:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__ExpressionAssignment_2"


    // $ANTLR start "rule__IfStmt__BlockAssignment_3"
    // InternalGo.g:13328:1: rule__IfStmt__BlockAssignment_3 : ( ruleblock ) ;
    public final void rule__IfStmt__BlockAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13332:1: ( ( ruleblock ) )
            // InternalGo.g:13333:2: ( ruleblock )
            {
            // InternalGo.g:13333:2: ( ruleblock )
            // InternalGo.g:13334:3: ruleblock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleblock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__BlockAssignment_3"


    // $ANTLR start "rule__IfStmt__IfStmtAssignment_4_1_0"
    // InternalGo.g:13343:1: rule__IfStmt__IfStmtAssignment_4_1_0 : ( ruleifStmt ) ;
    public final void rule__IfStmt__IfStmtAssignment_4_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13347:1: ( ( ruleifStmt ) )
            // InternalGo.g:13348:2: ( ruleifStmt )
            {
            // InternalGo.g:13348:2: ( ruleifStmt )
            // InternalGo.g:13349:3: ruleifStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStmtAccess().getIfStmtIfStmtParserRuleCall_4_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleifStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStmtAccess().getIfStmtIfStmtParserRuleCall_4_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__IfStmtAssignment_4_1_0"


    // $ANTLR start "rule__IfStmt__BlockAssignment_4_1_1"
    // InternalGo.g:13358:1: rule__IfStmt__BlockAssignment_4_1_1 : ( ruleblock ) ;
    public final void rule__IfStmt__BlockAssignment_4_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13362:1: ( ( ruleblock ) )
            // InternalGo.g:13363:2: ( ruleblock )
            {
            // InternalGo.g:13363:2: ( ruleblock )
            // InternalGo.g:13364:3: ruleblock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_4_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleblock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_4_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStmt__BlockAssignment_4_1_1"


    // $ANTLR start "rule__SwitchStmt__ExprSwitchStmtAssignment_0"
    // InternalGo.g:13373:1: rule__SwitchStmt__ExprSwitchStmtAssignment_0 : ( ruleexprSwitchStmt ) ;
    public final void rule__SwitchStmt__ExprSwitchStmtAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13377:1: ( ( ruleexprSwitchStmt ) )
            // InternalGo.g:13378:2: ( ruleexprSwitchStmt )
            {
            // InternalGo.g:13378:2: ( ruleexprSwitchStmt )
            // InternalGo.g:13379:3: ruleexprSwitchStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchStmtAccess().getExprSwitchStmtExprSwitchStmtParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexprSwitchStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchStmtAccess().getExprSwitchStmtExprSwitchStmtParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchStmt__ExprSwitchStmtAssignment_0"


    // $ANTLR start "rule__SwitchStmt__TypeSwitchStmtAssignment_1"
    // InternalGo.g:13388:1: rule__SwitchStmt__TypeSwitchStmtAssignment_1 : ( ruletypeSwitchStmt ) ;
    public final void rule__SwitchStmt__TypeSwitchStmtAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13392:1: ( ( ruletypeSwitchStmt ) )
            // InternalGo.g:13393:2: ( ruletypeSwitchStmt )
            {
            // InternalGo.g:13393:2: ( ruletypeSwitchStmt )
            // InternalGo.g:13394:3: ruletypeSwitchStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSwitchStmtAccess().getTypeSwitchStmtTypeSwitchStmtParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletypeSwitchStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSwitchStmtAccess().getTypeSwitchStmtTypeSwitchStmtParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SwitchStmt__TypeSwitchStmtAssignment_1"


    // $ANTLR start "rule__ExprSwitchStmt__SimpleStmtAssignment_1"
    // InternalGo.g:13403:1: rule__ExprSwitchStmt__SimpleStmtAssignment_1 : ( rulesimpleStmt ) ;
    public final void rule__ExprSwitchStmt__SimpleStmtAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13407:1: ( ( rulesimpleStmt ) )
            // InternalGo.g:13408:2: ( rulesimpleStmt )
            {
            // InternalGo.g:13408:2: ( rulesimpleStmt )
            // InternalGo.g:13409:3: rulesimpleStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesimpleStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchStmt__SimpleStmtAssignment_1"


    // $ANTLR start "rule__ExprSwitchStmt__ExpressionAssignment_2"
    // InternalGo.g:13418:1: rule__ExprSwitchStmt__ExpressionAssignment_2 : ( ruleexpression ) ;
    public final void rule__ExprSwitchStmt__ExpressionAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13422:1: ( ( ruleexpression ) )
            // InternalGo.g:13423:2: ( ruleexpression )
            {
            // InternalGo.g:13423:2: ( ruleexpression )
            // InternalGo.g:13424:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprSwitchStmtAccess().getExpressionExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprSwitchStmtAccess().getExpressionExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchStmt__ExpressionAssignment_2"


    // $ANTLR start "rule__ExprSwitchStmt__ExprCaseClauseAssignment_4"
    // InternalGo.g:13433:1: rule__ExprSwitchStmt__ExprCaseClauseAssignment_4 : ( ruleexprCaseClause ) ;
    public final void rule__ExprSwitchStmt__ExprCaseClauseAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13437:1: ( ( ruleexprCaseClause ) )
            // InternalGo.g:13438:2: ( ruleexprCaseClause )
            {
            // InternalGo.g:13438:2: ( ruleexprCaseClause )
            // InternalGo.g:13439:3: ruleexprCaseClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprSwitchStmtAccess().getExprCaseClauseExprCaseClauseParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexprCaseClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprSwitchStmtAccess().getExprCaseClauseExprCaseClauseParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchStmt__ExprCaseClauseAssignment_4"


    // $ANTLR start "rule__ExprCaseClause__ExprSwitchCaseAssignment_0"
    // InternalGo.g:13448:1: rule__ExprCaseClause__ExprSwitchCaseAssignment_0 : ( ruleexprSwitchCase ) ;
    public final void rule__ExprCaseClause__ExprSwitchCaseAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13452:1: ( ( ruleexprSwitchCase ) )
            // InternalGo.g:13453:2: ( ruleexprSwitchCase )
            {
            // InternalGo.g:13453:2: ( ruleexprSwitchCase )
            // InternalGo.g:13454:3: ruleexprSwitchCase
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseExprSwitchCaseParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexprSwitchCase();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseExprSwitchCaseParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprCaseClause__ExprSwitchCaseAssignment_0"


    // $ANTLR start "rule__ExprCaseClause__StatementListAssignment_2"
    // InternalGo.g:13463:1: rule__ExprCaseClause__StatementListAssignment_2 : ( rulestatementList ) ;
    public final void rule__ExprCaseClause__StatementListAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13467:1: ( ( rulestatementList ) )
            // InternalGo.g:13468:2: ( rulestatementList )
            {
            // InternalGo.g:13468:2: ( rulestatementList )
            // InternalGo.g:13469:3: rulestatementList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestatementList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprCaseClause__StatementListAssignment_2"


    // $ANTLR start "rule__ExprSwitchCase__ExpressionListAssignment_0_1"
    // InternalGo.g:13478:1: rule__ExprSwitchCase__ExpressionListAssignment_0_1 : ( ruleexpressionList ) ;
    public final void rule__ExprSwitchCase__ExpressionListAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13482:1: ( ( ruleexpressionList ) )
            // InternalGo.g:13483:2: ( ruleexpressionList )
            {
            // InternalGo.g:13483:2: ( ruleexpressionList )
            // InternalGo.g:13484:3: ruleexpressionList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprSwitchCaseAccess().getExpressionListExpressionListParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpressionList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprSwitchCaseAccess().getExpressionListExpressionListParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExprSwitchCase__ExpressionListAssignment_0_1"


    // $ANTLR start "rule__TypeSwitchStmt__SimpleStmtAssignment_1"
    // InternalGo.g:13493:1: rule__TypeSwitchStmt__SimpleStmtAssignment_1 : ( rulesimpleStmt ) ;
    public final void rule__TypeSwitchStmt__SimpleStmtAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13497:1: ( ( rulesimpleStmt ) )
            // InternalGo.g:13498:2: ( rulesimpleStmt )
            {
            // InternalGo.g:13498:2: ( rulesimpleStmt )
            // InternalGo.g:13499:3: rulesimpleStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesimpleStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchStmt__SimpleStmtAssignment_1"


    // $ANTLR start "rule__TypeSwitchStmt__TypeSwitchGuardAssignment_2"
    // InternalGo.g:13508:1: rule__TypeSwitchStmt__TypeSwitchGuardAssignment_2 : ( ruletypeSwitchGuard ) ;
    public final void rule__TypeSwitchStmt__TypeSwitchGuardAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13512:1: ( ( ruletypeSwitchGuard ) )
            // InternalGo.g:13513:2: ( ruletypeSwitchGuard )
            {
            // InternalGo.g:13513:2: ( ruletypeSwitchGuard )
            // InternalGo.g:13514:3: ruletypeSwitchGuard
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchStmtAccess().getTypeSwitchGuardTypeSwitchGuardParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletypeSwitchGuard();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchStmtAccess().getTypeSwitchGuardTypeSwitchGuardParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchStmt__TypeSwitchGuardAssignment_2"


    // $ANTLR start "rule__TypeSwitchStmt__TypeCaseClauseAssignment_4"
    // InternalGo.g:13523:1: rule__TypeSwitchStmt__TypeCaseClauseAssignment_4 : ( ruletypeCaseClause ) ;
    public final void rule__TypeSwitchStmt__TypeCaseClauseAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13527:1: ( ( ruletypeCaseClause ) )
            // InternalGo.g:13528:2: ( ruletypeCaseClause )
            {
            // InternalGo.g:13528:2: ( ruletypeCaseClause )
            // InternalGo.g:13529:3: ruletypeCaseClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchStmtAccess().getTypeCaseClauseTypeCaseClauseParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletypeCaseClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchStmtAccess().getTypeCaseClauseTypeCaseClauseParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchStmt__TypeCaseClauseAssignment_4"


    // $ANTLR start "rule__TypeSwitchGuard__PrimaryExprAssignment_1"
    // InternalGo.g:13538:1: rule__TypeSwitchGuard__PrimaryExprAssignment_1 : ( ruleprimaryExpr ) ;
    public final void rule__TypeSwitchGuard__PrimaryExprAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13542:1: ( ( ruleprimaryExpr ) )
            // InternalGo.g:13543:2: ( ruleprimaryExpr )
            {
            // InternalGo.g:13543:2: ( ruleprimaryExpr )
            // InternalGo.g:13544:3: ruleprimaryExpr
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprPrimaryExprParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprimaryExpr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprPrimaryExprParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchGuard__PrimaryExprAssignment_1"


    // $ANTLR start "rule__TypeCaseClause__TypeSwitchCaseAssignment_0"
    // InternalGo.g:13553:1: rule__TypeCaseClause__TypeSwitchCaseAssignment_0 : ( ruletypeSwitchCase ) ;
    public final void rule__TypeCaseClause__TypeSwitchCaseAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13557:1: ( ( ruletypeSwitchCase ) )
            // InternalGo.g:13558:2: ( ruletypeSwitchCase )
            {
            // InternalGo.g:13558:2: ( ruletypeSwitchCase )
            // InternalGo.g:13559:3: ruletypeSwitchCase
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseTypeSwitchCaseParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletypeSwitchCase();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseTypeSwitchCaseParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeCaseClause__TypeSwitchCaseAssignment_0"


    // $ANTLR start "rule__TypeCaseClause__StatementListAssignment_2"
    // InternalGo.g:13568:1: rule__TypeCaseClause__StatementListAssignment_2 : ( rulestatementList ) ;
    public final void rule__TypeCaseClause__StatementListAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13572:1: ( ( rulestatementList ) )
            // InternalGo.g:13573:2: ( rulestatementList )
            {
            // InternalGo.g:13573:2: ( rulestatementList )
            // InternalGo.g:13574:3: rulestatementList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestatementList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeCaseClause__StatementListAssignment_2"


    // $ANTLR start "rule__TypeSwitchCase__TypeListAssignment_0_1"
    // InternalGo.g:13583:1: rule__TypeSwitchCase__TypeListAssignment_0_1 : ( ruletypeList ) ;
    public final void rule__TypeSwitchCase__TypeListAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13587:1: ( ( ruletypeList ) )
            // InternalGo.g:13588:2: ( ruletypeList )
            {
            // InternalGo.g:13588:2: ( ruletypeList )
            // InternalGo.g:13589:3: ruletypeList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeSwitchCaseAccess().getTypeListTypeListParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletypeList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeSwitchCaseAccess().getTypeListTypeListParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeSwitchCase__TypeListAssignment_0_1"


    // $ANTLR start "rule__TypeList__TypeAssignment_0"
    // InternalGo.g:13598:1: rule__TypeList__TypeAssignment_0 : ( ruletype ) ;
    public final void rule__TypeList__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13602:1: ( ( ruletype ) )
            // InternalGo.g:13603:2: ( ruletype )
            {
            // InternalGo.g:13603:2: ( ruletype )
            // InternalGo.g:13604:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeList__TypeAssignment_0"


    // $ANTLR start "rule__TypeList__TypeAssignment_1_1"
    // InternalGo.g:13613:1: rule__TypeList__TypeAssignment_1_1 : ( ruletype ) ;
    public final void rule__TypeList__TypeAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13617:1: ( ( ruletype ) )
            // InternalGo.g:13618:2: ( ruletype )
            {
            // InternalGo.g:13618:2: ( ruletype )
            // InternalGo.g:13619:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeList__TypeAssignment_1_1"


    // $ANTLR start "rule__SelectStmt__CommClauseAssignment_2"
    // InternalGo.g:13628:1: rule__SelectStmt__CommClauseAssignment_2 : ( rulecommClause ) ;
    public final void rule__SelectStmt__CommClauseAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13632:1: ( ( rulecommClause ) )
            // InternalGo.g:13633:2: ( rulecommClause )
            {
            // InternalGo.g:13633:2: ( rulecommClause )
            // InternalGo.g:13634:3: rulecommClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStmtAccess().getCommClauseCommClauseParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulecommClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStmtAccess().getCommClauseCommClauseParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStmt__CommClauseAssignment_2"


    // $ANTLR start "rule__CommClause__CommCaseAssignment_0"
    // InternalGo.g:13643:1: rule__CommClause__CommCaseAssignment_0 : ( rulecommCase ) ;
    public final void rule__CommClause__CommCaseAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13647:1: ( ( rulecommCase ) )
            // InternalGo.g:13648:2: ( rulecommCase )
            {
            // InternalGo.g:13648:2: ( rulecommCase )
            // InternalGo.g:13649:3: rulecommCase
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommClauseAccess().getCommCaseCommCaseParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulecommCase();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommClauseAccess().getCommCaseCommCaseParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommClause__CommCaseAssignment_0"


    // $ANTLR start "rule__CommClause__StatementListAssignment_2"
    // InternalGo.g:13658:1: rule__CommClause__StatementListAssignment_2 : ( rulestatementList ) ;
    public final void rule__CommClause__StatementListAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13662:1: ( ( rulestatementList ) )
            // InternalGo.g:13663:2: ( rulestatementList )
            {
            // InternalGo.g:13663:2: ( rulestatementList )
            // InternalGo.g:13664:3: rulestatementList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommClauseAccess().getStatementListStatementListParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestatementList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommClauseAccess().getStatementListStatementListParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommClause__StatementListAssignment_2"


    // $ANTLR start "rule__CommCase__SendStmtAssignment_0_1_0"
    // InternalGo.g:13673:1: rule__CommCase__SendStmtAssignment_0_1_0 : ( rulesendStmt ) ;
    public final void rule__CommCase__SendStmtAssignment_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13677:1: ( ( rulesendStmt ) )
            // InternalGo.g:13678:2: ( rulesendStmt )
            {
            // InternalGo.g:13678:2: ( rulesendStmt )
            // InternalGo.g:13679:3: rulesendStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommCaseAccess().getSendStmtSendStmtParserRuleCall_0_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesendStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommCaseAccess().getSendStmtSendStmtParserRuleCall_0_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommCase__SendStmtAssignment_0_1_0"


    // $ANTLR start "rule__CommCase__RecvStmtAssignment_0_1_1"
    // InternalGo.g:13688:1: rule__CommCase__RecvStmtAssignment_0_1_1 : ( rulerecvStmt ) ;
    public final void rule__CommCase__RecvStmtAssignment_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13692:1: ( ( rulerecvStmt ) )
            // InternalGo.g:13693:2: ( rulerecvStmt )
            {
            // InternalGo.g:13693:2: ( rulerecvStmt )
            // InternalGo.g:13694:3: rulerecvStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommCaseAccess().getRecvStmtRecvStmtParserRuleCall_0_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulerecvStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommCaseAccess().getRecvStmtRecvStmtParserRuleCall_0_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CommCase__RecvStmtAssignment_0_1_1"


    // $ANTLR start "rule__RecvStmt__ExpressionListAssignment_0_0_0"
    // InternalGo.g:13703:1: rule__RecvStmt__ExpressionListAssignment_0_0_0 : ( ruleexpressionList ) ;
    public final void rule__RecvStmt__ExpressionListAssignment_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13707:1: ( ( ruleexpressionList ) )
            // InternalGo.g:13708:2: ( ruleexpressionList )
            {
            // InternalGo.g:13708:2: ( ruleexpressionList )
            // InternalGo.g:13709:3: ruleexpressionList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecvStmtAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpressionList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecvStmtAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RecvStmt__ExpressionListAssignment_0_0_0"


    // $ANTLR start "rule__RecvStmt__IdentifierListAssignment_0_1_0"
    // InternalGo.g:13718:1: rule__RecvStmt__IdentifierListAssignment_0_1_0 : ( ruleidentifierList ) ;
    public final void rule__RecvStmt__IdentifierListAssignment_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13722:1: ( ( ruleidentifierList ) )
            // InternalGo.g:13723:2: ( ruleidentifierList )
            {
            // InternalGo.g:13723:2: ( ruleidentifierList )
            // InternalGo.g:13724:3: ruleidentifierList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecvStmtAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleidentifierList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecvStmtAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RecvStmt__IdentifierListAssignment_0_1_0"


    // $ANTLR start "rule__RecvStmt__ExpressionAssignment_1"
    // InternalGo.g:13733:1: rule__RecvStmt__ExpressionAssignment_1 : ( ruleexpression ) ;
    public final void rule__RecvStmt__ExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13737:1: ( ( ruleexpression ) )
            // InternalGo.g:13738:2: ( ruleexpression )
            {
            // InternalGo.g:13738:2: ( ruleexpression )
            // InternalGo.g:13739:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRecvStmtAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRecvStmtAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RecvStmt__ExpressionAssignment_1"


    // $ANTLR start "rule__ForStmt__ExpressionAssignment_1_0"
    // InternalGo.g:13748:1: rule__ForStmt__ExpressionAssignment_1_0 : ( ruleexpression ) ;
    public final void rule__ForStmt__ExpressionAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13752:1: ( ( ruleexpression ) )
            // InternalGo.g:13753:2: ( ruleexpression )
            {
            // InternalGo.g:13753:2: ( ruleexpression )
            // InternalGo.g:13754:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStmtAccess().getExpressionExpressionParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStmtAccess().getExpressionExpressionParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStmt__ExpressionAssignment_1_0"


    // $ANTLR start "rule__ForStmt__ForClauseAssignment_1_1"
    // InternalGo.g:13763:1: rule__ForStmt__ForClauseAssignment_1_1 : ( ruleforClause ) ;
    public final void rule__ForStmt__ForClauseAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13767:1: ( ( ruleforClause ) )
            // InternalGo.g:13768:2: ( ruleforClause )
            {
            // InternalGo.g:13768:2: ( ruleforClause )
            // InternalGo.g:13769:3: ruleforClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStmtAccess().getForClauseForClauseParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleforClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStmtAccess().getForClauseForClauseParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStmt__ForClauseAssignment_1_1"


    // $ANTLR start "rule__ForStmt__RangeClauseAssignment_1_2"
    // InternalGo.g:13778:1: rule__ForStmt__RangeClauseAssignment_1_2 : ( rulerangeClause ) ;
    public final void rule__ForStmt__RangeClauseAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13782:1: ( ( rulerangeClause ) )
            // InternalGo.g:13783:2: ( rulerangeClause )
            {
            // InternalGo.g:13783:2: ( rulerangeClause )
            // InternalGo.g:13784:3: rulerangeClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStmtAccess().getRangeClauseRangeClauseParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulerangeClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStmtAccess().getRangeClauseRangeClauseParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStmt__RangeClauseAssignment_1_2"


    // $ANTLR start "rule__ForStmt__BlockAssignment_2"
    // InternalGo.g:13793:1: rule__ForStmt__BlockAssignment_2 : ( ruleblock ) ;
    public final void rule__ForStmt__BlockAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13797:1: ( ( ruleblock ) )
            // InternalGo.g:13798:2: ( ruleblock )
            {
            // InternalGo.g:13798:2: ( ruleblock )
            // InternalGo.g:13799:3: ruleblock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForStmtAccess().getBlockBlockParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleblock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForStmtAccess().getBlockBlockParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForStmt__BlockAssignment_2"


    // $ANTLR start "rule__ForClause__SimpleStmtAssignment_0"
    // InternalGo.g:13808:1: rule__ForClause__SimpleStmtAssignment_0 : ( rulesimpleStmt ) ;
    public final void rule__ForClause__SimpleStmtAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13812:1: ( ( rulesimpleStmt ) )
            // InternalGo.g:13813:2: ( rulesimpleStmt )
            {
            // InternalGo.g:13813:2: ( rulesimpleStmt )
            // InternalGo.g:13814:3: rulesimpleStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForClauseAccess().getSimpleStmtSimpleStmtParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesimpleStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForClauseAccess().getSimpleStmtSimpleStmtParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForClause__SimpleStmtAssignment_0"


    // $ANTLR start "rule__ForClause__ExpressionAssignment_1"
    // InternalGo.g:13823:1: rule__ForClause__ExpressionAssignment_1 : ( ruleexpression ) ;
    public final void rule__ForClause__ExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13827:1: ( ( ruleexpression ) )
            // InternalGo.g:13828:2: ( ruleexpression )
            {
            // InternalGo.g:13828:2: ( ruleexpression )
            // InternalGo.g:13829:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForClauseAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForClauseAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForClause__ExpressionAssignment_1"


    // $ANTLR start "rule__ForClause__SimpleStmtAssignment_2"
    // InternalGo.g:13838:1: rule__ForClause__SimpleStmtAssignment_2 : ( rulesimpleStmt ) ;
    public final void rule__ForClause__SimpleStmtAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13842:1: ( ( rulesimpleStmt ) )
            // InternalGo.g:13843:2: ( rulesimpleStmt )
            {
            // InternalGo.g:13843:2: ( rulesimpleStmt )
            // InternalGo.g:13844:3: rulesimpleStmt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForClauseAccess().getSimpleStmtSimpleStmtParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesimpleStmt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForClauseAccess().getSimpleStmtSimpleStmtParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForClause__SimpleStmtAssignment_2"


    // $ANTLR start "rule__RangeClause__ExpressionListAssignment_0_0_0"
    // InternalGo.g:13853:1: rule__RangeClause__ExpressionListAssignment_0_0_0 : ( ruleexpressionList ) ;
    public final void rule__RangeClause__ExpressionListAssignment_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13857:1: ( ( ruleexpressionList ) )
            // InternalGo.g:13858:2: ( ruleexpressionList )
            {
            // InternalGo.g:13858:2: ( ruleexpressionList )
            // InternalGo.g:13859:3: ruleexpressionList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeClauseAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpressionList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeClauseAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeClause__ExpressionListAssignment_0_0_0"


    // $ANTLR start "rule__RangeClause__IdentifierListAssignment_0_1_0"
    // InternalGo.g:13868:1: rule__RangeClause__IdentifierListAssignment_0_1_0 : ( ruleidentifierList ) ;
    public final void rule__RangeClause__IdentifierListAssignment_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13872:1: ( ( ruleidentifierList ) )
            // InternalGo.g:13873:2: ( ruleidentifierList )
            {
            // InternalGo.g:13873:2: ( ruleidentifierList )
            // InternalGo.g:13874:3: ruleidentifierList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeClauseAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleidentifierList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeClauseAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeClause__IdentifierListAssignment_0_1_0"


    // $ANTLR start "rule__RangeClause__ExpressionAssignment_2"
    // InternalGo.g:13883:1: rule__RangeClause__ExpressionAssignment_2 : ( ruleexpression ) ;
    public final void rule__RangeClause__ExpressionAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13887:1: ( ( ruleexpression ) )
            // InternalGo.g:13888:2: ( ruleexpression )
            {
            // InternalGo.g:13888:2: ( ruleexpression )
            // InternalGo.g:13889:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeClauseAccess().getExpressionExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeClauseAccess().getExpressionExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeClause__ExpressionAssignment_2"


    // $ANTLR start "rule__GoStmt__ExpressionAssignment_1"
    // InternalGo.g:13898:1: rule__GoStmt__ExpressionAssignment_1 : ( ruleexpression ) ;
    public final void rule__GoStmt__ExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13902:1: ( ( ruleexpression ) )
            // InternalGo.g:13903:2: ( ruleexpression )
            {
            // InternalGo.g:13903:2: ( ruleexpression )
            // InternalGo.g:13904:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGoStmtAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGoStmtAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GoStmt__ExpressionAssignment_1"


    // $ANTLR start "rule__Type__TypeNameAssignment_0"
    // InternalGo.g:13913:1: rule__Type__TypeNameAssignment_0 : ( ruletypeName ) ;
    public final void rule__Type__TypeNameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13917:1: ( ( ruletypeName ) )
            // InternalGo.g:13918:2: ( ruletypeName )
            {
            // InternalGo.g:13918:2: ( ruletypeName )
            // InternalGo.g:13919:3: ruletypeName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeAccess().getTypeNameTypeNameParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletypeName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeAccess().getTypeNameTypeNameParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type__TypeNameAssignment_0"


    // $ANTLR start "rule__Type__TypeLitAssignment_1"
    // InternalGo.g:13928:1: rule__Type__TypeLitAssignment_1 : ( ruletypeLit ) ;
    public final void rule__Type__TypeLitAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13932:1: ( ( ruletypeLit ) )
            // InternalGo.g:13933:2: ( ruletypeLit )
            {
            // InternalGo.g:13933:2: ( ruletypeLit )
            // InternalGo.g:13934:3: ruletypeLit
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeAccess().getTypeLitTypeLitParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletypeLit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeAccess().getTypeLitTypeLitParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type__TypeLitAssignment_1"


    // $ANTLR start "rule__Type__TypeAssignment_2_1"
    // InternalGo.g:13943:1: rule__Type__TypeAssignment_2_1 : ( ruletype ) ;
    public final void rule__Type__TypeAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13947:1: ( ( ruletype ) )
            // InternalGo.g:13948:2: ( ruletype )
            {
            // InternalGo.g:13948:2: ( ruletype )
            // InternalGo.g:13949:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeAccess().getTypeTypeParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeAccess().getTypeTypeParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Type__TypeAssignment_2_1"


    // $ANTLR start "rule__TypeName__QualifiedIdentAssignment_1"
    // InternalGo.g:13958:1: rule__TypeName__QualifiedIdentAssignment_1 : ( rulequalifiedIdent ) ;
    public final void rule__TypeName__QualifiedIdentAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13962:1: ( ( rulequalifiedIdent ) )
            // InternalGo.g:13963:2: ( rulequalifiedIdent )
            {
            // InternalGo.g:13963:2: ( rulequalifiedIdent )
            // InternalGo.g:13964:3: rulequalifiedIdent
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeNameAccess().getQualifiedIdentQualifiedIdentParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulequalifiedIdent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeNameAccess().getQualifiedIdentQualifiedIdentParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeName__QualifiedIdentAssignment_1"


    // $ANTLR start "rule__TypeLit__ArrayTypeAssignment_0"
    // InternalGo.g:13973:1: rule__TypeLit__ArrayTypeAssignment_0 : ( rulearrayType ) ;
    public final void rule__TypeLit__ArrayTypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13977:1: ( ( rulearrayType ) )
            // InternalGo.g:13978:2: ( rulearrayType )
            {
            // InternalGo.g:13978:2: ( rulearrayType )
            // InternalGo.g:13979:3: rulearrayType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLitAccess().getArrayTypeArrayTypeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulearrayType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLitAccess().getArrayTypeArrayTypeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeLit__ArrayTypeAssignment_0"


    // $ANTLR start "rule__TypeLit__StructTypeAssignment_1"
    // InternalGo.g:13988:1: rule__TypeLit__StructTypeAssignment_1 : ( rulestructType ) ;
    public final void rule__TypeLit__StructTypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:13992:1: ( ( rulestructType ) )
            // InternalGo.g:13993:2: ( rulestructType )
            {
            // InternalGo.g:13993:2: ( rulestructType )
            // InternalGo.g:13994:3: rulestructType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLitAccess().getStructTypeStructTypeParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestructType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLitAccess().getStructTypeStructTypeParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeLit__StructTypeAssignment_1"


    // $ANTLR start "rule__TypeLit__PointerTypeAssignment_2"
    // InternalGo.g:14003:1: rule__TypeLit__PointerTypeAssignment_2 : ( rulepointerType ) ;
    public final void rule__TypeLit__PointerTypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14007:1: ( ( rulepointerType ) )
            // InternalGo.g:14008:2: ( rulepointerType )
            {
            // InternalGo.g:14008:2: ( rulepointerType )
            // InternalGo.g:14009:3: rulepointerType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLitAccess().getPointerTypePointerTypeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulepointerType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLitAccess().getPointerTypePointerTypeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeLit__PointerTypeAssignment_2"


    // $ANTLR start "rule__TypeLit__FunctionTypeAssignment_3"
    // InternalGo.g:14018:1: rule__TypeLit__FunctionTypeAssignment_3 : ( rulefunctionType ) ;
    public final void rule__TypeLit__FunctionTypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14022:1: ( ( rulefunctionType ) )
            // InternalGo.g:14023:2: ( rulefunctionType )
            {
            // InternalGo.g:14023:2: ( rulefunctionType )
            // InternalGo.g:14024:3: rulefunctionType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLitAccess().getFunctionTypeFunctionTypeParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefunctionType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLitAccess().getFunctionTypeFunctionTypeParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeLit__FunctionTypeAssignment_3"


    // $ANTLR start "rule__TypeLit__InterfaceTypeAssignment_4"
    // InternalGo.g:14033:1: rule__TypeLit__InterfaceTypeAssignment_4 : ( ruleinterfaceType ) ;
    public final void rule__TypeLit__InterfaceTypeAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14037:1: ( ( ruleinterfaceType ) )
            // InternalGo.g:14038:2: ( ruleinterfaceType )
            {
            // InternalGo.g:14038:2: ( ruleinterfaceType )
            // InternalGo.g:14039:3: ruleinterfaceType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLitAccess().getInterfaceTypeInterfaceTypeParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleinterfaceType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLitAccess().getInterfaceTypeInterfaceTypeParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeLit__InterfaceTypeAssignment_4"


    // $ANTLR start "rule__TypeLit__SliceTypeAssignment_5"
    // InternalGo.g:14048:1: rule__TypeLit__SliceTypeAssignment_5 : ( rulesliceType ) ;
    public final void rule__TypeLit__SliceTypeAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14052:1: ( ( rulesliceType ) )
            // InternalGo.g:14053:2: ( rulesliceType )
            {
            // InternalGo.g:14053:2: ( rulesliceType )
            // InternalGo.g:14054:3: rulesliceType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLitAccess().getSliceTypeSliceTypeParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesliceType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLitAccess().getSliceTypeSliceTypeParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeLit__SliceTypeAssignment_5"


    // $ANTLR start "rule__TypeLit__MapTypeAssignment_6"
    // InternalGo.g:14063:1: rule__TypeLit__MapTypeAssignment_6 : ( rulemapType ) ;
    public final void rule__TypeLit__MapTypeAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14067:1: ( ( rulemapType ) )
            // InternalGo.g:14068:2: ( rulemapType )
            {
            // InternalGo.g:14068:2: ( rulemapType )
            // InternalGo.g:14069:3: rulemapType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLitAccess().getMapTypeMapTypeParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            rulemapType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLitAccess().getMapTypeMapTypeParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeLit__MapTypeAssignment_6"


    // $ANTLR start "rule__TypeLit__ChannelTypeAssignment_7"
    // InternalGo.g:14078:1: rule__TypeLit__ChannelTypeAssignment_7 : ( rulechannelType ) ;
    public final void rule__TypeLit__ChannelTypeAssignment_7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14082:1: ( ( rulechannelType ) )
            // InternalGo.g:14083:2: ( rulechannelType )
            {
            // InternalGo.g:14083:2: ( rulechannelType )
            // InternalGo.g:14084:3: rulechannelType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeLitAccess().getChannelTypeChannelTypeParserRuleCall_7_0()); 
            }
            pushFollow(FOLLOW_2);
            rulechannelType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeLitAccess().getChannelTypeChannelTypeParserRuleCall_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeLit__ChannelTypeAssignment_7"


    // $ANTLR start "rule__ArrayType__ArrayLengthAssignment_1"
    // InternalGo.g:14093:1: rule__ArrayType__ArrayLengthAssignment_1 : ( rulearrayLength ) ;
    public final void rule__ArrayType__ArrayLengthAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14097:1: ( ( rulearrayLength ) )
            // InternalGo.g:14098:2: ( rulearrayLength )
            {
            // InternalGo.g:14098:2: ( rulearrayLength )
            // InternalGo.g:14099:3: rulearrayLength
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayTypeAccess().getArrayLengthArrayLengthParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulearrayLength();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayTypeAccess().getArrayLengthArrayLengthParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayType__ArrayLengthAssignment_1"


    // $ANTLR start "rule__ArrayType__ElementTypeAssignment_3"
    // InternalGo.g:14108:1: rule__ArrayType__ElementTypeAssignment_3 : ( ruleelementType ) ;
    public final void rule__ArrayType__ElementTypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14112:1: ( ( ruleelementType ) )
            // InternalGo.g:14113:2: ( ruleelementType )
            {
            // InternalGo.g:14113:2: ( ruleelementType )
            // InternalGo.g:14114:3: ruleelementType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayTypeAccess().getElementTypeElementTypeParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleelementType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayTypeAccess().getElementTypeElementTypeParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayType__ElementTypeAssignment_3"


    // $ANTLR start "rule__ArrayLength__ExpressionAssignment"
    // InternalGo.g:14123:1: rule__ArrayLength__ExpressionAssignment : ( ruleexpression ) ;
    public final void rule__ArrayLength__ExpressionAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14127:1: ( ( ruleexpression ) )
            // InternalGo.g:14128:2: ( ruleexpression )
            {
            // InternalGo.g:14128:2: ( ruleexpression )
            // InternalGo.g:14129:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayLengthAccess().getExpressionExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayLengthAccess().getExpressionExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayLength__ExpressionAssignment"


    // $ANTLR start "rule__ElementType__TypeAssignment"
    // InternalGo.g:14138:1: rule__ElementType__TypeAssignment : ( ruletype ) ;
    public final void rule__ElementType__TypeAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14142:1: ( ( ruletype ) )
            // InternalGo.g:14143:2: ( ruletype )
            {
            // InternalGo.g:14143:2: ( ruletype )
            // InternalGo.g:14144:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElementTypeAccess().getTypeTypeParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElementTypeAccess().getTypeTypeParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElementType__TypeAssignment"


    // $ANTLR start "rule__PointerType__TypeAssignment_1"
    // InternalGo.g:14153:1: rule__PointerType__TypeAssignment_1 : ( ruletype ) ;
    public final void rule__PointerType__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14157:1: ( ( ruletype ) )
            // InternalGo.g:14158:2: ( ruletype )
            {
            // InternalGo.g:14158:2: ( ruletype )
            // InternalGo.g:14159:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPointerTypeAccess().getTypeTypeParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPointerTypeAccess().getTypeTypeParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PointerType__TypeAssignment_1"


    // $ANTLR start "rule__InterfaceType__MethodSpecAssignment_2"
    // InternalGo.g:14168:1: rule__InterfaceType__MethodSpecAssignment_2 : ( rulemethodSpec ) ;
    public final void rule__InterfaceType__MethodSpecAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14172:1: ( ( rulemethodSpec ) )
            // InternalGo.g:14173:2: ( rulemethodSpec )
            {
            // InternalGo.g:14173:2: ( rulemethodSpec )
            // InternalGo.g:14174:3: rulemethodSpec
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInterfaceTypeAccess().getMethodSpecMethodSpecParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulemethodSpec();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInterfaceTypeAccess().getMethodSpecMethodSpecParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InterfaceType__MethodSpecAssignment_2"


    // $ANTLR start "rule__SliceType__ElementTypeAssignment_2"
    // InternalGo.g:14183:1: rule__SliceType__ElementTypeAssignment_2 : ( ruleelementType ) ;
    public final void rule__SliceType__ElementTypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14187:1: ( ( ruleelementType ) )
            // InternalGo.g:14188:2: ( ruleelementType )
            {
            // InternalGo.g:14188:2: ( ruleelementType )
            // InternalGo.g:14189:3: ruleelementType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceTypeAccess().getElementTypeElementTypeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleelementType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceTypeAccess().getElementTypeElementTypeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SliceType__ElementTypeAssignment_2"


    // $ANTLR start "rule__MapType__TypeAssignment_2"
    // InternalGo.g:14198:1: rule__MapType__TypeAssignment_2 : ( ruletype ) ;
    public final void rule__MapType__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14202:1: ( ( ruletype ) )
            // InternalGo.g:14203:2: ( ruletype )
            {
            // InternalGo.g:14203:2: ( ruletype )
            // InternalGo.g:14204:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeAccess().getTypeTypeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeAccess().getTypeTypeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapType__TypeAssignment_2"


    // $ANTLR start "rule__MapType__ElementTypeAssignment_4"
    // InternalGo.g:14213:1: rule__MapType__ElementTypeAssignment_4 : ( ruleelementType ) ;
    public final void rule__MapType__ElementTypeAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14217:1: ( ( ruleelementType ) )
            // InternalGo.g:14218:2: ( ruleelementType )
            {
            // InternalGo.g:14218:2: ( ruleelementType )
            // InternalGo.g:14219:3: ruleelementType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMapTypeAccess().getElementTypeElementTypeParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleelementType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMapTypeAccess().getElementTypeElementTypeParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MapType__ElementTypeAssignment_4"


    // $ANTLR start "rule__ChannelType__ElementTypeAssignment_1"
    // InternalGo.g:14228:1: rule__ChannelType__ElementTypeAssignment_1 : ( ruleelementType ) ;
    public final void rule__ChannelType__ElementTypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14232:1: ( ( ruleelementType ) )
            // InternalGo.g:14233:2: ( ruleelementType )
            {
            // InternalGo.g:14233:2: ( ruleelementType )
            // InternalGo.g:14234:3: ruleelementType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChannelTypeAccess().getElementTypeElementTypeParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleelementType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChannelTypeAccess().getElementTypeElementTypeParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChannelType__ElementTypeAssignment_1"


    // $ANTLR start "rule__MethodSpec__SignatureAssignment_0_1"
    // InternalGo.g:14243:1: rule__MethodSpec__SignatureAssignment_0_1 : ( rulesignature ) ;
    public final void rule__MethodSpec__SignatureAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14247:1: ( ( rulesignature ) )
            // InternalGo.g:14248:2: ( rulesignature )
            {
            // InternalGo.g:14248:2: ( rulesignature )
            // InternalGo.g:14249:3: rulesignature
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodSpecAccess().getSignatureSignatureParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesignature();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodSpecAccess().getSignatureSignatureParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodSpec__SignatureAssignment_0_1"


    // $ANTLR start "rule__MethodSpec__TypeNameAssignment_1"
    // InternalGo.g:14258:1: rule__MethodSpec__TypeNameAssignment_1 : ( ruletypeName ) ;
    public final void rule__MethodSpec__TypeNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14262:1: ( ( ruletypeName ) )
            // InternalGo.g:14263:2: ( ruletypeName )
            {
            // InternalGo.g:14263:2: ( ruletypeName )
            // InternalGo.g:14264:3: ruletypeName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodSpecAccess().getTypeNameTypeNameParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletypeName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodSpecAccess().getTypeNameTypeNameParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodSpec__TypeNameAssignment_1"


    // $ANTLR start "rule__FunctionType__SignatureAssignment_1"
    // InternalGo.g:14273:1: rule__FunctionType__SignatureAssignment_1 : ( rulesignature ) ;
    public final void rule__FunctionType__SignatureAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14277:1: ( ( rulesignature ) )
            // InternalGo.g:14278:2: ( rulesignature )
            {
            // InternalGo.g:14278:2: ( rulesignature )
            // InternalGo.g:14279:3: rulesignature
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionTypeAccess().getSignatureSignatureParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesignature();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionTypeAccess().getSignatureSignatureParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionType__SignatureAssignment_1"


    // $ANTLR start "rule__Signature__ParametersAssignment_0"
    // InternalGo.g:14288:1: rule__Signature__ParametersAssignment_0 : ( ruleparameters ) ;
    public final void rule__Signature__ParametersAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14292:1: ( ( ruleparameters ) )
            // InternalGo.g:14293:2: ( ruleparameters )
            {
            // InternalGo.g:14293:2: ( ruleparameters )
            // InternalGo.g:14294:3: ruleparameters
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleparameters();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Signature__ParametersAssignment_0"


    // $ANTLR start "rule__Signature__ResultAssignment_1"
    // InternalGo.g:14303:1: rule__Signature__ResultAssignment_1 : ( ruleresult ) ;
    public final void rule__Signature__ResultAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14307:1: ( ( ruleresult ) )
            // InternalGo.g:14308:2: ( ruleresult )
            {
            // InternalGo.g:14308:2: ( ruleresult )
            // InternalGo.g:14309:3: ruleresult
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleresult();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Signature__ResultAssignment_1"


    // $ANTLR start "rule__Result__ParametersAssignment_0"
    // InternalGo.g:14318:1: rule__Result__ParametersAssignment_0 : ( ruleparameters ) ;
    public final void rule__Result__ParametersAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14322:1: ( ( ruleparameters ) )
            // InternalGo.g:14323:2: ( ruleparameters )
            {
            // InternalGo.g:14323:2: ( ruleparameters )
            // InternalGo.g:14324:3: ruleparameters
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getResultAccess().getParametersParametersParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleparameters();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getResultAccess().getParametersParametersParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Result__ParametersAssignment_0"


    // $ANTLR start "rule__Result__TypeAssignment_1"
    // InternalGo.g:14333:1: rule__Result__TypeAssignment_1 : ( ruletype ) ;
    public final void rule__Result__TypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14337:1: ( ( ruletype ) )
            // InternalGo.g:14338:2: ( ruletype )
            {
            // InternalGo.g:14338:2: ( ruletype )
            // InternalGo.g:14339:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getResultAccess().getTypeTypeParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getResultAccess().getTypeTypeParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Result__TypeAssignment_1"


    // $ANTLR start "rule__Parameters__ParameterListAssignment_1_0"
    // InternalGo.g:14348:1: rule__Parameters__ParameterListAssignment_1_0 : ( ruleparameterList ) ;
    public final void rule__Parameters__ParameterListAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14352:1: ( ( ruleparameterList ) )
            // InternalGo.g:14353:2: ( ruleparameterList )
            {
            // InternalGo.g:14353:2: ( ruleparameterList )
            // InternalGo.g:14354:3: ruleparameterList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParametersAccess().getParameterListParameterListParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleparameterList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParametersAccess().getParameterListParameterListParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Parameters__ParameterListAssignment_1_0"


    // $ANTLR start "rule__ParameterList__ParameterDeclAssignment_0"
    // InternalGo.g:14363:1: rule__ParameterList__ParameterDeclAssignment_0 : ( ruleparameterDecl ) ;
    public final void rule__ParameterList__ParameterDeclAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14367:1: ( ( ruleparameterDecl ) )
            // InternalGo.g:14368:2: ( ruleparameterDecl )
            {
            // InternalGo.g:14368:2: ( ruleparameterDecl )
            // InternalGo.g:14369:3: ruleparameterDecl
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleparameterDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__ParameterDeclAssignment_0"


    // $ANTLR start "rule__ParameterList__ParameterDeclAssignment_1_1"
    // InternalGo.g:14378:1: rule__ParameterList__ParameterDeclAssignment_1_1 : ( ruleparameterDecl ) ;
    public final void rule__ParameterList__ParameterDeclAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14382:1: ( ( ruleparameterDecl ) )
            // InternalGo.g:14383:2: ( ruleparameterDecl )
            {
            // InternalGo.g:14383:2: ( ruleparameterDecl )
            // InternalGo.g:14384:3: ruleparameterDecl
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleparameterDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterList__ParameterDeclAssignment_1_1"


    // $ANTLR start "rule__ParameterDecl__IdentifierListAssignment_0"
    // InternalGo.g:14393:1: rule__ParameterDecl__IdentifierListAssignment_0 : ( ruleidentifierList ) ;
    public final void rule__ParameterDecl__IdentifierListAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14397:1: ( ( ruleidentifierList ) )
            // InternalGo.g:14398:2: ( ruleidentifierList )
            {
            // InternalGo.g:14398:2: ( ruleidentifierList )
            // InternalGo.g:14399:3: ruleidentifierList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleidentifierList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDecl__IdentifierListAssignment_0"


    // $ANTLR start "rule__ParameterDecl__TypeAssignment_2"
    // InternalGo.g:14408:1: rule__ParameterDecl__TypeAssignment_2 : ( ruletype ) ;
    public final void rule__ParameterDecl__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14412:1: ( ( ruletype ) )
            // InternalGo.g:14413:2: ( ruletype )
            {
            // InternalGo.g:14413:2: ( ruletype )
            // InternalGo.g:14414:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterDecl__TypeAssignment_2"


    // $ANTLR start "rule__Operand__LiteralAssignment_0"
    // InternalGo.g:14423:1: rule__Operand__LiteralAssignment_0 : ( ruleliteral ) ;
    public final void rule__Operand__LiteralAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14427:1: ( ( ruleliteral ) )
            // InternalGo.g:14428:2: ( ruleliteral )
            {
            // InternalGo.g:14428:2: ( ruleliteral )
            // InternalGo.g:14429:3: ruleliteral
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleliteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__LiteralAssignment_0"


    // $ANTLR start "rule__Operand__OperandNameAssignment_1"
    // InternalGo.g:14438:1: rule__Operand__OperandNameAssignment_1 : ( ruleoperandName ) ;
    public final void rule__Operand__OperandNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14442:1: ( ( ruleoperandName ) )
            // InternalGo.g:14443:2: ( ruleoperandName )
            {
            // InternalGo.g:14443:2: ( ruleoperandName )
            // InternalGo.g:14444:3: ruleoperandName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getOperandNameOperandNameParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleoperandName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getOperandNameOperandNameParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__OperandNameAssignment_1"


    // $ANTLR start "rule__Operand__MethodExprAssignment_2"
    // InternalGo.g:14453:1: rule__Operand__MethodExprAssignment_2 : ( rulemethodExpr ) ;
    public final void rule__Operand__MethodExprAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14457:1: ( ( rulemethodExpr ) )
            // InternalGo.g:14458:2: ( rulemethodExpr )
            {
            // InternalGo.g:14458:2: ( rulemethodExpr )
            // InternalGo.g:14459:3: rulemethodExpr
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getMethodExprMethodExprParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulemethodExpr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getMethodExprMethodExprParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__MethodExprAssignment_2"


    // $ANTLR start "rule__Operand__ExpressionAssignment_3_1"
    // InternalGo.g:14468:1: rule__Operand__ExpressionAssignment_3_1 : ( ruleexpression ) ;
    public final void rule__Operand__ExpressionAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14472:1: ( ( ruleexpression ) )
            // InternalGo.g:14473:2: ( ruleexpression )
            {
            // InternalGo.g:14473:2: ( ruleexpression )
            // InternalGo.g:14474:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__ExpressionAssignment_3_1"


    // $ANTLR start "rule__Literal__BasicLitAssignment_0"
    // InternalGo.g:14483:1: rule__Literal__BasicLitAssignment_0 : ( rulebasicLit ) ;
    public final void rule__Literal__BasicLitAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14487:1: ( ( rulebasicLit ) )
            // InternalGo.g:14488:2: ( rulebasicLit )
            {
            // InternalGo.g:14488:2: ( rulebasicLit )
            // InternalGo.g:14489:3: rulebasicLit
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralAccess().getBasicLitBasicLitParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulebasicLit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralAccess().getBasicLitBasicLitParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__BasicLitAssignment_0"


    // $ANTLR start "rule__Literal__CompositeLitAssignment_1"
    // InternalGo.g:14498:1: rule__Literal__CompositeLitAssignment_1 : ( rulecompositeLit ) ;
    public final void rule__Literal__CompositeLitAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14502:1: ( ( rulecompositeLit ) )
            // InternalGo.g:14503:2: ( rulecompositeLit )
            {
            // InternalGo.g:14503:2: ( rulecompositeLit )
            // InternalGo.g:14504:3: rulecompositeLit
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralAccess().getCompositeLitCompositeLitParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulecompositeLit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralAccess().getCompositeLitCompositeLitParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__CompositeLitAssignment_1"


    // $ANTLR start "rule__Literal__FunctionLitAssignment_2"
    // InternalGo.g:14513:1: rule__Literal__FunctionLitAssignment_2 : ( rulefunctionLit ) ;
    public final void rule__Literal__FunctionLitAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14517:1: ( ( rulefunctionLit ) )
            // InternalGo.g:14518:2: ( rulefunctionLit )
            {
            // InternalGo.g:14518:2: ( rulefunctionLit )
            // InternalGo.g:14519:3: rulefunctionLit
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralAccess().getFunctionLitFunctionLitParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefunctionLit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralAccess().getFunctionLitFunctionLitParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__FunctionLitAssignment_2"


    // $ANTLR start "rule__OperandName__QualifiedIdentAssignment_1"
    // InternalGo.g:14528:1: rule__OperandName__QualifiedIdentAssignment_1 : ( rulequalifiedIdent ) ;
    public final void rule__OperandName__QualifiedIdentAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14532:1: ( ( rulequalifiedIdent ) )
            // InternalGo.g:14533:2: ( rulequalifiedIdent )
            {
            // InternalGo.g:14533:2: ( rulequalifiedIdent )
            // InternalGo.g:14534:3: rulequalifiedIdent
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandNameAccess().getQualifiedIdentQualifiedIdentParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulequalifiedIdent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandNameAccess().getQualifiedIdentQualifiedIdentParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandName__QualifiedIdentAssignment_1"


    // $ANTLR start "rule__CompositeLit__LiteralTypeAssignment_0"
    // InternalGo.g:14543:1: rule__CompositeLit__LiteralTypeAssignment_0 : ( ruleliteralType ) ;
    public final void rule__CompositeLit__LiteralTypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14547:1: ( ( ruleliteralType ) )
            // InternalGo.g:14548:2: ( ruleliteralType )
            {
            // InternalGo.g:14548:2: ( ruleliteralType )
            // InternalGo.g:14549:3: ruleliteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompositeLitAccess().getLiteralTypeLiteralTypeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleliteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompositeLitAccess().getLiteralTypeLiteralTypeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompositeLit__LiteralTypeAssignment_0"


    // $ANTLR start "rule__CompositeLit__LiteralValueAssignment_1"
    // InternalGo.g:14558:1: rule__CompositeLit__LiteralValueAssignment_1 : ( ruleliteralValue ) ;
    public final void rule__CompositeLit__LiteralValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14562:1: ( ( ruleliteralValue ) )
            // InternalGo.g:14563:2: ( ruleliteralValue )
            {
            // InternalGo.g:14563:2: ( ruleliteralValue )
            // InternalGo.g:14564:3: ruleliteralValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompositeLitAccess().getLiteralValueLiteralValueParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleliteralValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompositeLitAccess().getLiteralValueLiteralValueParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompositeLit__LiteralValueAssignment_1"


    // $ANTLR start "rule__LiteralType__StructTypeAssignment_0"
    // InternalGo.g:14573:1: rule__LiteralType__StructTypeAssignment_0 : ( rulestructType ) ;
    public final void rule__LiteralType__StructTypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14577:1: ( ( rulestructType ) )
            // InternalGo.g:14578:2: ( rulestructType )
            {
            // InternalGo.g:14578:2: ( rulestructType )
            // InternalGo.g:14579:3: rulestructType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralTypeAccess().getStructTypeStructTypeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulestructType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralTypeAccess().getStructTypeStructTypeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralType__StructTypeAssignment_0"


    // $ANTLR start "rule__LiteralType__ArrayTypeAssignment_1"
    // InternalGo.g:14588:1: rule__LiteralType__ArrayTypeAssignment_1 : ( rulearrayType ) ;
    public final void rule__LiteralType__ArrayTypeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14592:1: ( ( rulearrayType ) )
            // InternalGo.g:14593:2: ( rulearrayType )
            {
            // InternalGo.g:14593:2: ( rulearrayType )
            // InternalGo.g:14594:3: rulearrayType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralTypeAccess().getArrayTypeArrayTypeParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulearrayType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralTypeAccess().getArrayTypeArrayTypeParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralType__ArrayTypeAssignment_1"


    // $ANTLR start "rule__LiteralType__ElementTypeAssignment_2_3"
    // InternalGo.g:14603:1: rule__LiteralType__ElementTypeAssignment_2_3 : ( ruleelementType ) ;
    public final void rule__LiteralType__ElementTypeAssignment_2_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14607:1: ( ( ruleelementType ) )
            // InternalGo.g:14608:2: ( ruleelementType )
            {
            // InternalGo.g:14608:2: ( ruleelementType )
            // InternalGo.g:14609:3: ruleelementType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralTypeAccess().getElementTypeElementTypeParserRuleCall_2_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleelementType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralTypeAccess().getElementTypeElementTypeParserRuleCall_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralType__ElementTypeAssignment_2_3"


    // $ANTLR start "rule__LiteralType__SliceTypeAssignment_3"
    // InternalGo.g:14618:1: rule__LiteralType__SliceTypeAssignment_3 : ( rulesliceType ) ;
    public final void rule__LiteralType__SliceTypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14622:1: ( ( rulesliceType ) )
            // InternalGo.g:14623:2: ( rulesliceType )
            {
            // InternalGo.g:14623:2: ( rulesliceType )
            // InternalGo.g:14624:3: rulesliceType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralTypeAccess().getSliceTypeSliceTypeParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulesliceType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralTypeAccess().getSliceTypeSliceTypeParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralType__SliceTypeAssignment_3"


    // $ANTLR start "rule__LiteralType__MapTypeAssignment_4"
    // InternalGo.g:14633:1: rule__LiteralType__MapTypeAssignment_4 : ( rulemapType ) ;
    public final void rule__LiteralType__MapTypeAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14637:1: ( ( rulemapType ) )
            // InternalGo.g:14638:2: ( rulemapType )
            {
            // InternalGo.g:14638:2: ( rulemapType )
            // InternalGo.g:14639:3: rulemapType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralTypeAccess().getMapTypeMapTypeParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            rulemapType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralTypeAccess().getMapTypeMapTypeParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralType__MapTypeAssignment_4"


    // $ANTLR start "rule__LiteralType__TypeNameAssignment_5"
    // InternalGo.g:14648:1: rule__LiteralType__TypeNameAssignment_5 : ( ruletypeName ) ;
    public final void rule__LiteralType__TypeNameAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14652:1: ( ( ruletypeName ) )
            // InternalGo.g:14653:2: ( ruletypeName )
            {
            // InternalGo.g:14653:2: ( ruletypeName )
            // InternalGo.g:14654:3: ruletypeName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralTypeAccess().getTypeNameTypeNameParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletypeName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralTypeAccess().getTypeNameTypeNameParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralType__TypeNameAssignment_5"


    // $ANTLR start "rule__LiteralValue__ElementListAssignment_1_0"
    // InternalGo.g:14663:1: rule__LiteralValue__ElementListAssignment_1_0 : ( ruleelementList ) ;
    public final void rule__LiteralValue__ElementListAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14667:1: ( ( ruleelementList ) )
            // InternalGo.g:14668:2: ( ruleelementList )
            {
            // InternalGo.g:14668:2: ( ruleelementList )
            // InternalGo.g:14669:3: ruleelementList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralValueAccess().getElementListElementListParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleelementList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralValueAccess().getElementListElementListParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LiteralValue__ElementListAssignment_1_0"


    // $ANTLR start "rule__ElementList__KeyedElementAssignment_0"
    // InternalGo.g:14678:1: rule__ElementList__KeyedElementAssignment_0 : ( rulekeyedElement ) ;
    public final void rule__ElementList__KeyedElementAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14682:1: ( ( rulekeyedElement ) )
            // InternalGo.g:14683:2: ( rulekeyedElement )
            {
            // InternalGo.g:14683:2: ( rulekeyedElement )
            // InternalGo.g:14684:3: rulekeyedElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulekeyedElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElementList__KeyedElementAssignment_0"


    // $ANTLR start "rule__ElementList__KeyedElementAssignment_1_1"
    // InternalGo.g:14693:1: rule__ElementList__KeyedElementAssignment_1_1 : ( rulekeyedElement ) ;
    public final void rule__ElementList__KeyedElementAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14697:1: ( ( rulekeyedElement ) )
            // InternalGo.g:14698:2: ( rulekeyedElement )
            {
            // InternalGo.g:14698:2: ( rulekeyedElement )
            // InternalGo.g:14699:3: rulekeyedElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulekeyedElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ElementList__KeyedElementAssignment_1_1"


    // $ANTLR start "rule__KeyedElement__KeyAssignment_0_0"
    // InternalGo.g:14708:1: rule__KeyedElement__KeyAssignment_0_0 : ( rulekey ) ;
    public final void rule__KeyedElement__KeyAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14712:1: ( ( rulekey ) )
            // InternalGo.g:14713:2: ( rulekey )
            {
            // InternalGo.g:14713:2: ( rulekey )
            // InternalGo.g:14714:3: rulekey
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyedElementAccess().getKeyKeyParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulekey();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyedElementAccess().getKeyKeyParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyedElement__KeyAssignment_0_0"


    // $ANTLR start "rule__KeyedElement__ElementAssignment_1"
    // InternalGo.g:14723:1: rule__KeyedElement__ElementAssignment_1 : ( ruleelement ) ;
    public final void rule__KeyedElement__ElementAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14727:1: ( ( ruleelement ) )
            // InternalGo.g:14728:2: ( ruleelement )
            {
            // InternalGo.g:14728:2: ( ruleelement )
            // InternalGo.g:14729:3: ruleelement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleelement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyedElement__ElementAssignment_1"


    // $ANTLR start "rule__Key__ExpressionAssignment_1"
    // InternalGo.g:14738:1: rule__Key__ExpressionAssignment_1 : ( ruleexpression ) ;
    public final void rule__Key__ExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14742:1: ( ( ruleexpression ) )
            // InternalGo.g:14743:2: ( ruleexpression )
            {
            // InternalGo.g:14743:2: ( ruleexpression )
            // InternalGo.g:14744:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Key__ExpressionAssignment_1"


    // $ANTLR start "rule__Key__LiteralValueAssignment_2"
    // InternalGo.g:14753:1: rule__Key__LiteralValueAssignment_2 : ( ruleliteralValue ) ;
    public final void rule__Key__LiteralValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14757:1: ( ( ruleliteralValue ) )
            // InternalGo.g:14758:2: ( ruleliteralValue )
            {
            // InternalGo.g:14758:2: ( ruleliteralValue )
            // InternalGo.g:14759:3: ruleliteralValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyAccess().getLiteralValueLiteralValueParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleliteralValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyAccess().getLiteralValueLiteralValueParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Key__LiteralValueAssignment_2"


    // $ANTLR start "rule__Element__ExpressionAssignment_0"
    // InternalGo.g:14768:1: rule__Element__ExpressionAssignment_0 : ( ruleexpression ) ;
    public final void rule__Element__ExpressionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14772:1: ( ( ruleexpression ) )
            // InternalGo.g:14773:2: ( ruleexpression )
            {
            // InternalGo.g:14773:2: ( ruleexpression )
            // InternalGo.g:14774:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElementAccess().getExpressionExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElementAccess().getExpressionExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Element__ExpressionAssignment_0"


    // $ANTLR start "rule__Element__LiteralValueAssignment_1"
    // InternalGo.g:14783:1: rule__Element__LiteralValueAssignment_1 : ( ruleliteralValue ) ;
    public final void rule__Element__LiteralValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14787:1: ( ( ruleliteralValue ) )
            // InternalGo.g:14788:2: ( ruleliteralValue )
            {
            // InternalGo.g:14788:2: ( ruleliteralValue )
            // InternalGo.g:14789:3: ruleliteralValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getElementAccess().getLiteralValueLiteralValueParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleliteralValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getElementAccess().getLiteralValueLiteralValueParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Element__LiteralValueAssignment_1"


    // $ANTLR start "rule__StructType__FieldDeclAssignment_2"
    // InternalGo.g:14798:1: rule__StructType__FieldDeclAssignment_2 : ( rulefieldDecl ) ;
    public final void rule__StructType__FieldDeclAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14802:1: ( ( rulefieldDecl ) )
            // InternalGo.g:14803:2: ( rulefieldDecl )
            {
            // InternalGo.g:14803:2: ( rulefieldDecl )
            // InternalGo.g:14804:3: rulefieldDecl
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStructTypeAccess().getFieldDeclFieldDeclParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefieldDecl();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStructTypeAccess().getFieldDeclFieldDeclParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StructType__FieldDeclAssignment_2"


    // $ANTLR start "rule__FieldDecl__IdentifierListAssignment_0_0_0"
    // InternalGo.g:14813:1: rule__FieldDecl__IdentifierListAssignment_0_0_0 : ( ruleidentifierList ) ;
    public final void rule__FieldDecl__IdentifierListAssignment_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14817:1: ( ( ruleidentifierList ) )
            // InternalGo.g:14818:2: ( ruleidentifierList )
            {
            // InternalGo.g:14818:2: ( ruleidentifierList )
            // InternalGo.g:14819:3: ruleidentifierList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleidentifierList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__IdentifierListAssignment_0_0_0"


    // $ANTLR start "rule__FieldDecl__TypeAssignment_0_0_1"
    // InternalGo.g:14828:1: rule__FieldDecl__TypeAssignment_0_0_1 : ( ruletype ) ;
    public final void rule__FieldDecl__TypeAssignment_0_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14832:1: ( ( ruletype ) )
            // InternalGo.g:14833:2: ( ruletype )
            {
            // InternalGo.g:14833:2: ( ruletype )
            // InternalGo.g:14834:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_0_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_0_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__TypeAssignment_0_0_1"


    // $ANTLR start "rule__FieldDecl__AnonymousFieldAssignment_0_1"
    // InternalGo.g:14843:1: rule__FieldDecl__AnonymousFieldAssignment_0_1 : ( ruleanonymousField ) ;
    public final void rule__FieldDecl__AnonymousFieldAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14847:1: ( ( ruleanonymousField ) )
            // InternalGo.g:14848:2: ( ruleanonymousField )
            {
            // InternalGo.g:14848:2: ( ruleanonymousField )
            // InternalGo.g:14849:3: ruleanonymousField
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldDeclAccess().getAnonymousFieldAnonymousFieldParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleanonymousField();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldDeclAccess().getAnonymousFieldAnonymousFieldParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDecl__AnonymousFieldAssignment_0_1"


    // $ANTLR start "rule__AnonymousField__TypeNameAssignment_1"
    // InternalGo.g:14858:1: rule__AnonymousField__TypeNameAssignment_1 : ( ruletypeName ) ;
    public final void rule__AnonymousField__TypeNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14862:1: ( ( ruletypeName ) )
            // InternalGo.g:14863:2: ( ruletypeName )
            {
            // InternalGo.g:14863:2: ( ruletypeName )
            // InternalGo.g:14864:3: ruletypeName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnonymousFieldAccess().getTypeNameTypeNameParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletypeName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnonymousFieldAccess().getTypeNameTypeNameParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnonymousField__TypeNameAssignment_1"


    // $ANTLR start "rule__FunctionLit__FunctionAssignment_1"
    // InternalGo.g:14873:1: rule__FunctionLit__FunctionAssignment_1 : ( rulefunction ) ;
    public final void rule__FunctionLit__FunctionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14877:1: ( ( rulefunction ) )
            // InternalGo.g:14878:2: ( rulefunction )
            {
            // InternalGo.g:14878:2: ( rulefunction )
            // InternalGo.g:14879:3: rulefunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionLitAccess().getFunctionFunctionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulefunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionLitAccess().getFunctionFunctionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionLit__FunctionAssignment_1"


    // $ANTLR start "rule__PrimaryExpr__OperandAssignment_0_0"
    // InternalGo.g:14888:1: rule__PrimaryExpr__OperandAssignment_0_0 : ( ruleoperand ) ;
    public final void rule__PrimaryExpr__OperandAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14892:1: ( ( ruleoperand ) )
            // InternalGo.g:14893:2: ( ruleoperand )
            {
            // InternalGo.g:14893:2: ( ruleoperand )
            // InternalGo.g:14894:3: ruleoperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprAccess().getOperandOperandParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleoperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprAccess().getOperandOperandParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpr__OperandAssignment_0_0"


    // $ANTLR start "rule__PrimaryExpr__ConversionAssignment_0_1"
    // InternalGo.g:14903:1: rule__PrimaryExpr__ConversionAssignment_0_1 : ( ruleconversion ) ;
    public final void rule__PrimaryExpr__ConversionAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14907:1: ( ( ruleconversion ) )
            // InternalGo.g:14908:2: ( ruleconversion )
            {
            // InternalGo.g:14908:2: ( ruleconversion )
            // InternalGo.g:14909:3: ruleconversion
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprAccess().getConversionConversionParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleconversion();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprAccess().getConversionConversionParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpr__ConversionAssignment_0_1"


    // $ANTLR start "rule__PrimaryExpr__PrimaryExprSelectorAssignment_1"
    // InternalGo.g:14918:1: rule__PrimaryExpr__PrimaryExprSelectorAssignment_1 : ( ruleprimaryExprSelector ) ;
    public final void rule__PrimaryExpr__PrimaryExprSelectorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14922:1: ( ( ruleprimaryExprSelector ) )
            // InternalGo.g:14923:2: ( ruleprimaryExprSelector )
            {
            // InternalGo.g:14923:2: ( ruleprimaryExprSelector )
            // InternalGo.g:14924:3: ruleprimaryExprSelector
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprAccess().getPrimaryExprSelectorPrimaryExprSelectorParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprimaryExprSelector();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprAccess().getPrimaryExprSelectorPrimaryExprSelectorParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpr__PrimaryExprSelectorAssignment_1"


    // $ANTLR start "rule__PrimaryExpr__PrimaryExprIndexAssignment_2"
    // InternalGo.g:14933:1: rule__PrimaryExpr__PrimaryExprIndexAssignment_2 : ( ruleprimaryExprIndex ) ;
    public final void rule__PrimaryExpr__PrimaryExprIndexAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14937:1: ( ( ruleprimaryExprIndex ) )
            // InternalGo.g:14938:2: ( ruleprimaryExprIndex )
            {
            // InternalGo.g:14938:2: ( ruleprimaryExprIndex )
            // InternalGo.g:14939:3: ruleprimaryExprIndex
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprAccess().getPrimaryExprIndexPrimaryExprIndexParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprimaryExprIndex();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprAccess().getPrimaryExprIndexPrimaryExprIndexParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpr__PrimaryExprIndexAssignment_2"


    // $ANTLR start "rule__PrimaryExpr__PrimaryExprSliceAssignment_3"
    // InternalGo.g:14948:1: rule__PrimaryExpr__PrimaryExprSliceAssignment_3 : ( ruleprimaryExprSlice ) ;
    public final void rule__PrimaryExpr__PrimaryExprSliceAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14952:1: ( ( ruleprimaryExprSlice ) )
            // InternalGo.g:14953:2: ( ruleprimaryExprSlice )
            {
            // InternalGo.g:14953:2: ( ruleprimaryExprSlice )
            // InternalGo.g:14954:3: ruleprimaryExprSlice
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprAccess().getPrimaryExprSlicePrimaryExprSliceParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprimaryExprSlice();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprAccess().getPrimaryExprSlicePrimaryExprSliceParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpr__PrimaryExprSliceAssignment_3"


    // $ANTLR start "rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4"
    // InternalGo.g:14963:1: rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4 : ( ruleprimaryExprTypeAssertion ) ;
    public final void rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14967:1: ( ( ruleprimaryExprTypeAssertion ) )
            // InternalGo.g:14968:2: ( ruleprimaryExprTypeAssertion )
            {
            // InternalGo.g:14968:2: ( ruleprimaryExprTypeAssertion )
            // InternalGo.g:14969:3: ruleprimaryExprTypeAssertion
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprAccess().getPrimaryExprTypeAssertionPrimaryExprTypeAssertionParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprimaryExprTypeAssertion();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprAccess().getPrimaryExprTypeAssertionPrimaryExprTypeAssertionParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4"


    // $ANTLR start "rule__PrimaryExpr__PrimaryExprArgumentsAssignment_5"
    // InternalGo.g:14978:1: rule__PrimaryExpr__PrimaryExprArgumentsAssignment_5 : ( ruleprimaryExprArguments ) ;
    public final void rule__PrimaryExpr__PrimaryExprArgumentsAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14982:1: ( ( ruleprimaryExprArguments ) )
            // InternalGo.g:14983:2: ( ruleprimaryExprArguments )
            {
            // InternalGo.g:14983:2: ( ruleprimaryExprArguments )
            // InternalGo.g:14984:3: ruleprimaryExprArguments
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprAccess().getPrimaryExprArgumentsPrimaryExprArgumentsParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprimaryExprArguments();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprAccess().getPrimaryExprArgumentsPrimaryExprArgumentsParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpr__PrimaryExprArgumentsAssignment_5"


    // $ANTLR start "rule__PrimaryExprStuff__SelectorAssignment_0"
    // InternalGo.g:14993:1: rule__PrimaryExprStuff__SelectorAssignment_0 : ( ruleselector ) ;
    public final void rule__PrimaryExprStuff__SelectorAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:14997:1: ( ( ruleselector ) )
            // InternalGo.g:14998:2: ( ruleselector )
            {
            // InternalGo.g:14998:2: ( ruleselector )
            // InternalGo.g:14999:3: ruleselector
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprStuffAccess().getSelectorSelectorParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleselector();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprStuffAccess().getSelectorSelectorParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprStuff__SelectorAssignment_0"


    // $ANTLR start "rule__PrimaryExprStuff__IndexAssignment_1"
    // InternalGo.g:15008:1: rule__PrimaryExprStuff__IndexAssignment_1 : ( ruleindex ) ;
    public final void rule__PrimaryExprStuff__IndexAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15012:1: ( ( ruleindex ) )
            // InternalGo.g:15013:2: ( ruleindex )
            {
            // InternalGo.g:15013:2: ( ruleindex )
            // InternalGo.g:15014:3: ruleindex
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprStuffAccess().getIndexIndexParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleindex();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprStuffAccess().getIndexIndexParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprStuff__IndexAssignment_1"


    // $ANTLR start "rule__PrimaryExprStuff__SliceAssignment_2"
    // InternalGo.g:15023:1: rule__PrimaryExprStuff__SliceAssignment_2 : ( ruleslice ) ;
    public final void rule__PrimaryExprStuff__SliceAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15027:1: ( ( ruleslice ) )
            // InternalGo.g:15028:2: ( ruleslice )
            {
            // InternalGo.g:15028:2: ( ruleslice )
            // InternalGo.g:15029:3: ruleslice
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprStuffAccess().getSliceSliceParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleslice();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprStuffAccess().getSliceSliceParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprStuff__SliceAssignment_2"


    // $ANTLR start "rule__PrimaryExprStuff__TypeAssertionAssignment_3"
    // InternalGo.g:15038:1: rule__PrimaryExprStuff__TypeAssertionAssignment_3 : ( ruletypeAssertion ) ;
    public final void rule__PrimaryExprStuff__TypeAssertionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15042:1: ( ( ruletypeAssertion ) )
            // InternalGo.g:15043:2: ( ruletypeAssertion )
            {
            // InternalGo.g:15043:2: ( ruletypeAssertion )
            // InternalGo.g:15044:3: ruletypeAssertion
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprStuffAccess().getTypeAssertionTypeAssertionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletypeAssertion();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprStuffAccess().getTypeAssertionTypeAssertionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprStuff__TypeAssertionAssignment_3"


    // $ANTLR start "rule__PrimaryExprStuff__ArgumentsAssignment_4"
    // InternalGo.g:15053:1: rule__PrimaryExprStuff__ArgumentsAssignment_4 : ( rulearguments ) ;
    public final void rule__PrimaryExprStuff__ArgumentsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15057:1: ( ( rulearguments ) )
            // InternalGo.g:15058:2: ( rulearguments )
            {
            // InternalGo.g:15058:2: ( rulearguments )
            // InternalGo.g:15059:3: rulearguments
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprStuffAccess().getArgumentsArgumentsParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            rulearguments();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprStuffAccess().getArgumentsArgumentsParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprStuff__ArgumentsAssignment_4"


    // $ANTLR start "rule__PrimaryExprSelector__PrimaryExprStuffAssignment_0"
    // InternalGo.g:15068:1: rule__PrimaryExprSelector__PrimaryExprStuffAssignment_0 : ( ruleprimaryExprStuff ) ;
    public final void rule__PrimaryExprSelector__PrimaryExprStuffAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15072:1: ( ( ruleprimaryExprStuff ) )
            // InternalGo.g:15073:2: ( ruleprimaryExprStuff )
            {
            // InternalGo.g:15073:2: ( ruleprimaryExprStuff )
            // InternalGo.g:15074:3: ruleprimaryExprStuff
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprimaryExprStuff();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprSelector__PrimaryExprStuffAssignment_0"


    // $ANTLR start "rule__PrimaryExprSelector__PrimaryExprSelectorAssignment_1"
    // InternalGo.g:15083:1: rule__PrimaryExprSelector__PrimaryExprSelectorAssignment_1 : ( ruleprimaryExprSelector ) ;
    public final void rule__PrimaryExprSelector__PrimaryExprSelectorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15087:1: ( ( ruleprimaryExprSelector ) )
            // InternalGo.g:15088:2: ( ruleprimaryExprSelector )
            {
            // InternalGo.g:15088:2: ( ruleprimaryExprSelector )
            // InternalGo.g:15089:3: ruleprimaryExprSelector
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprSelectorPrimaryExprSelectorParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprimaryExprSelector();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprSelectorPrimaryExprSelectorParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprSelector__PrimaryExprSelectorAssignment_1"


    // $ANTLR start "rule__PrimaryExprIndex__PrimaryExprStuffAssignment_0"
    // InternalGo.g:15098:1: rule__PrimaryExprIndex__PrimaryExprStuffAssignment_0 : ( ruleprimaryExprStuff ) ;
    public final void rule__PrimaryExprIndex__PrimaryExprStuffAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15102:1: ( ( ruleprimaryExprStuff ) )
            // InternalGo.g:15103:2: ( ruleprimaryExprStuff )
            {
            // InternalGo.g:15103:2: ( ruleprimaryExprStuff )
            // InternalGo.g:15104:3: ruleprimaryExprStuff
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprimaryExprStuff();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprIndex__PrimaryExprStuffAssignment_0"


    // $ANTLR start "rule__PrimaryExprIndex__PrimaryExprIndexAssignment_1"
    // InternalGo.g:15113:1: rule__PrimaryExprIndex__PrimaryExprIndexAssignment_1 : ( ruleprimaryExprIndex ) ;
    public final void rule__PrimaryExprIndex__PrimaryExprIndexAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15117:1: ( ( ruleprimaryExprIndex ) )
            // InternalGo.g:15118:2: ( ruleprimaryExprIndex )
            {
            // InternalGo.g:15118:2: ( ruleprimaryExprIndex )
            // InternalGo.g:15119:3: ruleprimaryExprIndex
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprIndexPrimaryExprIndexParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprimaryExprIndex();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprIndexPrimaryExprIndexParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprIndex__PrimaryExprIndexAssignment_1"


    // $ANTLR start "rule__PrimaryExprSlice__PrimaryExprStuffAssignment_0"
    // InternalGo.g:15128:1: rule__PrimaryExprSlice__PrimaryExprStuffAssignment_0 : ( ruleprimaryExprStuff ) ;
    public final void rule__PrimaryExprSlice__PrimaryExprStuffAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15132:1: ( ( ruleprimaryExprStuff ) )
            // InternalGo.g:15133:2: ( ruleprimaryExprStuff )
            {
            // InternalGo.g:15133:2: ( ruleprimaryExprStuff )
            // InternalGo.g:15134:3: ruleprimaryExprStuff
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprimaryExprStuff();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprSlice__PrimaryExprStuffAssignment_0"


    // $ANTLR start "rule__PrimaryExprSlice__PrimaryExprSliceAssignment_1"
    // InternalGo.g:15143:1: rule__PrimaryExprSlice__PrimaryExprSliceAssignment_1 : ( ruleprimaryExprSlice ) ;
    public final void rule__PrimaryExprSlice__PrimaryExprSliceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15147:1: ( ( ruleprimaryExprSlice ) )
            // InternalGo.g:15148:2: ( ruleprimaryExprSlice )
            {
            // InternalGo.g:15148:2: ( ruleprimaryExprSlice )
            // InternalGo.g:15149:3: ruleprimaryExprSlice
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprSlicePrimaryExprSliceParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprimaryExprSlice();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprSlicePrimaryExprSliceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprSlice__PrimaryExprSliceAssignment_1"


    // $ANTLR start "rule__PrimaryExprTypeAssertion__PrimaryExprStuffAssignment_0"
    // InternalGo.g:15158:1: rule__PrimaryExprTypeAssertion__PrimaryExprStuffAssignment_0 : ( ruleprimaryExprStuff ) ;
    public final void rule__PrimaryExprTypeAssertion__PrimaryExprStuffAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15162:1: ( ( ruleprimaryExprStuff ) )
            // InternalGo.g:15163:2: ( ruleprimaryExprStuff )
            {
            // InternalGo.g:15163:2: ( ruleprimaryExprStuff )
            // InternalGo.g:15164:3: ruleprimaryExprStuff
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprimaryExprStuff();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprTypeAssertion__PrimaryExprStuffAssignment_0"


    // $ANTLR start "rule__PrimaryExprTypeAssertion__PrimaryExprTypeAssertionAssignment_1"
    // InternalGo.g:15173:1: rule__PrimaryExprTypeAssertion__PrimaryExprTypeAssertionAssignment_1 : ( ruleprimaryExprTypeAssertion ) ;
    public final void rule__PrimaryExprTypeAssertion__PrimaryExprTypeAssertionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15177:1: ( ( ruleprimaryExprTypeAssertion ) )
            // InternalGo.g:15178:2: ( ruleprimaryExprTypeAssertion )
            {
            // InternalGo.g:15178:2: ( ruleprimaryExprTypeAssertion )
            // InternalGo.g:15179:3: ruleprimaryExprTypeAssertion
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprTypeAssertionPrimaryExprTypeAssertionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprimaryExprTypeAssertion();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprTypeAssertionPrimaryExprTypeAssertionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprTypeAssertion__PrimaryExprTypeAssertionAssignment_1"


    // $ANTLR start "rule__PrimaryExprArguments__PrimaryExprStuffAssignment_0"
    // InternalGo.g:15188:1: rule__PrimaryExprArguments__PrimaryExprStuffAssignment_0 : ( ruleprimaryExprStuff ) ;
    public final void rule__PrimaryExprArguments__PrimaryExprStuffAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15192:1: ( ( ruleprimaryExprStuff ) )
            // InternalGo.g:15193:2: ( ruleprimaryExprStuff )
            {
            // InternalGo.g:15193:2: ( ruleprimaryExprStuff )
            // InternalGo.g:15194:3: ruleprimaryExprStuff
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprimaryExprStuff();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprArguments__PrimaryExprStuffAssignment_0"


    // $ANTLR start "rule__PrimaryExprArguments__PrimaryExprArgumentsAssignment_1"
    // InternalGo.g:15203:1: rule__PrimaryExprArguments__PrimaryExprArgumentsAssignment_1 : ( ruleprimaryExprArguments ) ;
    public final void rule__PrimaryExprArguments__PrimaryExprArgumentsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15207:1: ( ( ruleprimaryExprArguments ) )
            // InternalGo.g:15208:2: ( ruleprimaryExprArguments )
            {
            // InternalGo.g:15208:2: ( ruleprimaryExprArguments )
            // InternalGo.g:15209:3: ruleprimaryExprArguments
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprArgumentsPrimaryExprArgumentsParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprimaryExprArguments();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprArgumentsPrimaryExprArgumentsParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExprArguments__PrimaryExprArgumentsAssignment_1"


    // $ANTLR start "rule__Slice__ExpressionAssignment_1_0_0"
    // InternalGo.g:15218:1: rule__Slice__ExpressionAssignment_1_0_0 : ( ruleexpression ) ;
    public final void rule__Slice__ExpressionAssignment_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15222:1: ( ( ruleexpression ) )
            // InternalGo.g:15223:2: ( ruleexpression )
            {
            // InternalGo.g:15223:2: ( ruleexpression )
            // InternalGo.g:15224:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__ExpressionAssignment_1_0_0"


    // $ANTLR start "rule__Slice__ExpressionAssignment_1_0_2"
    // InternalGo.g:15233:1: rule__Slice__ExpressionAssignment_1_0_2 : ( ruleexpression ) ;
    public final void rule__Slice__ExpressionAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15237:1: ( ( ruleexpression ) )
            // InternalGo.g:15238:2: ( ruleexpression )
            {
            // InternalGo.g:15238:2: ( ruleexpression )
            // InternalGo.g:15239:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__ExpressionAssignment_1_0_2"


    // $ANTLR start "rule__Slice__ExpressionAssignment_1_1_0"
    // InternalGo.g:15248:1: rule__Slice__ExpressionAssignment_1_1_0 : ( ruleexpression ) ;
    public final void rule__Slice__ExpressionAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15252:1: ( ( ruleexpression ) )
            // InternalGo.g:15253:2: ( ruleexpression )
            {
            // InternalGo.g:15253:2: ( ruleexpression )
            // InternalGo.g:15254:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__ExpressionAssignment_1_1_0"


    // $ANTLR start "rule__Slice__ExpressionAssignment_1_1_2"
    // InternalGo.g:15263:1: rule__Slice__ExpressionAssignment_1_1_2 : ( ruleexpression ) ;
    public final void rule__Slice__ExpressionAssignment_1_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15267:1: ( ( ruleexpression ) )
            // InternalGo.g:15268:2: ( ruleexpression )
            {
            // InternalGo.g:15268:2: ( ruleexpression )
            // InternalGo.g:15269:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__ExpressionAssignment_1_1_2"


    // $ANTLR start "rule__Slice__ExpressionAssignment_1_1_4"
    // InternalGo.g:15278:1: rule__Slice__ExpressionAssignment_1_1_4 : ( ruleexpression ) ;
    public final void rule__Slice__ExpressionAssignment_1_1_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15282:1: ( ( ruleexpression ) )
            // InternalGo.g:15283:2: ( ruleexpression )
            {
            // InternalGo.g:15283:2: ( ruleexpression )
            // InternalGo.g:15284:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_1_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Slice__ExpressionAssignment_1_1_4"


    // $ANTLR start "rule__TypeAssertion__TypeAssignment_2"
    // InternalGo.g:15293:1: rule__TypeAssertion__TypeAssignment_2 : ( ruletype ) ;
    public final void rule__TypeAssertion__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15297:1: ( ( ruletype ) )
            // InternalGo.g:15298:2: ( ruletype )
            {
            // InternalGo.g:15298:2: ( ruletype )
            // InternalGo.g:15299:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeAssertionAccess().getTypeTypeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeAssertionAccess().getTypeTypeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeAssertion__TypeAssignment_2"


    // $ANTLR start "rule__Arguments__ExpressionListAssignment_1_0_0"
    // InternalGo.g:15308:1: rule__Arguments__ExpressionListAssignment_1_0_0 : ( ruleexpressionList ) ;
    public final void rule__Arguments__ExpressionListAssignment_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15312:1: ( ( ruleexpressionList ) )
            // InternalGo.g:15313:2: ( ruleexpressionList )
            {
            // InternalGo.g:15313:2: ( ruleexpressionList )
            // InternalGo.g:15314:3: ruleexpressionList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpressionList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__ExpressionListAssignment_1_0_0"


    // $ANTLR start "rule__Arguments__TypeAssignment_1_0_1_0"
    // InternalGo.g:15323:1: rule__Arguments__TypeAssignment_1_0_1_0 : ( ruletype ) ;
    public final void rule__Arguments__TypeAssignment_1_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15327:1: ( ( ruletype ) )
            // InternalGo.g:15328:2: ( ruletype )
            {
            // InternalGo.g:15328:2: ( ruletype )
            // InternalGo.g:15329:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_1_0_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_1_0_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__TypeAssignment_1_0_1_0"


    // $ANTLR start "rule__Arguments__ExpressionListAssignment_1_0_1_1_1"
    // InternalGo.g:15338:1: rule__Arguments__ExpressionListAssignment_1_0_1_1_1 : ( ruleexpressionList ) ;
    public final void rule__Arguments__ExpressionListAssignment_1_0_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15342:1: ( ( ruleexpressionList ) )
            // InternalGo.g:15343:2: ( ruleexpressionList )
            {
            // InternalGo.g:15343:2: ( ruleexpressionList )
            // InternalGo.g:15344:3: ruleexpressionList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpressionList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Arguments__ExpressionListAssignment_1_0_1_1_1"


    // $ANTLR start "rule__MethodExpr__ReceiverTypeAssignment_0"
    // InternalGo.g:15353:1: rule__MethodExpr__ReceiverTypeAssignment_0 : ( rulereceiverType ) ;
    public final void rule__MethodExpr__ReceiverTypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15357:1: ( ( rulereceiverType ) )
            // InternalGo.g:15358:2: ( rulereceiverType )
            {
            // InternalGo.g:15358:2: ( rulereceiverType )
            // InternalGo.g:15359:3: rulereceiverType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodExprAccess().getReceiverTypeReceiverTypeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulereceiverType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodExprAccess().getReceiverTypeReceiverTypeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodExpr__ReceiverTypeAssignment_0"


    // $ANTLR start "rule__ReceiverType__TypeNameAssignment_0"
    // InternalGo.g:15368:1: rule__ReceiverType__TypeNameAssignment_0 : ( ruletypeName ) ;
    public final void rule__ReceiverType__TypeNameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15372:1: ( ( ruletypeName ) )
            // InternalGo.g:15373:2: ( ruletypeName )
            {
            // InternalGo.g:15373:2: ( ruletypeName )
            // InternalGo.g:15374:3: ruletypeName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReceiverTypeAccess().getTypeNameTypeNameParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletypeName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReceiverTypeAccess().getTypeNameTypeNameParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReceiverType__TypeNameAssignment_0"


    // $ANTLR start "rule__ReceiverType__TypeNameAssignment_1_2"
    // InternalGo.g:15383:1: rule__ReceiverType__TypeNameAssignment_1_2 : ( ruletypeName ) ;
    public final void rule__ReceiverType__TypeNameAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15387:1: ( ( ruletypeName ) )
            // InternalGo.g:15388:2: ( ruletypeName )
            {
            // InternalGo.g:15388:2: ( ruletypeName )
            // InternalGo.g:15389:3: ruletypeName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReceiverTypeAccess().getTypeNameTypeNameParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletypeName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReceiverTypeAccess().getTypeNameTypeNameParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReceiverType__TypeNameAssignment_1_2"


    // $ANTLR start "rule__ReceiverType__ReceiverTypeAssignment_2_1"
    // InternalGo.g:15398:1: rule__ReceiverType__ReceiverTypeAssignment_2_1 : ( rulereceiverType ) ;
    public final void rule__ReceiverType__ReceiverTypeAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15402:1: ( ( rulereceiverType ) )
            // InternalGo.g:15403:2: ( rulereceiverType )
            {
            // InternalGo.g:15403:2: ( rulereceiverType )
            // InternalGo.g:15404:3: rulereceiverType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getReceiverTypeAccess().getReceiverTypeReceiverTypeParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulereceiverType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getReceiverTypeAccess().getReceiverTypeReceiverTypeParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReceiverType__ReceiverTypeAssignment_2_1"


    // $ANTLR start "rule__Expression__UnaryExprAssignment_0"
    // InternalGo.g:15413:1: rule__Expression__UnaryExprAssignment_0 : ( ruleunaryExpr ) ;
    public final void rule__Expression__UnaryExprAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15417:1: ( ( ruleunaryExpr ) )
            // InternalGo.g:15418:2: ( ruleunaryExpr )
            {
            // InternalGo.g:15418:2: ( ruleunaryExpr )
            // InternalGo.g:15419:3: ruleunaryExpr
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getUnaryExprUnaryExprParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleunaryExpr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getUnaryExprUnaryExprParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__UnaryExprAssignment_0"


    // $ANTLR start "rule__Expression__ExpressionMatchedAssignment_1"
    // InternalGo.g:15428:1: rule__Expression__ExpressionMatchedAssignment_1 : ( ruleexpressionMatched ) ;
    public final void rule__Expression__ExpressionMatchedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15432:1: ( ( ruleexpressionMatched ) )
            // InternalGo.g:15433:2: ( ruleexpressionMatched )
            {
            // InternalGo.g:15433:2: ( ruleexpressionMatched )
            // InternalGo.g:15434:3: ruleexpressionMatched
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getExpressionMatchedExpressionMatchedParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpressionMatched();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getExpressionMatchedExpressionMatchedParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__ExpressionMatchedAssignment_1"


    // $ANTLR start "rule__ExpressionMatched__ExpressionAssignment_1"
    // InternalGo.g:15443:1: rule__ExpressionMatched__ExpressionAssignment_1 : ( ruleexpression ) ;
    public final void rule__ExpressionMatched__ExpressionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15447:1: ( ( ruleexpression ) )
            // InternalGo.g:15448:2: ( ruleexpression )
            {
            // InternalGo.g:15448:2: ( ruleexpression )
            // InternalGo.g:15449:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionMatchedAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionMatchedAccess().getExpressionExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionMatched__ExpressionAssignment_1"


    // $ANTLR start "rule__UnaryExpr__PrimaryExprAssignment_0"
    // InternalGo.g:15458:1: rule__UnaryExpr__PrimaryExprAssignment_0 : ( ruleprimaryExpr ) ;
    public final void rule__UnaryExpr__PrimaryExprAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15462:1: ( ( ruleprimaryExpr ) )
            // InternalGo.g:15463:2: ( ruleprimaryExpr )
            {
            // InternalGo.g:15463:2: ( ruleprimaryExpr )
            // InternalGo.g:15464:3: ruleprimaryExpr
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleprimaryExpr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpr__PrimaryExprAssignment_0"


    // $ANTLR start "rule__UnaryExpr__UnaryExprAssignment_1_1"
    // InternalGo.g:15473:1: rule__UnaryExpr__UnaryExprAssignment_1_1 : ( ruleunaryExpr ) ;
    public final void rule__UnaryExpr__UnaryExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15477:1: ( ( ruleunaryExpr ) )
            // InternalGo.g:15478:2: ( ruleunaryExpr )
            {
            // InternalGo.g:15478:2: ( ruleunaryExpr )
            // InternalGo.g:15479:3: ruleunaryExpr
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryExprAccess().getUnaryExprUnaryExprParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleunaryExpr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryExprAccess().getUnaryExprUnaryExprParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryExpr__UnaryExprAssignment_1_1"


    // $ANTLR start "rule__Conversion__TypeAssignment_0"
    // InternalGo.g:15488:1: rule__Conversion__TypeAssignment_0 : ( ruletype ) ;
    public final void rule__Conversion__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15492:1: ( ( ruletype ) )
            // InternalGo.g:15493:2: ( ruletype )
            {
            // InternalGo.g:15493:2: ( ruletype )
            // InternalGo.g:15494:3: ruletype
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruletype();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Conversion__TypeAssignment_0"


    // $ANTLR start "rule__Conversion__ExpressionAssignment_2"
    // InternalGo.g:15503:1: rule__Conversion__ExpressionAssignment_2 : ( ruleexpression ) ;
    public final void rule__Conversion__ExpressionAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalGo.g:15507:1: ( ( ruleexpression ) )
            // InternalGo.g:15508:2: ( ruleexpression )
            {
            // InternalGo.g:15508:2: ( ruleexpression )
            // InternalGo.g:15509:3: ruleexpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleexpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Conversion__ExpressionAssignment_2"

    // $ANTLR start synpred1_InternalGo
    public final void synpred1_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:595:4: ( rule__StatementList__StatementAssignment )
        // InternalGo.g:595:4: rule__StatementList__StatementAssignment
        {
        pushFollow(FOLLOW_2);
        rule__StatementList__StatementAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalGo

    // $ANTLR start synpred2_InternalGo
    public final void synpred2_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:2370:4: ( rule__PrimaryExprSelector__Group__0 )
        // InternalGo.g:2370:4: rule__PrimaryExprSelector__Group__0
        {
        pushFollow(FOLLOW_2);
        rule__PrimaryExprSelector__Group__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred2_InternalGo

    // $ANTLR start synpred3_InternalGo
    public final void synpred3_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:2395:4: ( rule__PrimaryExprIndex__Group__0 )
        // InternalGo.g:2395:4: rule__PrimaryExprIndex__Group__0
        {
        pushFollow(FOLLOW_2);
        rule__PrimaryExprIndex__Group__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred3_InternalGo

    // $ANTLR start synpred4_InternalGo
    public final void synpred4_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:2420:4: ( rule__PrimaryExprSlice__Group__0 )
        // InternalGo.g:2420:4: rule__PrimaryExprSlice__Group__0
        {
        pushFollow(FOLLOW_2);
        rule__PrimaryExprSlice__Group__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred4_InternalGo

    // $ANTLR start synpred5_InternalGo
    public final void synpred5_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:2445:4: ( rule__PrimaryExprTypeAssertion__Group__0 )
        // InternalGo.g:2445:4: rule__PrimaryExprTypeAssertion__Group__0
        {
        pushFollow(FOLLOW_2);
        rule__PrimaryExprTypeAssertion__Group__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred5_InternalGo

    // $ANTLR start synpred6_InternalGo
    public final void synpred6_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:2470:4: ( rule__PrimaryExprArguments__Group__0 )
        // InternalGo.g:2470:4: rule__PrimaryExprArguments__Group__0
        {
        pushFollow(FOLLOW_2);
        rule__PrimaryExprArguments__Group__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred6_InternalGo

    // $ANTLR start synpred7_InternalGo
    public final void synpred7_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:2695:4: ( rule__ExpressionMatched__Group__0 )
        // InternalGo.g:2695:4: rule__ExpressionMatched__Group__0
        {
        pushFollow(FOLLOW_2);
        rule__ExpressionMatched__Group__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred7_InternalGo

    // $ANTLR start synpred16_InternalGo
    public final void synpred16_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:2896:2: ( ( ( rule__FunctionDecl__FunctionAssignment_2_0 ) ) )
        // InternalGo.g:2896:2: ( ( rule__FunctionDecl__FunctionAssignment_2_0 ) )
        {
        // InternalGo.g:2896:2: ( ( rule__FunctionDecl__FunctionAssignment_2_0 ) )
        // InternalGo.g:2897:3: ( rule__FunctionDecl__FunctionAssignment_2_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getFunctionDeclAccess().getFunctionAssignment_2_0()); 
        }
        // InternalGo.g:2898:3: ( rule__FunctionDecl__FunctionAssignment_2_0 )
        // InternalGo.g:2898:4: rule__FunctionDecl__FunctionAssignment_2_0
        {
        pushFollow(FOLLOW_2);
        rule__FunctionDecl__FunctionAssignment_2_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred16_InternalGo

    // $ANTLR start synpred17_InternalGo
    public final void synpred17_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:2917:2: ( ( ( rule__MethodDecl__FunctionAssignment_3_0 ) ) )
        // InternalGo.g:2917:2: ( ( rule__MethodDecl__FunctionAssignment_3_0 ) )
        {
        // InternalGo.g:2917:2: ( ( rule__MethodDecl__FunctionAssignment_3_0 ) )
        // InternalGo.g:2918:3: ( rule__MethodDecl__FunctionAssignment_3_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getMethodDeclAccess().getFunctionAssignment_3_0()); 
        }
        // InternalGo.g:2919:3: ( rule__MethodDecl__FunctionAssignment_3_0 )
        // InternalGo.g:2919:4: rule__MethodDecl__FunctionAssignment_3_0
        {
        pushFollow(FOLLOW_2);
        rule__MethodDecl__FunctionAssignment_3_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred17_InternalGo

    // $ANTLR start synpred20_InternalGo
    public final void synpred20_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:2980:2: ( ( ( rule__Statement__DeclarationAssignment_0 ) ) )
        // InternalGo.g:2980:2: ( ( rule__Statement__DeclarationAssignment_0 ) )
        {
        // InternalGo.g:2980:2: ( ( rule__Statement__DeclarationAssignment_0 ) )
        // InternalGo.g:2981:3: ( rule__Statement__DeclarationAssignment_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getStatementAccess().getDeclarationAssignment_0()); 
        }
        // InternalGo.g:2982:3: ( rule__Statement__DeclarationAssignment_0 )
        // InternalGo.g:2982:4: rule__Statement__DeclarationAssignment_0
        {
        pushFollow(FOLLOW_2);
        rule__Statement__DeclarationAssignment_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred20_InternalGo

    // $ANTLR start synpred21_InternalGo
    public final void synpred21_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:2986:2: ( ( ( rule__Statement__LabeledStmtAssignment_1 ) ) )
        // InternalGo.g:2986:2: ( ( rule__Statement__LabeledStmtAssignment_1 ) )
        {
        // InternalGo.g:2986:2: ( ( rule__Statement__LabeledStmtAssignment_1 ) )
        // InternalGo.g:2987:3: ( rule__Statement__LabeledStmtAssignment_1 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getStatementAccess().getLabeledStmtAssignment_1()); 
        }
        // InternalGo.g:2988:3: ( rule__Statement__LabeledStmtAssignment_1 )
        // InternalGo.g:2988:4: rule__Statement__LabeledStmtAssignment_1
        {
        pushFollow(FOLLOW_2);
        rule__Statement__LabeledStmtAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred21_InternalGo

    // $ANTLR start synpred22_InternalGo
    public final void synpred22_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:2992:2: ( ( ( rule__Statement__SimpleStmtAssignment_2 ) ) )
        // InternalGo.g:2992:2: ( ( rule__Statement__SimpleStmtAssignment_2 ) )
        {
        // InternalGo.g:2992:2: ( ( rule__Statement__SimpleStmtAssignment_2 ) )
        // InternalGo.g:2993:3: ( rule__Statement__SimpleStmtAssignment_2 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getStatementAccess().getSimpleStmtAssignment_2()); 
        }
        // InternalGo.g:2994:3: ( rule__Statement__SimpleStmtAssignment_2 )
        // InternalGo.g:2994:4: rule__Statement__SimpleStmtAssignment_2
        {
        pushFollow(FOLLOW_2);
        rule__Statement__SimpleStmtAssignment_2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred22_InternalGo

    // $ANTLR start synpred23_InternalGo
    public final void synpred23_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:2998:2: ( ( ( rule__Statement__GoStmtAssignment_3 ) ) )
        // InternalGo.g:2998:2: ( ( rule__Statement__GoStmtAssignment_3 ) )
        {
        // InternalGo.g:2998:2: ( ( rule__Statement__GoStmtAssignment_3 ) )
        // InternalGo.g:2999:3: ( rule__Statement__GoStmtAssignment_3 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getStatementAccess().getGoStmtAssignment_3()); 
        }
        // InternalGo.g:3000:3: ( rule__Statement__GoStmtAssignment_3 )
        // InternalGo.g:3000:4: rule__Statement__GoStmtAssignment_3
        {
        pushFollow(FOLLOW_2);
        rule__Statement__GoStmtAssignment_3();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred23_InternalGo

    // $ANTLR start synpred24_InternalGo
    public final void synpred24_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3004:2: ( ( ( rule__Statement__ReturnStmtAssignment_4 ) ) )
        // InternalGo.g:3004:2: ( ( rule__Statement__ReturnStmtAssignment_4 ) )
        {
        // InternalGo.g:3004:2: ( ( rule__Statement__ReturnStmtAssignment_4 ) )
        // InternalGo.g:3005:3: ( rule__Statement__ReturnStmtAssignment_4 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getStatementAccess().getReturnStmtAssignment_4()); 
        }
        // InternalGo.g:3006:3: ( rule__Statement__ReturnStmtAssignment_4 )
        // InternalGo.g:3006:4: rule__Statement__ReturnStmtAssignment_4
        {
        pushFollow(FOLLOW_2);
        rule__Statement__ReturnStmtAssignment_4();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred24_InternalGo

    // $ANTLR start synpred25_InternalGo
    public final void synpred25_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3010:2: ( ( ( rule__Statement__BreakStmtAssignment_5 ) ) )
        // InternalGo.g:3010:2: ( ( rule__Statement__BreakStmtAssignment_5 ) )
        {
        // InternalGo.g:3010:2: ( ( rule__Statement__BreakStmtAssignment_5 ) )
        // InternalGo.g:3011:3: ( rule__Statement__BreakStmtAssignment_5 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getStatementAccess().getBreakStmtAssignment_5()); 
        }
        // InternalGo.g:3012:3: ( rule__Statement__BreakStmtAssignment_5 )
        // InternalGo.g:3012:4: rule__Statement__BreakStmtAssignment_5
        {
        pushFollow(FOLLOW_2);
        rule__Statement__BreakStmtAssignment_5();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred25_InternalGo

    // $ANTLR start synpred26_InternalGo
    public final void synpred26_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3016:2: ( ( ( rule__Statement__ContinueStmtAssignment_6 ) ) )
        // InternalGo.g:3016:2: ( ( rule__Statement__ContinueStmtAssignment_6 ) )
        {
        // InternalGo.g:3016:2: ( ( rule__Statement__ContinueStmtAssignment_6 ) )
        // InternalGo.g:3017:3: ( rule__Statement__ContinueStmtAssignment_6 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getStatementAccess().getContinueStmtAssignment_6()); 
        }
        // InternalGo.g:3018:3: ( rule__Statement__ContinueStmtAssignment_6 )
        // InternalGo.g:3018:4: rule__Statement__ContinueStmtAssignment_6
        {
        pushFollow(FOLLOW_2);
        rule__Statement__ContinueStmtAssignment_6();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred26_InternalGo

    // $ANTLR start synpred27_InternalGo
    public final void synpred27_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3022:2: ( ( ( rule__Statement__GotoStmtAssignment_7 ) ) )
        // InternalGo.g:3022:2: ( ( rule__Statement__GotoStmtAssignment_7 ) )
        {
        // InternalGo.g:3022:2: ( ( rule__Statement__GotoStmtAssignment_7 ) )
        // InternalGo.g:3023:3: ( rule__Statement__GotoStmtAssignment_7 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getStatementAccess().getGotoStmtAssignment_7()); 
        }
        // InternalGo.g:3024:3: ( rule__Statement__GotoStmtAssignment_7 )
        // InternalGo.g:3024:4: rule__Statement__GotoStmtAssignment_7
        {
        pushFollow(FOLLOW_2);
        rule__Statement__GotoStmtAssignment_7();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred27_InternalGo

    // $ANTLR start synpred28_InternalGo
    public final void synpred28_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3028:2: ( ( ( rule__Statement__FallthroughStmtAssignment_8 ) ) )
        // InternalGo.g:3028:2: ( ( rule__Statement__FallthroughStmtAssignment_8 ) )
        {
        // InternalGo.g:3028:2: ( ( rule__Statement__FallthroughStmtAssignment_8 ) )
        // InternalGo.g:3029:3: ( rule__Statement__FallthroughStmtAssignment_8 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getStatementAccess().getFallthroughStmtAssignment_8()); 
        }
        // InternalGo.g:3030:3: ( rule__Statement__FallthroughStmtAssignment_8 )
        // InternalGo.g:3030:4: rule__Statement__FallthroughStmtAssignment_8
        {
        pushFollow(FOLLOW_2);
        rule__Statement__FallthroughStmtAssignment_8();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred28_InternalGo

    // $ANTLR start synpred29_InternalGo
    public final void synpred29_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3034:2: ( ( ( rule__Statement__BlockAssignment_9 ) ) )
        // InternalGo.g:3034:2: ( ( rule__Statement__BlockAssignment_9 ) )
        {
        // InternalGo.g:3034:2: ( ( rule__Statement__BlockAssignment_9 ) )
        // InternalGo.g:3035:3: ( rule__Statement__BlockAssignment_9 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getStatementAccess().getBlockAssignment_9()); 
        }
        // InternalGo.g:3036:3: ( rule__Statement__BlockAssignment_9 )
        // InternalGo.g:3036:4: rule__Statement__BlockAssignment_9
        {
        pushFollow(FOLLOW_2);
        rule__Statement__BlockAssignment_9();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred29_InternalGo

    // $ANTLR start synpred30_InternalGo
    public final void synpred30_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3040:2: ( ( ( rule__Statement__IfStmtAssignment_10 ) ) )
        // InternalGo.g:3040:2: ( ( rule__Statement__IfStmtAssignment_10 ) )
        {
        // InternalGo.g:3040:2: ( ( rule__Statement__IfStmtAssignment_10 ) )
        // InternalGo.g:3041:3: ( rule__Statement__IfStmtAssignment_10 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getStatementAccess().getIfStmtAssignment_10()); 
        }
        // InternalGo.g:3042:3: ( rule__Statement__IfStmtAssignment_10 )
        // InternalGo.g:3042:4: rule__Statement__IfStmtAssignment_10
        {
        pushFollow(FOLLOW_2);
        rule__Statement__IfStmtAssignment_10();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred30_InternalGo

    // $ANTLR start synpred31_InternalGo
    public final void synpred31_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3046:2: ( ( ( rule__Statement__SwitchStmtAssignment_11 ) ) )
        // InternalGo.g:3046:2: ( ( rule__Statement__SwitchStmtAssignment_11 ) )
        {
        // InternalGo.g:3046:2: ( ( rule__Statement__SwitchStmtAssignment_11 ) )
        // InternalGo.g:3047:3: ( rule__Statement__SwitchStmtAssignment_11 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getStatementAccess().getSwitchStmtAssignment_11()); 
        }
        // InternalGo.g:3048:3: ( rule__Statement__SwitchStmtAssignment_11 )
        // InternalGo.g:3048:4: rule__Statement__SwitchStmtAssignment_11
        {
        pushFollow(FOLLOW_2);
        rule__Statement__SwitchStmtAssignment_11();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred31_InternalGo

    // $ANTLR start synpred32_InternalGo
    public final void synpred32_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3052:2: ( ( ( rule__Statement__SelectStmtAssignment_12 ) ) )
        // InternalGo.g:3052:2: ( ( rule__Statement__SelectStmtAssignment_12 ) )
        {
        // InternalGo.g:3052:2: ( ( rule__Statement__SelectStmtAssignment_12 ) )
        // InternalGo.g:3053:3: ( rule__Statement__SelectStmtAssignment_12 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getStatementAccess().getSelectStmtAssignment_12()); 
        }
        // InternalGo.g:3054:3: ( rule__Statement__SelectStmtAssignment_12 )
        // InternalGo.g:3054:4: rule__Statement__SelectStmtAssignment_12
        {
        pushFollow(FOLLOW_2);
        rule__Statement__SelectStmtAssignment_12();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred32_InternalGo

    // $ANTLR start synpred33_InternalGo
    public final void synpred33_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3058:2: ( ( ( rule__Statement__ForStmtAssignment_13 ) ) )
        // InternalGo.g:3058:2: ( ( rule__Statement__ForStmtAssignment_13 ) )
        {
        // InternalGo.g:3058:2: ( ( rule__Statement__ForStmtAssignment_13 ) )
        // InternalGo.g:3059:3: ( rule__Statement__ForStmtAssignment_13 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getStatementAccess().getForStmtAssignment_13()); 
        }
        // InternalGo.g:3060:3: ( rule__Statement__ForStmtAssignment_13 )
        // InternalGo.g:3060:4: rule__Statement__ForStmtAssignment_13
        {
        pushFollow(FOLLOW_2);
        rule__Statement__ForStmtAssignment_13();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred33_InternalGo

    // $ANTLR start synpred34_InternalGo
    public final void synpred34_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3079:2: ( ( ( rule__SimpleStmt__SendStmtAssignment_0 ) ) )
        // InternalGo.g:3079:2: ( ( rule__SimpleStmt__SendStmtAssignment_0 ) )
        {
        // InternalGo.g:3079:2: ( ( rule__SimpleStmt__SendStmtAssignment_0 ) )
        // InternalGo.g:3080:3: ( rule__SimpleStmt__SendStmtAssignment_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSimpleStmtAccess().getSendStmtAssignment_0()); 
        }
        // InternalGo.g:3081:3: ( rule__SimpleStmt__SendStmtAssignment_0 )
        // InternalGo.g:3081:4: rule__SimpleStmt__SendStmtAssignment_0
        {
        pushFollow(FOLLOW_2);
        rule__SimpleStmt__SendStmtAssignment_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred34_InternalGo

    // $ANTLR start synpred35_InternalGo
    public final void synpred35_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3085:2: ( ( ( rule__SimpleStmt__ExpressionStmtAssignment_1 ) ) )
        // InternalGo.g:3085:2: ( ( rule__SimpleStmt__ExpressionStmtAssignment_1 ) )
        {
        // InternalGo.g:3085:2: ( ( rule__SimpleStmt__ExpressionStmtAssignment_1 ) )
        // InternalGo.g:3086:3: ( rule__SimpleStmt__ExpressionStmtAssignment_1 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSimpleStmtAccess().getExpressionStmtAssignment_1()); 
        }
        // InternalGo.g:3087:3: ( rule__SimpleStmt__ExpressionStmtAssignment_1 )
        // InternalGo.g:3087:4: rule__SimpleStmt__ExpressionStmtAssignment_1
        {
        pushFollow(FOLLOW_2);
        rule__SimpleStmt__ExpressionStmtAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred35_InternalGo

    // $ANTLR start synpred36_InternalGo
    public final void synpred36_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3091:2: ( ( ( rule__SimpleStmt__IncDecStmtAssignment_2 ) ) )
        // InternalGo.g:3091:2: ( ( rule__SimpleStmt__IncDecStmtAssignment_2 ) )
        {
        // InternalGo.g:3091:2: ( ( rule__SimpleStmt__IncDecStmtAssignment_2 ) )
        // InternalGo.g:3092:3: ( rule__SimpleStmt__IncDecStmtAssignment_2 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSimpleStmtAccess().getIncDecStmtAssignment_2()); 
        }
        // InternalGo.g:3093:3: ( rule__SimpleStmt__IncDecStmtAssignment_2 )
        // InternalGo.g:3093:4: rule__SimpleStmt__IncDecStmtAssignment_2
        {
        pushFollow(FOLLOW_2);
        rule__SimpleStmt__IncDecStmtAssignment_2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred36_InternalGo

    // $ANTLR start synpred37_InternalGo
    public final void synpred37_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3097:2: ( ( ( rule__SimpleStmt__AssignmentAssignment_3 ) ) )
        // InternalGo.g:3097:2: ( ( rule__SimpleStmt__AssignmentAssignment_3 ) )
        {
        // InternalGo.g:3097:2: ( ( rule__SimpleStmt__AssignmentAssignment_3 ) )
        // InternalGo.g:3098:3: ( rule__SimpleStmt__AssignmentAssignment_3 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSimpleStmtAccess().getAssignmentAssignment_3()); 
        }
        // InternalGo.g:3099:3: ( rule__SimpleStmt__AssignmentAssignment_3 )
        // InternalGo.g:3099:4: rule__SimpleStmt__AssignmentAssignment_3
        {
        pushFollow(FOLLOW_2);
        rule__SimpleStmt__AssignmentAssignment_3();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred37_InternalGo

    // $ANTLR start synpred38_InternalGo
    public final void synpred38_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3103:2: ( ( ( rule__SimpleStmt__ShortVarDeclAssignment_4 ) ) )
        // InternalGo.g:3103:2: ( ( rule__SimpleStmt__ShortVarDeclAssignment_4 ) )
        {
        // InternalGo.g:3103:2: ( ( rule__SimpleStmt__ShortVarDeclAssignment_4 ) )
        // InternalGo.g:3104:3: ( rule__SimpleStmt__ShortVarDeclAssignment_4 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSimpleStmtAccess().getShortVarDeclAssignment_4()); 
        }
        // InternalGo.g:3105:3: ( rule__SimpleStmt__ShortVarDeclAssignment_4 )
        // InternalGo.g:3105:4: rule__SimpleStmt__ShortVarDeclAssignment_4
        {
        pushFollow(FOLLOW_2);
        rule__SimpleStmt__ShortVarDeclAssignment_4();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred38_InternalGo

    // $ANTLR start synpred51_InternalGo
    public final void synpred51_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3241:2: ( ( ( rule__SwitchStmt__ExprSwitchStmtAssignment_0 ) ) )
        // InternalGo.g:3241:2: ( ( rule__SwitchStmt__ExprSwitchStmtAssignment_0 ) )
        {
        // InternalGo.g:3241:2: ( ( rule__SwitchStmt__ExprSwitchStmtAssignment_0 ) )
        // InternalGo.g:3242:3: ( rule__SwitchStmt__ExprSwitchStmtAssignment_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSwitchStmtAccess().getExprSwitchStmtAssignment_0()); 
        }
        // InternalGo.g:3243:3: ( rule__SwitchStmt__ExprSwitchStmtAssignment_0 )
        // InternalGo.g:3243:4: rule__SwitchStmt__ExprSwitchStmtAssignment_0
        {
        pushFollow(FOLLOW_2);
        rule__SwitchStmt__ExprSwitchStmtAssignment_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred51_InternalGo

    // $ANTLR start synpred55_InternalGo
    public final void synpred55_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3325:2: ( ( ( rule__CommCase__SendStmtAssignment_0_1_0 ) ) )
        // InternalGo.g:3325:2: ( ( rule__CommCase__SendStmtAssignment_0_1_0 ) )
        {
        // InternalGo.g:3325:2: ( ( rule__CommCase__SendStmtAssignment_0_1_0 ) )
        // InternalGo.g:3326:3: ( rule__CommCase__SendStmtAssignment_0_1_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getCommCaseAccess().getSendStmtAssignment_0_1_0()); 
        }
        // InternalGo.g:3327:3: ( rule__CommCase__SendStmtAssignment_0_1_0 )
        // InternalGo.g:3327:4: rule__CommCase__SendStmtAssignment_0_1_0
        {
        pushFollow(FOLLOW_2);
        rule__CommCase__SendStmtAssignment_0_1_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred55_InternalGo

    // $ANTLR start synpred57_InternalGo
    public final void synpred57_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3367:2: ( ( ( rule__ForStmt__ExpressionAssignment_1_0 ) ) )
        // InternalGo.g:3367:2: ( ( rule__ForStmt__ExpressionAssignment_1_0 ) )
        {
        // InternalGo.g:3367:2: ( ( rule__ForStmt__ExpressionAssignment_1_0 ) )
        // InternalGo.g:3368:3: ( rule__ForStmt__ExpressionAssignment_1_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getForStmtAccess().getExpressionAssignment_1_0()); 
        }
        // InternalGo.g:3369:3: ( rule__ForStmt__ExpressionAssignment_1_0 )
        // InternalGo.g:3369:4: rule__ForStmt__ExpressionAssignment_1_0
        {
        pushFollow(FOLLOW_2);
        rule__ForStmt__ExpressionAssignment_1_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred57_InternalGo

    // $ANTLR start synpred58_InternalGo
    public final void synpred58_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3373:2: ( ( ( rule__ForStmt__ForClauseAssignment_1_1 ) ) )
        // InternalGo.g:3373:2: ( ( rule__ForStmt__ForClauseAssignment_1_1 ) )
        {
        // InternalGo.g:3373:2: ( ( rule__ForStmt__ForClauseAssignment_1_1 ) )
        // InternalGo.g:3374:3: ( rule__ForStmt__ForClauseAssignment_1_1 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getForStmtAccess().getForClauseAssignment_1_1()); 
        }
        // InternalGo.g:3375:3: ( rule__ForStmt__ForClauseAssignment_1_1 )
        // InternalGo.g:3375:4: rule__ForStmt__ForClauseAssignment_1_1
        {
        pushFollow(FOLLOW_2);
        rule__ForStmt__ForClauseAssignment_1_1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred58_InternalGo

    // $ANTLR start synpred62_InternalGo
    public final void synpred62_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3442:2: ( ( RULE_IDENTIFIER ) )
        // InternalGo.g:3442:2: ( RULE_IDENTIFIER )
        {
        // InternalGo.g:3442:2: ( RULE_IDENTIFIER )
        // InternalGo.g:3443:3: RULE_IDENTIFIER
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getTypeNameAccess().getIDENTIFIERTerminalRuleCall_0()); 
        }
        match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred62_InternalGo

    // $ANTLR start synpred63_InternalGo
    public final void synpred63_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3463:2: ( ( ( rule__TypeLit__ArrayTypeAssignment_0 ) ) )
        // InternalGo.g:3463:2: ( ( rule__TypeLit__ArrayTypeAssignment_0 ) )
        {
        // InternalGo.g:3463:2: ( ( rule__TypeLit__ArrayTypeAssignment_0 ) )
        // InternalGo.g:3464:3: ( rule__TypeLit__ArrayTypeAssignment_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getTypeLitAccess().getArrayTypeAssignment_0()); 
        }
        // InternalGo.g:3465:3: ( rule__TypeLit__ArrayTypeAssignment_0 )
        // InternalGo.g:3465:4: rule__TypeLit__ArrayTypeAssignment_0
        {
        pushFollow(FOLLOW_2);
        rule__TypeLit__ArrayTypeAssignment_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred63_InternalGo

    // $ANTLR start synpred68_InternalGo
    public final void synpred68_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3493:2: ( ( ( rule__TypeLit__SliceTypeAssignment_5 ) ) )
        // InternalGo.g:3493:2: ( ( rule__TypeLit__SliceTypeAssignment_5 ) )
        {
        // InternalGo.g:3493:2: ( ( rule__TypeLit__SliceTypeAssignment_5 ) )
        // InternalGo.g:3494:3: ( rule__TypeLit__SliceTypeAssignment_5 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getTypeLitAccess().getSliceTypeAssignment_5()); 
        }
        // InternalGo.g:3495:3: ( rule__TypeLit__SliceTypeAssignment_5 )
        // InternalGo.g:3495:4: rule__TypeLit__SliceTypeAssignment_5
        {
        pushFollow(FOLLOW_2);
        rule__TypeLit__SliceTypeAssignment_5();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred68_InternalGo

    // $ANTLR start synpred70_InternalGo
    public final void synpred70_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3520:2: ( ( 'chan' ) )
        // InternalGo.g:3520:2: ( 'chan' )
        {
        // InternalGo.g:3520:2: ( 'chan' )
        // InternalGo.g:3521:3: 'chan'
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getChannelTypeAccess().getChanKeyword_0_0()); 
        }
        match(input,60,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred70_InternalGo

    // $ANTLR start synpred71_InternalGo
    public final void synpred71_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3526:2: ( ( ( rule__ChannelType__Group_0_1__0 ) ) )
        // InternalGo.g:3526:2: ( ( rule__ChannelType__Group_0_1__0 ) )
        {
        // InternalGo.g:3526:2: ( ( rule__ChannelType__Group_0_1__0 ) )
        // InternalGo.g:3527:3: ( rule__ChannelType__Group_0_1__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getChannelTypeAccess().getGroup_0_1()); 
        }
        // InternalGo.g:3528:3: ( rule__ChannelType__Group_0_1__0 )
        // InternalGo.g:3528:4: rule__ChannelType__Group_0_1__0
        {
        pushFollow(FOLLOW_2);
        rule__ChannelType__Group_0_1__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred71_InternalGo

    // $ANTLR start synpred73_InternalGo
    public final void synpred73_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3568:2: ( ( ( rule__Result__ParametersAssignment_0 ) ) )
        // InternalGo.g:3568:2: ( ( rule__Result__ParametersAssignment_0 ) )
        {
        // InternalGo.g:3568:2: ( ( rule__Result__ParametersAssignment_0 ) )
        // InternalGo.g:3569:3: ( rule__Result__ParametersAssignment_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getResultAccess().getParametersAssignment_0()); 
        }
        // InternalGo.g:3570:3: ( rule__Result__ParametersAssignment_0 )
        // InternalGo.g:3570:4: rule__Result__ParametersAssignment_0
        {
        pushFollow(FOLLOW_2);
        rule__Result__ParametersAssignment_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred73_InternalGo

    // $ANTLR start synpred74_InternalGo
    public final void synpred74_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3589:2: ( ( ( rule__Operand__LiteralAssignment_0 ) ) )
        // InternalGo.g:3589:2: ( ( rule__Operand__LiteralAssignment_0 ) )
        {
        // InternalGo.g:3589:2: ( ( rule__Operand__LiteralAssignment_0 ) )
        // InternalGo.g:3590:3: ( rule__Operand__LiteralAssignment_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getOperandAccess().getLiteralAssignment_0()); 
        }
        // InternalGo.g:3591:3: ( rule__Operand__LiteralAssignment_0 )
        // InternalGo.g:3591:4: rule__Operand__LiteralAssignment_0
        {
        pushFollow(FOLLOW_2);
        rule__Operand__LiteralAssignment_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred74_InternalGo

    // $ANTLR start synpred75_InternalGo
    public final void synpred75_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3595:2: ( ( ( rule__Operand__OperandNameAssignment_1 ) ) )
        // InternalGo.g:3595:2: ( ( rule__Operand__OperandNameAssignment_1 ) )
        {
        // InternalGo.g:3595:2: ( ( rule__Operand__OperandNameAssignment_1 ) )
        // InternalGo.g:3596:3: ( rule__Operand__OperandNameAssignment_1 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getOperandAccess().getOperandNameAssignment_1()); 
        }
        // InternalGo.g:3597:3: ( rule__Operand__OperandNameAssignment_1 )
        // InternalGo.g:3597:4: rule__Operand__OperandNameAssignment_1
        {
        pushFollow(FOLLOW_2);
        rule__Operand__OperandNameAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred75_InternalGo

    // $ANTLR start synpred76_InternalGo
    public final void synpred76_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3601:2: ( ( ( rule__Operand__MethodExprAssignment_2 ) ) )
        // InternalGo.g:3601:2: ( ( rule__Operand__MethodExprAssignment_2 ) )
        {
        // InternalGo.g:3601:2: ( ( rule__Operand__MethodExprAssignment_2 ) )
        // InternalGo.g:3602:3: ( rule__Operand__MethodExprAssignment_2 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getOperandAccess().getMethodExprAssignment_2()); 
        }
        // InternalGo.g:3603:3: ( rule__Operand__MethodExprAssignment_2 )
        // InternalGo.g:3603:4: rule__Operand__MethodExprAssignment_2
        {
        pushFollow(FOLLOW_2);
        rule__Operand__MethodExprAssignment_2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred76_InternalGo

    // $ANTLR start synpred83_InternalGo
    public final void synpred83_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3688:2: ( ( RULE_IDENTIFIER ) )
        // InternalGo.g:3688:2: ( RULE_IDENTIFIER )
        {
        // InternalGo.g:3688:2: ( RULE_IDENTIFIER )
        // InternalGo.g:3689:3: RULE_IDENTIFIER
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getOperandNameAccess().getIDENTIFIERTerminalRuleCall_0()); 
        }
        match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred83_InternalGo

    // $ANTLR start synpred85_InternalGo
    public final void synpred85_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3715:2: ( ( ( rule__LiteralType__ArrayTypeAssignment_1 ) ) )
        // InternalGo.g:3715:2: ( ( rule__LiteralType__ArrayTypeAssignment_1 ) )
        {
        // InternalGo.g:3715:2: ( ( rule__LiteralType__ArrayTypeAssignment_1 ) )
        // InternalGo.g:3716:3: ( rule__LiteralType__ArrayTypeAssignment_1 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getLiteralTypeAccess().getArrayTypeAssignment_1()); 
        }
        // InternalGo.g:3717:3: ( rule__LiteralType__ArrayTypeAssignment_1 )
        // InternalGo.g:3717:4: rule__LiteralType__ArrayTypeAssignment_1
        {
        pushFollow(FOLLOW_2);
        rule__LiteralType__ArrayTypeAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred85_InternalGo

    // $ANTLR start synpred86_InternalGo
    public final void synpred86_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3721:2: ( ( ( rule__LiteralType__Group_2__0 ) ) )
        // InternalGo.g:3721:2: ( ( rule__LiteralType__Group_2__0 ) )
        {
        // InternalGo.g:3721:2: ( ( rule__LiteralType__Group_2__0 ) )
        // InternalGo.g:3722:3: ( rule__LiteralType__Group_2__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getLiteralTypeAccess().getGroup_2()); 
        }
        // InternalGo.g:3723:3: ( rule__LiteralType__Group_2__0 )
        // InternalGo.g:3723:4: rule__LiteralType__Group_2__0
        {
        pushFollow(FOLLOW_2);
        rule__LiteralType__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred86_InternalGo

    // $ANTLR start synpred87_InternalGo
    public final void synpred87_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3727:2: ( ( ( rule__LiteralType__SliceTypeAssignment_3 ) ) )
        // InternalGo.g:3727:2: ( ( rule__LiteralType__SliceTypeAssignment_3 ) )
        {
        // InternalGo.g:3727:2: ( ( rule__LiteralType__SliceTypeAssignment_3 ) )
        // InternalGo.g:3728:3: ( rule__LiteralType__SliceTypeAssignment_3 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getLiteralTypeAccess().getSliceTypeAssignment_3()); 
        }
        // InternalGo.g:3729:3: ( rule__LiteralType__SliceTypeAssignment_3 )
        // InternalGo.g:3729:4: rule__LiteralType__SliceTypeAssignment_3
        {
        pushFollow(FOLLOW_2);
        rule__LiteralType__SliceTypeAssignment_3();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred87_InternalGo

    // $ANTLR start synpred89_InternalGo
    public final void synpred89_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3754:2: ( ( RULE_IDENTIFIER ) )
        // InternalGo.g:3754:2: ( RULE_IDENTIFIER )
        {
        // InternalGo.g:3754:2: ( RULE_IDENTIFIER )
        // InternalGo.g:3755:3: RULE_IDENTIFIER
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getKeyAccess().getIDENTIFIERTerminalRuleCall_0()); 
        }
        match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred89_InternalGo

    // $ANTLR start synpred90_InternalGo
    public final void synpred90_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3760:2: ( ( ( rule__Key__ExpressionAssignment_1 ) ) )
        // InternalGo.g:3760:2: ( ( rule__Key__ExpressionAssignment_1 ) )
        {
        // InternalGo.g:3760:2: ( ( rule__Key__ExpressionAssignment_1 ) )
        // InternalGo.g:3761:3: ( rule__Key__ExpressionAssignment_1 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getKeyAccess().getExpressionAssignment_1()); 
        }
        // InternalGo.g:3762:3: ( rule__Key__ExpressionAssignment_1 )
        // InternalGo.g:3762:4: rule__Key__ExpressionAssignment_1
        {
        pushFollow(FOLLOW_2);
        rule__Key__ExpressionAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred90_InternalGo

    // $ANTLR start synpred92_InternalGo
    public final void synpred92_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3802:2: ( ( ( rule__FieldDecl__Group_0_0__0 ) ) )
        // InternalGo.g:3802:2: ( ( rule__FieldDecl__Group_0_0__0 ) )
        {
        // InternalGo.g:3802:2: ( ( rule__FieldDecl__Group_0_0__0 ) )
        // InternalGo.g:3803:3: ( rule__FieldDecl__Group_0_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getFieldDeclAccess().getGroup_0_0()); 
        }
        // InternalGo.g:3804:3: ( rule__FieldDecl__Group_0_0__0 )
        // InternalGo.g:3804:4: rule__FieldDecl__Group_0_0__0
        {
        pushFollow(FOLLOW_2);
        rule__FieldDecl__Group_0_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred92_InternalGo

    // $ANTLR start synpred93_InternalGo
    public final void synpred93_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3823:2: ( ( ( rule__PrimaryExpr__Alternatives_0 ) ) )
        // InternalGo.g:3823:2: ( ( rule__PrimaryExpr__Alternatives_0 ) )
        {
        // InternalGo.g:3823:2: ( ( rule__PrimaryExpr__Alternatives_0 ) )
        // InternalGo.g:3824:3: ( rule__PrimaryExpr__Alternatives_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExprAccess().getAlternatives_0()); 
        }
        // InternalGo.g:3825:3: ( rule__PrimaryExpr__Alternatives_0 )
        // InternalGo.g:3825:4: rule__PrimaryExpr__Alternatives_0
        {
        pushFollow(FOLLOW_2);
        rule__PrimaryExpr__Alternatives_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred93_InternalGo

    // $ANTLR start synpred94_InternalGo
    public final void synpred94_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3829:2: ( ( ( rule__PrimaryExpr__PrimaryExprSelectorAssignment_1 ) ) )
        // InternalGo.g:3829:2: ( ( rule__PrimaryExpr__PrimaryExprSelectorAssignment_1 ) )
        {
        // InternalGo.g:3829:2: ( ( rule__PrimaryExpr__PrimaryExprSelectorAssignment_1 ) )
        // InternalGo.g:3830:3: ( rule__PrimaryExpr__PrimaryExprSelectorAssignment_1 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExprAccess().getPrimaryExprSelectorAssignment_1()); 
        }
        // InternalGo.g:3831:3: ( rule__PrimaryExpr__PrimaryExprSelectorAssignment_1 )
        // InternalGo.g:3831:4: rule__PrimaryExpr__PrimaryExprSelectorAssignment_1
        {
        pushFollow(FOLLOW_2);
        rule__PrimaryExpr__PrimaryExprSelectorAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred94_InternalGo

    // $ANTLR start synpred95_InternalGo
    public final void synpred95_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3835:2: ( ( ( rule__PrimaryExpr__PrimaryExprIndexAssignment_2 ) ) )
        // InternalGo.g:3835:2: ( ( rule__PrimaryExpr__PrimaryExprIndexAssignment_2 ) )
        {
        // InternalGo.g:3835:2: ( ( rule__PrimaryExpr__PrimaryExprIndexAssignment_2 ) )
        // InternalGo.g:3836:3: ( rule__PrimaryExpr__PrimaryExprIndexAssignment_2 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExprAccess().getPrimaryExprIndexAssignment_2()); 
        }
        // InternalGo.g:3837:3: ( rule__PrimaryExpr__PrimaryExprIndexAssignment_2 )
        // InternalGo.g:3837:4: rule__PrimaryExpr__PrimaryExprIndexAssignment_2
        {
        pushFollow(FOLLOW_2);
        rule__PrimaryExpr__PrimaryExprIndexAssignment_2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred95_InternalGo

    // $ANTLR start synpred96_InternalGo
    public final void synpred96_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3841:2: ( ( ( rule__PrimaryExpr__PrimaryExprSliceAssignment_3 ) ) )
        // InternalGo.g:3841:2: ( ( rule__PrimaryExpr__PrimaryExprSliceAssignment_3 ) )
        {
        // InternalGo.g:3841:2: ( ( rule__PrimaryExpr__PrimaryExprSliceAssignment_3 ) )
        // InternalGo.g:3842:3: ( rule__PrimaryExpr__PrimaryExprSliceAssignment_3 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExprAccess().getPrimaryExprSliceAssignment_3()); 
        }
        // InternalGo.g:3843:3: ( rule__PrimaryExpr__PrimaryExprSliceAssignment_3 )
        // InternalGo.g:3843:4: rule__PrimaryExpr__PrimaryExprSliceAssignment_3
        {
        pushFollow(FOLLOW_2);
        rule__PrimaryExpr__PrimaryExprSliceAssignment_3();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred96_InternalGo

    // $ANTLR start synpred97_InternalGo
    public final void synpred97_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3847:2: ( ( ( rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4 ) ) )
        // InternalGo.g:3847:2: ( ( rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4 ) )
        {
        // InternalGo.g:3847:2: ( ( rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4 ) )
        // InternalGo.g:3848:3: ( rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExprAccess().getPrimaryExprTypeAssertionAssignment_4()); 
        }
        // InternalGo.g:3849:3: ( rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4 )
        // InternalGo.g:3849:4: rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4
        {
        pushFollow(FOLLOW_2);
        rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred97_InternalGo

    // $ANTLR start synpred98_InternalGo
    public final void synpred98_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3868:2: ( ( ( rule__PrimaryExpr__OperandAssignment_0_0 ) ) )
        // InternalGo.g:3868:2: ( ( rule__PrimaryExpr__OperandAssignment_0_0 ) )
        {
        // InternalGo.g:3868:2: ( ( rule__PrimaryExpr__OperandAssignment_0_0 ) )
        // InternalGo.g:3869:3: ( rule__PrimaryExpr__OperandAssignment_0_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExprAccess().getOperandAssignment_0_0()); 
        }
        // InternalGo.g:3870:3: ( rule__PrimaryExpr__OperandAssignment_0_0 )
        // InternalGo.g:3870:4: rule__PrimaryExpr__OperandAssignment_0_0
        {
        pushFollow(FOLLOW_2);
        rule__PrimaryExpr__OperandAssignment_0_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred98_InternalGo

    // $ANTLR start synpred99_InternalGo
    public final void synpred99_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3889:2: ( ( ( rule__PrimaryExprStuff__SelectorAssignment_0 ) ) )
        // InternalGo.g:3889:2: ( ( rule__PrimaryExprStuff__SelectorAssignment_0 ) )
        {
        // InternalGo.g:3889:2: ( ( rule__PrimaryExprStuff__SelectorAssignment_0 ) )
        // InternalGo.g:3890:3: ( rule__PrimaryExprStuff__SelectorAssignment_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExprStuffAccess().getSelectorAssignment_0()); 
        }
        // InternalGo.g:3891:3: ( rule__PrimaryExprStuff__SelectorAssignment_0 )
        // InternalGo.g:3891:4: rule__PrimaryExprStuff__SelectorAssignment_0
        {
        pushFollow(FOLLOW_2);
        rule__PrimaryExprStuff__SelectorAssignment_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred99_InternalGo

    // $ANTLR start synpred100_InternalGo
    public final void synpred100_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3895:2: ( ( ( rule__PrimaryExprStuff__IndexAssignment_1 ) ) )
        // InternalGo.g:3895:2: ( ( rule__PrimaryExprStuff__IndexAssignment_1 ) )
        {
        // InternalGo.g:3895:2: ( ( rule__PrimaryExprStuff__IndexAssignment_1 ) )
        // InternalGo.g:3896:3: ( rule__PrimaryExprStuff__IndexAssignment_1 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExprStuffAccess().getIndexAssignment_1()); 
        }
        // InternalGo.g:3897:3: ( rule__PrimaryExprStuff__IndexAssignment_1 )
        // InternalGo.g:3897:4: rule__PrimaryExprStuff__IndexAssignment_1
        {
        pushFollow(FOLLOW_2);
        rule__PrimaryExprStuff__IndexAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred100_InternalGo

    // $ANTLR start synpred101_InternalGo
    public final void synpred101_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3901:2: ( ( ( rule__PrimaryExprStuff__SliceAssignment_2 ) ) )
        // InternalGo.g:3901:2: ( ( rule__PrimaryExprStuff__SliceAssignment_2 ) )
        {
        // InternalGo.g:3901:2: ( ( rule__PrimaryExprStuff__SliceAssignment_2 ) )
        // InternalGo.g:3902:3: ( rule__PrimaryExprStuff__SliceAssignment_2 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExprStuffAccess().getSliceAssignment_2()); 
        }
        // InternalGo.g:3903:3: ( rule__PrimaryExprStuff__SliceAssignment_2 )
        // InternalGo.g:3903:4: rule__PrimaryExprStuff__SliceAssignment_2
        {
        pushFollow(FOLLOW_2);
        rule__PrimaryExprStuff__SliceAssignment_2();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred101_InternalGo

    // $ANTLR start synpred102_InternalGo
    public final void synpred102_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3907:2: ( ( ( rule__PrimaryExprStuff__TypeAssertionAssignment_3 ) ) )
        // InternalGo.g:3907:2: ( ( rule__PrimaryExprStuff__TypeAssertionAssignment_3 ) )
        {
        // InternalGo.g:3907:2: ( ( rule__PrimaryExprStuff__TypeAssertionAssignment_3 ) )
        // InternalGo.g:3908:3: ( rule__PrimaryExprStuff__TypeAssertionAssignment_3 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPrimaryExprStuffAccess().getTypeAssertionAssignment_3()); 
        }
        // InternalGo.g:3909:3: ( rule__PrimaryExprStuff__TypeAssertionAssignment_3 )
        // InternalGo.g:3909:4: rule__PrimaryExprStuff__TypeAssertionAssignment_3
        {
        pushFollow(FOLLOW_2);
        rule__PrimaryExprStuff__TypeAssertionAssignment_3();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred102_InternalGo

    // $ANTLR start synpred103_InternalGo
    public final void synpred103_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3928:2: ( ( ( rule__Slice__Group_1_0__0 ) ) )
        // InternalGo.g:3928:2: ( ( rule__Slice__Group_1_0__0 ) )
        {
        // InternalGo.g:3928:2: ( ( rule__Slice__Group_1_0__0 ) )
        // InternalGo.g:3929:3: ( rule__Slice__Group_1_0__0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSliceAccess().getGroup_1_0()); 
        }
        // InternalGo.g:3930:3: ( rule__Slice__Group_1_0__0 )
        // InternalGo.g:3930:4: rule__Slice__Group_1_0__0
        {
        pushFollow(FOLLOW_2);
        rule__Slice__Group_1_0__0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred103_InternalGo

    // $ANTLR start synpred104_InternalGo
    public final void synpred104_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3949:2: ( ( ( rule__Arguments__ExpressionListAssignment_1_0_0 ) ) )
        // InternalGo.g:3949:2: ( ( rule__Arguments__ExpressionListAssignment_1_0_0 ) )
        {
        // InternalGo.g:3949:2: ( ( rule__Arguments__ExpressionListAssignment_1_0_0 ) )
        // InternalGo.g:3950:3: ( rule__Arguments__ExpressionListAssignment_1_0_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getArgumentsAccess().getExpressionListAssignment_1_0_0()); 
        }
        // InternalGo.g:3951:3: ( rule__Arguments__ExpressionListAssignment_1_0_0 )
        // InternalGo.g:3951:4: rule__Arguments__ExpressionListAssignment_1_0_0
        {
        pushFollow(FOLLOW_2);
        rule__Arguments__ExpressionListAssignment_1_0_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred104_InternalGo

    // $ANTLR start synpred107_InternalGo
    public final void synpred107_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:3997:2: ( ( ( rule__UnaryExpr__PrimaryExprAssignment_0 ) ) )
        // InternalGo.g:3997:2: ( ( rule__UnaryExpr__PrimaryExprAssignment_0 ) )
        {
        // InternalGo.g:3997:2: ( ( rule__UnaryExpr__PrimaryExprAssignment_0 ) )
        // InternalGo.g:3998:3: ( rule__UnaryExpr__PrimaryExprAssignment_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getUnaryExprAccess().getPrimaryExprAssignment_0()); 
        }
        // InternalGo.g:3999:3: ( rule__UnaryExpr__PrimaryExprAssignment_0 )
        // InternalGo.g:3999:4: rule__UnaryExpr__PrimaryExprAssignment_0
        {
        pushFollow(FOLLOW_2);
        rule__UnaryExpr__PrimaryExprAssignment_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred107_InternalGo

    // $ANTLR start synpred119_InternalGo
    public final void synpred119_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:4568:3: ( rule__ConstSpec__Group_1__0 )
        // InternalGo.g:4568:3: rule__ConstSpec__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__ConstSpec__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred119_InternalGo

    // $ANTLR start synpred121_InternalGo
    public final void synpred121_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:4703:3: ( rule__IdentifierList__Group_1__0 )
        // InternalGo.g:4703:3: rule__IdentifierList__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__IdentifierList__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred121_InternalGo

    // $ANTLR start synpred122_InternalGo
    public final void synpred122_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:4811:3: ( rule__ExpressionList__Group_1__0 )
        // InternalGo.g:4811:3: rule__ExpressionList__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__ExpressionList__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred122_InternalGo

    // $ANTLR start synpred125_InternalGo
    public final void synpred125_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:5540:3: ( rule__VarSpec__Group_1_0_1__0 )
        // InternalGo.g:5540:3: rule__VarSpec__Group_1_0_1__0
        {
        pushFollow(FOLLOW_2);
        rule__VarSpec__Group_1_0_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred125_InternalGo

    // $ANTLR start synpred127_InternalGo
    public final void synpred127_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:6215:3: ( rule__ReturnStmt__ExpressionListAssignment_1 )
        // InternalGo.g:6215:3: rule__ReturnStmt__ExpressionListAssignment_1
        {
        pushFollow(FOLLOW_2);
        rule__ReturnStmt__ExpressionListAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred127_InternalGo

    // $ANTLR start synpred128_InternalGo
    public final void synpred128_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:6269:3: ( RULE_IDENTIFIER )
        // InternalGo.g:6269:3: RULE_IDENTIFIER
        {
        match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred128_InternalGo

    // $ANTLR start synpred129_InternalGo
    public final void synpred129_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:6323:3: ( RULE_IDENTIFIER )
        // InternalGo.g:6323:3: RULE_IDENTIFIER
        {
        match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred129_InternalGo

    // $ANTLR start synpred130_InternalGo
    public final void synpred130_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:6486:3: ( rule__IfStmt__SimpleStmtAssignment_1 )
        // InternalGo.g:6486:3: rule__IfStmt__SimpleStmtAssignment_1
        {
        pushFollow(FOLLOW_2);
        rule__IfStmt__SimpleStmtAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred130_InternalGo

    // $ANTLR start synpred132_InternalGo
    public final void synpred132_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:6675:3: ( rule__ExprSwitchStmt__SimpleStmtAssignment_1 )
        // InternalGo.g:6675:3: rule__ExprSwitchStmt__SimpleStmtAssignment_1
        {
        pushFollow(FOLLOW_2);
        rule__ExprSwitchStmt__SimpleStmtAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred132_InternalGo

    // $ANTLR start synpred133_InternalGo
    public final void synpred133_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:6702:3: ( rule__ExprSwitchStmt__ExpressionAssignment_2 )
        // InternalGo.g:6702:3: rule__ExprSwitchStmt__ExpressionAssignment_2
        {
        pushFollow(FOLLOW_2);
        rule__ExprSwitchStmt__ExpressionAssignment_2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred133_InternalGo

    // $ANTLR start synpred135_InternalGo
    public final void synpred135_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:6972:3: ( rule__TypeSwitchStmt__SimpleStmtAssignment_1 )
        // InternalGo.g:6972:3: rule__TypeSwitchStmt__SimpleStmtAssignment_1
        {
        pushFollow(FOLLOW_2);
        rule__TypeSwitchStmt__SimpleStmtAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred135_InternalGo

    // $ANTLR start synpred140_InternalGo
    public final void synpred140_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:7809:3: ( rule__RecvStmt__Alternatives_0 )
        // InternalGo.g:7809:3: rule__RecvStmt__Alternatives_0
        {
        pushFollow(FOLLOW_2);
        rule__RecvStmt__Alternatives_0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred140_InternalGo

    // $ANTLR start synpred141_InternalGo
    public final void synpred141_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:7998:3: ( rule__ForStmt__Alternatives_1 )
        // InternalGo.g:7998:3: rule__ForStmt__Alternatives_1
        {
        pushFollow(FOLLOW_2);
        rule__ForStmt__Alternatives_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred141_InternalGo

    // $ANTLR start synpred142_InternalGo
    public final void synpred142_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:8052:3: ( rule__ForClause__SimpleStmtAssignment_0 )
        // InternalGo.g:8052:3: rule__ForClause__SimpleStmtAssignment_0
        {
        pushFollow(FOLLOW_2);
        rule__ForClause__SimpleStmtAssignment_0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred142_InternalGo

    // $ANTLR start synpred143_InternalGo
    public final void synpred143_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:8079:3: ( rule__ForClause__ExpressionAssignment_1 )
        // InternalGo.g:8079:3: rule__ForClause__ExpressionAssignment_1
        {
        pushFollow(FOLLOW_2);
        rule__ForClause__ExpressionAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred143_InternalGo

    // $ANTLR start synpred144_InternalGo
    public final void synpred144_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:8105:3: ( rule__ForClause__SimpleStmtAssignment_2 )
        // InternalGo.g:8105:3: rule__ForClause__SimpleStmtAssignment_2
        {
        pushFollow(FOLLOW_2);
        rule__ForClause__SimpleStmtAssignment_2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred144_InternalGo

    // $ANTLR start synpred147_InternalGo
    public final void synpred147_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:9239:3: ( rule__Signature__ResultAssignment_1 )
        // InternalGo.g:9239:3: rule__Signature__ResultAssignment_1
        {
        pushFollow(FOLLOW_2);
        rule__Signature__ResultAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred147_InternalGo

    // $ANTLR start synpred151_InternalGo
    public final void synpred151_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:9510:3: ( rule__ParameterDecl__IdentifierListAssignment_0 )
        // InternalGo.g:9510:3: rule__ParameterDecl__IdentifierListAssignment_0
        {
        pushFollow(FOLLOW_2);
        rule__ParameterDecl__IdentifierListAssignment_0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred151_InternalGo

    // $ANTLR start synpred153_InternalGo
    public final void synpred153_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:9942:3: ( rule__LiteralValue__Group_1__0 )
        // InternalGo.g:9942:3: rule__LiteralValue__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__LiteralValue__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred153_InternalGo

    // $ANTLR start synpred155_InternalGo
    public final void synpred155_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:10076:3: ( rule__ElementList__Group_1__0 )
        // InternalGo.g:10076:3: rule__ElementList__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__ElementList__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred155_InternalGo

    // $ANTLR start synpred156_InternalGo
    public final void synpred156_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:10158:3: ( rule__KeyedElement__Group_0__0 )
        // InternalGo.g:10158:3: rule__KeyedElement__Group_0__0
        {
        pushFollow(FOLLOW_2);
        rule__KeyedElement__Group_0__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred156_InternalGo

    // $ANTLR start synpred160_InternalGo
    public final void synpred160_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:11076:3: ( rule__Slice__ExpressionAssignment_1_0_0 )
        // InternalGo.g:11076:3: rule__Slice__ExpressionAssignment_1_0_0
        {
        pushFollow(FOLLOW_2);
        rule__Slice__ExpressionAssignment_1_0_0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred160_InternalGo

    // $ANTLR start synpred161_InternalGo
    public final void synpred161_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:11129:3: ( rule__Slice__ExpressionAssignment_1_0_2 )
        // InternalGo.g:11129:3: rule__Slice__ExpressionAssignment_1_0_2
        {
        pushFollow(FOLLOW_2);
        rule__Slice__ExpressionAssignment_1_0_2();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred161_InternalGo

    // $ANTLR start synpred162_InternalGo
    public final void synpred162_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:11157:3: ( rule__Slice__ExpressionAssignment_1_1_0 )
        // InternalGo.g:11157:3: rule__Slice__ExpressionAssignment_1_1_0
        {
        pushFollow(FOLLOW_2);
        rule__Slice__ExpressionAssignment_1_1_0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred162_InternalGo

    // $ANTLR start synpred163_InternalGo
    public final void synpred163_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:11427:3: ( rule__Arguments__Group_1__0 )
        // InternalGo.g:11427:3: rule__Arguments__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__Arguments__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred163_InternalGo

    // $ANTLR start synpred166_InternalGo
    public final void synpred166_InternalGo_fragment() throws RecognitionException {   
        // InternalGo.g:11588:3: ( rule__Arguments__Group_1_0_1_1__0 )
        // InternalGo.g:11588:3: rule__Arguments__Group_1_0_1_1__0
        {
        pushFollow(FOLLOW_2);
        rule__Arguments__Group_1_0_1_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred166_InternalGo

    // Delegated rules

    public final boolean synpred51_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred160_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred160_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred163_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred156_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred156_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred132_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred132_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred129_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred129_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred119_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred119_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred147_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred161_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred161_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred155_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred155_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred162_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred162_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_InternalGo() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_InternalGo_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA2 dfa2 = new DFA2(this);
    protected DFA3 dfa3 = new DFA3(this);
    protected DFA4 dfa4 = new DFA4(this);
    protected DFA5 dfa5 = new DFA5(this);
    protected DFA6 dfa6 = new DFA6(this);
    protected DFA7 dfa7 = new DFA7(this);
    protected DFA18 dfa18 = new DFA18(this);
    protected DFA19 dfa19 = new DFA19(this);
    protected DFA27 dfa27 = new DFA27(this);
    protected DFA28 dfa28 = new DFA28(this);
    protected DFA29 dfa29 = new DFA29(this);
    protected DFA30 dfa30 = new DFA30(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA36 dfa36 = new DFA36(this);
    protected DFA37 dfa37 = new DFA37(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA49 dfa49 = new DFA49(this);
    protected DFA51 dfa51 = new DFA51(this);
    protected DFA58 dfa58 = new DFA58(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA69 dfa69 = new DFA69(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA79 dfa79 = new DFA79(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA82 dfa82 = new DFA82(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA95 dfa95 = new DFA95(this);
    static final String dfa_1s = "\72\uffff";
    static final String dfa_2s = "\1\4\71\uffff";
    static final String dfa_3s = "\1\4\3\0\66\uffff";
    static final String dfa_4s = "\1\137\3\0\66\uffff";
    static final String dfa_5s = "\4\uffff\1\2\64\uffff\1\1";
    static final String dfa_6s = "\1\uffff\1\0\1\1\1\2\66\uffff}>";
    static final String[] dfa_7s = {
            "\10\4\40\uffff\1\4\1\1\21\4\2\uffff\1\3\11\4\1\uffff\7\4\1\uffff\4\4\1\uffff\1\4\1\2\5\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA2 extends DFA {

        public DFA2(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 2;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "2370:3: ( rule__PrimaryExprSelector__Group__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA2_1 = input.LA(1);

                         
                        int index2_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index2_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA2_2 = input.LA(1);

                         
                        int index2_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index2_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA2_3 = input.LA(1);

                         
                        int index2_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index2_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 2, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "2395:3: ( rule__PrimaryExprIndex__Group__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA3_1 = input.LA(1);

                         
                        int index3_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index3_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA3_2 = input.LA(1);

                         
                        int index3_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index3_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA3_3 = input.LA(1);

                         
                        int index3_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index3_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 3, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "2420:3: ( rule__PrimaryExprSlice__Group__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA4_1 = input.LA(1);

                         
                        int index4_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index4_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA4_2 = input.LA(1);

                         
                        int index4_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index4_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA4_3 = input.LA(1);

                         
                        int index4_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index4_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 4, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA5 extends DFA {

        public DFA5(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 5;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "2445:3: ( rule__PrimaryExprTypeAssertion__Group__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA5_1 = input.LA(1);

                         
                        int index5_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index5_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA5_2 = input.LA(1);

                         
                        int index5_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index5_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA5_3 = input.LA(1);

                         
                        int index5_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index5_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 5, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA6 extends DFA {

        public DFA6(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 6;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "2470:3: ( rule__PrimaryExprArguments__Group__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA6_1 = input.LA(1);

                         
                        int index6_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index6_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA6_2 = input.LA(1);

                         
                        int index6_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index6_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA6_3 = input.LA(1);

                         
                        int index6_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index6_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 6, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\1\2\71\uffff";
    static final String dfa_9s = "\1\4\1\0\70\uffff";
    static final String dfa_10s = "\1\137\1\0\70\uffff";
    static final String dfa_11s = "\2\uffff\1\2\66\uffff\1\1";
    static final String dfa_12s = "\1\uffff\1\0\70\uffff}>";
    static final String[] dfa_13s = {
            "\7\2\1\1\40\uffff\23\2\2\uffff\12\2\1\uffff\7\2\1\uffff\4\2\1\uffff\7\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = dfa_1;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "2695:3: ( rule__ExpressionMatched__Group__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA7_1 = input.LA(1);

                         
                        int index7_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index7_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 7, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\103\uffff";
    static final String dfa_15s = "\1\5\102\uffff";
    static final String dfa_16s = "\1\4\4\0\44\uffff\14\0\16\uffff";
    static final String dfa_17s = "\1\137\4\0\44\uffff\14\0\16\uffff";
    static final String dfa_18s = "\5\uffff\1\3\57\uffff\1\1\1\2\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17";
    static final String dfa_19s = "\1\uffff\1\0\1\1\1\2\1\3\44\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\16\uffff}>";
    static final String[] dfa_20s = {
            "\2\5\1\4\5\5\40\uffff\1\56\22\5\2\uffff\1\5\1\uffff\1\1\2\5\1\2\1\5\1\3\1\57\1\5\2\uffff\1\52\1\53\1\54\1\55\1\64\1\60\1\uffff\1\61\1\5\1\62\1\63\1\uffff\1\51\1\5\1\uffff\2\5\1\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA18 extends DFA {

        public DFA18(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 18;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "2975:1: rule__Statement__Alternatives : ( ( ( rule__Statement__DeclarationAssignment_0 ) ) | ( ( rule__Statement__LabeledStmtAssignment_1 ) ) | ( ( rule__Statement__SimpleStmtAssignment_2 ) ) | ( ( rule__Statement__GoStmtAssignment_3 ) ) | ( ( rule__Statement__ReturnStmtAssignment_4 ) ) | ( ( rule__Statement__BreakStmtAssignment_5 ) ) | ( ( rule__Statement__ContinueStmtAssignment_6 ) ) | ( ( rule__Statement__GotoStmtAssignment_7 ) ) | ( ( rule__Statement__FallthroughStmtAssignment_8 ) ) | ( ( rule__Statement__BlockAssignment_9 ) ) | ( ( rule__Statement__IfStmtAssignment_10 ) ) | ( ( rule__Statement__SwitchStmtAssignment_11 ) ) | ( ( rule__Statement__SelectStmtAssignment_12 ) ) | ( ( rule__Statement__ForStmtAssignment_13 ) ) | ( ( rule__Statement__DeferStmtAssignment_14 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA18_1 = input.LA(1);

                         
                        int index18_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalGo()) ) {s = 53;}

                        else if ( (synpred22_InternalGo()) ) {s = 5;}

                         
                        input.seek(index18_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA18_2 = input.LA(1);

                         
                        int index18_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalGo()) ) {s = 53;}

                        else if ( (synpred22_InternalGo()) ) {s = 5;}

                         
                        input.seek(index18_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA18_3 = input.LA(1);

                         
                        int index18_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalGo()) ) {s = 53;}

                        else if ( (synpred22_InternalGo()) ) {s = 5;}

                         
                        input.seek(index18_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA18_4 = input.LA(1);

                         
                        int index18_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalGo()) ) {s = 54;}

                        else if ( (synpred22_InternalGo()) ) {s = 5;}

                         
                        input.seek(index18_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA18_41 = input.LA(1);

                         
                        int index18_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalGo()) ) {s = 5;}

                        else if ( (synpred23_InternalGo()) ) {s = 55;}

                         
                        input.seek(index18_41);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA18_42 = input.LA(1);

                         
                        int index18_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalGo()) ) {s = 5;}

                        else if ( (synpred24_InternalGo()) ) {s = 56;}

                         
                        input.seek(index18_42);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA18_43 = input.LA(1);

                         
                        int index18_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalGo()) ) {s = 5;}

                        else if ( (synpred25_InternalGo()) ) {s = 57;}

                         
                        input.seek(index18_43);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA18_44 = input.LA(1);

                         
                        int index18_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalGo()) ) {s = 5;}

                        else if ( (synpred26_InternalGo()) ) {s = 58;}

                         
                        input.seek(index18_44);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA18_45 = input.LA(1);

                         
                        int index18_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalGo()) ) {s = 5;}

                        else if ( (synpred27_InternalGo()) ) {s = 59;}

                         
                        input.seek(index18_45);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA18_46 = input.LA(1);

                         
                        int index18_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalGo()) ) {s = 5;}

                        else if ( (synpred28_InternalGo()) ) {s = 60;}

                         
                        input.seek(index18_46);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA18_47 = input.LA(1);

                         
                        int index18_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalGo()) ) {s = 5;}

                        else if ( (synpred29_InternalGo()) ) {s = 61;}

                         
                        input.seek(index18_47);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA18_48 = input.LA(1);

                         
                        int index18_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalGo()) ) {s = 5;}

                        else if ( (synpred30_InternalGo()) ) {s = 62;}

                         
                        input.seek(index18_48);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA18_49 = input.LA(1);

                         
                        int index18_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalGo()) ) {s = 5;}

                        else if ( (synpred31_InternalGo()) ) {s = 63;}

                         
                        input.seek(index18_49);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA18_50 = input.LA(1);

                         
                        int index18_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalGo()) ) {s = 5;}

                        else if ( (synpred32_InternalGo()) ) {s = 64;}

                         
                        input.seek(index18_50);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA18_51 = input.LA(1);

                         
                        int index18_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalGo()) ) {s = 5;}

                        else if ( (synpred33_InternalGo()) ) {s = 65;}

                         
                        input.seek(index18_51);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA18_52 = input.LA(1);

                         
                        int index18_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalGo()) ) {s = 5;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index18_52);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 18, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_21s = "\1\27\71\uffff";
    static final String dfa_22s = "\1\4\26\0\7\uffff\13\0\21\uffff";
    static final String dfa_23s = "\1\137\26\0\7\uffff\13\0\21\uffff";
    static final String dfa_24s = "\27\uffff\1\2\35\uffff\1\1\1\3\1\4\1\5\1\6";
    static final String dfa_25s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\7\uffff\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\21\uffff}>";
    static final String[] dfa_26s = {
            "\1\5\1\50\1\11\1\1\1\2\1\3\1\4\1\21\40\uffff\1\27\1\20\1\36\1\37\1\22\1\23\1\41\1\25\1\14\1\42\1\43\1\44\1\45\1\26\1\46\1\27\1\16\1\24\1\17\2\uffff\1\13\1\uffff\1\27\1\47\1\40\1\27\1\12\3\27\2\uffff\6\27\1\uffff\4\27\1\uffff\1\27\1\7\1\uffff\1\15\1\10\1\uffff\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = dfa_1;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "3074:1: rule__SimpleStmt__Alternatives : ( ( ( rule__SimpleStmt__SendStmtAssignment_0 ) ) | ( ( rule__SimpleStmt__ExpressionStmtAssignment_1 ) ) | ( ( rule__SimpleStmt__IncDecStmtAssignment_2 ) ) | ( ( rule__SimpleStmt__AssignmentAssignment_3 ) ) | ( ( rule__SimpleStmt__ShortVarDeclAssignment_4 ) ) | ( ( rule__SimpleStmt__EmptyStmtAssignment_5 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA19_1 = input.LA(1);

                         
                        int index19_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA19_2 = input.LA(1);

                         
                        int index19_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA19_3 = input.LA(1);

                         
                        int index19_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA19_4 = input.LA(1);

                         
                        int index19_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA19_5 = input.LA(1);

                         
                        int index19_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA19_6 = input.LA(1);

                         
                        int index19_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA19_7 = input.LA(1);

                         
                        int index19_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA19_8 = input.LA(1);

                         
                        int index19_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA19_9 = input.LA(1);

                         
                        int index19_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                        else if ( (synpred38_InternalGo()) ) {s = 56;}

                         
                        input.seek(index19_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA19_10 = input.LA(1);

                         
                        int index19_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA19_11 = input.LA(1);

                         
                        int index19_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA19_12 = input.LA(1);

                         
                        int index19_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA19_13 = input.LA(1);

                         
                        int index19_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA19_14 = input.LA(1);

                         
                        int index19_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA19_15 = input.LA(1);

                         
                        int index19_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA19_16 = input.LA(1);

                         
                        int index19_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA19_17 = input.LA(1);

                         
                        int index19_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA19_18 = input.LA(1);

                         
                        int index19_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA19_19 = input.LA(1);

                         
                        int index19_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA19_20 = input.LA(1);

                         
                        int index19_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA19_21 = input.LA(1);

                         
                        int index19_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA19_22 = input.LA(1);

                         
                        int index19_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalGo()) ) {s = 53;}

                        else if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA19_30 = input.LA(1);

                         
                        int index19_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                         
                        input.seek(index19_30);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA19_31 = input.LA(1);

                         
                        int index19_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred36_InternalGo()) ) {s = 54;}

                         
                        input.seek(index19_31);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA19_32 = input.LA(1);

                         
                        int index19_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_32);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA19_33 = input.LA(1);

                         
                        int index19_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_33);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA19_34 = input.LA(1);

                         
                        int index19_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_34);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA19_35 = input.LA(1);

                         
                        int index19_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_35);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA19_36 = input.LA(1);

                         
                        int index19_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_36);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA19_37 = input.LA(1);

                         
                        int index19_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_37);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA19_38 = input.LA(1);

                         
                        int index19_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_38);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA19_39 = input.LA(1);

                         
                        int index19_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (synpred37_InternalGo()) ) {s = 55;}

                         
                        input.seek(index19_39);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA19_40 = input.LA(1);

                         
                        int index19_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalGo()) ) {s = 23;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index19_40);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 19, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\34\uffff";
    static final String dfa_28s = "\1\27\33\uffff";
    static final String dfa_29s = "\1\4\26\0\5\uffff";
    static final String dfa_30s = "\1\137\26\0\5\uffff";
    static final String dfa_31s = "\27\uffff\1\2\3\uffff\1\1";
    static final String dfa_32s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\5\uffff}>";
    static final String[] dfa_33s = {
            "\1\5\1\uffff\1\11\1\1\1\2\1\3\1\4\1\21\41\uffff\1\20\2\uffff\1\22\1\23\1\uffff\1\25\1\14\4\uffff\1\26\2\uffff\1\16\1\24\1\17\2\uffff\1\13\2\uffff\2\27\1\uffff\1\12\4\uffff\1\27\15\uffff\1\7\1\uffff\1\15\1\10\1\uffff\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "3320:1: rule__CommCase__Alternatives_0_1 : ( ( ( rule__CommCase__SendStmtAssignment_0_1_0 ) ) | ( ( rule__CommCase__RecvStmtAssignment_0_1_1 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA27_1 = input.LA(1);

                         
                        int index27_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA27_2 = input.LA(1);

                         
                        int index27_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA27_3 = input.LA(1);

                         
                        int index27_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA27_4 = input.LA(1);

                         
                        int index27_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA27_5 = input.LA(1);

                         
                        int index27_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA27_6 = input.LA(1);

                         
                        int index27_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA27_7 = input.LA(1);

                         
                        int index27_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA27_8 = input.LA(1);

                         
                        int index27_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA27_9 = input.LA(1);

                         
                        int index27_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA27_10 = input.LA(1);

                         
                        int index27_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA27_11 = input.LA(1);

                         
                        int index27_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA27_12 = input.LA(1);

                         
                        int index27_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA27_13 = input.LA(1);

                         
                        int index27_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA27_14 = input.LA(1);

                         
                        int index27_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA27_15 = input.LA(1);

                         
                        int index27_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA27_16 = input.LA(1);

                         
                        int index27_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA27_17 = input.LA(1);

                         
                        int index27_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA27_18 = input.LA(1);

                         
                        int index27_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA27_19 = input.LA(1);

                         
                        int index27_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA27_20 = input.LA(1);

                         
                        int index27_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA27_21 = input.LA(1);

                         
                        int index27_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA27_22 = input.LA(1);

                         
                        int index27_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalGo()) ) {s = 27;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index27_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 27, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\6\uffff";
    static final String dfa_35s = "\1\4\1\uffff\1\13\1\4\1\uffff\1\13";
    static final String dfa_36s = "\1\137\1\uffff\1\113\1\137\1\uffff\1\113";
    static final String dfa_37s = "\1\uffff\1\1\2\uffff\1\2\1\uffff";
    static final String dfa_38s = "\6\uffff}>";
    static final String[] dfa_39s = {
            "\1\1\1\uffff\1\2\5\1\41\uffff\1\1\2\uffff\2\1\1\uffff\2\1\4\uffff\1\1\2\uffff\3\1\2\uffff\1\1\2\uffff\2\1\1\uffff\1\1\22\uffff\1\1\1\uffff\2\1\1\uffff\1\1",
            "",
            "\1\1\41\uffff\1\1\23\uffff\1\1\2\uffff\1\1\1\3\3\uffff\1\1\1\uffff\1\4",
            "\1\1\1\uffff\1\5\5\1\41\uffff\1\1\2\uffff\2\1\1\uffff\2\1\4\uffff\1\1\2\uffff\3\1\2\uffff\1\1\2\uffff\2\1\1\uffff\1\1\22\uffff\1\1\1\uffff\2\1\1\uffff\1\1",
            "",
            "\1\1\41\uffff\1\1\23\uffff\1\1\2\uffff\1\1\1\3\3\uffff\1\1\1\uffff\1\4"
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = dfa_34;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "3341:1: rule__RecvStmt__Alternatives_0 : ( ( ( rule__RecvStmt__Group_0_0__0 ) ) | ( ( rule__RecvStmt__Group_0_1__0 ) ) );";
        }
    }
    static final String dfa_40s = "\46\uffff";
    static final String dfa_41s = "\1\23\45\uffff";
    static final String dfa_42s = "\1\4\30\0\2\uffff\1\0\6\uffff\1\0\3\uffff";
    static final String dfa_43s = "\1\137\30\0\2\uffff\1\0\6\uffff\1\0\3\uffff";
    static final String dfa_44s = "\31\uffff\1\2\12\uffff\1\3\1\1";
    static final String dfa_45s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\2\uffff\1\30\6\uffff\1\31\3\uffff}>";
    static final String[] dfa_46s = {
            "\1\5\1\31\1\11\1\1\1\2\1\3\1\4\1\21\41\uffff\1\20\2\31\1\24\1\25\1\31\1\27\1\14\4\31\1\30\1\31\1\uffff\1\16\1\26\1\17\2\uffff\1\13\2\uffff\1\42\1\33\1\uffff\1\12\1\uffff\1\22\16\uffff\1\44\1\uffff\1\7\1\uffff\1\15\1\10\1\uffff\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA29 extends DFA {

        public DFA29(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 29;
            this.eot = dfa_40;
            this.eof = dfa_41;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_45;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "3362:1: rule__ForStmt__Alternatives_1 : ( ( ( rule__ForStmt__ExpressionAssignment_1_0 ) ) | ( ( rule__ForStmt__ForClauseAssignment_1_1 ) ) | ( ( rule__ForStmt__RangeClauseAssignment_1_2 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA29_1 = input.LA(1);

                         
                        int index29_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA29_2 = input.LA(1);

                         
                        int index29_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA29_3 = input.LA(1);

                         
                        int index29_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA29_4 = input.LA(1);

                         
                        int index29_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA29_5 = input.LA(1);

                         
                        int index29_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA29_6 = input.LA(1);

                         
                        int index29_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA29_7 = input.LA(1);

                         
                        int index29_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA29_8 = input.LA(1);

                         
                        int index29_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA29_9 = input.LA(1);

                         
                        int index29_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA29_10 = input.LA(1);

                         
                        int index29_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA29_11 = input.LA(1);

                         
                        int index29_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA29_12 = input.LA(1);

                         
                        int index29_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA29_13 = input.LA(1);

                         
                        int index29_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA29_14 = input.LA(1);

                         
                        int index29_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA29_15 = input.LA(1);

                         
                        int index29_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA29_16 = input.LA(1);

                         
                        int index29_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA29_17 = input.LA(1);

                         
                        int index29_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA29_18 = input.LA(1);

                         
                        int index29_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                         
                        input.seek(index29_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA29_19 = input.LA(1);

                         
                        int index29_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                         
                        input.seek(index29_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA29_20 = input.LA(1);

                         
                        int index29_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA29_21 = input.LA(1);

                         
                        int index29_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA29_22 = input.LA(1);

                         
                        int index29_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA29_23 = input.LA(1);

                         
                        int index29_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA29_24 = input.LA(1);

                         
                        int index29_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalGo()) ) {s = 37;}

                        else if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA29_27 = input.LA(1);

                         
                        int index29_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_27);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA29_34 = input.LA(1);

                         
                        int index29_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalGo()) ) {s = 25;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index29_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 29, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA30 extends DFA {

        public DFA30(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 30;
            this.eot = dfa_34;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "3389:1: rule__RangeClause__Alternatives_0 : ( ( ( rule__RangeClause__Group_0_0__0 ) ) | ( ( rule__RangeClause__Group_0_1__0 ) ) );";
        }
    }
    static final String dfa_47s = "\13\uffff";
    static final String dfa_48s = "\1\64\1\0\11\uffff";
    static final String dfa_49s = "\1\137\1\0\11\uffff";
    static final String dfa_50s = "\2\uffff\1\2\1\3\1\4\1\5\1\7\1\10\1\uffff\1\1\1\6";
    static final String dfa_51s = "\1\uffff\1\0\11\uffff}>";
    static final String[] dfa_52s = {
            "\1\3\7\uffff\1\7\1\uffff\1\7\10\uffff\1\4\22\uffff\1\1\1\uffff\1\5\1\6\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[][] dfa_52 = unpackEncodedStringArray(dfa_52s);

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_47;
            this.eof = dfa_47;
            this.min = dfa_48;
            this.max = dfa_49;
            this.accept = dfa_50;
            this.special = dfa_51;
            this.transition = dfa_52;
        }
        public String getDescription() {
            return "3458:1: rule__TypeLit__Alternatives : ( ( ( rule__TypeLit__ArrayTypeAssignment_0 ) ) | ( ( rule__TypeLit__StructTypeAssignment_1 ) ) | ( ( rule__TypeLit__PointerTypeAssignment_2 ) ) | ( ( rule__TypeLit__FunctionTypeAssignment_3 ) ) | ( ( rule__TypeLit__InterfaceTypeAssignment_4 ) ) | ( ( rule__TypeLit__SliceTypeAssignment_5 ) ) | ( ( rule__TypeLit__MapTypeAssignment_6 ) ) | ( ( rule__TypeLit__ChannelTypeAssignment_7 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA33_1 = input.LA(1);

                         
                        int index33_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_InternalGo()) ) {s = 9;}

                        else if ( (synpred68_InternalGo()) ) {s = 10;}

                         
                        input.seek(index33_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 33, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_53s = "\14\uffff";
    static final String dfa_54s = "\1\6\1\0\12\uffff";
    static final String dfa_55s = "\1\137\1\0\12\uffff";
    static final String dfa_56s = "\2\uffff\1\2\10\uffff\1\1";
    static final String dfa_57s = "\1\uffff\1\0\12\uffff}>";
    static final String[] dfa_58s = {
            "\1\2\55\uffff\1\2\7\uffff\1\2\1\uffff\1\2\2\uffff\1\1\5\uffff\1\2\22\uffff\1\2\1\uffff\2\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA36 extends DFA {

        public DFA36(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 36;
            this.eot = dfa_53;
            this.eof = dfa_53;
            this.min = dfa_54;
            this.max = dfa_55;
            this.accept = dfa_56;
            this.special = dfa_57;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "3563:1: rule__Result__Alternatives : ( ( ( rule__Result__ParametersAssignment_0 ) ) | ( ( rule__Result__TypeAssignment_1 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA36_1 = input.LA(1);

                         
                        int index36_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred73_InternalGo()) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index36_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 36, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_59s = "\17\uffff";
    static final String dfa_60s = "\1\4\10\uffff\1\0\1\uffff\1\0\3\uffff";
    static final String dfa_61s = "\1\137\10\uffff\1\0\1\uffff\1\0\3\uffff";
    static final String dfa_62s = "\1\uffff\1\1\12\uffff\1\2\1\3\1\4";
    static final String dfa_63s = "\11\uffff\1\0\1\uffff\1\1\3\uffff}>";
    static final String[] dfa_64s = {
            "\1\1\1\uffff\1\11\4\1\66\uffff\1\13\5\uffff\1\1\22\uffff\1\1\2\uffff\1\1\1\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

    class DFA37 extends DFA {

        public DFA37(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 37;
            this.eot = dfa_59;
            this.eof = dfa_59;
            this.min = dfa_60;
            this.max = dfa_61;
            this.accept = dfa_62;
            this.special = dfa_63;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "3584:1: rule__Operand__Alternatives : ( ( ( rule__Operand__LiteralAssignment_0 ) ) | ( ( rule__Operand__OperandNameAssignment_1 ) ) | ( ( rule__Operand__MethodExprAssignment_2 ) ) | ( ( rule__Operand__Group_3__0 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA37_9 = input.LA(1);

                         
                        int index37_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalGo()) ) {s = 1;}

                        else if ( (synpred75_InternalGo()) ) {s = 12;}

                        else if ( (synpred76_InternalGo()) ) {s = 13;}

                         
                        input.seek(index37_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA37_11 = input.LA(1);

                         
                        int index37_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalGo()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index37_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 37, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_65s = "\20\uffff";
    static final String dfa_66s = "\1\4\5\uffff\6\0\4\uffff";
    static final String dfa_67s = "\1\137\5\uffff\6\0\4\uffff";
    static final String dfa_68s = "\1\uffff\1\1\12\uffff\1\2\3\uffff";
    static final String dfa_69s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\4\uffff}>";
    static final String[] dfa_70s = {
            "\1\1\1\uffff\1\11\4\1\51\uffff\1\14\7\uffff\1\14\1\uffff\1\14\2\uffff\1\13\5\uffff\1\12\22\uffff\1\7\1\uffff\1\14\1\10\1\uffff\1\6",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[][] dfa_70 = unpackEncodedStringArray(dfa_70s);

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = dfa_65;
            this.eof = dfa_65;
            this.min = dfa_66;
            this.max = dfa_67;
            this.accept = dfa_68;
            this.special = dfa_69;
            this.transition = dfa_70;
        }
        public String getDescription() {
            return "3863:1: rule__PrimaryExpr__Alternatives_0 : ( ( ( rule__PrimaryExpr__OperandAssignment_0_0 ) ) | ( ( rule__PrimaryExpr__ConversionAssignment_0_1 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA46_6 = input.LA(1);

                         
                        int index46_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index46_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA46_7 = input.LA(1);

                         
                        int index46_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index46_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA46_8 = input.LA(1);

                         
                        int index46_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index46_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA46_9 = input.LA(1);

                         
                        int index46_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index46_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA46_10 = input.LA(1);

                         
                        int index46_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index46_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA46_11 = input.LA(1);

                         
                        int index46_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index46_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 46, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_71s = "\32\uffff";
    static final String dfa_72s = "\1\4\27\0\2\uffff";
    static final String dfa_73s = "\1\137\27\0\2\uffff";
    static final String dfa_74s = "\30\uffff\1\1\1\2";
    static final String dfa_75s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\2\uffff}>";
    static final String[] dfa_76s = {
            "\1\5\1\uffff\1\11\1\1\1\2\1\3\1\4\1\21\41\uffff\1\20\2\uffff\1\23\1\24\1\uffff\1\26\1\14\4\uffff\1\27\2\uffff\1\16\1\25\1\17\2\uffff\1\13\5\uffff\1\12\4\uffff\1\22\15\uffff\1\7\1\uffff\1\15\1\10\1\uffff\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final char[] dfa_73 = DFA.unpackEncodedStringToUnsignedChars(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final short[][] dfa_76 = unpackEncodedStringArray(dfa_76s);

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_71;
            this.eof = dfa_71;
            this.min = dfa_72;
            this.max = dfa_73;
            this.accept = dfa_74;
            this.special = dfa_75;
            this.transition = dfa_76;
        }
        public String getDescription() {
            return "3923:1: rule__Slice__Alternatives_1 : ( ( ( rule__Slice__Group_1_0__0 ) ) | ( ( rule__Slice__Group_1_1__0 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA48_1 = input.LA(1);

                         
                        int index48_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA48_2 = input.LA(1);

                         
                        int index48_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA48_3 = input.LA(1);

                         
                        int index48_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA48_4 = input.LA(1);

                         
                        int index48_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA48_5 = input.LA(1);

                         
                        int index48_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA48_6 = input.LA(1);

                         
                        int index48_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA48_7 = input.LA(1);

                         
                        int index48_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA48_8 = input.LA(1);

                         
                        int index48_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA48_9 = input.LA(1);

                         
                        int index48_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA48_10 = input.LA(1);

                         
                        int index48_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA48_11 = input.LA(1);

                         
                        int index48_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA48_12 = input.LA(1);

                         
                        int index48_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA48_13 = input.LA(1);

                         
                        int index48_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA48_14 = input.LA(1);

                         
                        int index48_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA48_15 = input.LA(1);

                         
                        int index48_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA48_16 = input.LA(1);

                         
                        int index48_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA48_17 = input.LA(1);

                         
                        int index48_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA48_18 = input.LA(1);

                         
                        int index48_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA48_19 = input.LA(1);

                         
                        int index48_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA48_20 = input.LA(1);

                         
                        int index48_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA48_21 = input.LA(1);

                         
                        int index48_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA48_22 = input.LA(1);

                         
                        int index48_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA48_23 = input.LA(1);

                         
                        int index48_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index48_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 48, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_77s = "\1\1\33\uffff";
    static final String dfa_78s = "\1\4\5\uffff\12\0\14\uffff";
    static final String dfa_79s = "\1\137\5\uffff\12\0\14\uffff";
    static final String dfa_80s = "\1\uffff\1\1\31\uffff\1\2";
    static final String dfa_81s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\14\uffff}>";
    static final String[] dfa_82s = {
            "\1\1\1\uffff\1\11\5\1\41\uffff\1\1\2\uffff\2\1\1\uffff\1\1\1\14\4\uffff\1\1\2\uffff\1\16\1\1\1\17\2\uffff\1\13\1\1\2\uffff\1\1\1\uffff\1\12\22\uffff\1\7\1\uffff\1\15\1\10\1\1\1\6",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[][] dfa_82 = unpackEncodedStringArray(dfa_82s);

    class DFA49 extends DFA {

        public DFA49(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 49;
            this.eot = dfa_27;
            this.eof = dfa_77;
            this.min = dfa_78;
            this.max = dfa_79;
            this.accept = dfa_80;
            this.special = dfa_81;
            this.transition = dfa_82;
        }
        public String getDescription() {
            return "3944:1: rule__Arguments__Alternatives_1_0 : ( ( ( rule__Arguments__ExpressionListAssignment_1_0_0 ) ) | ( ( rule__Arguments__Group_1_0_1__0 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA49_6 = input.LA(1);

                         
                        int index49_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index49_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA49_7 = input.LA(1);

                         
                        int index49_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index49_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA49_8 = input.LA(1);

                         
                        int index49_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index49_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA49_9 = input.LA(1);

                         
                        int index49_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index49_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA49_10 = input.LA(1);

                         
                        int index49_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index49_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA49_11 = input.LA(1);

                         
                        int index49_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index49_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA49_12 = input.LA(1);

                         
                        int index49_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index49_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA49_13 = input.LA(1);

                         
                        int index49_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index49_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA49_14 = input.LA(1);

                         
                        int index49_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index49_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA49_15 = input.LA(1);

                         
                        int index49_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred104_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index49_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 49, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_83s = "\1\1\71\uffff";
    static final String dfa_84s = "\1\4\13\uffff\1\0\2\uffff\1\0\13\uffff\5\0\32\uffff";
    static final String dfa_85s = "\1\137\13\uffff\1\0\2\uffff\1\0\13\uffff\5\0\32\uffff";
    static final String dfa_86s = "\1\uffff\1\1\67\uffff\1\2";
    static final String dfa_87s = "\14\uffff\1\0\2\uffff\1\1\13\uffff\1\2\1\3\1\4\1\5\1\6\32\uffff}>";
    static final String[] dfa_88s = {
            "\10\1\40\uffff\4\1\1\33\1\34\1\1\1\36\1\14\4\1\1\37\3\1\1\35\1\17\2\uffff\12\1\1\uffff\7\1\1\uffff\4\1\1\uffff\7\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final char[] dfa_84 = DFA.unpackEncodedStringToUnsignedChars(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[][] dfa_88 = unpackEncodedStringArray(dfa_88s);

    class DFA51 extends DFA {

        public DFA51(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 51;
            this.eot = dfa_1;
            this.eof = dfa_83;
            this.min = dfa_84;
            this.max = dfa_85;
            this.accept = dfa_86;
            this.special = dfa_87;
            this.transition = dfa_88;
        }
        public String getDescription() {
            return "3992:1: rule__UnaryExpr__Alternatives : ( ( ( rule__UnaryExpr__PrimaryExprAssignment_0 ) ) | ( ( rule__UnaryExpr__Group_1__0 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA51_12 = input.LA(1);

                         
                        int index51_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index51_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA51_15 = input.LA(1);

                         
                        int index51_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index51_15);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA51_27 = input.LA(1);

                         
                        int index51_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index51_27);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA51_28 = input.LA(1);

                         
                        int index51_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index51_28);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA51_29 = input.LA(1);

                         
                        int index51_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index51_29);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA51_30 = input.LA(1);

                         
                        int index51_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index51_30);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA51_31 = input.LA(1);

                         
                        int index51_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred107_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index51_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 51, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_89s = "\67\uffff";
    static final String dfa_90s = "\1\14\66\uffff";
    static final String dfa_91s = "\1\4\13\0\53\uffff";
    static final String dfa_92s = "\1\137\13\0\53\uffff";
    static final String dfa_93s = "\14\uffff\1\2\51\uffff\1\1";
    static final String dfa_94s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\53\uffff}>";
    static final String[] dfa_95s = {
            "\2\14\1\1\5\14\40\uffff\10\14\1\4\7\14\1\10\1\14\1\11\2\uffff\1\12\2\14\1\13\2\14\1\5\3\14\2\uffff\6\14\1\uffff\4\14\1\uffff\1\14\1\2\1\uffff\1\6\1\7\1\uffff\1\3",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final char[] dfa_91 = DFA.unpackEncodedStringToUnsignedChars(dfa_91s);
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[][] dfa_95 = unpackEncodedStringArray(dfa_95s);

    class DFA58 extends DFA {

        public DFA58(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 58;
            this.eot = dfa_89;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_95;
        }
        public String getDescription() {
            return "4568:2: ( rule__ConstSpec__Group_1__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA58_1 = input.LA(1);

                         
                        int index58_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalGo()) ) {s = 54;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index58_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA58_2 = input.LA(1);

                         
                        int index58_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalGo()) ) {s = 54;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index58_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA58_3 = input.LA(1);

                         
                        int index58_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalGo()) ) {s = 54;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index58_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA58_4 = input.LA(1);

                         
                        int index58_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalGo()) ) {s = 54;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index58_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA58_5 = input.LA(1);

                         
                        int index58_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalGo()) ) {s = 54;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index58_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA58_6 = input.LA(1);

                         
                        int index58_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalGo()) ) {s = 54;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index58_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA58_7 = input.LA(1);

                         
                        int index58_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalGo()) ) {s = 54;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index58_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA58_8 = input.LA(1);

                         
                        int index58_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalGo()) ) {s = 54;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index58_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA58_9 = input.LA(1);

                         
                        int index58_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalGo()) ) {s = 54;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index58_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA58_10 = input.LA(1);

                         
                        int index58_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalGo()) ) {s = 54;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index58_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA58_11 = input.LA(1);

                         
                        int index58_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalGo()) ) {s = 54;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index58_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 58, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_96s = "\1\23\66\uffff";
    static final String dfa_97s = "\1\4\64\0\2\uffff";
    static final String dfa_98s = "\1\137\64\0\2\uffff";
    static final String dfa_99s = "\65\uffff\1\1\1\2";
    static final String dfa_100s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\2\uffff}>";
    static final String[] dfa_101s = {
            "\1\5\1\50\1\11\1\1\1\2\1\3\1\4\1\21\40\uffff\1\56\1\20\1\37\1\40\1\32\1\33\1\41\1\35\1\14\1\42\1\43\1\44\1\45\1\36\1\46\1\26\1\16\1\34\1\17\2\uffff\1\13\1\uffff\1\27\1\47\1\22\1\30\1\12\1\31\1\57\1\24\2\uffff\1\52\1\53\1\54\1\55\1\64\1\60\1\uffff\1\61\1\25\1\62\1\63\1\uffff\1\51\1\7\1\uffff\1\15\1\10\1\uffff\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final char[] dfa_97 = DFA.unpackEncodedStringToUnsignedChars(dfa_97s);
    static final char[] dfa_98 = DFA.unpackEncodedStringToUnsignedChars(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[] dfa_100 = DFA.unpackEncodedString(dfa_100s);
    static final short[][] dfa_101 = unpackEncodedStringArray(dfa_101s);

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = dfa_89;
            this.eof = dfa_96;
            this.min = dfa_97;
            this.max = dfa_98;
            this.accept = dfa_99;
            this.special = dfa_100;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "6215:2: ( rule__ReturnStmt__ExpressionListAssignment_1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA66_1 = input.LA(1);

                         
                        int index66_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA66_2 = input.LA(1);

                         
                        int index66_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA66_3 = input.LA(1);

                         
                        int index66_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA66_4 = input.LA(1);

                         
                        int index66_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA66_5 = input.LA(1);

                         
                        int index66_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA66_6 = input.LA(1);

                         
                        int index66_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA66_7 = input.LA(1);

                         
                        int index66_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA66_8 = input.LA(1);

                         
                        int index66_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA66_9 = input.LA(1);

                         
                        int index66_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA66_10 = input.LA(1);

                         
                        int index66_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA66_11 = input.LA(1);

                         
                        int index66_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA66_12 = input.LA(1);

                         
                        int index66_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA66_13 = input.LA(1);

                         
                        int index66_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA66_14 = input.LA(1);

                         
                        int index66_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA66_15 = input.LA(1);

                         
                        int index66_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA66_16 = input.LA(1);

                         
                        int index66_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA66_17 = input.LA(1);

                         
                        int index66_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA66_18 = input.LA(1);

                         
                        int index66_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA66_19 = input.LA(1);

                         
                        int index66_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA66_20 = input.LA(1);

                         
                        int index66_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA66_21 = input.LA(1);

                         
                        int index66_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA66_22 = input.LA(1);

                         
                        int index66_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA66_23 = input.LA(1);

                         
                        int index66_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA66_24 = input.LA(1);

                         
                        int index66_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA66_25 = input.LA(1);

                         
                        int index66_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA66_26 = input.LA(1);

                         
                        int index66_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA66_27 = input.LA(1);

                         
                        int index66_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA66_28 = input.LA(1);

                         
                        int index66_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA66_29 = input.LA(1);

                         
                        int index66_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA66_30 = input.LA(1);

                         
                        int index66_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA66_31 = input.LA(1);

                         
                        int index66_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA66_32 = input.LA(1);

                         
                        int index66_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA66_33 = input.LA(1);

                         
                        int index66_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA66_34 = input.LA(1);

                         
                        int index66_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA66_35 = input.LA(1);

                         
                        int index66_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA66_36 = input.LA(1);

                         
                        int index66_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA66_37 = input.LA(1);

                         
                        int index66_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA66_38 = input.LA(1);

                         
                        int index66_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA66_39 = input.LA(1);

                         
                        int index66_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA66_40 = input.LA(1);

                         
                        int index66_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA66_41 = input.LA(1);

                         
                        int index66_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA66_42 = input.LA(1);

                         
                        int index66_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA66_43 = input.LA(1);

                         
                        int index66_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA66_44 = input.LA(1);

                         
                        int index66_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA66_45 = input.LA(1);

                         
                        int index66_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_45);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA66_46 = input.LA(1);

                         
                        int index66_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_46);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA66_47 = input.LA(1);

                         
                        int index66_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_47);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA66_48 = input.LA(1);

                         
                        int index66_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_48);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA66_49 = input.LA(1);

                         
                        int index66_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_49);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA66_50 = input.LA(1);

                         
                        int index66_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_50);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA66_51 = input.LA(1);

                         
                        int index66_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_51);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA66_52 = input.LA(1);

                         
                        int index66_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalGo()) ) {s = 53;}

                        else if ( (true) ) {s = 54;}

                         
                        input.seek(index66_52);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 66, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_102s = "\44\uffff";
    static final String dfa_103s = "\1\4\27\0\14\uffff";
    static final String dfa_104s = "\1\137\27\0\14\uffff";
    static final String dfa_105s = "\30\uffff\1\1\12\uffff\1\2";
    static final String dfa_106s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\14\uffff}>";
    static final String[] dfa_107s = {
            "\1\5\1\30\1\11\1\1\1\2\1\3\1\4\1\21\41\uffff\1\20\2\30\1\22\1\23\1\30\1\25\1\14\4\30\1\26\1\30\1\uffff\1\16\1\24\1\17\2\uffff\1\13\2\uffff\2\30\1\uffff\1\12\1\uffff\1\27\20\uffff\1\7\1\uffff\1\15\1\10\1\uffff\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final char[] dfa_103 = DFA.unpackEncodedStringToUnsignedChars(dfa_103s);
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[][] dfa_107 = unpackEncodedStringArray(dfa_107s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_102;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_106;
            this.transition = dfa_107;
        }
        public String getDescription() {
            return "6486:2: ( rule__IfStmt__SimpleStmtAssignment_1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA69_1 = input.LA(1);

                         
                        int index69_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA69_2 = input.LA(1);

                         
                        int index69_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA69_3 = input.LA(1);

                         
                        int index69_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA69_4 = input.LA(1);

                         
                        int index69_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA69_5 = input.LA(1);

                         
                        int index69_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA69_6 = input.LA(1);

                         
                        int index69_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA69_7 = input.LA(1);

                         
                        int index69_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA69_8 = input.LA(1);

                         
                        int index69_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA69_9 = input.LA(1);

                         
                        int index69_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA69_10 = input.LA(1);

                         
                        int index69_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA69_11 = input.LA(1);

                         
                        int index69_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA69_12 = input.LA(1);

                         
                        int index69_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA69_13 = input.LA(1);

                         
                        int index69_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA69_14 = input.LA(1);

                         
                        int index69_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA69_15 = input.LA(1);

                         
                        int index69_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA69_16 = input.LA(1);

                         
                        int index69_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA69_17 = input.LA(1);

                         
                        int index69_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA69_18 = input.LA(1);

                         
                        int index69_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA69_19 = input.LA(1);

                         
                        int index69_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA69_20 = input.LA(1);

                         
                        int index69_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA69_21 = input.LA(1);

                         
                        int index69_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA69_22 = input.LA(1);

                         
                        int index69_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA69_23 = input.LA(1);

                         
                        int index69_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index69_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 69, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_102;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_106;
            this.transition = dfa_107;
        }
        public String getDescription() {
            return "6675:2: ( rule__ExprSwitchStmt__SimpleStmtAssignment_1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_1 = input.LA(1);

                         
                        int index71_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA71_2 = input.LA(1);

                         
                        int index71_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA71_3 = input.LA(1);

                         
                        int index71_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA71_4 = input.LA(1);

                         
                        int index71_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA71_5 = input.LA(1);

                         
                        int index71_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA71_6 = input.LA(1);

                         
                        int index71_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA71_7 = input.LA(1);

                         
                        int index71_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA71_8 = input.LA(1);

                         
                        int index71_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA71_9 = input.LA(1);

                         
                        int index71_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA71_10 = input.LA(1);

                         
                        int index71_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA71_11 = input.LA(1);

                         
                        int index71_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA71_12 = input.LA(1);

                         
                        int index71_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA71_13 = input.LA(1);

                         
                        int index71_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA71_14 = input.LA(1);

                         
                        int index71_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA71_15 = input.LA(1);

                         
                        int index71_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA71_16 = input.LA(1);

                         
                        int index71_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA71_17 = input.LA(1);

                         
                        int index71_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA71_18 = input.LA(1);

                         
                        int index71_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA71_19 = input.LA(1);

                         
                        int index71_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA71_20 = input.LA(1);

                         
                        int index71_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA71_21 = input.LA(1);

                         
                        int index71_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA71_22 = input.LA(1);

                         
                        int index71_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA71_23 = input.LA(1);

                         
                        int index71_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_InternalGo()) ) {s = 24;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index71_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_108s = "\43\uffff";
    static final String dfa_109s = "\1\4\20\0\22\uffff";
    static final String dfa_110s = "\1\137\20\0\22\uffff";
    static final String dfa_111s = "\21\uffff\1\1\20\uffff\1\2";
    static final String dfa_112s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\22\uffff}>";
    static final String[] dfa_113s = {
            "\1\5\1\21\1\11\1\1\1\2\1\3\1\4\1\21\41\uffff\1\20\6\21\1\14\6\21\1\uffff\1\16\1\21\1\17\2\uffff\1\13\2\uffff\2\21\1\uffff\1\12\22\uffff\1\7\1\uffff\1\15\1\10\1\uffff\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final char[] dfa_109 = DFA.unpackEncodedStringToUnsignedChars(dfa_109s);
    static final char[] dfa_110 = DFA.unpackEncodedStringToUnsignedChars(dfa_110s);
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final short[][] dfa_113 = unpackEncodedStringArray(dfa_113s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_108;
            this.eof = dfa_108;
            this.min = dfa_109;
            this.max = dfa_110;
            this.accept = dfa_111;
            this.special = dfa_112;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "6972:2: ( rule__TypeSwitchStmt__SimpleStmtAssignment_1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_1 = input.LA(1);

                         
                        int index74_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index74_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA74_2 = input.LA(1);

                         
                        int index74_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index74_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA74_3 = input.LA(1);

                         
                        int index74_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index74_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA74_4 = input.LA(1);

                         
                        int index74_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index74_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA74_5 = input.LA(1);

                         
                        int index74_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index74_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA74_6 = input.LA(1);

                         
                        int index74_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index74_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA74_7 = input.LA(1);

                         
                        int index74_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index74_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA74_8 = input.LA(1);

                         
                        int index74_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index74_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA74_9 = input.LA(1);

                         
                        int index74_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index74_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA74_10 = input.LA(1);

                         
                        int index74_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index74_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA74_11 = input.LA(1);

                         
                        int index74_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index74_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA74_12 = input.LA(1);

                         
                        int index74_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index74_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA74_13 = input.LA(1);

                         
                        int index74_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index74_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA74_14 = input.LA(1);

                         
                        int index74_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index74_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA74_15 = input.LA(1);

                         
                        int index74_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index74_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA74_16 = input.LA(1);

                         
                        int index74_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalGo()) ) {s = 17;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index74_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_114s = "\33\uffff";
    static final String dfa_115s = "\1\31\32\uffff";
    static final String dfa_116s = "\1\4\21\0\2\uffff\5\0\2\uffff";
    static final String dfa_117s = "\1\137\21\0\2\uffff\5\0\2\uffff";
    static final String dfa_118s = "\22\uffff\1\1\6\uffff\1\2\1\uffff";
    static final String dfa_119s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\2\uffff\1\21\1\22\1\23\1\24\1\25\2\uffff}>";
    static final String[] dfa_120s = {
            "\1\5\1\uffff\1\11\1\1\1\2\1\3\1\4\1\21\41\uffff\1\20\2\uffff\1\24\1\25\1\uffff\1\27\1\14\4\uffff\1\30\2\uffff\1\16\1\26\1\17\2\uffff\1\13\2\uffff\2\22\1\uffff\1\12\4\uffff\1\31\15\uffff\1\7\1\uffff\1\15\1\10\1\uffff\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final short[] dfa_115 = DFA.unpackEncodedString(dfa_115s);
    static final char[] dfa_116 = DFA.unpackEncodedStringToUnsignedChars(dfa_116s);
    static final char[] dfa_117 = DFA.unpackEncodedStringToUnsignedChars(dfa_117s);
    static final short[] dfa_118 = DFA.unpackEncodedString(dfa_118s);
    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final short[][] dfa_120 = unpackEncodedStringArray(dfa_120s);

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = dfa_114;
            this.eof = dfa_115;
            this.min = dfa_116;
            this.max = dfa_117;
            this.accept = dfa_118;
            this.special = dfa_119;
            this.transition = dfa_120;
        }
        public String getDescription() {
            return "7809:2: ( rule__RecvStmt__Alternatives_0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA79_1 = input.LA(1);

                         
                        int index79_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA79_2 = input.LA(1);

                         
                        int index79_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA79_3 = input.LA(1);

                         
                        int index79_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA79_4 = input.LA(1);

                         
                        int index79_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA79_5 = input.LA(1);

                         
                        int index79_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA79_6 = input.LA(1);

                         
                        int index79_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA79_7 = input.LA(1);

                         
                        int index79_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA79_8 = input.LA(1);

                         
                        int index79_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA79_9 = input.LA(1);

                         
                        int index79_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA79_10 = input.LA(1);

                         
                        int index79_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA79_11 = input.LA(1);

                         
                        int index79_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA79_12 = input.LA(1);

                         
                        int index79_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA79_13 = input.LA(1);

                         
                        int index79_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA79_14 = input.LA(1);

                         
                        int index79_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA79_15 = input.LA(1);

                         
                        int index79_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA79_16 = input.LA(1);

                         
                        int index79_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA79_17 = input.LA(1);

                         
                        int index79_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA79_20 = input.LA(1);

                         
                        int index79_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_20);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA79_21 = input.LA(1);

                         
                        int index79_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_21);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA79_22 = input.LA(1);

                         
                        int index79_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_22);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA79_23 = input.LA(1);

                         
                        int index79_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_23);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA79_24 = input.LA(1);

                         
                        int index79_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index79_24);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 79, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_121s = "\45\uffff";
    static final String dfa_122s = "\1\4\21\uffff\1\0\22\uffff";
    static final String dfa_123s = "\1\137\21\uffff\1\0\22\uffff";
    static final String dfa_124s = "\1\uffff\1\1\42\uffff\1\2";
    static final String dfa_125s = "\22\uffff\1\0\22\uffff}>";
    static final String[] dfa_126s = {
            "\10\1\41\uffff\16\1\1\uffff\3\1\2\uffff\1\1\2\uffff\2\1\1\uffff\1\1\1\uffff\1\22\16\uffff\1\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_121 = DFA.unpackEncodedString(dfa_121s);
    static final char[] dfa_122 = DFA.unpackEncodedStringToUnsignedChars(dfa_122s);
    static final char[] dfa_123 = DFA.unpackEncodedStringToUnsignedChars(dfa_123s);
    static final short[] dfa_124 = DFA.unpackEncodedString(dfa_124s);
    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final short[][] dfa_126 = unpackEncodedStringArray(dfa_126s);

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_121;
            this.eof = dfa_121;
            this.min = dfa_122;
            this.max = dfa_123;
            this.accept = dfa_124;
            this.special = dfa_125;
            this.transition = dfa_126;
        }
        public String getDescription() {
            return "7998:2: ( rule__ForStmt__Alternatives_1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA80_18 = input.LA(1);

                         
                        int index80_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index80_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 80, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_127s = "\1\27\45\uffff";
    static final String dfa_128s = "\1\4\43\0\2\uffff";
    static final String dfa_129s = "\1\137\43\0\2\uffff";
    static final String dfa_130s = "\44\uffff\1\1\1\2";
    static final String dfa_131s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\2\uffff}>";
    static final String[] dfa_132s = {
            "\1\5\1\43\1\11\1\1\1\2\1\3\1\4\1\21\41\uffff\1\20\1\31\1\32\1\22\1\23\1\34\1\25\1\14\1\35\1\36\1\37\1\40\1\26\1\41\1\uffff\1\16\1\24\1\17\2\uffff\1\13\2\uffff\1\42\1\33\1\uffff\1\12\1\uffff\1\30\20\uffff\1\7\1\uffff\1\15\1\10\1\uffff\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final short[] dfa_127 = DFA.unpackEncodedString(dfa_127s);
    static final char[] dfa_128 = DFA.unpackEncodedStringToUnsignedChars(dfa_128s);
    static final char[] dfa_129 = DFA.unpackEncodedStringToUnsignedChars(dfa_129s);
    static final short[] dfa_130 = DFA.unpackEncodedString(dfa_130s);
    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final short[][] dfa_132 = unpackEncodedStringArray(dfa_132s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_40;
            this.eof = dfa_127;
            this.min = dfa_128;
            this.max = dfa_129;
            this.accept = dfa_130;
            this.special = dfa_131;
            this.transition = dfa_132;
        }
        public String getDescription() {
            return "8052:2: ( rule__ForClause__SimpleStmtAssignment_0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_1 = input.LA(1);

                         
                        int index81_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA81_2 = input.LA(1);

                         
                        int index81_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA81_3 = input.LA(1);

                         
                        int index81_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA81_4 = input.LA(1);

                         
                        int index81_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA81_5 = input.LA(1);

                         
                        int index81_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA81_6 = input.LA(1);

                         
                        int index81_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA81_7 = input.LA(1);

                         
                        int index81_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA81_8 = input.LA(1);

                         
                        int index81_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA81_9 = input.LA(1);

                         
                        int index81_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA81_10 = input.LA(1);

                         
                        int index81_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA81_11 = input.LA(1);

                         
                        int index81_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA81_12 = input.LA(1);

                         
                        int index81_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA81_13 = input.LA(1);

                         
                        int index81_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA81_14 = input.LA(1);

                         
                        int index81_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA81_15 = input.LA(1);

                         
                        int index81_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA81_16 = input.LA(1);

                         
                        int index81_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA81_17 = input.LA(1);

                         
                        int index81_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA81_18 = input.LA(1);

                         
                        int index81_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA81_19 = input.LA(1);

                         
                        int index81_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA81_20 = input.LA(1);

                         
                        int index81_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA81_21 = input.LA(1);

                         
                        int index81_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA81_22 = input.LA(1);

                         
                        int index81_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA81_23 = input.LA(1);

                         
                        int index81_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA81_24 = input.LA(1);

                         
                        int index81_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA81_25 = input.LA(1);

                         
                        int index81_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA81_26 = input.LA(1);

                         
                        int index81_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA81_27 = input.LA(1);

                         
                        int index81_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA81_28 = input.LA(1);

                         
                        int index81_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA81_29 = input.LA(1);

                         
                        int index81_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA81_30 = input.LA(1);

                         
                        int index81_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA81_31 = input.LA(1);

                         
                        int index81_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA81_32 = input.LA(1);

                         
                        int index81_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA81_33 = input.LA(1);

                         
                        int index81_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA81_34 = input.LA(1);

                         
                        int index81_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA81_35 = input.LA(1);

                         
                        int index81_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index81_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA82 extends DFA {

        public DFA82(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 82;
            this.eot = dfa_40;
            this.eof = dfa_127;
            this.min = dfa_128;
            this.max = dfa_129;
            this.accept = dfa_130;
            this.special = dfa_131;
            this.transition = dfa_132;
        }
        public String getDescription() {
            return "8079:2: ( rule__ForClause__ExpressionAssignment_1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA82_1 = input.LA(1);

                         
                        int index82_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA82_2 = input.LA(1);

                         
                        int index82_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA82_3 = input.LA(1);

                         
                        int index82_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA82_4 = input.LA(1);

                         
                        int index82_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA82_5 = input.LA(1);

                         
                        int index82_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA82_6 = input.LA(1);

                         
                        int index82_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA82_7 = input.LA(1);

                         
                        int index82_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA82_8 = input.LA(1);

                         
                        int index82_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA82_9 = input.LA(1);

                         
                        int index82_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA82_10 = input.LA(1);

                         
                        int index82_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA82_11 = input.LA(1);

                         
                        int index82_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA82_12 = input.LA(1);

                         
                        int index82_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA82_13 = input.LA(1);

                         
                        int index82_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA82_14 = input.LA(1);

                         
                        int index82_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA82_15 = input.LA(1);

                         
                        int index82_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA82_16 = input.LA(1);

                         
                        int index82_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA82_17 = input.LA(1);

                         
                        int index82_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA82_18 = input.LA(1);

                         
                        int index82_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA82_19 = input.LA(1);

                         
                        int index82_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA82_20 = input.LA(1);

                         
                        int index82_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA82_21 = input.LA(1);

                         
                        int index82_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA82_22 = input.LA(1);

                         
                        int index82_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA82_23 = input.LA(1);

                         
                        int index82_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA82_24 = input.LA(1);

                         
                        int index82_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA82_25 = input.LA(1);

                         
                        int index82_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA82_26 = input.LA(1);

                         
                        int index82_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA82_27 = input.LA(1);

                         
                        int index82_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA82_28 = input.LA(1);

                         
                        int index82_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA82_29 = input.LA(1);

                         
                        int index82_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA82_30 = input.LA(1);

                         
                        int index82_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA82_31 = input.LA(1);

                         
                        int index82_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA82_32 = input.LA(1);

                         
                        int index82_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA82_33 = input.LA(1);

                         
                        int index82_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA82_34 = input.LA(1);

                         
                        int index82_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA82_35 = input.LA(1);

                         
                        int index82_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalGo()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index82_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 82, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_133s = "\1\27\44\uffff";
    static final String dfa_134s = "\1\4\26\uffff\2\0\14\uffff";
    static final String dfa_135s = "\1\137\26\uffff\2\0\14\uffff";
    static final String dfa_136s = "\27\uffff\1\0\1\1\14\uffff}>";
    static final String[] dfa_137s = {
            "\10\1\41\uffff\16\1\1\uffff\3\1\2\uffff\1\1\2\uffff\2\1\1\uffff\1\1\1\uffff\1\30\20\uffff\1\1\1\uffff\2\1\1\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_133 = DFA.unpackEncodedString(dfa_133s);
    static final char[] dfa_134 = DFA.unpackEncodedStringToUnsignedChars(dfa_134s);
    static final char[] dfa_135 = DFA.unpackEncodedStringToUnsignedChars(dfa_135s);
    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final short[][] dfa_137 = unpackEncodedStringArray(dfa_137s);

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = dfa_121;
            this.eof = dfa_133;
            this.min = dfa_134;
            this.max = dfa_135;
            this.accept = dfa_124;
            this.special = dfa_136;
            this.transition = dfa_137;
        }
        public String getDescription() {
            return "8105:2: ( rule__ForClause__SimpleStmtAssignment_2 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA83_23 = input.LA(1);

                         
                        int index83_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index83_23);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA83_24 = input.LA(1);

                         
                        int index83_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalGo()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index83_24);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_138s = "\1\13\71\uffff";
    static final String dfa_139s = "\1\4\12\0\57\uffff";
    static final String dfa_140s = "\1\137\12\0\57\uffff";
    static final String dfa_141s = "\13\uffff\1\2\55\uffff\1\1";
    static final String dfa_142s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\57\uffff}>";
    static final String[] dfa_143s = {
            "\2\13\1\2\5\13\40\uffff\10\13\1\5\7\13\1\11\1\13\1\12\2\uffff\1\1\5\13\1\6\3\13\1\uffff\7\13\1\uffff\4\13\1\uffff\1\13\1\3\1\13\1\7\1\10\1\13\1\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_138 = DFA.unpackEncodedString(dfa_138s);
    static final char[] dfa_139 = DFA.unpackEncodedStringToUnsignedChars(dfa_139s);
    static final char[] dfa_140 = DFA.unpackEncodedStringToUnsignedChars(dfa_140s);
    static final short[] dfa_141 = DFA.unpackEncodedString(dfa_141s);
    static final short[] dfa_142 = DFA.unpackEncodedString(dfa_142s);
    static final short[][] dfa_143 = unpackEncodedStringArray(dfa_143s);

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = dfa_1;
            this.eof = dfa_138;
            this.min = dfa_139;
            this.max = dfa_140;
            this.accept = dfa_141;
            this.special = dfa_142;
            this.transition = dfa_143;
        }
        public String getDescription() {
            return "9239:2: ( rule__Signature__ResultAssignment_1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA86_1 = input.LA(1);

                         
                        int index86_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index86_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA86_2 = input.LA(1);

                         
                        int index86_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index86_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA86_3 = input.LA(1);

                         
                        int index86_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index86_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA86_4 = input.LA(1);

                         
                        int index86_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index86_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA86_5 = input.LA(1);

                         
                        int index86_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index86_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA86_6 = input.LA(1);

                         
                        int index86_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index86_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA86_7 = input.LA(1);

                         
                        int index86_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index86_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA86_8 = input.LA(1);

                         
                        int index86_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index86_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA86_9 = input.LA(1);

                         
                        int index86_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index86_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA86_10 = input.LA(1);

                         
                        int index86_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalGo()) ) {s = 57;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index86_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 86, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_144s = "\1\31\33\uffff";
    static final String dfa_145s = "\1\4\21\0\1\uffff\6\0\3\uffff";
    static final String dfa_146s = "\1\137\21\0\1\uffff\6\0\3\uffff";
    static final String dfa_147s = "\22\uffff\1\1\6\uffff\1\2\2\uffff";
    static final String dfa_148s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\uffff\1\21\1\22\1\23\1\24\1\25\1\26\3\uffff}>";
    static final String[] dfa_149s = {
            "\1\6\1\uffff\1\1\1\2\1\3\1\4\1\5\1\21\41\uffff\1\20\2\uffff\1\23\1\24\1\uffff\1\26\1\14\4\uffff\1\27\2\uffff\1\16\1\25\1\17\2\uffff\1\13\3\uffff\1\31\1\uffff\1\12\1\uffff\1\30\1\31\1\uffff\1\22\15\uffff\1\10\1\uffff\1\15\1\11\1\uffff\1\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final short[] dfa_144 = DFA.unpackEncodedString(dfa_144s);
    static final char[] dfa_145 = DFA.unpackEncodedStringToUnsignedChars(dfa_145s);
    static final char[] dfa_146 = DFA.unpackEncodedStringToUnsignedChars(dfa_146s);
    static final short[] dfa_147 = DFA.unpackEncodedString(dfa_147s);
    static final short[] dfa_148 = DFA.unpackEncodedString(dfa_148s);
    static final short[][] dfa_149 = unpackEncodedStringArray(dfa_149s);

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = dfa_27;
            this.eof = dfa_144;
            this.min = dfa_145;
            this.max = dfa_146;
            this.accept = dfa_147;
            this.special = dfa_148;
            this.transition = dfa_149;
        }
        public String getDescription() {
            return "10158:2: ( rule__KeyedElement__Group_0__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_1 = input.LA(1);

                         
                        int index95_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA95_2 = input.LA(1);

                         
                        int index95_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA95_3 = input.LA(1);

                         
                        int index95_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA95_4 = input.LA(1);

                         
                        int index95_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA95_5 = input.LA(1);

                         
                        int index95_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA95_6 = input.LA(1);

                         
                        int index95_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA95_7 = input.LA(1);

                         
                        int index95_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA95_8 = input.LA(1);

                         
                        int index95_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA95_9 = input.LA(1);

                         
                        int index95_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA95_10 = input.LA(1);

                         
                        int index95_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA95_11 = input.LA(1);

                         
                        int index95_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA95_12 = input.LA(1);

                         
                        int index95_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA95_13 = input.LA(1);

                         
                        int index95_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA95_14 = input.LA(1);

                         
                        int index95_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA95_15 = input.LA(1);

                         
                        int index95_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA95_16 = input.LA(1);

                         
                        int index95_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA95_17 = input.LA(1);

                         
                        int index95_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA95_19 = input.LA(1);

                         
                        int index95_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA95_20 = input.LA(1);

                         
                        int index95_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA95_21 = input.LA(1);

                         
                        int index95_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA95_22 = input.LA(1);

                         
                        int index95_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA95_23 = input.LA(1);

                         
                        int index95_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA95_24 = input.LA(1);

                         
                        int index95_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalGo()) ) {s = 18;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index95_24);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x721B3000000007F2L,0x00000000B6D7E3CAL});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000000L,0x00000000000001C9L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000002L,0x00000000000001C8L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000200000000050L,0x0000000000000002L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000200000000050L,0x0000000000000004L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000200000000052L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000200000000050L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000040L,0x0000000000000002L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000040L,0x0000000000000004L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x50100000000007D0L,0x00000000B4000092L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x721B2000000007D0L,0x00000000B4000082L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x50100000000007D0L,0x00000000B4000082L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x721B3000000007F0L,0x00000000B6D7E3CAL});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000C00000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x07FF000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x721B2000000007F0L,0x00000000B4000082L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040200L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x721B2000000007F0L,0x00000000B4000282L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0800000000000000L,0x0000000000200400L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0800000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x721B2000000007F0L,0x00000000B5000282L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x721B2000000007F0L,0x00000000B5000082L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000040L,0x00000000A4000400L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000042L,0x00000000A4000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x50100000000007D0L,0x00000000F4000086L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x50100000000007D0L,0x00000000F4000082L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x721B2000000007D0L,0x00000000B4000682L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x721B2000000007D0L,0x00000000B4000282L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0010000000000040L,0x00000000A4000400L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0010000000000042L,0x00000000A4000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0010000000000040L,0x00000000A4000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000200000000000L,0x0000000004000002L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x721B2000000007D0L,0x00000000B4001082L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x721B2000000007D0L,0x00000000B4000086L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000020L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000040L,0x00000000A4000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000040L,0x00000000A4000002L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000024L});

}