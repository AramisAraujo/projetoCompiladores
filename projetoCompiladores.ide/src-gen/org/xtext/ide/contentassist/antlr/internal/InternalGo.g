/*
 * generated by Xtext 2.14.0
 */
grammar InternalGo;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.GoGrammarAccess;

}
@parser::members {
	private GoGrammarAccess grammarAccess;

	public void setGrammarAccess(GoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGreetingsAssignment()); }
		(rule__Model__GreetingsAssignment)
		{ after(grammarAccess.getModelAccess().getGreetingsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}


// Rule OPERATORS
ruleOPERATORS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOPERATORSAccess().getAlternatives()); }
		(rule__OPERATORS__Alternatives)
		{ after(grammarAccess.getOPERATORSAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInt_lit
entryRuleInt_lit
:
{ before(grammarAccess.getInt_litRule()); }
	 ruleInt_lit
{ after(grammarAccess.getInt_litRule()); } 
	 EOF 
;

// Rule Int_lit
ruleInt_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInt_litAccess().getAlternatives()); }
		(rule__Int_lit__Alternatives)
		{ after(grammarAccess.getInt_litAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloat_lit
entryRuleFloat_lit
:
{ before(grammarAccess.getFloat_litRule()); }
	 ruleFloat_lit
{ after(grammarAccess.getFloat_litRule()); } 
	 EOF 
;

// Rule Float_lit
ruleFloat_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloat_litAccess().getGroup()); }
		(rule__Float_lit__Group__0)
		{ after(grammarAccess.getFloat_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExponent
entryRuleExponent
:
{ before(grammarAccess.getExponentRule()); }
	 ruleExponent
{ after(grammarAccess.getExponentRule()); } 
	 EOF 
;

// Rule Exponent
ruleExponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExponentAccess().getGroup()); }
		(rule__Exponent__Group__0)
		{ after(grammarAccess.getExponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImaginary_lit
entryRuleImaginary_lit
:
{ before(grammarAccess.getImaginary_litRule()); }
	 ruleImaginary_lit
{ after(grammarAccess.getImaginary_litRule()); } 
	 EOF 
;

// Rule Imaginary_lit
ruleImaginary_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImaginary_litAccess().getGroup()); }
		(rule__Imaginary_lit__Group__0)
		{ after(grammarAccess.getImaginary_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRune_lit
entryRuleRune_lit
:
{ before(grammarAccess.getRune_litRule()); }
	 ruleRune_lit
{ after(grammarAccess.getRune_litRule()); } 
	 EOF 
;

// Rule Rune_lit
ruleRune_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRune_litAccess().getGroup()); }
		(rule__Rune_lit__Group__0)
		{ after(grammarAccess.getRune_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleByte_value
entryRuleByte_value
:
{ before(grammarAccess.getByte_valueRule()); }
	 ruleByte_value
{ after(grammarAccess.getByte_valueRule()); } 
	 EOF 
;

// Rule Byte_value
ruleByte_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getByte_valueAccess().getAlternatives()); }
		(rule__Byte_value__Alternatives)
		{ after(grammarAccess.getByte_valueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleString_lit
entryRuleString_lit
:
{ before(grammarAccess.getString_litRule()); }
	 ruleString_lit
{ after(grammarAccess.getString_litRule()); } 
	 EOF 
;

// Rule String_lit
ruleString_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getString_litAccess().getAlternatives()); }
		(rule__String_lit__Alternatives)
		{ after(grammarAccess.getString_litAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterpreted_string_lit
entryRuleInterpreted_string_lit
:
{ before(grammarAccess.getInterpreted_string_litRule()); }
	 ruleInterpreted_string_lit
{ after(grammarAccess.getInterpreted_string_litRule()); } 
	 EOF 
;

// Rule Interpreted_string_lit
ruleInterpreted_string_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterpreted_string_litAccess().getGroup()); }
		(rule__Interpreted_string_lit__Group__0)
		{ after(grammarAccess.getInterpreted_string_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiterals
entryRuleLiterals
:
{ before(grammarAccess.getLiteralsRule()); }
	 ruleLiterals
{ after(grammarAccess.getLiteralsRule()); } 
	 EOF 
;

// Rule Literals
ruleLiterals 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralsAccess().getAlternatives()); }
		(rule__Literals__Alternatives)
		{ after(grammarAccess.getLiteralsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getType_nameParserRuleCall()); }
		ruleType_name
		{ after(grammarAccess.getTypeAccess().getType_nameParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType_name
entryRuleType_name
:
{ before(grammarAccess.getType_nameRule()); }
	 ruleType_name
{ after(grammarAccess.getType_nameRule()); } 
	 EOF 
;

// Rule Type_name
ruleType_name 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getType_nameAccess().getAlternatives()); }
		(rule__Type_name__Alternatives)
		{ after(grammarAccess.getType_nameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArray_type
entryRuleArray_type
:
{ before(grammarAccess.getArray_typeRule()); }
	 ruleArray_type
{ after(grammarAccess.getArray_typeRule()); } 
	 EOF 
;

// Rule Array_type
ruleArray_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArray_typeAccess().getGroup()); }
		(rule__Array_type__Group__0)
		{ after(grammarAccess.getArray_typeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStruct_type
entryRuleStruct_type
:
{ before(grammarAccess.getStruct_typeRule()); }
	 ruleStruct_type
{ after(grammarAccess.getStruct_typeRule()); } 
	 EOF 
;

// Rule Struct_type
ruleStruct_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStruct_typeAccess().getGroup()); }
		(rule__Struct_type__Group__0)
		{ after(grammarAccess.getStruct_typeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField_decl
entryRuleField_decl
:
{ before(grammarAccess.getField_declRule()); }
	 ruleField_decl
{ after(grammarAccess.getField_declRule()); } 
	 EOF 
;

// Rule Field_decl
ruleField_decl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getField_declAccess().getGroup()); }
		(rule__Field_decl__Group__0)
		{ after(grammarAccess.getField_declAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmbedded_field
entryRuleEmbedded_field
:
{ before(grammarAccess.getEmbedded_fieldRule()); }
	 ruleEmbedded_field
{ after(grammarAccess.getEmbedded_fieldRule()); } 
	 EOF 
;

// Rule Embedded_field
ruleEmbedded_field 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmbedded_fieldAccess().getGroup()); }
		(rule__Embedded_field__Group__0)
		{ after(grammarAccess.getEmbedded_fieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePointer_type
entryRulePointer_type
:
{ before(grammarAccess.getPointer_typeRule()); }
	 rulePointer_type
{ after(grammarAccess.getPointer_typeRule()); } 
	 EOF 
;

// Rule Pointer_type
rulePointer_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointer_typeAccess().getGroup()); }
		(rule__Pointer_type__Group__0)
		{ after(grammarAccess.getPointer_typeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter_list
entryRuleParameter_list
:
{ before(grammarAccess.getParameter_listRule()); }
	 ruleParameter_list
{ after(grammarAccess.getParameter_listRule()); } 
	 EOF 
;

// Rule Parameter_list
ruleParameter_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameter_listAccess().getGroup()); }
		(rule__Parameter_list__Group__0)
		{ after(grammarAccess.getParameter_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter_decl
entryRuleParameter_decl
:
{ before(grammarAccess.getParameter_declRule()); }
	 ruleParameter_decl
{ after(grammarAccess.getParameter_declRule()); } 
	 EOF 
;

// Rule Parameter_decl
ruleParameter_decl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameter_declAccess().getGroup()); }
		(rule__Parameter_decl__Group__0)
		{ after(grammarAccess.getParameter_declAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdentifier_list
entryRuleIdentifier_list
:
{ before(grammarAccess.getIdentifier_listRule()); }
	 ruleIdentifier_list
{ after(grammarAccess.getIdentifier_listRule()); } 
	 EOF 
;

// Rule Identifier_list
ruleIdentifier_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifier_listAccess().getGroup()); }
		(rule__Identifier_list__Group__0)
		{ after(grammarAccess.getIdentifier_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualified_ident
entryRuleQualified_ident
:
{ before(grammarAccess.getQualified_identRule()); }
	 ruleQualified_ident
{ after(grammarAccess.getQualified_identRule()); } 
	 EOF 
;

// Rule Qualified_ident
ruleQualified_ident 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualified_identAccess().getGroup()); }
		(rule__Qualified_ident__Group__0)
		{ after(grammarAccess.getQualified_identAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport_spec
entryRuleImport_spec
:
{ before(grammarAccess.getImport_specRule()); }
	 ruleImport_spec
{ after(grammarAccess.getImport_specRule()); } 
	 EOF 
;

// Rule Import_spec
ruleImport_spec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImport_specAccess().getGroup()); }
		(rule__Import_spec__Group__0)
		{ after(grammarAccess.getImport_specAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport_path
entryRuleImport_path
:
{ before(grammarAccess.getImport_pathRule()); }
	 ruleImport_path
{ after(grammarAccess.getImport_pathRule()); } 
	 EOF 
;

// Rule Import_path
ruleImport_path 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImport_pathAccess().getString_litParserRuleCall()); }
		ruleString_lit
		{ after(grammarAccess.getImport_pathAccess().getString_litParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OPERATORS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOPERATORSAccess().getBINARY_OPTerminalRuleCall_0()); }
		RULE_BINARY_OP
		{ after(grammarAccess.getOPERATORSAccess().getBINARY_OPTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOPERATORSAccess().getLeftParenthesisKeyword_1()); }
		'('
		{ after(grammarAccess.getOPERATORSAccess().getLeftParenthesisKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOPERATORSAccess().getRightParenthesisKeyword_2()); }
		')'
		{ after(grammarAccess.getOPERATORSAccess().getRightParenthesisKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOPERATORSAccess().getLeftSquareBracketKeyword_3()); }
		'['
		{ after(grammarAccess.getOPERATORSAccess().getLeftSquareBracketKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getOPERATORSAccess().getRightSquareBracketKeyword_4()); }
		']'
		{ after(grammarAccess.getOPERATORSAccess().getRightSquareBracketKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getOPERATORSAccess().getLeftCurlyBracketKeyword_5()); }
		'{'
		{ after(grammarAccess.getOPERATORSAccess().getLeftCurlyBracketKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getOPERATORSAccess().getRightCurlyBracketKeyword_6()); }
		'}'
		{ after(grammarAccess.getOPERATORSAccess().getRightCurlyBracketKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getOPERATORSAccess().getPlusSignPlusSignKeyword_7()); }
		'++'
		{ after(grammarAccess.getOPERATORSAccess().getPlusSignPlusSignKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getOPERATORSAccess().getEqualsSignKeyword_8()); }
		'='
		{ after(grammarAccess.getOPERATORSAccess().getEqualsSignKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getOPERATORSAccess().getColonEqualsSignKeyword_9()); }
		':='
		{ after(grammarAccess.getOPERATORSAccess().getColonEqualsSignKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getOPERATORSAccess().getCommaKeyword_10()); }
		','
		{ after(grammarAccess.getOPERATORSAccess().getCommaKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getOPERATORSAccess().getSEMICOLONTerminalRuleCall_11()); }
		RULE_SEMICOLON
		{ after(grammarAccess.getOPERATORSAccess().getSEMICOLONTerminalRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getOPERATORSAccess().getHyphenMinusHyphenMinusKeyword_12()); }
		'--'
		{ after(grammarAccess.getOPERATORSAccess().getHyphenMinusHyphenMinusKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getOPERATORSAccess().getFullStopFullStopFullStopKeyword_13()); }
		'...'
		{ after(grammarAccess.getOPERATORSAccess().getFullStopFullStopFullStopKeyword_13()); }
	)
	|
	(
		{ before(grammarAccess.getOPERATORSAccess().getFullStopKeyword_14()); }
		'.'
		{ after(grammarAccess.getOPERATORSAccess().getFullStopKeyword_14()); }
	)
	|
	(
		{ before(grammarAccess.getOPERATORSAccess().getColonKeyword_15()); }
		':'
		{ after(grammarAccess.getOPERATORSAccess().getColonKeyword_15()); }
	)
	|
	(
		{ before(grammarAccess.getOPERATORSAccess().getASSIGN_OPTerminalRuleCall_16()); }
		RULE_ASSIGN_OP
		{ after(grammarAccess.getOPERATORSAccess().getASSIGN_OPTerminalRuleCall_16()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Int_lit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInt_litAccess().getINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getInt_litAccess().getINTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInt_litAccess().getOCTAL_LITTerminalRuleCall_1()); }
		RULE_OCTAL_LIT
		{ after(grammarAccess.getInt_litAccess().getOCTAL_LITTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getInt_litAccess().getHEX_LITTerminalRuleCall_2()); }
		RULE_HEX_LIT
		{ after(grammarAccess.getInt_litAccess().getHEX_LITTerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloat_litAccess().getGroup_1_0()); }
		(rule__Float_lit__Group_1_0__0)
		{ after(grammarAccess.getFloat_litAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_1_1()); }
		ruleExponent
		{ after(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExponentAccess().getEKeyword_0_0()); }
		'E'
		{ after(grammarAccess.getExponentAccess().getEKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExponentAccess().getEKeyword_0_1()); }
		'e'
		{ after(grammarAccess.getExponentAccess().getEKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExponentAccess().getPlusSignKeyword_1_0()); }
		'+'
		{ after(grammarAccess.getExponentAccess().getPlusSignKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExponentAccess().getHyphenMinusKeyword_1_1()); }
		'-'
		{ after(grammarAccess.getExponentAccess().getHyphenMinusKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imaginary_lit__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImaginary_litAccess().getINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getImaginary_litAccess().getINTTerminalRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getImaginary_litAccess().getFloat_litParserRuleCall_0_1()); }
		ruleFloat_lit
		{ after(grammarAccess.getImaginary_litAccess().getFloat_litParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRune_litAccess().getUNICODE_VALUETerminalRuleCall_1_0()); }
		RULE_UNICODE_VALUE
		{ after(grammarAccess.getRune_litAccess().getUNICODE_VALUETerminalRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRune_litAccess().getByte_valueParserRuleCall_1_1()); }
		ruleByte_value
		{ after(grammarAccess.getRune_litAccess().getByte_valueParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Byte_value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getByte_valueAccess().getOCTAL_BYTE_VALUETerminalRuleCall_0()); }
		RULE_OCTAL_BYTE_VALUE
		{ after(grammarAccess.getByte_valueAccess().getOCTAL_BYTE_VALUETerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getByte_valueAccess().getHEX_BYTE_VALUETerminalRuleCall_1()); }
		RULE_HEX_BYTE_VALUE
		{ after(grammarAccess.getByte_valueAccess().getHEX_BYTE_VALUETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__String_lit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getString_litAccess().getRAW_STRING_LITTerminalRuleCall_0()); }
		RULE_RAW_STRING_LIT
		{ after(grammarAccess.getString_litAccess().getRAW_STRING_LITTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getString_litAccess().getInterpreted_string_litParserRuleCall_1()); }
		ruleInterpreted_string_lit
		{ after(grammarAccess.getString_litAccess().getInterpreted_string_litParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterpreted_string_litAccess().getUNICODE_VALUETerminalRuleCall_1_0()); }
		RULE_UNICODE_VALUE
		{ after(grammarAccess.getInterpreted_string_litAccess().getUNICODE_VALUETerminalRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getInterpreted_string_litAccess().getByte_valueParserRuleCall_1_1()); }
		ruleByte_value
		{ after(grammarAccess.getInterpreted_string_litAccess().getByte_valueParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literals__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralsAccess().getInt_litParserRuleCall_0()); }
		ruleInt_lit
		{ after(grammarAccess.getLiteralsAccess().getInt_litParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralsAccess().getFloat_litParserRuleCall_1()); }
		ruleFloat_lit
		{ after(grammarAccess.getLiteralsAccess().getFloat_litParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralsAccess().getImaginary_litParserRuleCall_2()); }
		ruleImaginary_lit
		{ after(grammarAccess.getLiteralsAccess().getImaginary_litParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralsAccess().getRune_litParserRuleCall_3()); }
		ruleRune_lit
		{ after(grammarAccess.getLiteralsAccess().getRune_litParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralsAccess().getString_litParserRuleCall_4()); }
		ruleString_lit
		{ after(grammarAccess.getLiteralsAccess().getString_litParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_name__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_nameAccess().getIDENTIFIERTerminalRuleCall_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getType_nameAccess().getIDENTIFIERTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getType_nameAccess().getQualified_identParserRuleCall_1()); }
		ruleQualified_ident
		{ after(grammarAccess.getType_nameAccess().getQualified_identParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_decl__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getField_declAccess().getGroup_0_0()); }
		(rule__Field_decl__Group_0_0__0)
		{ after(grammarAccess.getField_declAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getField_declAccess().getEmbedded_fieldParserRuleCall_0_1()); }
		ruleEmbedded_field
		{ after(grammarAccess.getField_declAccess().getEmbedded_fieldParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_spec__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImport_specAccess().getFullStopKeyword_0_0()); }
		'.'
		{ after(grammarAccess.getImport_specAccess().getFullStopKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getImport_specAccess().getIDENTIFIERTerminalRuleCall_0_1()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getImport_specAccess().getIDENTIFIERTerminalRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group__0__Impl
	rule__Float_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getFloat_litAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group__1__Impl
	rule__Float_lit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getAlternatives_1()); }
	(rule__Float_lit__Alternatives_1)
	{ after(grammarAccess.getFloat_litAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group__2__Impl
	rule__Float_lit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getFloat_litAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group__3__Impl
	rule__Float_lit__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
	{ after(grammarAccess.getFloat_litAccess().getINTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_4()); }
	(ruleExponent)?
	{ after(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Float_lit__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_1_0__0__Impl
	rule__Float_lit__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getFullStopKeyword_1_0_0()); }
	'.'
	{ after(grammarAccess.getFloat_litAccess().getFullStopKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_1_0__1__Impl
	rule__Float_lit__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getINTTerminalRuleCall_1_0_1()); }
	(RULE_INT)?
	{ after(grammarAccess.getFloat_litAccess().getINTTerminalRuleCall_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_1_0_2()); }
	(ruleExponent)?
	{ after(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exponent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponent__Group__0__Impl
	rule__Exponent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentAccess().getAlternatives_0()); }
	(rule__Exponent__Alternatives_0)
	{ after(grammarAccess.getExponentAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponent__Group__1__Impl
	rule__Exponent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentAccess().getAlternatives_1()); }
	(rule__Exponent__Alternatives_1)?
	{ after(grammarAccess.getExponentAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getExponentAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Imaginary_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imaginary_lit__Group__0__Impl
	rule__Imaginary_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Imaginary_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImaginary_litAccess().getAlternatives_0()); }
	(rule__Imaginary_lit__Alternatives_0)
	{ after(grammarAccess.getImaginary_litAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imaginary_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imaginary_lit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Imaginary_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImaginary_litAccess().getIKeyword_1()); }
	'i'
	{ after(grammarAccess.getImaginary_litAccess().getIKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rune_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rune_lit__Group__0__Impl
	rule__Rune_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRune_litAccess().getApostropheKeyword_0()); }
	'\''
	{ after(grammarAccess.getRune_litAccess().getApostropheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rune_lit__Group__1__Impl
	rule__Rune_lit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRune_litAccess().getAlternatives_1()); }
	(rule__Rune_lit__Alternatives_1)
	{ after(grammarAccess.getRune_litAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rune_lit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRune_litAccess().getApostropheKeyword_2()); }
	'\''
	{ after(grammarAccess.getRune_litAccess().getApostropheKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interpreted_string_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interpreted_string_lit__Group__0__Impl
	rule__Interpreted_string_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_0()); }
	'"'
	{ after(grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interpreted_string_lit__Group__1__Impl
	rule__Interpreted_string_lit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterpreted_string_litAccess().getAlternatives_1()); }
	(rule__Interpreted_string_lit__Alternatives_1)*
	{ after(grammarAccess.getInterpreted_string_litAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interpreted_string_lit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_2()); }
	'"'
	{ after(grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Array_type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array_type__Group__0__Impl
	rule__Array_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArray_typeAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getArray_typeAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array_type__Group__1__Impl
	rule__Array_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArray_typeAccess().getParameter_listParserRuleCall_1()); }
	(ruleParameter_list)
	{ after(grammarAccess.getArray_typeAccess().getParameter_listParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array_type__Group__2__Impl
	rule__Array_type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArray_typeAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getArray_typeAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array_type__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArray_typeAccess().getTypeParserRuleCall_3()); }
	ruleType
	{ after(grammarAccess.getArray_typeAccess().getTypeParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_type__Group__0__Impl
	rule__Struct_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_typeAccess().getStructKeyword_0()); }
	'struct'
	{ after(grammarAccess.getStruct_typeAccess().getStructKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_type__Group__1__Impl
	rule__Struct_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_typeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getStruct_typeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_type__Group__2__Impl
	rule__Struct_type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_typeAccess().getGroup_2()); }
	(rule__Struct_type__Group_2__0)*
	{ after(grammarAccess.getStruct_typeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_type__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_type__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_type__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_typeAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getStruct_typeAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Struct_type__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_type__Group_2__0__Impl
	rule__Struct_type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_type__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_typeAccess().getField_declParserRuleCall_2_0()); }
	ruleField_decl
	{ after(grammarAccess.getStruct_typeAccess().getField_declParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_type__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Struct_type__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct_type__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStruct_typeAccess().getSEMICOLONTerminalRuleCall_2_1()); }
	RULE_SEMICOLON
	{ after(grammarAccess.getStruct_typeAccess().getSEMICOLONTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field_decl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field_decl__Group__0__Impl
	rule__Field_decl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_decl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getField_declAccess().getAlternatives_0()); }
	(rule__Field_decl__Alternatives_0)
	{ after(grammarAccess.getField_declAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_decl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field_decl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_decl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getField_declAccess().getString_litParserRuleCall_1()); }
	(ruleString_lit)?
	{ after(grammarAccess.getField_declAccess().getString_litParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field_decl__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field_decl__Group_0_0__0__Impl
	rule__Field_decl__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_decl__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getField_declAccess().getIdentifier_listParserRuleCall_0_0_0()); }
	ruleIdentifier_list
	{ after(grammarAccess.getField_declAccess().getIdentifier_listParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_decl__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field_decl__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_decl__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getField_declAccess().getTypeParserRuleCall_0_0_1()); }
	ruleType
	{ after(grammarAccess.getField_declAccess().getTypeParserRuleCall_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Embedded_field__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Embedded_field__Group__0__Impl
	rule__Embedded_field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Embedded_field__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEmbedded_fieldAccess().getAsteriskKeyword_0()); }
		('*')
		{ after(grammarAccess.getEmbedded_fieldAccess().getAsteriskKeyword_0()); }
	)
	(
		{ before(grammarAccess.getEmbedded_fieldAccess().getAsteriskKeyword_0()); }
		('*')*
		{ after(grammarAccess.getEmbedded_fieldAccess().getAsteriskKeyword_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Embedded_field__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Embedded_field__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Embedded_field__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmbedded_fieldAccess().getType_nameParserRuleCall_1()); }
	ruleType_name
	{ after(grammarAccess.getEmbedded_fieldAccess().getType_nameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pointer_type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer_type__Group__0__Impl
	rule__Pointer_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer_type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointer_typeAccess().getAsteriskKeyword_0()); }
	'*'
	{ after(grammarAccess.getPointer_typeAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer_type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointer_type__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer_type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointer_typeAccess().getTypeParserRuleCall_1()); }
	ruleType
	{ after(grammarAccess.getPointer_typeAccess().getTypeParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_list__Group__0__Impl
	rule__Parameter_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listAccess().getParameter_declParserRuleCall_0()); }
	(ruleParameter_decl)
	{ after(grammarAccess.getParameter_listAccess().getParameter_declParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listAccess().getGroup_1()); }
	(rule__Parameter_list__Group_1__0)*
	{ after(grammarAccess.getParameter_listAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_list__Group_1__0__Impl
	rule__Parameter_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getParameter_listAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_listAccess().getParameter_declParserRuleCall_1_1()); }
	(ruleParameter_decl)
	{ after(grammarAccess.getParameter_listAccess().getParameter_declParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_decl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_decl__Group__0__Impl
	rule__Parameter_decl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_decl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_declAccess().getGroup_0()); }
	(rule__Parameter_decl__Group_0__0)?
	{ after(grammarAccess.getParameter_declAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_decl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_decl__Group__1__Impl
	rule__Parameter_decl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_decl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_declAccess().getFullStopFullStopFullStopKeyword_1()); }
	('...')?
	{ after(grammarAccess.getParameter_declAccess().getFullStopFullStopFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_decl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_decl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_decl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_declAccess().getTypeParserRuleCall_2()); }
	ruleType
	{ after(grammarAccess.getParameter_declAccess().getTypeParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_decl__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter_decl__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_decl__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameter_declAccess().getIdentifier_listParserRuleCall_0_0()); }
	ruleIdentifier_list
	{ after(grammarAccess.getParameter_declAccess().getIdentifier_listParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group__0__Impl
	rule__Identifier_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getIdentifier_listAccess().getIDENTIFIERTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getGroup_1()); }
	(rule__Identifier_list__Group_1__0)*
	{ after(grammarAccess.getIdentifier_listAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group_1__0__Impl
	rule__Identifier_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getIdentifier_listAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getIDENTIFIERTerminalRuleCall_1_1()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getIdentifier_listAccess().getIDENTIFIERTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Qualified_ident__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Qualified_ident__Group__0__Impl
	rule__Qualified_ident__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualified_ident__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualified_identAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getQualified_identAccess().getIDENTIFIERTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualified_ident__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Qualified_ident__Group__1__Impl
	rule__Qualified_ident__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualified_ident__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualified_identAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getQualified_identAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualified_ident__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Qualified_ident__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualified_ident__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualified_identAccess().getIDENTIFIERTerminalRuleCall_2()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getQualified_identAccess().getIDENTIFIERTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import_spec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import_spec__Group__0__Impl
	rule__Import_spec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_spec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImport_specAccess().getAlternatives_0()); }
	(rule__Import_spec__Alternatives_0)?
	{ after(grammarAccess.getImport_specAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_spec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import_spec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_spec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImport_specAccess().getImport_pathParserRuleCall_1()); }
	ruleImport_path
	{ after(grammarAccess.getImport_specAccess().getImport_pathParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__GreetingsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getGreetingsOiKeyword_0()); }
		(
			{ before(grammarAccess.getModelAccess().getGreetingsOiKeyword_0()); }
			'oi'
			{ after(grammarAccess.getModelAccess().getGreetingsOiKeyword_0()); }
		)
		{ after(grammarAccess.getModelAccess().getGreetingsOiKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_SEMICOLON : ';';

RULE_BINARY_OP : ('||'|'&&'|RULE_REL_OP|RULE_ADD_OP|RULE_MUL_OP);

fragment RULE_REL_OP : ('=='|'!='|'<'|'<='|'>'|'>=');

fragment RULE_ADD_OP : ('+'|'-'|'|'|'^');

fragment RULE_MUL_OP : ('*'|'/'|'%'|'<<'|'>>'|'&'|'&^');

RULE_UNARY_OP : ('+'|'-'|'!'|'^'|'*'|'&'|'<-');

RULE_ASSIGN_OP : (RULE_ADD_OP|RULE_MUL_OP)? '=';

fragment RULE_NEWLINE : '\n';

fragment RULE_LETTER : (RULE_UNICODE_LETTER|'_');

fragment RULE_HEX_DIGIT : (RULE_UNICODE_DIGIT|'A'..'F'|'a'..'f');

RULE_KEYWORDS : ('break'|'default'|'func'|'interface'|'select'|'case'|'defer'|'go'|'map'|'struct'|'chan'|'else'|'goto'|'package'|'switch'|'const'|'fallthrough'|'if'|'range'|'type'|'continue'|'for'|'import'|'return'|'var');

RULE_IDENTIFIER : RULE_LETTER (RULE_LETTER|RULE_UNICODE_DIGIT)*;

fragment RULE_UNICODE_CHAR : ('A'..'Z'|'a'..'z');

fragment RULE_UNICODE_LETTER : RULE_UNICODE_CHAR;

fragment RULE_UNICODE_DIGIT : ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9');

RULE_OCTAL_LIT : '0' ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7')*;

RULE_HEX_LIT : '0' ('X'|'x') RULE_HEX_DIGIT RULE_HEX_DIGIT*;

RULE_UNICODE_VALUE : (RULE_UNICODE_CHAR|RULE_LITTLE_U_VALUE|RULE_BIG_U_VALUE|RULE_ESCAPED_CHAR);

RULE_OCTAL_BYTE_VALUE : '\\' ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7') ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7') ('0'|'1'|'2'|'3'|'4'|'5'|'6'|'7');

RULE_HEX_BYTE_VALUE : '\\' 'x' RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_LITTLE_U_VALUE : '\\' 'u' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_BIG_U_VALUE : '\\' 'U' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_ESCAPED_CHAR : '\\' ('a'|'b'|'f'|'n'|'r'|'t'|'v'|'\\'|'\''|'"');

RULE_RAW_STRING_LIT : '`' (RULE_UNICODE_CHAR|RULE_NEWLINE)* '`';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
