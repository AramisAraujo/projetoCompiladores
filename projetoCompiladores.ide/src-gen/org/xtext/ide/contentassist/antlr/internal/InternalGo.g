/*
 * generated by Xtext 2.14.0
 */
grammar InternalGo;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.GoGrammarAccess;

}
@parser::members {
	private GoGrammarAccess grammarAccess;

	public void setGrammarAccess(GoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGreetingsAssignment()); }
		(rule__Model__GreetingsAssignment)
		{ after(grammarAccess.getModelAccess().getGreetingsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesourceFile
entryRulesourceFile
:
{ before(grammarAccess.getSourceFileRule()); }
	 rulesourceFile
{ after(grammarAccess.getSourceFileRule()); } 
	 EOF 
;

// Rule sourceFile
rulesourceFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceFileAccess().getGroup()); }
		(rule__SourceFile__Group__0)
		{ after(grammarAccess.getSourceFileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepackageClause
entryRulepackageClause
:
{ before(grammarAccess.getPackageClauseRule()); }
	 rulepackageClause
{ after(grammarAccess.getPackageClauseRule()); } 
	 EOF 
;

// Rule packageClause
rulepackageClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageClauseAccess().getGroup()); }
		(rule__PackageClause__Group__0)
		{ after(grammarAccess.getPackageClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleimportDecl
entryRuleimportDecl
:
{ before(grammarAccess.getImportDeclRule()); }
	 ruleimportDecl
{ after(grammarAccess.getImportDeclRule()); } 
	 EOF 
;

// Rule importDecl
ruleimportDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportDeclAccess().getGroup()); }
		(rule__ImportDecl__Group__0)
		{ after(grammarAccess.getImportDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleimportSpec
entryRuleimportSpec
:
{ before(grammarAccess.getImportSpecRule()); }
	 ruleimportSpec
{ after(grammarAccess.getImportSpecRule()); } 
	 EOF 
;

// Rule importSpec
ruleimportSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportSpecAccess().getGroup()); }
		(rule__ImportSpec__Group__0)
		{ after(grammarAccess.getImportSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleimportPath
entryRuleimportPath
:
{ before(grammarAccess.getImportPathRule()); }
	 ruleimportPath
{ after(grammarAccess.getImportPathRule()); } 
	 EOF 
;

// Rule importPath
ruleimportPath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportPathAccess().getSTRING_LITTerminalRuleCall()); }
		RULE_STRING_LIT
		{ after(grammarAccess.getImportPathAccess().getSTRING_LITTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletopLevelDecl
entryRuletopLevelDecl
:
{ before(grammarAccess.getTopLevelDeclRule()); }
	 ruletopLevelDecl
{ after(grammarAccess.getTopLevelDeclRule()); } 
	 EOF 
;

// Rule topLevelDecl
ruletopLevelDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getAlternatives()); }
		(rule__TopLevelDecl__Alternatives)
		{ after(grammarAccess.getTopLevelDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledeclaration
entryRuledeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruledeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule declaration
ruledeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
		(rule__Declaration__Alternatives)
		{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconstDecl
entryRuleconstDecl
:
{ before(grammarAccess.getConstDeclRule()); }
	 ruleconstDecl
{ after(grammarAccess.getConstDeclRule()); } 
	 EOF 
;

// Rule constDecl
ruleconstDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstDeclAccess().getGroup()); }
		(rule__ConstDecl__Group__0)
		{ after(grammarAccess.getConstDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconstSpec
entryRuleconstSpec
:
{ before(grammarAccess.getConstSpecRule()); }
	 ruleconstSpec
{ after(grammarAccess.getConstSpecRule()); } 
	 EOF 
;

// Rule constSpec
ruleconstSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstSpecAccess().getGroup()); }
		(rule__ConstSpec__Group__0)
		{ after(grammarAccess.getConstSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleidentifierList
entryRuleidentifierList
:
{ before(grammarAccess.getIdentifierListRule()); }
	 ruleidentifierList
{ after(grammarAccess.getIdentifierListRule()); } 
	 EOF 
;

// Rule identifierList
ruleidentifierList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierListAccess().getGroup()); }
		(rule__IdentifierList__Group__0)
		{ after(grammarAccess.getIdentifierListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpressionList
entryRuleexpressionList
:
{ before(grammarAccess.getExpressionListRule()); }
	 ruleexpressionList
{ after(grammarAccess.getExpressionListRule()); } 
	 EOF 
;

// Rule expressionList
ruleexpressionList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionListAccess().getGroup()); }
		(rule__ExpressionList__Group__0)
		{ after(grammarAccess.getExpressionListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypeDecl
entryRuletypeDecl
:
{ before(grammarAccess.getTypeDeclRule()); }
	 ruletypeDecl
{ after(grammarAccess.getTypeDeclRule()); } 
	 EOF 
;

// Rule typeDecl
ruletypeDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDeclAccess().getGroup()); }
		(rule__TypeDecl__Group__0)
		{ after(grammarAccess.getTypeDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypeSpec
entryRuletypeSpec
:
{ before(grammarAccess.getTypeSpecRule()); }
	 ruletypeSpec
{ after(grammarAccess.getTypeSpecRule()); } 
	 EOF 
;

// Rule typeSpec
ruletypeSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSpecAccess().getGroup()); }
		(rule__TypeSpec__Group__0)
		{ after(grammarAccess.getTypeSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunctionDecl
entryRulefunctionDecl
:
{ before(grammarAccess.getFunctionDeclRule()); }
	 rulefunctionDecl
{ after(grammarAccess.getFunctionDeclRule()); } 
	 EOF 
;

// Rule functionDecl
rulefunctionDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionDeclAccess().getGroup()); }
		(rule__FunctionDecl__Group__0)
		{ after(grammarAccess.getFunctionDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunction
entryRulefunction
:
{ before(grammarAccess.getFunctionRule()); }
	 rulefunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule function
rulefunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemethodDecl
entryRulemethodDecl
:
{ before(grammarAccess.getMethodDeclRule()); }
	 rulemethodDecl
{ after(grammarAccess.getMethodDeclRule()); } 
	 EOF 
;

// Rule methodDecl
rulemethodDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodDeclAccess().getGroup()); }
		(rule__MethodDecl__Group__0)
		{ after(grammarAccess.getMethodDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulereceiver
entryRulereceiver
:
{ before(grammarAccess.getReceiverRule()); }
	 rulereceiver
{ after(grammarAccess.getReceiverRule()); } 
	 EOF 
;

// Rule receiver
rulereceiver 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReceiverAccess().getParametersAssignment()); }
		(rule__Receiver__ParametersAssignment)
		{ after(grammarAccess.getReceiverAccess().getParametersAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulevarDecl
entryRulevarDecl
:
{ before(grammarAccess.getVarDeclRule()); }
	 rulevarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule varDecl
rulevarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup()); }
		(rule__VarDecl__Group__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulevarSpec
entryRulevarSpec
:
{ before(grammarAccess.getVarSpecRule()); }
	 rulevarSpec
{ after(grammarAccess.getVarSpecRule()); } 
	 EOF 
;

// Rule varSpec
rulevarSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarSpecAccess().getGroup()); }
		(rule__VarSpec__Group__0)
		{ after(grammarAccess.getVarSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleblock
entryRuleblock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleblock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule block
ruleblock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getGroup()); }
		(rule__Block__Group__0)
		{ after(grammarAccess.getBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestatementList
entryRulestatementList
:
{ before(grammarAccess.getStatementListRule()); }
	 rulestatementList
{ after(grammarAccess.getStatementListRule()); } 
	 EOF 
;

// Rule statementList
rulestatementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementListAccess().getGroup()); }
		(rule__StatementList__Group__0)*
		{ after(grammarAccess.getStatementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestatement
entryRulestatement
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesimpleStmt
entryRulesimpleStmt
:
{ before(grammarAccess.getSimpleStmtRule()); }
	 rulesimpleStmt
{ after(grammarAccess.getSimpleStmtRule()); } 
	 EOF 
;

// Rule simpleStmt
rulesimpleStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getAlternatives()); }
		(rule__SimpleStmt__Alternatives)
		{ after(grammarAccess.getSimpleStmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpressionStmt
entryRuleexpressionStmt
:
{ before(grammarAccess.getExpressionStmtRule()); }
	 ruleexpressionStmt
{ after(grammarAccess.getExpressionStmtRule()); } 
	 EOF 
;

// Rule expressionStmt
ruleexpressionStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionStmtAccess().getExpressionAssignment()); }
		(rule__ExpressionStmt__ExpressionAssignment)
		{ after(grammarAccess.getExpressionStmtAccess().getExpressionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesendStmt
entryRulesendStmt
:
{ before(grammarAccess.getSendStmtRule()); }
	 rulesendStmt
{ after(grammarAccess.getSendStmtRule()); } 
	 EOF 
;

// Rule sendStmt
rulesendStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSendStmtAccess().getGroup()); }
		(rule__SendStmt__Group__0)
		{ after(grammarAccess.getSendStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleincDecStmt
entryRuleincDecStmt
:
{ before(grammarAccess.getIncDecStmtRule()); }
	 ruleincDecStmt
{ after(grammarAccess.getIncDecStmtRule()); } 
	 EOF 
;

// Rule incDecStmt
ruleincDecStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIncDecStmtAccess().getGroup()); }
		(rule__IncDecStmt__Group__0)
		{ after(grammarAccess.getIncDecStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleassignment
entryRuleassignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleassignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule assignment
ruleassignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleassign_op
entryRuleassign_op
:
{ before(grammarAccess.getAssign_opRule()); }
	 ruleassign_op
{ after(grammarAccess.getAssign_opRule()); } 
	 EOF 
;

// Rule assign_op
ruleassign_op 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssign_opAccess().getGroup()); }
		(rule__Assign_op__Group__0)
		{ after(grammarAccess.getAssign_opAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleshortVarDecl
entryRuleshortVarDecl
:
{ before(grammarAccess.getShortVarDeclRule()); }
	 ruleshortVarDecl
{ after(grammarAccess.getShortVarDeclRule()); } 
	 EOF 
;

// Rule shortVarDecl
ruleshortVarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShortVarDeclAccess().getGroup()); }
		(rule__ShortVarDecl__Group__0)
		{ after(grammarAccess.getShortVarDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleemptyStmt
entryRuleemptyStmt
:
{ before(grammarAccess.getEmptyStmtRule()); }
	 ruleemptyStmt
{ after(grammarAccess.getEmptyStmtRule()); } 
	 EOF 
;

// Rule emptyStmt
ruleemptyStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyStmtAccess().getWSTerminalRuleCall()); }
		RULE_WS
		{ after(grammarAccess.getEmptyStmtAccess().getWSTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelabeledStmt
entryRulelabeledStmt
:
{ before(grammarAccess.getLabeledStmtRule()); }
	 rulelabeledStmt
{ after(grammarAccess.getLabeledStmtRule()); } 
	 EOF 
;

// Rule labeledStmt
rulelabeledStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabeledStmtAccess().getGroup()); }
		(rule__LabeledStmt__Group__0)
		{ after(grammarAccess.getLabeledStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulereturnStmt
entryRulereturnStmt
:
{ before(grammarAccess.getReturnStmtRule()); }
	 rulereturnStmt
{ after(grammarAccess.getReturnStmtRule()); } 
	 EOF 
;

// Rule returnStmt
rulereturnStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnStmtAccess().getGroup()); }
		(rule__ReturnStmt__Group__0)
		{ after(grammarAccess.getReturnStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebreakStmt
entryRulebreakStmt
:
{ before(grammarAccess.getBreakStmtRule()); }
	 rulebreakStmt
{ after(grammarAccess.getBreakStmtRule()); } 
	 EOF 
;

// Rule breakStmt
rulebreakStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBreakStmtAccess().getGroup()); }
		(rule__BreakStmt__Group__0)
		{ after(grammarAccess.getBreakStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecontinueStmt
entryRulecontinueStmt
:
{ before(grammarAccess.getContinueStmtRule()); }
	 rulecontinueStmt
{ after(grammarAccess.getContinueStmtRule()); } 
	 EOF 
;

// Rule continueStmt
rulecontinueStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContinueStmtAccess().getGroup()); }
		(rule__ContinueStmt__Group__0)
		{ after(grammarAccess.getContinueStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulegotoStmt
entryRulegotoStmt
:
{ before(grammarAccess.getGotoStmtRule()); }
	 rulegotoStmt
{ after(grammarAccess.getGotoStmtRule()); } 
	 EOF 
;

// Rule gotoStmt
rulegotoStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGotoStmtAccess().getGroup()); }
		(rule__GotoStmt__Group__0)
		{ after(grammarAccess.getGotoStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefallthroughStmt
entryRulefallthroughStmt
:
{ before(grammarAccess.getFallthroughStmtRule()); }
	 rulefallthroughStmt
{ after(grammarAccess.getFallthroughStmtRule()); } 
	 EOF 
;

// Rule fallthroughStmt
rulefallthroughStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFallthroughStmtAccess().getFallthroughKeyword()); }
		'fallthrough'
		{ after(grammarAccess.getFallthroughStmtAccess().getFallthroughKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledeferStmt
entryRuledeferStmt
:
{ before(grammarAccess.getDeferStmtRule()); }
	 ruledeferStmt
{ after(grammarAccess.getDeferStmtRule()); } 
	 EOF 
;

// Rule deferStmt
ruledeferStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeferStmtAccess().getGroup()); }
		(rule__DeferStmt__Group__0)
		{ after(grammarAccess.getDeferStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleifStmt
entryRuleifStmt
:
{ before(grammarAccess.getIfStmtRule()); }
	 ruleifStmt
{ after(grammarAccess.getIfStmtRule()); } 
	 EOF 
;

// Rule ifStmt
ruleifStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStmtAccess().getGroup()); }
		(rule__IfStmt__Group__0)
		{ after(grammarAccess.getIfStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleswitchStmt
entryRuleswitchStmt
:
{ before(grammarAccess.getSwitchStmtRule()); }
	 ruleswitchStmt
{ after(grammarAccess.getSwitchStmtRule()); } 
	 EOF 
;

// Rule switchStmt
ruleswitchStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchStmtAccess().getAlternatives()); }
		(rule__SwitchStmt__Alternatives)
		{ after(grammarAccess.getSwitchStmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexprSwitchStmt
entryRuleexprSwitchStmt
:
{ before(grammarAccess.getExprSwitchStmtRule()); }
	 ruleexprSwitchStmt
{ after(grammarAccess.getExprSwitchStmtRule()); } 
	 EOF 
;

// Rule exprSwitchStmt
ruleexprSwitchStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprSwitchStmtAccess().getGroup()); }
		(rule__ExprSwitchStmt__Group__0)
		{ after(grammarAccess.getExprSwitchStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexprCaseClause
entryRuleexprCaseClause
:
{ before(grammarAccess.getExprCaseClauseRule()); }
	 ruleexprCaseClause
{ after(grammarAccess.getExprCaseClauseRule()); } 
	 EOF 
;

// Rule exprCaseClause
ruleexprCaseClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprCaseClauseAccess().getGroup()); }
		(rule__ExprCaseClause__Group__0)
		{ after(grammarAccess.getExprCaseClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexprSwitchCase
entryRuleexprSwitchCase
:
{ before(grammarAccess.getExprSwitchCaseRule()); }
	 ruleexprSwitchCase
{ after(grammarAccess.getExprSwitchCaseRule()); } 
	 EOF 
;

// Rule exprSwitchCase
ruleexprSwitchCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprSwitchCaseAccess().getAlternatives()); }
		(rule__ExprSwitchCase__Alternatives)
		{ after(grammarAccess.getExprSwitchCaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypeSwitchStmt
entryRuletypeSwitchStmt
:
{ before(grammarAccess.getTypeSwitchStmtRule()); }
	 ruletypeSwitchStmt
{ after(grammarAccess.getTypeSwitchStmtRule()); } 
	 EOF 
;

// Rule typeSwitchStmt
ruletypeSwitchStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSwitchStmtAccess().getGroup()); }
		(rule__TypeSwitchStmt__Group__0)
		{ after(grammarAccess.getTypeSwitchStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypeSwitchGuard
entryRuletypeSwitchGuard
:
{ before(grammarAccess.getTypeSwitchGuardRule()); }
	 ruletypeSwitchGuard
{ after(grammarAccess.getTypeSwitchGuardRule()); } 
	 EOF 
;

// Rule typeSwitchGuard
ruletypeSwitchGuard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSwitchGuardAccess().getGroup()); }
		(rule__TypeSwitchGuard__Group__0)
		{ after(grammarAccess.getTypeSwitchGuardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypeCaseClause
entryRuletypeCaseClause
:
{ before(grammarAccess.getTypeCaseClauseRule()); }
	 ruletypeCaseClause
{ after(grammarAccess.getTypeCaseClauseRule()); } 
	 EOF 
;

// Rule typeCaseClause
ruletypeCaseClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeCaseClauseAccess().getGroup()); }
		(rule__TypeCaseClause__Group__0)
		{ after(grammarAccess.getTypeCaseClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypeSwitchCase
entryRuletypeSwitchCase
:
{ before(grammarAccess.getTypeSwitchCaseRule()); }
	 ruletypeSwitchCase
{ after(grammarAccess.getTypeSwitchCaseRule()); } 
	 EOF 
;

// Rule typeSwitchCase
ruletypeSwitchCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSwitchCaseAccess().getAlternatives()); }
		(rule__TypeSwitchCase__Alternatives)
		{ after(grammarAccess.getTypeSwitchCaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypeList
entryRuletypeList
:
{ before(grammarAccess.getTypeListRule()); }
	 ruletypeList
{ after(grammarAccess.getTypeListRule()); } 
	 EOF 
;

// Rule typeList
ruletypeList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeListAccess().getGroup()); }
		(rule__TypeList__Group__0)
		{ after(grammarAccess.getTypeListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleselectStmt
entryRuleselectStmt
:
{ before(grammarAccess.getSelectStmtRule()); }
	 ruleselectStmt
{ after(grammarAccess.getSelectStmtRule()); } 
	 EOF 
;

// Rule selectStmt
ruleselectStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectStmtAccess().getGroup()); }
		(rule__SelectStmt__Group__0)
		{ after(grammarAccess.getSelectStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecommClause
entryRulecommClause
:
{ before(grammarAccess.getCommClauseRule()); }
	 rulecommClause
{ after(grammarAccess.getCommClauseRule()); } 
	 EOF 
;

// Rule commClause
rulecommClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommClauseAccess().getGroup()); }
		(rule__CommClause__Group__0)
		{ after(grammarAccess.getCommClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecommCase
entryRulecommCase
:
{ before(grammarAccess.getCommCaseRule()); }
	 rulecommCase
{ after(grammarAccess.getCommCaseRule()); } 
	 EOF 
;

// Rule commCase
rulecommCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommCaseAccess().getAlternatives()); }
		(rule__CommCase__Alternatives)
		{ after(grammarAccess.getCommCaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerecvStmt
entryRulerecvStmt
:
{ before(grammarAccess.getRecvStmtRule()); }
	 rulerecvStmt
{ after(grammarAccess.getRecvStmtRule()); } 
	 EOF 
;

// Rule recvStmt
rulerecvStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecvStmtAccess().getGroup()); }
		(rule__RecvStmt__Group__0)
		{ after(grammarAccess.getRecvStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleforStmt
entryRuleforStmt
:
{ before(grammarAccess.getForStmtRule()); }
	 ruleforStmt
{ after(grammarAccess.getForStmtRule()); } 
	 EOF 
;

// Rule forStmt
ruleforStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForStmtAccess().getGroup()); }
		(rule__ForStmt__Group__0)
		{ after(grammarAccess.getForStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleforClause
entryRuleforClause
:
{ before(grammarAccess.getForClauseRule()); }
	 ruleforClause
{ after(grammarAccess.getForClauseRule()); } 
	 EOF 
;

// Rule forClause
ruleforClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForClauseAccess().getGroup()); }
		(rule__ForClause__Group__0)
		{ after(grammarAccess.getForClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerangeClause
entryRulerangeClause
:
{ before(grammarAccess.getRangeClauseRule()); }
	 rulerangeClause
{ after(grammarAccess.getRangeClauseRule()); } 
	 EOF 
;

// Rule rangeClause
rulerangeClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeClauseAccess().getGroup()); }
		(rule__RangeClause__Group__0)
		{ after(grammarAccess.getRangeClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulegoStmt
entryRulegoStmt
:
{ before(grammarAccess.getGoStmtRule()); }
	 rulegoStmt
{ after(grammarAccess.getGoStmtRule()); } 
	 EOF 
;

// Rule goStmt
rulegoStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGoStmtAccess().getGroup()); }
		(rule__GoStmt__Group__0)
		{ after(grammarAccess.getGoStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype
entryRuletype
:
{ before(grammarAccess.getTypeRule()); }
	 ruletype
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule type
ruletype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypeName
entryRuletypeName
:
{ before(grammarAccess.getTypeNameRule()); }
	 ruletypeName
{ after(grammarAccess.getTypeNameRule()); } 
	 EOF 
;

// Rule typeName
ruletypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeNameAccess().getAlternatives()); }
		(rule__TypeName__Alternatives)
		{ after(grammarAccess.getTypeNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypeLit
entryRuletypeLit
:
{ before(grammarAccess.getTypeLitRule()); }
	 ruletypeLit
{ after(grammarAccess.getTypeLitRule()); } 
	 EOF 
;

// Rule typeLit
ruletypeLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeLitAccess().getAlternatives()); }
		(rule__TypeLit__Alternatives)
		{ after(grammarAccess.getTypeLitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulearrayType
entryRulearrayType
:
{ before(grammarAccess.getArrayTypeRule()); }
	 rulearrayType
{ after(grammarAccess.getArrayTypeRule()); } 
	 EOF 
;

// Rule arrayType
rulearrayType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayTypeAccess().getGroup()); }
		(rule__ArrayType__Group__0)
		{ after(grammarAccess.getArrayTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulearrayLength
entryRulearrayLength
:
{ before(grammarAccess.getArrayLengthRule()); }
	 rulearrayLength
{ after(grammarAccess.getArrayLengthRule()); } 
	 EOF 
;

// Rule arrayLength
rulearrayLength 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayLengthAccess().getExpressionAssignment()); }
		(rule__ArrayLength__ExpressionAssignment)
		{ after(grammarAccess.getArrayLengthAccess().getExpressionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleelementType
entryRuleelementType
:
{ before(grammarAccess.getElementTypeRule()); }
	 ruleelementType
{ after(grammarAccess.getElementTypeRule()); } 
	 EOF 
;

// Rule elementType
ruleelementType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementTypeAccess().getTypeAssignment()); }
		(rule__ElementType__TypeAssignment)
		{ after(grammarAccess.getElementTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepointerType
entryRulepointerType
:
{ before(grammarAccess.getPointerTypeRule()); }
	 rulepointerType
{ after(grammarAccess.getPointerTypeRule()); } 
	 EOF 
;

// Rule pointerType
rulepointerType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointerTypeAccess().getGroup()); }
		(rule__PointerType__Group__0)
		{ after(grammarAccess.getPointerTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinterfaceType
entryRuleinterfaceType
:
{ before(grammarAccess.getInterfaceTypeRule()); }
	 ruleinterfaceType
{ after(grammarAccess.getInterfaceTypeRule()); } 
	 EOF 
;

// Rule interfaceType
ruleinterfaceType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceTypeAccess().getGroup()); }
		(rule__InterfaceType__Group__0)
		{ after(grammarAccess.getInterfaceTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesliceType
entryRulesliceType
:
{ before(grammarAccess.getSliceTypeRule()); }
	 rulesliceType
{ after(grammarAccess.getSliceTypeRule()); } 
	 EOF 
;

// Rule sliceType
rulesliceType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSliceTypeAccess().getGroup()); }
		(rule__SliceType__Group__0)
		{ after(grammarAccess.getSliceTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemapType
entryRulemapType
:
{ before(grammarAccess.getMapTypeRule()); }
	 rulemapType
{ after(grammarAccess.getMapTypeRule()); } 
	 EOF 
;

// Rule mapType
rulemapType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapTypeAccess().getGroup()); }
		(rule__MapType__Group__0)
		{ after(grammarAccess.getMapTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulechannelType
entryRulechannelType
:
{ before(grammarAccess.getChannelTypeRule()); }
	 rulechannelType
{ after(grammarAccess.getChannelTypeRule()); } 
	 EOF 
;

// Rule channelType
rulechannelType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelTypeAccess().getGroup()); }
		(rule__ChannelType__Group__0)
		{ after(grammarAccess.getChannelTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemethodSpec
entryRulemethodSpec
:
{ before(grammarAccess.getMethodSpecRule()); }
	 rulemethodSpec
{ after(grammarAccess.getMethodSpecRule()); } 
	 EOF 
;

// Rule methodSpec
rulemethodSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodSpecAccess().getAlternatives()); }
		(rule__MethodSpec__Alternatives)
		{ after(grammarAccess.getMethodSpecAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunctionType
entryRulefunctionType
:
{ before(grammarAccess.getFunctionTypeRule()); }
	 rulefunctionType
{ after(grammarAccess.getFunctionTypeRule()); } 
	 EOF 
;

// Rule functionType
rulefunctionType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionTypeAccess().getGroup()); }
		(rule__FunctionType__Group__0)
		{ after(grammarAccess.getFunctionTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesignature
entryRulesignature
:
{ before(grammarAccess.getSignatureRule()); }
	 rulesignature
{ after(grammarAccess.getSignatureRule()); } 
	 EOF 
;

// Rule signature
rulesignature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignatureAccess().getGroup()); }
		(rule__Signature__Group__0)
		{ after(grammarAccess.getSignatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleresult
entryRuleresult
:
{ before(grammarAccess.getResultRule()); }
	 ruleresult
{ after(grammarAccess.getResultRule()); } 
	 EOF 
;

// Rule result
ruleresult 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResultAccess().getAlternatives()); }
		(rule__Result__Alternatives)
		{ after(grammarAccess.getResultAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameters
entryRuleparameters
:
{ before(grammarAccess.getParametersRule()); }
	 ruleparameters
{ after(grammarAccess.getParametersRule()); } 
	 EOF 
;

// Rule parameters
ruleparameters 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametersAccess().getGroup()); }
		(rule__Parameters__Group__0)
		{ after(grammarAccess.getParametersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameterList
entryRuleparameterList
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleparameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule parameterList
ruleparameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterListAccess().getGroup()); }
		(rule__ParameterList__Group__0)
		{ after(grammarAccess.getParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameterDecl
entryRuleparameterDecl
:
{ before(grammarAccess.getParameterDeclRule()); }
	 ruleparameterDecl
{ after(grammarAccess.getParameterDeclRule()); } 
	 EOF 
;

// Rule parameterDecl
ruleparameterDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterDeclAccess().getGroup()); }
		(rule__ParameterDecl__Group__0)
		{ after(grammarAccess.getParameterDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleoperand
entryRuleoperand
:
{ before(grammarAccess.getOperandRule()); }
	 ruleoperand
{ after(grammarAccess.getOperandRule()); } 
	 EOF 
;

// Rule operand
ruleoperand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperandAccess().getAlternatives()); }
		(rule__Operand__Alternatives)
		{ after(grammarAccess.getOperandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleliteral
entryRuleliteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleliteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule literal
ruleliteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebasicLit
entryRulebasicLit
:
{ before(grammarAccess.getBasicLitRule()); }
	 rulebasicLit
{ after(grammarAccess.getBasicLitRule()); } 
	 EOF 
;

// Rule basicLit
rulebasicLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicLitAccess().getAlternatives()); }
		(rule__BasicLit__Alternatives)
		{ after(grammarAccess.getBasicLitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleoperandName
entryRuleoperandName
:
{ before(grammarAccess.getOperandNameRule()); }
	 ruleoperandName
{ after(grammarAccess.getOperandNameRule()); } 
	 EOF 
;

// Rule operandName
ruleoperandName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperandNameAccess().getAlternatives()); }
		(rule__OperandName__Alternatives)
		{ after(grammarAccess.getOperandNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulequalifiedIdent
entryRulequalifiedIdent
:
{ before(grammarAccess.getQualifiedIdentRule()); }
	 rulequalifiedIdent
{ after(grammarAccess.getQualifiedIdentRule()); } 
	 EOF 
;

// Rule qualifiedIdent
rulequalifiedIdent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedIdentAccess().getGroup()); }
		(rule__QualifiedIdent__Group__0)
		{ after(grammarAccess.getQualifiedIdentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecompositeLit
entryRulecompositeLit
:
{ before(grammarAccess.getCompositeLitRule()); }
	 rulecompositeLit
{ after(grammarAccess.getCompositeLitRule()); } 
	 EOF 
;

// Rule compositeLit
rulecompositeLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositeLitAccess().getGroup()); }
		(rule__CompositeLit__Group__0)
		{ after(grammarAccess.getCompositeLitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleliteralType
entryRuleliteralType
:
{ before(grammarAccess.getLiteralTypeRule()); }
	 ruleliteralType
{ after(grammarAccess.getLiteralTypeRule()); } 
	 EOF 
;

// Rule literalType
ruleliteralType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getAlternatives()); }
		(rule__LiteralType__Alternatives)
		{ after(grammarAccess.getLiteralTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleliteralValue
entryRuleliteralValue
:
{ before(grammarAccess.getLiteralValueRule()); }
	 ruleliteralValue
{ after(grammarAccess.getLiteralValueRule()); } 
	 EOF 
;

// Rule literalValue
ruleliteralValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralValueAccess().getGroup()); }
		(rule__LiteralValue__Group__0)
		{ after(grammarAccess.getLiteralValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleelementList
entryRuleelementList
:
{ before(grammarAccess.getElementListRule()); }
	 ruleelementList
{ after(grammarAccess.getElementListRule()); } 
	 EOF 
;

// Rule elementList
ruleelementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementListAccess().getGroup()); }
		(rule__ElementList__Group__0)
		{ after(grammarAccess.getElementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulekeyedElement
entryRulekeyedElement
:
{ before(grammarAccess.getKeyedElementRule()); }
	 rulekeyedElement
{ after(grammarAccess.getKeyedElementRule()); } 
	 EOF 
;

// Rule keyedElement
rulekeyedElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyedElementAccess().getGroup()); }
		(rule__KeyedElement__Group__0)
		{ after(grammarAccess.getKeyedElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulekey
entryRulekey
:
{ before(grammarAccess.getKeyRule()); }
	 rulekey
{ after(grammarAccess.getKeyRule()); } 
	 EOF 
;

// Rule key
rulekey 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyAccess().getAlternatives()); }
		(rule__Key__Alternatives)
		{ after(grammarAccess.getKeyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleelement
entryRuleelement
:
{ before(grammarAccess.getElementRule()); }
	 ruleelement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule element
ruleelement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestructType
entryRulestructType
:
{ before(grammarAccess.getStructTypeRule()); }
	 rulestructType
{ after(grammarAccess.getStructTypeRule()); } 
	 EOF 
;

// Rule structType
rulestructType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructTypeAccess().getGroup()); }
		(rule__StructType__Group__0)
		{ after(grammarAccess.getStructTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefieldDecl
entryRulefieldDecl
:
{ before(grammarAccess.getFieldDeclRule()); }
	 rulefieldDecl
{ after(grammarAccess.getFieldDeclRule()); } 
	 EOF 
;

// Rule fieldDecl
rulefieldDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldDeclAccess().getGroup()); }
		(rule__FieldDecl__Group__0)
		{ after(grammarAccess.getFieldDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleanonymousField
entryRuleanonymousField
:
{ before(grammarAccess.getAnonymousFieldRule()); }
	 ruleanonymousField
{ after(grammarAccess.getAnonymousFieldRule()); } 
	 EOF 
;

// Rule anonymousField
ruleanonymousField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnonymousFieldAccess().getGroup()); }
		(rule__AnonymousField__Group__0)
		{ after(grammarAccess.getAnonymousFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunctionLit
entryRulefunctionLit
:
{ before(grammarAccess.getFunctionLitRule()); }
	 rulefunctionLit
{ after(grammarAccess.getFunctionLitRule()); } 
	 EOF 
;

// Rule functionLit
rulefunctionLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionLitAccess().getGroup()); }
		(rule__FunctionLit__Group__0)
		{ after(grammarAccess.getFunctionLitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprimaryExpr
entryRuleprimaryExpr
:
{ before(grammarAccess.getPrimaryExprRule()); }
	 ruleprimaryExpr
{ after(grammarAccess.getPrimaryExprRule()); } 
	 EOF 
;

// Rule primaryExpr
ruleprimaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getAlternatives()); }
		(rule__PrimaryExpr__Alternatives)
		{ after(grammarAccess.getPrimaryExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprimaryExprStuff
entryRuleprimaryExprStuff
:
{ before(grammarAccess.getPrimaryExprStuffRule()); }
	 ruleprimaryExprStuff
{ after(grammarAccess.getPrimaryExprStuffRule()); } 
	 EOF 
;

// Rule primaryExprStuff
ruleprimaryExprStuff 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprStuffAccess().getAlternatives()); }
		(rule__PrimaryExprStuff__Alternatives)
		{ after(grammarAccess.getPrimaryExprStuffAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprimaryExprSelector
entryRuleprimaryExprSelector
:
{ before(grammarAccess.getPrimaryExprSelectorRule()); }
	 ruleprimaryExprSelector
{ after(grammarAccess.getPrimaryExprSelectorRule()); } 
	 EOF 
;

// Rule primaryExprSelector
ruleprimaryExprSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprSelectorAccess().getGroup()); }
		(rule__PrimaryExprSelector__Group__0)?
		{ after(grammarAccess.getPrimaryExprSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprimaryExprIndex
entryRuleprimaryExprIndex
:
{ before(grammarAccess.getPrimaryExprIndexRule()); }
	 ruleprimaryExprIndex
{ after(grammarAccess.getPrimaryExprIndexRule()); } 
	 EOF 
;

// Rule primaryExprIndex
ruleprimaryExprIndex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprIndexAccess().getGroup()); }
		(rule__PrimaryExprIndex__Group__0)?
		{ after(grammarAccess.getPrimaryExprIndexAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprimaryExprSlice
entryRuleprimaryExprSlice
:
{ before(grammarAccess.getPrimaryExprSliceRule()); }
	 ruleprimaryExprSlice
{ after(grammarAccess.getPrimaryExprSliceRule()); } 
	 EOF 
;

// Rule primaryExprSlice
ruleprimaryExprSlice 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprSliceAccess().getGroup()); }
		(rule__PrimaryExprSlice__Group__0)?
		{ after(grammarAccess.getPrimaryExprSliceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprimaryExprTypeAssertion
entryRuleprimaryExprTypeAssertion
:
{ before(grammarAccess.getPrimaryExprTypeAssertionRule()); }
	 ruleprimaryExprTypeAssertion
{ after(grammarAccess.getPrimaryExprTypeAssertionRule()); } 
	 EOF 
;

// Rule primaryExprTypeAssertion
ruleprimaryExprTypeAssertion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprTypeAssertionAccess().getGroup()); }
		(rule__PrimaryExprTypeAssertion__Group__0)?
		{ after(grammarAccess.getPrimaryExprTypeAssertionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprimaryExprArguments
entryRuleprimaryExprArguments
:
{ before(grammarAccess.getPrimaryExprArgumentsRule()); }
	 ruleprimaryExprArguments
{ after(grammarAccess.getPrimaryExprArgumentsRule()); } 
	 EOF 
;

// Rule primaryExprArguments
ruleprimaryExprArguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprArgumentsAccess().getGroup()); }
		(rule__PrimaryExprArguments__Group__0)?
		{ after(grammarAccess.getPrimaryExprArgumentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleselector
entryRuleselector
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleselector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;

// Rule selector
ruleselector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectorAccess().getGroup()); }
		(rule__Selector__Group__0)
		{ after(grammarAccess.getSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleindex
entryRuleindex
:
{ before(grammarAccess.getIndexRule()); }
	 ruleindex
{ after(grammarAccess.getIndexRule()); } 
	 EOF 
;

// Rule index
ruleindex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexAccess().getGroup()); }
		(rule__Index__Group__0)
		{ after(grammarAccess.getIndexAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleslice
entryRuleslice
:
{ before(grammarAccess.getSliceRule()); }
	 ruleslice
{ after(grammarAccess.getSliceRule()); } 
	 EOF 
;

// Rule slice
ruleslice 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSliceAccess().getGroup()); }
		(rule__Slice__Group__0)
		{ after(grammarAccess.getSliceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypeAssertion
entryRuletypeAssertion
:
{ before(grammarAccess.getTypeAssertionRule()); }
	 ruletypeAssertion
{ after(grammarAccess.getTypeAssertionRule()); } 
	 EOF 
;

// Rule typeAssertion
ruletypeAssertion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAssertionAccess().getGroup()); }
		(rule__TypeAssertion__Group__0)
		{ after(grammarAccess.getTypeAssertionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulearguments
entryRulearguments
:
{ before(grammarAccess.getArgumentsRule()); }
	 rulearguments
{ after(grammarAccess.getArgumentsRule()); } 
	 EOF 
;

// Rule arguments
rulearguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentsAccess().getGroup()); }
		(rule__Arguments__Group__0)
		{ after(grammarAccess.getArgumentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemethodExpr
entryRulemethodExpr
:
{ before(grammarAccess.getMethodExprRule()); }
	 rulemethodExpr
{ after(grammarAccess.getMethodExprRule()); } 
	 EOF 
;

// Rule methodExpr
rulemethodExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodExprAccess().getGroup()); }
		(rule__MethodExpr__Group__0)
		{ after(grammarAccess.getMethodExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulereceiverType
entryRulereceiverType
:
{ before(grammarAccess.getReceiverTypeRule()); }
	 rulereceiverType
{ after(grammarAccess.getReceiverTypeRule()); } 
	 EOF 
;

// Rule receiverType
rulereceiverType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReceiverTypeAccess().getAlternatives()); }
		(rule__ReceiverType__Alternatives)
		{ after(grammarAccess.getReceiverTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpression
entryRuleexpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleexpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule expression
ruleexpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpressionMatched
entryRuleexpressionMatched
:
{ before(grammarAccess.getExpressionMatchedRule()); }
	 ruleexpressionMatched
{ after(grammarAccess.getExpressionMatchedRule()); } 
	 EOF 
;

// Rule expressionMatched
ruleexpressionMatched 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionMatchedAccess().getGroup()); }
		(rule__ExpressionMatched__Group__0)?
		{ after(grammarAccess.getExpressionMatchedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunaryExpr
entryRuleunaryExpr
:
{ before(grammarAccess.getUnaryExprRule()); }
	 ruleunaryExpr
{ after(grammarAccess.getUnaryExprRule()); } 
	 EOF 
;

// Rule unaryExpr
ruleunaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExprAccess().getAlternatives()); }
		(rule__UnaryExpr__Alternatives)
		{ after(grammarAccess.getUnaryExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconversion
entryRuleconversion
:
{ before(grammarAccess.getConversionRule()); }
	 ruleconversion
{ after(grammarAccess.getConversionRule()); } 
	 EOF 
;

// Rule conversion
ruleconversion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConversionAccess().getGroup()); }
		(rule__Conversion__Group__0)
		{ after(grammarAccess.getConversionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDeclAccess().getImportSpecAssignment_1_0()); }
		(rule__ImportDecl__ImportSpecAssignment_1_0)
		{ after(grammarAccess.getImportDeclAccess().getImportSpecAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportDeclAccess().getGroup_1_1()); }
		(rule__ImportDecl__Group_1_1__0)
		{ after(grammarAccess.getImportDeclAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0()); }
		'.'
		{ after(grammarAccess.getImportSpecAccess().getFullStopKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportSpecAccess().getIDENTIFIERTerminalRuleCall_0_1()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getImportSpecAccess().getIDENTIFIERTerminalRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getDeclarationAssignment_0()); }
		(rule__TopLevelDecl__DeclarationAssignment_0)
		{ after(grammarAccess.getTopLevelDeclAccess().getDeclarationAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getFunctionDeclAssignment_1()); }
		(rule__TopLevelDecl__FunctionDeclAssignment_1)
		{ after(grammarAccess.getTopLevelDeclAccess().getFunctionDeclAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getMethodDeclAssignment_2()); }
		(rule__TopLevelDecl__MethodDeclAssignment_2)
		{ after(grammarAccess.getTopLevelDeclAccess().getMethodDeclAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getConstDeclAssignment_0()); }
		(rule__Declaration__ConstDeclAssignment_0)
		{ after(grammarAccess.getDeclarationAccess().getConstDeclAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getTypeDeclAssignment_1()); }
		(rule__Declaration__TypeDeclAssignment_1)
		{ after(grammarAccess.getDeclarationAccess().getTypeDeclAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getVarDeclAssignment_2()); }
		(rule__Declaration__VarDeclAssignment_2)
		{ after(grammarAccess.getDeclarationAccess().getVarDeclAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDeclAccess().getConstSpecAssignment_1_0()); }
		(rule__ConstDecl__ConstSpecAssignment_1_0)
		{ after(grammarAccess.getConstDeclAccess().getConstSpecAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstDeclAccess().getGroup_1_1()); }
		(rule__ConstDecl__Group_1_1__0)
		{ after(grammarAccess.getConstDeclAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclAccess().getTypeSpecAssignment_1_0()); }
		(rule__TypeDecl__TypeSpecAssignment_1_0)
		{ after(grammarAccess.getTypeDeclAccess().getTypeSpecAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDeclAccess().getGroup_1_1()); }
		(rule__TypeDecl__Group_1_1__0)
		{ after(grammarAccess.getTypeDeclAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclAccess().getFunctionAssignment_2_0()); }
		(rule__FunctionDecl__FunctionAssignment_2_0)
		{ after(grammarAccess.getFunctionDeclAccess().getFunctionAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionDeclAccess().getSignatureAssignment_2_1()); }
		(rule__FunctionDecl__SignatureAssignment_2_1)
		{ after(grammarAccess.getFunctionDeclAccess().getSignatureAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclAccess().getFunctionAssignment_3_0()); }
		(rule__MethodDecl__FunctionAssignment_3_0)
		{ after(grammarAccess.getMethodDeclAccess().getFunctionAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodDeclAccess().getSignatureAssignment_3_1()); }
		(rule__MethodDecl__SignatureAssignment_3_1)
		{ after(grammarAccess.getMethodDeclAccess().getSignatureAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getVarSpecAssignment_1_0()); }
		(rule__VarDecl__VarSpecAssignment_1_0)
		{ after(grammarAccess.getVarDeclAccess().getVarSpecAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup_1_1()); }
		(rule__VarDecl__Group_1_1__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarSpecAccess().getGroup_1_0()); }
		(rule__VarSpec__Group_1_0__0)
		{ after(grammarAccess.getVarSpecAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarSpecAccess().getGroup_1_1()); }
		(rule__VarSpec__Group_1_1__0)
		{ after(grammarAccess.getVarSpecAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDeclarationAssignment_0()); }
		(rule__Statement__DeclarationAssignment_0)
		{ after(grammarAccess.getStatementAccess().getDeclarationAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getLabeledStmtAssignment_1()); }
		(rule__Statement__LabeledStmtAssignment_1)
		{ after(grammarAccess.getStatementAccess().getLabeledStmtAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSimpleStmtAssignment_2()); }
		(rule__Statement__SimpleStmtAssignment_2)
		{ after(grammarAccess.getStatementAccess().getSimpleStmtAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGoStmtAssignment_3()); }
		(rule__Statement__GoStmtAssignment_3)
		{ after(grammarAccess.getStatementAccess().getGoStmtAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getReturnStmtAssignment_4()); }
		(rule__Statement__ReturnStmtAssignment_4)
		{ after(grammarAccess.getStatementAccess().getReturnStmtAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getBreakStmtAssignment_5()); }
		(rule__Statement__BreakStmtAssignment_5)
		{ after(grammarAccess.getStatementAccess().getBreakStmtAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getContinueStmtAssignment_6()); }
		(rule__Statement__ContinueStmtAssignment_6)
		{ after(grammarAccess.getStatementAccess().getContinueStmtAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGotoStmtAssignment_7()); }
		(rule__Statement__GotoStmtAssignment_7)
		{ after(grammarAccess.getStatementAccess().getGotoStmtAssignment_7()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getFallthroughStmtAssignment_8()); }
		(rule__Statement__FallthroughStmtAssignment_8)
		{ after(grammarAccess.getStatementAccess().getFallthroughStmtAssignment_8()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getBlockAssignment_9()); }
		(rule__Statement__BlockAssignment_9)
		{ after(grammarAccess.getStatementAccess().getBlockAssignment_9()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIfStmtAssignment_10()); }
		(rule__Statement__IfStmtAssignment_10)
		{ after(grammarAccess.getStatementAccess().getIfStmtAssignment_10()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSwitchStmtAssignment_11()); }
		(rule__Statement__SwitchStmtAssignment_11)
		{ after(grammarAccess.getStatementAccess().getSwitchStmtAssignment_11()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSelectStmtAssignment_12()); }
		(rule__Statement__SelectStmtAssignment_12)
		{ after(grammarAccess.getStatementAccess().getSelectStmtAssignment_12()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getForStmtAssignment_13()); }
		(rule__Statement__ForStmtAssignment_13)
		{ after(grammarAccess.getStatementAccess().getForStmtAssignment_13()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDeferStmtAssignment_14()); }
		(rule__Statement__DeferStmtAssignment_14)
		{ after(grammarAccess.getStatementAccess().getDeferStmtAssignment_14()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getSendStmtAssignment_0()); }
		(rule__SimpleStmt__SendStmtAssignment_0)
		{ after(grammarAccess.getSimpleStmtAccess().getSendStmtAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtAccess().getExpressionStmtAssignment_1()); }
		(rule__SimpleStmt__ExpressionStmtAssignment_1)
		{ after(grammarAccess.getSimpleStmtAccess().getExpressionStmtAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtAccess().getIncDecStmtAssignment_2()); }
		(rule__SimpleStmt__IncDecStmtAssignment_2)
		{ after(grammarAccess.getSimpleStmtAccess().getIncDecStmtAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtAccess().getAssignmentAssignment_3()); }
		(rule__SimpleStmt__AssignmentAssignment_3)
		{ after(grammarAccess.getSimpleStmtAccess().getAssignmentAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtAccess().getShortVarDeclAssignment_4()); }
		(rule__SimpleStmt__ShortVarDeclAssignment_4)
		{ after(grammarAccess.getSimpleStmtAccess().getShortVarDeclAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleStmtAccess().getEmptyStmtAssignment_5()); }
		(rule__SimpleStmt__EmptyStmtAssignment_5)
		{ after(grammarAccess.getSimpleStmtAccess().getEmptyStmtAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncDecStmt__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncDecStmtAccess().getPlusSignPlusSignKeyword_1_0()); }
		'++'
		{ after(grammarAccess.getIncDecStmtAccess().getPlusSignPlusSignKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIncDecStmtAccess().getHyphenMinusHyphenMinusKeyword_1_1()); }
		'--'
		{ after(grammarAccess.getIncDecStmtAccess().getHyphenMinusHyphenMinusKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_op__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssign_opAccess().getPlusSignKeyword_0_0()); }
		'+'
		{ after(grammarAccess.getAssign_opAccess().getPlusSignKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssign_opAccess().getHyphenMinusKeyword_0_1()); }
		'-'
		{ after(grammarAccess.getAssign_opAccess().getHyphenMinusKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getAssign_opAccess().getVerticalLineKeyword_0_2()); }
		'|'
		{ after(grammarAccess.getAssign_opAccess().getVerticalLineKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getAssign_opAccess().getCircumflexAccentKeyword_0_3()); }
		'^'
		{ after(grammarAccess.getAssign_opAccess().getCircumflexAccentKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getAssign_opAccess().getAsteriskKeyword_0_4()); }
		'*'
		{ after(grammarAccess.getAssign_opAccess().getAsteriskKeyword_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getAssign_opAccess().getSolidusKeyword_0_5()); }
		'/'
		{ after(grammarAccess.getAssign_opAccess().getSolidusKeyword_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getAssign_opAccess().getPercentSignKeyword_0_6()); }
		'%'
		{ after(grammarAccess.getAssign_opAccess().getPercentSignKeyword_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getAssign_opAccess().getLessThanSignLessThanSignKeyword_0_7()); }
		'<<'
		{ after(grammarAccess.getAssign_opAccess().getLessThanSignLessThanSignKeyword_0_7()); }
	)
	|
	(
		{ before(grammarAccess.getAssign_opAccess().getGreaterThanSignGreaterThanSignKeyword_0_8()); }
		'>>'
		{ after(grammarAccess.getAssign_opAccess().getGreaterThanSignGreaterThanSignKeyword_0_8()); }
	)
	|
	(
		{ before(grammarAccess.getAssign_opAccess().getAmpersandKeyword_0_9()); }
		'&'
		{ after(grammarAccess.getAssign_opAccess().getAmpersandKeyword_0_9()); }
	)
	|
	(
		{ before(grammarAccess.getAssign_opAccess().getAmpersandCircumflexAccentKeyword_0_10()); }
		'&^'
		{ after(grammarAccess.getAssign_opAccess().getAmpersandCircumflexAccentKeyword_0_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Alternatives_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getIfStmtAssignment_4_1_0()); }
		(rule__IfStmt__IfStmtAssignment_4_1_0)
		{ after(grammarAccess.getIfStmtAccess().getIfStmtAssignment_4_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIfStmtAccess().getBlockAssignment_4_1_1()); }
		(rule__IfStmt__BlockAssignment_4_1_1)
		{ after(grammarAccess.getIfStmtAccess().getBlockAssignment_4_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtAccess().getExprSwitchStmtAssignment_0()); }
		(rule__SwitchStmt__ExprSwitchStmtAssignment_0)
		{ after(grammarAccess.getSwitchStmtAccess().getExprSwitchStmtAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSwitchStmtAccess().getTypeSwitchStmtAssignment_1()); }
		(rule__SwitchStmt__TypeSwitchStmtAssignment_1)
		{ after(grammarAccess.getSwitchStmtAccess().getTypeSwitchStmtAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSwitchCaseAccess().getGroup_0()); }
		(rule__ExprSwitchCase__Group_0__0)
		{ after(grammarAccess.getExprSwitchCaseAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprSwitchCaseAccess().getDefaultKeyword_1()); }
		'default'
		{ after(grammarAccess.getExprSwitchCaseAccess().getDefaultKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSwitchCaseAccess().getGroup_0()); }
		(rule__TypeSwitchCase__Group_0__0)
		{ after(grammarAccess.getTypeSwitchCaseAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSwitchCaseAccess().getDefaultKeyword_1()); }
		'default'
		{ after(grammarAccess.getTypeSwitchCaseAccess().getDefaultKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseAccess().getGroup_0()); }
		(rule__CommCase__Group_0__0)
		{ after(grammarAccess.getCommCaseAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommCaseAccess().getDefaultKeyword_1()); }
		'default'
		{ after(grammarAccess.getCommCaseAccess().getDefaultKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseAccess().getSendStmtAssignment_0_1_0()); }
		(rule__CommCase__SendStmtAssignment_0_1_0)
		{ after(grammarAccess.getCommCaseAccess().getSendStmtAssignment_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommCaseAccess().getRecvStmtAssignment_0_1_1()); }
		(rule__CommCase__RecvStmtAssignment_0_1_1)
		{ after(grammarAccess.getCommCaseAccess().getRecvStmtAssignment_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecvStmtAccess().getGroup_0_0()); }
		(rule__RecvStmt__Group_0_0__0)
		{ after(grammarAccess.getRecvStmtAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRecvStmtAccess().getGroup_0_1()); }
		(rule__RecvStmt__Group_0_1__0)
		{ after(grammarAccess.getRecvStmtAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getExpressionAssignment_1_0()); }
		(rule__ForStmt__ExpressionAssignment_1_0)
		{ after(grammarAccess.getForStmtAccess().getExpressionAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getForStmtAccess().getForClauseAssignment_1_1()); }
		(rule__ForStmt__ForClauseAssignment_1_1)
		{ after(grammarAccess.getForStmtAccess().getForClauseAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getForStmtAccess().getRangeClauseAssignment_1_2()); }
		(rule__ForStmt__RangeClauseAssignment_1_2)
		{ after(grammarAccess.getForStmtAccess().getRangeClauseAssignment_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeClauseAccess().getGroup_0_0()); }
		(rule__RangeClause__Group_0_0__0)
		{ after(grammarAccess.getRangeClauseAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRangeClauseAccess().getGroup_0_1()); }
		(rule__RangeClause__Group_0_1__0)
		{ after(grammarAccess.getRangeClauseAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeNameAssignment_0()); }
		(rule__Type__TypeNameAssignment_0)
		{ after(grammarAccess.getTypeAccess().getTypeNameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTypeLitAssignment_1()); }
		(rule__Type__TypeLitAssignment_1)
		{ after(grammarAccess.getTypeAccess().getTypeLitAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_2()); }
		(rule__Type__Group_2__0)
		{ after(grammarAccess.getTypeAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameAccess().getIDENTIFIERTerminalRuleCall_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getTypeNameAccess().getIDENTIFIERTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeNameAccess().getQualifiedIdentAssignment_1()); }
		(rule__TypeName__QualifiedIdentAssignment_1)
		{ after(grammarAccess.getTypeNameAccess().getQualifiedIdentAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getArrayTypeAssignment_0()); }
		(rule__TypeLit__ArrayTypeAssignment_0)
		{ after(grammarAccess.getTypeLitAccess().getArrayTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getStructTypeAssignment_1()); }
		(rule__TypeLit__StructTypeAssignment_1)
		{ after(grammarAccess.getTypeLitAccess().getStructTypeAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getPointerTypeAssignment_2()); }
		(rule__TypeLit__PointerTypeAssignment_2)
		{ after(grammarAccess.getTypeLitAccess().getPointerTypeAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getFunctionTypeAssignment_3()); }
		(rule__TypeLit__FunctionTypeAssignment_3)
		{ after(grammarAccess.getTypeLitAccess().getFunctionTypeAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getInterfaceTypeAssignment_4()); }
		(rule__TypeLit__InterfaceTypeAssignment_4)
		{ after(grammarAccess.getTypeLitAccess().getInterfaceTypeAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getSliceTypeAssignment_5()); }
		(rule__TypeLit__SliceTypeAssignment_5)
		{ after(grammarAccess.getTypeLitAccess().getSliceTypeAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getMapTypeAssignment_6()); }
		(rule__TypeLit__MapTypeAssignment_6)
		{ after(grammarAccess.getTypeLitAccess().getMapTypeAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLitAccess().getChannelTypeAssignment_7()); }
		(rule__TypeLit__ChannelTypeAssignment_7)
		{ after(grammarAccess.getTypeLitAccess().getChannelTypeAssignment_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelTypeAccess().getChanKeyword_0_0()); }
		'chan'
		{ after(grammarAccess.getChannelTypeAccess().getChanKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getChannelTypeAccess().getGroup_0_1()); }
		(rule__ChannelType__Group_0_1__0)
		{ after(grammarAccess.getChannelTypeAccess().getGroup_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getChannelTypeAccess().getGroup_0_2()); }
		(rule__ChannelType__Group_0_2__0)
		{ after(grammarAccess.getChannelTypeAccess().getGroup_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodSpecAccess().getGroup_0()); }
		(rule__MethodSpec__Group_0__0)
		{ after(grammarAccess.getMethodSpecAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodSpecAccess().getTypeNameAssignment_1()); }
		(rule__MethodSpec__TypeNameAssignment_1)
		{ after(grammarAccess.getMethodSpecAccess().getTypeNameAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultAccess().getParametersAssignment_0()); }
		(rule__Result__ParametersAssignment_0)
		{ after(grammarAccess.getResultAccess().getParametersAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getResultAccess().getTypeAssignment_1()); }
		(rule__Result__TypeAssignment_1)
		{ after(grammarAccess.getResultAccess().getTypeAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getLiteralAssignment_0()); }
		(rule__Operand__LiteralAssignment_0)
		{ after(grammarAccess.getOperandAccess().getLiteralAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getOperandNameAssignment_1()); }
		(rule__Operand__OperandNameAssignment_1)
		{ after(grammarAccess.getOperandAccess().getOperandNameAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getMethodExprAssignment_2()); }
		(rule__Operand__MethodExprAssignment_2)
		{ after(grammarAccess.getOperandAccess().getMethodExprAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getGroup_3()); }
		(rule__Operand__Group_3__0)
		{ after(grammarAccess.getOperandAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getBasicLitAssignment_0()); }
		(rule__Literal__BasicLitAssignment_0)
		{ after(grammarAccess.getLiteralAccess().getBasicLitAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getCompositeLitAssignment_1()); }
		(rule__Literal__CompositeLitAssignment_1)
		{ after(grammarAccess.getLiteralAccess().getCompositeLitAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getFunctionLitAssignment_2()); }
		(rule__Literal__FunctionLitAssignment_2)
		{ after(grammarAccess.getLiteralAccess().getFunctionLitAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicLit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicLitAccess().getINT_LITTerminalRuleCall_0()); }
		RULE_INT_LIT
		{ after(grammarAccess.getBasicLitAccess().getINT_LITTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicLitAccess().getFLOAT_LITTerminalRuleCall_1()); }
		RULE_FLOAT_LIT
		{ after(grammarAccess.getBasicLitAccess().getFLOAT_LITTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicLitAccess().getIMAGINARY_LITTerminalRuleCall_2()); }
		RULE_IMAGINARY_LIT
		{ after(grammarAccess.getBasicLitAccess().getIMAGINARY_LITTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBasicLitAccess().getRUNE_LITTerminalRuleCall_3()); }
		RULE_RUNE_LIT
		{ after(grammarAccess.getBasicLitAccess().getRUNE_LITTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getBasicLitAccess().getSTRING_LITTerminalRuleCall_4()); }
		RULE_STRING_LIT
		{ after(grammarAccess.getBasicLitAccess().getSTRING_LITTerminalRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperandName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandNameAccess().getIDENTIFIERTerminalRuleCall_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getOperandNameAccess().getIDENTIFIERTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperandNameAccess().getQualifiedIdentAssignment_1()); }
		(rule__OperandName__QualifiedIdentAssignment_1)
		{ after(grammarAccess.getOperandNameAccess().getQualifiedIdentAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getStructTypeAssignment_0()); }
		(rule__LiteralType__StructTypeAssignment_0)
		{ after(grammarAccess.getLiteralTypeAccess().getStructTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getArrayTypeAssignment_1()); }
		(rule__LiteralType__ArrayTypeAssignment_1)
		{ after(grammarAccess.getLiteralTypeAccess().getArrayTypeAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getGroup_2()); }
		(rule__LiteralType__Group_2__0)
		{ after(grammarAccess.getLiteralTypeAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getSliceTypeAssignment_3()); }
		(rule__LiteralType__SliceTypeAssignment_3)
		{ after(grammarAccess.getLiteralTypeAccess().getSliceTypeAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getMapTypeAssignment_4()); }
		(rule__LiteralType__MapTypeAssignment_4)
		{ after(grammarAccess.getLiteralTypeAccess().getMapTypeAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getTypeNameAssignment_5()); }
		(rule__LiteralType__TypeNameAssignment_5)
		{ after(grammarAccess.getLiteralTypeAccess().getTypeNameAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getIDENTIFIERTerminalRuleCall_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getKeyAccess().getIDENTIFIERTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getKeyAccess().getExpressionAssignment_1()); }
		(rule__Key__ExpressionAssignment_1)
		{ after(grammarAccess.getKeyAccess().getExpressionAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getKeyAccess().getLiteralValueAssignment_2()); }
		(rule__Key__LiteralValueAssignment_2)
		{ after(grammarAccess.getKeyAccess().getLiteralValueAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getExpressionAssignment_0()); }
		(rule__Element__ExpressionAssignment_0)
		{ after(grammarAccess.getElementAccess().getExpressionAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getLiteralValueAssignment_1()); }
		(rule__Element__LiteralValueAssignment_1)
		{ after(grammarAccess.getElementAccess().getLiteralValueAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclAccess().getGroup_0_0()); }
		(rule__FieldDecl__Group_0_0__0)
		{ after(grammarAccess.getFieldDeclAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldDeclAccess().getAnonymousFieldAssignment_0_1()); }
		(rule__FieldDecl__AnonymousFieldAssignment_0_1)
		{ after(grammarAccess.getFieldDeclAccess().getAnonymousFieldAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getAlternatives_0()); }
		(rule__PrimaryExpr__Alternatives_0)
		{ after(grammarAccess.getPrimaryExprAccess().getAlternatives_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprSelectorAssignment_1()); }
		(rule__PrimaryExpr__PrimaryExprSelectorAssignment_1)
		{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprSelectorAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprIndexAssignment_2()); }
		(rule__PrimaryExpr__PrimaryExprIndexAssignment_2)
		{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprIndexAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprSliceAssignment_3()); }
		(rule__PrimaryExpr__PrimaryExprSliceAssignment_3)
		{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprSliceAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprTypeAssertionAssignment_4()); }
		(rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4)
		{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprTypeAssertionAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprArgumentsAssignment_5()); }
		(rule__PrimaryExpr__PrimaryExprArgumentsAssignment_5)
		{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprArgumentsAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getOperandAssignment_0_0()); }
		(rule__PrimaryExpr__OperandAssignment_0_0)
		{ after(grammarAccess.getPrimaryExprAccess().getOperandAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getConversionAssignment_0_1()); }
		(rule__PrimaryExpr__ConversionAssignment_0_1)
		{ after(grammarAccess.getPrimaryExprAccess().getConversionAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprStuff__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprStuffAccess().getSelectorAssignment_0()); }
		(rule__PrimaryExprStuff__SelectorAssignment_0)
		{ after(grammarAccess.getPrimaryExprStuffAccess().getSelectorAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprStuffAccess().getIndexAssignment_1()); }
		(rule__PrimaryExprStuff__IndexAssignment_1)
		{ after(grammarAccess.getPrimaryExprStuffAccess().getIndexAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprStuffAccess().getSliceAssignment_2()); }
		(rule__PrimaryExprStuff__SliceAssignment_2)
		{ after(grammarAccess.getPrimaryExprStuffAccess().getSliceAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprStuffAccess().getTypeAssertionAssignment_3()); }
		(rule__PrimaryExprStuff__TypeAssertionAssignment_3)
		{ after(grammarAccess.getPrimaryExprStuffAccess().getTypeAssertionAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprStuffAccess().getArgumentsAssignment_4()); }
		(rule__PrimaryExprStuff__ArgumentsAssignment_4)
		{ after(grammarAccess.getPrimaryExprStuffAccess().getArgumentsAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getGroup_1_0()); }
		(rule__Slice__Group_1_0__0)
		{ after(grammarAccess.getSliceAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSliceAccess().getGroup_1_1()); }
		(rule__Slice__Group_1_1__0)
		{ after(grammarAccess.getSliceAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getExpressionListAssignment_1_0_0()); }
		(rule__Arguments__ExpressionListAssignment_1_0_0)
		{ after(grammarAccess.getArgumentsAccess().getExpressionListAssignment_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgumentsAccess().getGroup_1_0_1()); }
		(rule__Arguments__Group_1_0_1__0)
		{ after(grammarAccess.getArgumentsAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReceiverTypeAccess().getTypeNameAssignment_0()); }
		(rule__ReceiverType__TypeNameAssignment_0)
		{ after(grammarAccess.getReceiverTypeAccess().getTypeNameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getReceiverTypeAccess().getGroup_1()); }
		(rule__ReceiverType__Group_1__0)
		{ after(grammarAccess.getReceiverTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getReceiverTypeAccess().getGroup_2()); }
		(rule__ReceiverType__Group_2__0)
		{ after(grammarAccess.getReceiverTypeAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getPrimaryExprAssignment_0()); }
		(rule__UnaryExpr__PrimaryExprAssignment_0)
		{ after(grammarAccess.getUnaryExprAccess().getPrimaryExprAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getGroup_1()); }
		(rule__UnaryExpr__Group_1__0)
		{ after(grammarAccess.getUnaryExprAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getPlusSignKeyword_1_0_0()); }
		'+'
		{ after(grammarAccess.getUnaryExprAccess().getPlusSignKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getHyphenMinusKeyword_1_0_1()); }
		'-'
		{ after(grammarAccess.getUnaryExprAccess().getHyphenMinusKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getExclamationMarkKeyword_1_0_2()); }
		'!'
		{ after(grammarAccess.getUnaryExprAccess().getExclamationMarkKeyword_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getCircumflexAccentKeyword_1_0_3()); }
		'^'
		{ after(grammarAccess.getUnaryExprAccess().getCircumflexAccentKeyword_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getAsteriskKeyword_1_0_4()); }
		'*'
		{ after(grammarAccess.getUnaryExprAccess().getAsteriskKeyword_1_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getAmpersandKeyword_1_0_5()); }
		'&'
		{ after(grammarAccess.getUnaryExprAccess().getAmpersandKeyword_1_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getLessThanSignHyphenMinusKeyword_1_0_6()); }
		'<-'
		{ after(grammarAccess.getUnaryExprAccess().getLessThanSignHyphenMinusKeyword_1_0_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceFile__Group__0__Impl
	rule__SourceFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceFileAccess().getPackageClauseAssignment_0()); }
	(rule__SourceFile__PackageClauseAssignment_0)
	{ after(grammarAccess.getSourceFileAccess().getPackageClauseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceFile__Group__1__Impl
	rule__SourceFile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceFileAccess().getGroup_1()); }
	(rule__SourceFile__Group_1__0)*
	{ after(grammarAccess.getSourceFileAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceFile__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceFileAccess().getGroup_2()); }
	(rule__SourceFile__Group_2__0)*
	{ after(grammarAccess.getSourceFileAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceFile__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceFile__Group_1__0__Impl
	rule__SourceFile__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceFileAccess().getImportDeclAssignment_1_0()); }
	(rule__SourceFile__ImportDeclAssignment_1_0)
	{ after(grammarAccess.getSourceFileAccess().getImportDeclAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceFile__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceFileAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getSourceFileAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceFile__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceFile__Group_2__0__Impl
	rule__SourceFile__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceFileAccess().getTopLevelDeclAssignment_2_0()); }
	(rule__SourceFile__TopLevelDeclAssignment_2_0)
	{ after(grammarAccess.getSourceFileAccess().getTopLevelDeclAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceFile__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceFileAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getSourceFileAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageClause__Group__0__Impl
	rule__PackageClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageClauseAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getPackageClauseAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageClauseAccess().getIDENTIFIERTerminalRuleCall_1()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getPackageClauseAccess().getIDENTIFIERTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group__0__Impl
	rule__ImportDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportDeclAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getAlternatives_1()); }
	(rule__ImportDecl__Alternatives_1)
	{ after(grammarAccess.getImportDeclAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDecl__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group_1_1__0__Impl
	rule__ImportDecl__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
	'('
	{ after(grammarAccess.getImportDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group_1_1__1__Impl
	rule__ImportDecl__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getImportSpecAssignment_1_1_1()); }
	(rule__ImportDecl__ImportSpecAssignment_1_1_1)*
	{ after(grammarAccess.getImportDeclAccess().getImportSpecAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_1_1_2()); }
	')'
	{ after(grammarAccess.getImportDeclAccess().getRightParenthesisKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportSpec__Group__0__Impl
	rule__ImportSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportSpecAccess().getAlternatives_0()); }
	(rule__ImportSpec__Alternatives_0)?
	{ after(grammarAccess.getImportSpecAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportSpecAccess().getImportPathAssignment_1()); }
	(rule__ImportSpec__ImportPathAssignment_1)
	{ after(grammarAccess.getImportSpecAccess().getImportPathAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group__0__Impl
	rule__ConstDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getConstKeyword_0()); }
	'const'
	{ after(grammarAccess.getConstDeclAccess().getConstKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getAlternatives_1()); }
	(rule__ConstDecl__Alternatives_1)
	{ after(grammarAccess.getConstDeclAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstDecl__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_1_1__0__Impl
	rule__ConstDecl__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
	'('
	{ after(grammarAccess.getConstDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_1_1__1__Impl
	rule__ConstDecl__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getGroup_1_1_1()); }
	(rule__ConstDecl__Group_1_1_1__0)*
	{ after(grammarAccess.getConstDeclAccess().getGroup_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_1_1_2()); }
	')'
	{ after(grammarAccess.getConstDeclAccess().getRightParenthesisKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstDecl__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_1_1_1__0__Impl
	rule__ConstDecl__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getConstSpecAssignment_1_1_1_0()); }
	(rule__ConstDecl__ConstSpecAssignment_1_1_1_0)
	{ after(grammarAccess.getConstDeclAccess().getConstSpecAssignment_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDecl__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDeclAccess().getSemicolonKeyword_1_1_1_1()); }
	';'
	{ after(grammarAccess.getConstDeclAccess().getSemicolonKeyword_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group__0__Impl
	rule__ConstSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getIdentifierListAssignment_0()); }
	(rule__ConstSpec__IdentifierListAssignment_0)
	{ after(grammarAccess.getConstSpecAccess().getIdentifierListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getGroup_1()); }
	(rule__ConstSpec__Group_1__0)?
	{ after(grammarAccess.getConstSpecAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstSpec__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group_1__0__Impl
	rule__ConstSpec__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getTypeAssignment_1_0()); }
	(rule__ConstSpec__TypeAssignment_1_0)?
	{ after(grammarAccess.getConstSpecAccess().getTypeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group_1__1__Impl
	rule__ConstSpec__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getConstSpecAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstSpec__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstSpecAccess().getExpressionListAssignment_1_2()); }
	(rule__ConstSpec__ExpressionListAssignment_1_2)
	{ after(grammarAccess.getConstSpecAccess().getExpressionListAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group__0__Impl
	rule__IdentifierList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getIdentifierListAccess().getIDENTIFIERTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getGroup_1()); }
	(rule__IdentifierList__Group_1__0)*
	{ after(grammarAccess.getIdentifierListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group_1__0__Impl
	rule__IdentifierList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getIdentifierListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IdentifierList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierListAccess().getIDENTIFIERTerminalRuleCall_1_1()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getIdentifierListAccess().getIDENTIFIERTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group__0__Impl
	rule__ExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getExpressionAssignment_0()); }
	(rule__ExpressionList__ExpressionAssignment_0)
	{ after(grammarAccess.getExpressionListAccess().getExpressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getGroup_1()); }
	(rule__ExpressionList__Group_1__0)*
	{ after(grammarAccess.getExpressionListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_1__0__Impl
	rule__ExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getExpressionAssignment_1_1()); }
	(rule__ExpressionList__ExpressionAssignment_1_1)
	{ after(grammarAccess.getExpressionListAccess().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group__0__Impl
	rule__TypeDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getTypeKeyword_0()); }
	'type'
	{ after(grammarAccess.getTypeDeclAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getAlternatives_1()); }
	(rule__TypeDecl__Alternatives_1)
	{ after(grammarAccess.getTypeDeclAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_1_1__0__Impl
	rule__TypeDecl__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
	'('
	{ after(grammarAccess.getTypeDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_1_1__1__Impl
	rule__TypeDecl__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getGroup_1_1_1()); }
	(rule__TypeDecl__Group_1_1_1__0)*
	{ after(grammarAccess.getTypeDeclAccess().getGroup_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_1_1_2()); }
	')'
	{ after(grammarAccess.getTypeDeclAccess().getRightParenthesisKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_1_1_1__0__Impl
	rule__TypeDecl__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getTypeSpecAssignment_1_1_1_0()); }
	(rule__TypeDecl__TypeSpecAssignment_1_1_1_0)
	{ after(grammarAccess.getTypeDeclAccess().getTypeSpecAssignment_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDecl__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclAccess().getSemicolonKeyword_1_1_1_1()); }
	';'
	{ after(grammarAccess.getTypeDeclAccess().getSemicolonKeyword_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSpec__Group__0__Impl
	rule__TypeSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSpecAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getTypeSpecAccess().getIDENTIFIERTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSpecAccess().getTypeAssignment_1()); }
	(rule__TypeSpec__TypeAssignment_1)
	{ after(grammarAccess.getTypeSpecAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDecl__Group__0__Impl
	rule__FunctionDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getFunctionDeclAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDecl__Group__1__Impl
	rule__FunctionDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclAccess().getIDENTIFIERTerminalRuleCall_1()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getFunctionDeclAccess().getIDENTIFIERTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDeclAccess().getAlternatives_2()); }
	(rule__FunctionDecl__Alternatives_2)
	{ after(grammarAccess.getFunctionDeclAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getSignatureAssignment_0()); }
	(rule__Function__SignatureAssignment_0)
	{ after(grammarAccess.getFunctionAccess().getSignatureAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getBlockAssignment_1()); }
	(rule__Function__BlockAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getBlockAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__0__Impl
	rule__MethodDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getMethodDeclAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__1__Impl
	rule__MethodDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getReceiverAssignment_1()); }
	(rule__MethodDecl__ReceiverAssignment_1)
	{ after(grammarAccess.getMethodDeclAccess().getReceiverAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__2__Impl
	rule__MethodDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getIDENTIFIERTerminalRuleCall_2()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getMethodDeclAccess().getIDENTIFIERTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getAlternatives_3()); }
	(rule__MethodDecl__Alternatives_3)
	{ after(grammarAccess.getMethodDeclAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__0__Impl
	rule__VarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getVarDeclAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getAlternatives_1()); }
	(rule__VarDecl__Alternatives_1)
	{ after(grammarAccess.getVarDeclAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1_1__0__Impl
	rule__VarDecl__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
	'('
	{ after(grammarAccess.getVarDeclAccess().getLeftParenthesisKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1_1__1__Impl
	rule__VarDecl__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getGroup_1_1_1()); }
	(rule__VarDecl__Group_1_1_1__0)*
	{ after(grammarAccess.getVarDeclAccess().getGroup_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_1_1_2()); }
	')'
	{ after(grammarAccess.getVarDeclAccess().getRightParenthesisKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1_1_1__0__Impl
	rule__VarDecl__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getVarSpecAssignment_1_1_1_0()); }
	(rule__VarDecl__VarSpecAssignment_1_1_1_0)
	{ after(grammarAccess.getVarDeclAccess().getVarSpecAssignment_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getSemicolonKeyword_1_1_1_1()); }
	';'
	{ after(grammarAccess.getVarDeclAccess().getSemicolonKeyword_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group__0__Impl
	rule__VarSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getIdentifierListAssignment_0()); }
	(rule__VarSpec__IdentifierListAssignment_0)
	{ after(grammarAccess.getVarSpecAccess().getIdentifierListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getAlternatives_1()); }
	(rule__VarSpec__Alternatives_1)
	{ after(grammarAccess.getVarSpecAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0__0__Impl
	rule__VarSpec__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getTypeAssignment_1_0_0()); }
	(rule__VarSpec__TypeAssignment_1_0_0)
	{ after(grammarAccess.getVarSpecAccess().getTypeAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getGroup_1_0_1()); }
	(rule__VarSpec__Group_1_0_1__0)?
	{ after(grammarAccess.getVarSpecAccess().getGroup_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0_1__0__Impl
	rule__VarSpec__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0()); }
	'='
	{ after(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_0_1_1()); }
	(rule__VarSpec__ExpressionListAssignment_1_0_1_1)
	{ after(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarSpec__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_1__0__Impl
	rule__VarSpec__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0()); }
	'='
	{ after(grammarAccess.getVarSpecAccess().getEqualsSignKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarSpec__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_1_1()); }
	(rule__VarSpec__ExpressionListAssignment_1_1_1)
	{ after(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getStatementListAssignment_1()); }
	(rule__Block__StatementListAssignment_1)
	{ after(grammarAccess.getBlockAccess().getStatementListAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group__0__Impl
	rule__StatementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getStatementAssignment_0()); }
	(rule__StatementList__StatementAssignment_0)
	{ after(grammarAccess.getStatementListAccess().getStatementAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getStatementListAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SendStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendStmt__Group__0__Impl
	rule__SendStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendStmtAccess().getExpressionAssignment_0()); }
	(rule__SendStmt__ExpressionAssignment_0)
	{ after(grammarAccess.getSendStmtAccess().getExpressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendStmt__Group__1__Impl
	rule__SendStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendStmtAccess().getLessThanSignHyphenMinusKeyword_1()); }
	'<-'
	{ after(grammarAccess.getSendStmtAccess().getLessThanSignHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendStmtAccess().getExpressionAssignment_2()); }
	(rule__SendStmt__ExpressionAssignment_2)
	{ after(grammarAccess.getSendStmtAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IncDecStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IncDecStmt__Group__0__Impl
	rule__IncDecStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncDecStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncDecStmtAccess().getExpressionAssignment_0()); }
	(rule__IncDecStmt__ExpressionAssignment_0)
	{ after(grammarAccess.getIncDecStmtAccess().getExpressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncDecStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IncDecStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncDecStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncDecStmtAccess().getAlternatives_1()); }
	(rule__IncDecStmt__Alternatives_1)
	{ after(grammarAccess.getIncDecStmtAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getExpressionListAssignment_0()); }
	(rule__Assignment__ExpressionListAssignment_0)
	{ after(grammarAccess.getAssignmentAccess().getExpressionListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAssign_opAssignment_1()); }
	(rule__Assignment__Assign_opAssignment_1)
	{ after(grammarAccess.getAssignmentAccess().getAssign_opAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getExpressionListAssignment_2()); }
	(rule__Assignment__ExpressionListAssignment_2)
	{ after(grammarAccess.getAssignmentAccess().getExpressionListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assign_op__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign_op__Group__0__Impl
	rule__Assign_op__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_op__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssign_opAccess().getAlternatives_0()); }
	(rule__Assign_op__Alternatives_0)?
	{ after(grammarAccess.getAssign_opAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_op__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign_op__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign_op__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssign_opAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssign_opAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShortVarDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortVarDecl__Group__0__Impl
	rule__ShortVarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortVarDeclAccess().getIdentifierListAssignment_0()); }
	(rule__ShortVarDecl__IdentifierListAssignment_0)
	{ after(grammarAccess.getShortVarDeclAccess().getIdentifierListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortVarDecl__Group__1__Impl
	rule__ShortVarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getShortVarDeclAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShortVarDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortVarDeclAccess().getExpressionListAssignment_2()); }
	(rule__ShortVarDecl__ExpressionListAssignment_2)
	{ after(grammarAccess.getShortVarDeclAccess().getExpressionListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStmt__Group__0__Impl
	rule__LabeledStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStmtAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getLabeledStmtAccess().getIDENTIFIERTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStmt__Group__1__Impl
	rule__LabeledStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStmtAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getLabeledStmtAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStmtAccess().getStatementAssignment_2()); }
	(rule__LabeledStmt__StatementAssignment_2)
	{ after(grammarAccess.getLabeledStmtAccess().getStatementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStmt__Group__0__Impl
	rule__ReturnStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStmtAccess().getReturnKeyword_0()); }
	'return'
	{ after(grammarAccess.getReturnStmtAccess().getReturnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStmtAccess().getExpressionListAssignment_1()); }
	(rule__ReturnStmt__ExpressionListAssignment_1)?
	{ after(grammarAccess.getReturnStmtAccess().getExpressionListAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BreakStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStmt__Group__0__Impl
	rule__BreakStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStmtAccess().getBreakKeyword_0()); }
	'break'
	{ after(grammarAccess.getBreakStmtAccess().getBreakKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStmtAccess().getIDENTIFIERTerminalRuleCall_1()); }
	(RULE_IDENTIFIER)?
	{ after(grammarAccess.getBreakStmtAccess().getIDENTIFIERTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContinueStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContinueStmt__Group__0__Impl
	rule__ContinueStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinueStmtAccess().getContinueKeyword_0()); }
	'continue'
	{ after(grammarAccess.getContinueStmtAccess().getContinueKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContinueStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinueStmtAccess().getIDENTIFIERTerminalRuleCall_1()); }
	(RULE_IDENTIFIER)?
	{ after(grammarAccess.getContinueStmtAccess().getIDENTIFIERTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GotoStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GotoStmt__Group__0__Impl
	rule__GotoStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGotoStmtAccess().getGotoKeyword_0()); }
	'goto'
	{ after(grammarAccess.getGotoStmtAccess().getGotoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GotoStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGotoStmtAccess().getIDENTIFIERTerminalRuleCall_1()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getGotoStmtAccess().getIDENTIFIERTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeferStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeferStmt__Group__0__Impl
	rule__DeferStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeferStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeferStmtAccess().getDeferKeyword_0()); }
	'defer'
	{ after(grammarAccess.getDeferStmtAccess().getDeferKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeferStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeferStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeferStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeferStmtAccess().getExpressionAssignment_1()); }
	(rule__DeferStmt__ExpressionAssignment_1)
	{ after(grammarAccess.getDeferStmtAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__0__Impl
	rule__IfStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__1__Impl
	rule__IfStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getGroup_1()); }
	(rule__IfStmt__Group_1__0)?
	{ after(grammarAccess.getIfStmtAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__2__Impl
	rule__IfStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getExpressionAssignment_2()); }
	(rule__IfStmt__ExpressionAssignment_2)
	{ after(grammarAccess.getIfStmtAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__3__Impl
	rule__IfStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getBlockAssignment_3()); }
	(rule__IfStmt__BlockAssignment_3)
	{ after(grammarAccess.getIfStmtAccess().getBlockAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getGroup_4()); }
	(rule__IfStmt__Group_4__0)?
	{ after(grammarAccess.getIfStmtAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_1__0__Impl
	rule__IfStmt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getSimpleStmtAssignment_1_0()); }
	(rule__IfStmt__SimpleStmtAssignment_1_0)
	{ after(grammarAccess.getIfStmtAccess().getSimpleStmtAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getIfStmtAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_4__0__Impl
	rule__IfStmt__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getElseKeyword_4_0()); }
	'else'
	{ after(grammarAccess.getIfStmtAccess().getElseKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getAlternatives_4_1()); }
	(rule__IfStmt__Alternatives_4_1)
	{ after(grammarAccess.getIfStmtAccess().getAlternatives_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSwitchStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchStmt__Group__0__Impl
	rule__ExprSwitchStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchStmtAccess().getSwitchKeyword_0()); }
	'switch'
	{ after(grammarAccess.getExprSwitchStmtAccess().getSwitchKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchStmt__Group__1__Impl
	rule__ExprSwitchStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchStmtAccess().getGroup_1()); }
	(rule__ExprSwitchStmt__Group_1__0)?
	{ after(grammarAccess.getExprSwitchStmtAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchStmt__Group__2__Impl
	rule__ExprSwitchStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchStmtAccess().getExpressionAssignment_2()); }
	(rule__ExprSwitchStmt__ExpressionAssignment_2)?
	{ after(grammarAccess.getExprSwitchStmtAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchStmt__Group__3__Impl
	rule__ExprSwitchStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchStmtAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getExprSwitchStmtAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchStmt__Group__4__Impl
	rule__ExprSwitchStmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchStmtAccess().getExprCaseClauseAssignment_4()); }
	(rule__ExprSwitchStmt__ExprCaseClauseAssignment_4)*
	{ after(grammarAccess.getExprSwitchStmtAccess().getExprCaseClauseAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchStmt__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchStmtAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getExprSwitchStmtAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSwitchStmt__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchStmt__Group_1__0__Impl
	rule__ExprSwitchStmt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchStmtAccess().getSimpleStmtAssignment_1_0()); }
	(rule__ExprSwitchStmt__SimpleStmtAssignment_1_0)
	{ after(grammarAccess.getExprSwitchStmtAccess().getSimpleStmtAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchStmt__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchStmtAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getExprSwitchStmtAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprCaseClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprCaseClause__Group__0__Impl
	rule__ExprCaseClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseAssignment_0()); }
	(rule__ExprCaseClause__ExprSwitchCaseAssignment_0)
	{ after(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprCaseClause__Group__1__Impl
	rule__ExprCaseClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprCaseClauseAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getExprCaseClauseAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprCaseClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprCaseClauseAccess().getStatementListAssignment_2()); }
	(rule__ExprCaseClause__StatementListAssignment_2)
	{ after(grammarAccess.getExprCaseClauseAccess().getStatementListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSwitchCase__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchCase__Group_0__0__Impl
	rule__ExprSwitchCase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchCaseAccess().getCaseKeyword_0_0()); }
	'case'
	{ after(grammarAccess.getExprSwitchCaseAccess().getCaseKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSwitchCase__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSwitchCaseAccess().getExpressionListAssignment_0_1()); }
	(rule__ExprSwitchCase__ExpressionListAssignment_0_1)
	{ after(grammarAccess.getExprSwitchCaseAccess().getExpressionListAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSwitchStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchStmt__Group__0__Impl
	rule__TypeSwitchStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchStmtAccess().getSwitchKeyword_0()); }
	'switch'
	{ after(grammarAccess.getTypeSwitchStmtAccess().getSwitchKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchStmt__Group__1__Impl
	rule__TypeSwitchStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchStmtAccess().getGroup_1()); }
	(rule__TypeSwitchStmt__Group_1__0)?
	{ after(grammarAccess.getTypeSwitchStmtAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchStmt__Group__2__Impl
	rule__TypeSwitchStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchStmtAccess().getTypeSwitchGuardAssignment_2()); }
	(rule__TypeSwitchStmt__TypeSwitchGuardAssignment_2)
	{ after(grammarAccess.getTypeSwitchStmtAccess().getTypeSwitchGuardAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchStmt__Group__3__Impl
	rule__TypeSwitchStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchStmtAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getTypeSwitchStmtAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchStmt__Group__4__Impl
	rule__TypeSwitchStmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchStmtAccess().getTypeCaseClauseAssignment_4()); }
	(rule__TypeSwitchStmt__TypeCaseClauseAssignment_4)*
	{ after(grammarAccess.getTypeSwitchStmtAccess().getTypeCaseClauseAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchStmt__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchStmtAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getTypeSwitchStmtAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSwitchStmt__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchStmt__Group_1__0__Impl
	rule__TypeSwitchStmt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchStmtAccess().getSimpleStmtAssignment_1_0()); }
	(rule__TypeSwitchStmt__SimpleStmtAssignment_1_0)
	{ after(grammarAccess.getTypeSwitchStmtAccess().getSimpleStmtAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchStmt__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchStmtAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getTypeSwitchStmtAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSwitchGuard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group__0__Impl
	rule__TypeSwitchGuard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getGroup_0()); }
	(rule__TypeSwitchGuard__Group_0__0)?
	{ after(grammarAccess.getTypeSwitchGuardAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group__1__Impl
	rule__TypeSwitchGuard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprAssignment_1()); }
	(rule__TypeSwitchGuard__PrimaryExprAssignment_1)
	{ after(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group__2__Impl
	rule__TypeSwitchGuard__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getTypeSwitchGuardAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group__3__Impl
	rule__TypeSwitchGuard__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getTypeSwitchGuardAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group__4__Impl
	rule__TypeSwitchGuard__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getTypeKeyword_4()); }
	'type'
	{ after(grammarAccess.getTypeSwitchGuardAccess().getTypeKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getTypeSwitchGuardAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSwitchGuard__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group_0__0__Impl
	rule__TypeSwitchGuard__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getIDENTIFIERTerminalRuleCall_0_0()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getTypeSwitchGuardAccess().getIDENTIFIERTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchGuard__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1()); }
	':='
	{ after(grammarAccess.getTypeSwitchGuardAccess().getColonEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeCaseClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCaseClause__Group__0__Impl
	rule__TypeCaseClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseAssignment_0()); }
	(rule__TypeCaseClause__TypeSwitchCaseAssignment_0)
	{ after(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCaseClause__Group__1__Impl
	rule__TypeCaseClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getTypeCaseClauseAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCaseClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCaseClauseAccess().getStatementListAssignment_2()); }
	(rule__TypeCaseClause__StatementListAssignment_2)
	{ after(grammarAccess.getTypeCaseClauseAccess().getStatementListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSwitchCase__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchCase__Group_0__0__Impl
	rule__TypeSwitchCase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchCaseAccess().getCaseKeyword_0_0()); }
	'case'
	{ after(grammarAccess.getTypeSwitchCaseAccess().getCaseKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSwitchCase__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSwitchCaseAccess().getTypeListAssignment_0_1()); }
	(rule__TypeSwitchCase__TypeListAssignment_0_1)
	{ after(grammarAccess.getTypeSwitchCaseAccess().getTypeListAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeList__Group__0__Impl
	rule__TypeList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeListAccess().getTypeAssignment_0()); }
	(rule__TypeList__TypeAssignment_0)
	{ after(grammarAccess.getTypeListAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeListAccess().getGroup_1()); }
	(rule__TypeList__Group_1__0)*
	{ after(grammarAccess.getTypeListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeList__Group_1__0__Impl
	rule__TypeList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getTypeListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeListAccess().getTypeAssignment_1_1()); }
	(rule__TypeList__TypeAssignment_1_1)
	{ after(grammarAccess.getTypeListAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStmt__Group__0__Impl
	rule__SelectStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStmtAccess().getSelectKeyword_0()); }
	'select'
	{ after(grammarAccess.getSelectStmtAccess().getSelectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStmt__Group__1__Impl
	rule__SelectStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSelectStmtAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStmt__Group__2__Impl
	rule__SelectStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStmtAccess().getCommClauseAssignment_2()); }
	(rule__SelectStmt__CommClauseAssignment_2)*
	{ after(grammarAccess.getSelectStmtAccess().getCommClauseAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStmt__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getSelectStmtAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommClause__Group__0__Impl
	rule__CommClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommClauseAccess().getCommCaseAssignment_0()); }
	(rule__CommClause__CommCaseAssignment_0)
	{ after(grammarAccess.getCommClauseAccess().getCommCaseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommClause__Group__1__Impl
	rule__CommClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommClauseAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getCommClauseAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommClauseAccess().getStatementListAssignment_2()); }
	(rule__CommClause__StatementListAssignment_2)
	{ after(grammarAccess.getCommClauseAccess().getStatementListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommCase__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCase__Group_0__0__Impl
	rule__CommCase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseAccess().getCaseKeyword_0_0()); }
	'case'
	{ after(grammarAccess.getCommCaseAccess().getCaseKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommCase__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommCaseAccess().getAlternatives_0_1()); }
	(rule__CommCase__Alternatives_0_1)
	{ after(grammarAccess.getCommCaseAccess().getAlternatives_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RecvStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecvStmt__Group__0__Impl
	rule__RecvStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvStmtAccess().getAlternatives_0()); }
	(rule__RecvStmt__Alternatives_0)?
	{ after(grammarAccess.getRecvStmtAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecvStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvStmtAccess().getExpressionAssignment_1()); }
	(rule__RecvStmt__ExpressionAssignment_1)
	{ after(grammarAccess.getRecvStmtAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RecvStmt__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecvStmt__Group_0_0__0__Impl
	rule__RecvStmt__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvStmtAccess().getExpressionListAssignment_0_0_0()); }
	(rule__RecvStmt__ExpressionListAssignment_0_0_0)
	{ after(grammarAccess.getRecvStmtAccess().getExpressionListAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecvStmt__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvStmtAccess().getEqualsSignKeyword_0_0_1()); }
	'='
	{ after(grammarAccess.getRecvStmtAccess().getEqualsSignKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RecvStmt__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecvStmt__Group_0_1__0__Impl
	rule__RecvStmt__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvStmtAccess().getIdentifierListAssignment_0_1_0()); }
	(rule__RecvStmt__IdentifierListAssignment_0_1_0)
	{ after(grammarAccess.getRecvStmtAccess().getIdentifierListAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecvStmt__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvStmtAccess().getColonEqualsSignKeyword_0_1_1()); }
	':='
	{ after(grammarAccess.getRecvStmtAccess().getColonEqualsSignKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__0__Impl
	rule__ForStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForStmtAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__1__Impl
	rule__ForStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getAlternatives_1()); }
	(rule__ForStmt__Alternatives_1)?
	{ after(grammarAccess.getForStmtAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getBlockAssignment_2()); }
	(rule__ForStmt__BlockAssignment_2)
	{ after(grammarAccess.getForStmtAccess().getBlockAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__0__Impl
	rule__ForClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getSimpleStmtAssignment_0()); }
	(rule__ForClause__SimpleStmtAssignment_0)?
	{ after(grammarAccess.getForClauseAccess().getSimpleStmtAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__1__Impl
	rule__ForClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getForClauseAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__2__Impl
	rule__ForClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getExpressionAssignment_2()); }
	(rule__ForClause__ExpressionAssignment_2)?
	{ after(grammarAccess.getForClauseAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__3__Impl
	rule__ForClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getForClauseAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForClause__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForClauseAccess().getSimpleStmtAssignment_4()); }
	(rule__ForClause__SimpleStmtAssignment_4)?
	{ after(grammarAccess.getForClauseAccess().getSimpleStmtAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group__0__Impl
	rule__RangeClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getAlternatives_0()); }
	(rule__RangeClause__Alternatives_0)?
	{ after(grammarAccess.getRangeClauseAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group__1__Impl
	rule__RangeClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getRangeKeyword_1()); }
	'range'
	{ after(grammarAccess.getRangeClauseAccess().getRangeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getExpressionAssignment_2()); }
	(rule__RangeClause__ExpressionAssignment_2)
	{ after(grammarAccess.getRangeClauseAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeClause__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group_0_0__0__Impl
	rule__RangeClause__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getExpressionListAssignment_0_0_0()); }
	(rule__RangeClause__ExpressionListAssignment_0_0_0)
	{ after(grammarAccess.getRangeClauseAccess().getExpressionListAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getEqualsSignKeyword_0_0_1()); }
	'='
	{ after(grammarAccess.getRangeClauseAccess().getEqualsSignKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeClause__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group_0_1__0__Impl
	rule__RangeClause__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getIdentifierListAssignment_0_1_0()); }
	(rule__RangeClause__IdentifierListAssignment_0_1_0)
	{ after(grammarAccess.getRangeClauseAccess().getIdentifierListAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeClause__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1()); }
	':='
	{ after(grammarAccess.getRangeClauseAccess().getColonEqualsSignKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GoStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoStmt__Group__0__Impl
	rule__GoStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GoStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoStmtAccess().getGoKeyword_0()); }
	'go'
	{ after(grammarAccess.getGoStmtAccess().getGoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GoStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoStmtAccess().getExpressionAssignment_1()); }
	(rule__GoStmt__ExpressionAssignment_1)
	{ after(grammarAccess.getGoStmtAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__0__Impl
	rule__Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__1__Impl
	rule__Type__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeAssignment_2_1()); }
	(rule__Type__TypeAssignment_2_1)
	{ after(grammarAccess.getTypeAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__0__Impl
	rule__ArrayType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__1__Impl
	rule__ArrayType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getArrayLengthAssignment_1()); }
	(rule__ArrayType__ArrayLengthAssignment_1)
	{ after(grammarAccess.getArrayTypeAccess().getArrayLengthAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__2__Impl
	rule__ArrayType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getElementTypeAssignment_3()); }
	(rule__ArrayType__ElementTypeAssignment_3)
	{ after(grammarAccess.getArrayTypeAccess().getElementTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PointerType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointerType__Group__0__Impl
	rule__PointerType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0()); }
	'*'
	{ after(grammarAccess.getPointerTypeAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointerType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointerTypeAccess().getTypeAssignment_1()); }
	(rule__PointerType__TypeAssignment_1)
	{ after(grammarAccess.getPointerTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__0__Impl
	rule__InterfaceType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_0()); }
	'interface'
	{ after(grammarAccess.getInterfaceTypeAccess().getInterfaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__1__Impl
	rule__InterfaceType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getInterfaceTypeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__2__Impl
	rule__InterfaceType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getGroup_2()); }
	(rule__InterfaceType__Group_2__0)*
	{ after(grammarAccess.getInterfaceTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getInterfaceTypeAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group_2__0__Impl
	rule__InterfaceType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getMethodSpecAssignment_2_0()); }
	(rule__InterfaceType__MethodSpecAssignment_2_0)
	{ after(grammarAccess.getInterfaceTypeAccess().getMethodSpecAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceTypeAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getInterfaceTypeAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SliceType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SliceType__Group__0__Impl
	rule__SliceType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SliceType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceTypeAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getSliceTypeAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SliceType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SliceType__Group__1__Impl
	rule__SliceType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SliceType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceTypeAccess().getRightSquareBracketKeyword_1()); }
	']'
	{ after(grammarAccess.getSliceTypeAccess().getRightSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SliceType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SliceType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SliceType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceTypeAccess().getElementTypeAssignment_2()); }
	(rule__SliceType__ElementTypeAssignment_2)
	{ after(grammarAccess.getSliceTypeAccess().getElementTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__0__Impl
	rule__MapType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getMapKeyword_0()); }
	'map'
	{ after(grammarAccess.getMapTypeAccess().getMapKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__1__Impl
	rule__MapType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getMapTypeAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__2__Impl
	rule__MapType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getTypeAssignment_2()); }
	(rule__MapType__TypeAssignment_2)
	{ after(grammarAccess.getMapTypeAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__3__Impl
	rule__MapType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getMapTypeAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTypeAccess().getElementTypeAssignment_4()); }
	(rule__MapType__ElementTypeAssignment_4)
	{ after(grammarAccess.getMapTypeAccess().getElementTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group__0__Impl
	rule__ChannelType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getAlternatives_0()); }
	(rule__ChannelType__Alternatives_0)
	{ after(grammarAccess.getChannelTypeAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getElementTypeAssignment_1()); }
	(rule__ChannelType__ElementTypeAssignment_1)
	{ after(grammarAccess.getChannelTypeAccess().getElementTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelType__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_1__0__Impl
	rule__ChannelType__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_0()); }
	'chan'
	{ after(grammarAccess.getChannelTypeAccess().getChanKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_1()); }
	'<-'
	{ after(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelType__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_2__0__Impl
	rule__ChannelType__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_2_0()); }
	'<-'
	{ after(grammarAccess.getChannelTypeAccess().getLessThanSignHyphenMinusKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelType__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelTypeAccess().getChanKeyword_0_2_1()); }
	'chan'
	{ after(grammarAccess.getChannelTypeAccess().getChanKeyword_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodSpec__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSpec__Group_0__0__Impl
	rule__MethodSpec__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSpecAccess().getIDENTIFIERTerminalRuleCall_0_0()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getMethodSpecAccess().getIDENTIFIERTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodSpec__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodSpecAccess().getSignatureAssignment_0_1()); }
	(rule__MethodSpec__SignatureAssignment_0_1)
	{ after(grammarAccess.getMethodSpecAccess().getSignatureAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionType__Group__0__Impl
	rule__FunctionType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTypeAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getFunctionTypeAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTypeAccess().getSignatureAssignment_1()); }
	(rule__FunctionType__SignatureAssignment_1)
	{ after(grammarAccess.getFunctionTypeAccess().getSignatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__0__Impl
	rule__Signature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getParametersAssignment_0()); }
	(rule__Signature__ParametersAssignment_0)
	{ after(grammarAccess.getSignatureAccess().getParametersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getResultAssignment_1()); }
	(rule__Signature__ResultAssignment_1)?
	{ after(grammarAccess.getSignatureAccess().getResultAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__0__Impl
	rule__Parameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getParametersAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__1__Impl
	rule__Parameters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getGroup_1()); }
	(rule__Parameters__Group_1__0)?
	{ after(grammarAccess.getParametersAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getParametersAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group_1__0__Impl
	rule__Parameters__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getParameterListAssignment_1_0()); }
	(rule__Parameters__ParameterListAssignment_1_0)
	{ after(grammarAccess.getParametersAccess().getParameterListAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getCommaKeyword_1_1()); }
	(',')?
	{ after(grammarAccess.getParametersAccess().getCommaKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParameterDeclAssignment_0()); }
	(rule__ParameterList__ParameterDeclAssignment_0)
	{ after(grammarAccess.getParameterListAccess().getParameterDeclAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_1()); }
	(rule__ParameterList__Group_1__0)*
	{ after(grammarAccess.getParameterListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__0__Impl
	rule__ParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParameterDeclAssignment_1_1()); }
	(rule__ParameterList__ParameterDeclAssignment_1_1)
	{ after(grammarAccess.getParameterListAccess().getParameterDeclAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDecl__Group__0__Impl
	rule__ParameterDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclAccess().getIdentifierListAssignment_0()); }
	(rule__ParameterDecl__IdentifierListAssignment_0)?
	{ after(grammarAccess.getParameterDeclAccess().getIdentifierListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDecl__Group__1__Impl
	rule__ParameterDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1()); }
	('...')?
	{ after(grammarAccess.getParameterDeclAccess().getFullStopFullStopFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclAccess().getTypeAssignment_2()); }
	(rule__ParameterDecl__TypeAssignment_2)
	{ after(grammarAccess.getParameterDeclAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operand__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_3__0__Impl
	rule__Operand__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getOperandAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_3__1__Impl
	rule__Operand__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getExpressionAssignment_3_1()); }
	(rule__Operand__ExpressionAssignment_3_1)
	{ after(grammarAccess.getOperandAccess().getExpressionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getRightParenthesisKeyword_3_2()); }
	')'
	{ after(grammarAccess.getOperandAccess().getRightParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedIdent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedIdent__Group__0__Impl
	rule__QualifiedIdent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIdentAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getQualifiedIdentAccess().getIDENTIFIERTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedIdent__Group__1__Impl
	rule__QualifiedIdent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getQualifiedIdentAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedIdent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedIdent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIdentAccess().getIDENTIFIERTerminalRuleCall_2()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getQualifiedIdentAccess().getIDENTIFIERTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeLit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeLit__Group__0__Impl
	rule__CompositeLit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeLitAccess().getLiteralTypeAssignment_0()); }
	(rule__CompositeLit__LiteralTypeAssignment_0)
	{ after(grammarAccess.getCompositeLitAccess().getLiteralTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeLit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeLitAccess().getLiteralValueAssignment_1()); }
	(rule__CompositeLit__LiteralValueAssignment_1)
	{ after(grammarAccess.getCompositeLitAccess().getLiteralValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralType__Group_2__0__Impl
	rule__LiteralType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_2_0()); }
	'['
	{ after(grammarAccess.getLiteralTypeAccess().getLeftSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralType__Group_2__1__Impl
	rule__LiteralType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeAccess().getFullStopFullStopFullStopKeyword_2_1()); }
	'...'
	{ after(grammarAccess.getLiteralTypeAccess().getFullStopFullStopFullStopKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralType__Group_2__2__Impl
	rule__LiteralType__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeAccess().getRightSquareBracketKeyword_2_2()); }
	']'
	{ after(grammarAccess.getLiteralTypeAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralType__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralTypeAccess().getElementTypeAssignment_2_3()); }
	(rule__LiteralType__ElementTypeAssignment_2_3)
	{ after(grammarAccess.getLiteralTypeAccess().getElementTypeAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group__0__Impl
	rule__LiteralValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getLiteralValueAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group__1__Impl
	rule__LiteralValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getGroup_1()); }
	(rule__LiteralValue__Group_1__0)?
	{ after(grammarAccess.getLiteralValueAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getLiteralValueAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralValue__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group_1__0__Impl
	rule__LiteralValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getElementListAssignment_1_0()); }
	(rule__LiteralValue__ElementListAssignment_1_0)
	{ after(grammarAccess.getLiteralValueAccess().getElementListAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralValue__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralValueAccess().getCommaKeyword_1_1()); }
	(',')?
	{ after(grammarAccess.getLiteralValueAccess().getCommaKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group__0__Impl
	rule__ElementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getKeyedElementAssignment_0()); }
	(rule__ElementList__KeyedElementAssignment_0)
	{ after(grammarAccess.getElementListAccess().getKeyedElementAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getGroup_1()); }
	(rule__ElementList__Group_1__0)*
	{ after(grammarAccess.getElementListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group_1__0__Impl
	rule__ElementList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getElementListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementListAccess().getKeyedElementAssignment_1_1()); }
	(rule__ElementList__KeyedElementAssignment_1_1)
	{ after(grammarAccess.getElementListAccess().getKeyedElementAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyedElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group__0__Impl
	rule__KeyedElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getGroup_0()); }
	(rule__KeyedElement__Group_0__0)?
	{ after(grammarAccess.getKeyedElementAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getElementAssignment_1()); }
	(rule__KeyedElement__ElementAssignment_1)
	{ after(grammarAccess.getKeyedElementAccess().getElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyedElement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group_0__0__Impl
	rule__KeyedElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getKeyAssignment_0_0()); }
	(rule__KeyedElement__KeyAssignment_0_0)
	{ after(grammarAccess.getKeyedElementAccess().getKeyAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyedElement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedElementAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getKeyedElementAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__0__Impl
	rule__StructType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getStructKeyword_0()); }
	'struct'
	{ after(grammarAccess.getStructTypeAccess().getStructKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__1__Impl
	rule__StructType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__2__Impl
	rule__StructType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getGroup_2()); }
	(rule__StructType__Group_2__0)*
	{ after(grammarAccess.getStructTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group_2__0__Impl
	rule__StructType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getFieldDeclAssignment_2_0()); }
	(rule__StructType__FieldDeclAssignment_2_0)
	{ after(grammarAccess.getStructTypeAccess().getFieldDeclAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructTypeAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getStructTypeAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group__0__Impl
	rule__FieldDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getAlternatives_0()); }
	(rule__FieldDecl__Alternatives_0)
	{ after(grammarAccess.getFieldDeclAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getSTRING_LITTerminalRuleCall_1()); }
	(RULE_STRING_LIT)?
	{ after(grammarAccess.getFieldDeclAccess().getSTRING_LITTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDecl__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group_0_0__0__Impl
	rule__FieldDecl__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getIdentifierListAssignment_0_0_0()); }
	(rule__FieldDecl__IdentifierListAssignment_0_0_0)
	{ after(grammarAccess.getFieldDeclAccess().getIdentifierListAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDecl__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclAccess().getTypeAssignment_0_0_1()); }
	(rule__FieldDecl__TypeAssignment_0_0_1)
	{ after(grammarAccess.getFieldDeclAccess().getTypeAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnonymousField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnonymousField__Group__0__Impl
	rule__AnonymousField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnonymousFieldAccess().getAsteriskKeyword_0()); }
	('*')?
	{ after(grammarAccess.getAnonymousFieldAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnonymousField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnonymousFieldAccess().getTypeNameAssignment_1()); }
	(rule__AnonymousField__TypeNameAssignment_1)
	{ after(grammarAccess.getAnonymousFieldAccess().getTypeNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionLit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionLit__Group__0__Impl
	rule__FunctionLit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionLitAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getFunctionLitAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionLit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionLitAccess().getFunctionAssignment_1()); }
	(rule__FunctionLit__FunctionAssignment_1)
	{ after(grammarAccess.getFunctionLitAccess().getFunctionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprSelector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprSelector__Group__0__Impl
	rule__PrimaryExprSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprSelector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprStuffAssignment_0()); }
	(rule__PrimaryExprSelector__PrimaryExprStuffAssignment_0)
	{ after(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprStuffAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprSelector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprSelector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprSelector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprSelectorAssignment_1()); }
	(rule__PrimaryExprSelector__PrimaryExprSelectorAssignment_1)
	{ after(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprSelectorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprIndex__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprIndex__Group__0__Impl
	rule__PrimaryExprIndex__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprIndex__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprStuffAssignment_0()); }
	(rule__PrimaryExprIndex__PrimaryExprStuffAssignment_0)
	{ after(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprStuffAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprIndex__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprIndex__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprIndex__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprIndexAssignment_1()); }
	(rule__PrimaryExprIndex__PrimaryExprIndexAssignment_1)
	{ after(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprIndexAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprSlice__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprSlice__Group__0__Impl
	rule__PrimaryExprSlice__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprSlice__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprStuffAssignment_0()); }
	(rule__PrimaryExprSlice__PrimaryExprStuffAssignment_0)
	{ after(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprStuffAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprSlice__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprSlice__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprSlice__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprSliceAssignment_1()); }
	(rule__PrimaryExprSlice__PrimaryExprSliceAssignment_1)
	{ after(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprSliceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprTypeAssertion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprTypeAssertion__Group__0__Impl
	rule__PrimaryExprTypeAssertion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprTypeAssertion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprStuffAssignment_0()); }
	(rule__PrimaryExprTypeAssertion__PrimaryExprStuffAssignment_0)
	{ after(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprStuffAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprTypeAssertion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprTypeAssertion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprTypeAssertion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprTypeAssertionAssignment_1()); }
	(rule__PrimaryExprTypeAssertion__PrimaryExprTypeAssertionAssignment_1)
	{ after(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprTypeAssertionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExprArguments__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprArguments__Group__0__Impl
	rule__PrimaryExprArguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprArguments__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprStuffAssignment_0()); }
	(rule__PrimaryExprArguments__PrimaryExprStuffAssignment_0)
	{ after(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprStuffAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprArguments__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExprArguments__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprArguments__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprArgumentsAssignment_1()); }
	(rule__PrimaryExprArguments__PrimaryExprArgumentsAssignment_1)
	{ after(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprArgumentsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__0__Impl
	rule__Selector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getSelectorAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getIDENTIFIERTerminalRuleCall_1()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getSelectorAccess().getIDENTIFIERTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Index__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__0__Impl
	rule__Index__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__1__Impl
	rule__Index__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getExpressionParserRuleCall_1()); }
	ruleexpression
	{ after(grammarAccess.getIndexAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Slice__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group__0__Impl
	rule__Slice__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group__1__Impl
	rule__Slice__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getAlternatives_1()); }
	(rule__Slice__Alternatives_1)
	{ after(grammarAccess.getSliceAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getSliceAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Slice__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_0__0__Impl
	rule__Slice__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getExpressionAssignment_1_0_0()); }
	(rule__Slice__ExpressionAssignment_1_0_0)?
	{ after(grammarAccess.getSliceAccess().getExpressionAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_0__1__Impl
	rule__Slice__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getColonKeyword_1_0_1()); }
	':'
	{ after(grammarAccess.getSliceAccess().getColonKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getExpressionAssignment_1_0_2()); }
	(rule__Slice__ExpressionAssignment_1_0_2)?
	{ after(grammarAccess.getSliceAccess().getExpressionAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Slice__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_1__0__Impl
	rule__Slice__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getExpressionAssignment_1_1_0()); }
	(rule__Slice__ExpressionAssignment_1_1_0)?
	{ after(grammarAccess.getSliceAccess().getExpressionAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_1__1__Impl
	rule__Slice__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getColonKeyword_1_1_1()); }
	':'
	{ after(grammarAccess.getSliceAccess().getColonKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_1__2__Impl
	rule__Slice__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getExpressionAssignment_1_1_2()); }
	(rule__Slice__ExpressionAssignment_1_1_2)
	{ after(grammarAccess.getSliceAccess().getExpressionAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_1__3__Impl
	rule__Slice__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getColonKeyword_1_1_3()); }
	':'
	{ after(grammarAccess.getSliceAccess().getColonKeyword_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_1_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getExpressionAssignment_1_1_4()); }
	(rule__Slice__ExpressionAssignment_1_1_4)
	{ after(grammarAccess.getSliceAccess().getExpressionAssignment_1_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAssertion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeAssertion__Group__0__Impl
	rule__TypeAssertion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getTypeAssertionAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeAssertion__Group__1__Impl
	rule__TypeAssertion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTypeAssertionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeAssertion__Group__2__Impl
	rule__TypeAssertion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAssertionAccess().getTypeAssignment_2()); }
	(rule__TypeAssertion__TypeAssignment_2)
	{ after(grammarAccess.getTypeAssertionAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeAssertion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getTypeAssertionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__0__Impl
	rule__Arguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__1__Impl
	rule__Arguments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getGroup_1()); }
	(rule__Arguments__Group_1__0)?
	{ after(grammarAccess.getArgumentsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_1__0__Impl
	rule__Arguments__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getAlternatives_1_0()); }
	(rule__Arguments__Alternatives_1_0)
	{ after(grammarAccess.getArgumentsAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_1__1__Impl
	rule__Arguments__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_1_1()); }
	('...')?
	{ after(grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getCommaKeyword_1_2()); }
	(',')?
	{ after(grammarAccess.getArgumentsAccess().getCommaKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_1_0_1__0__Impl
	rule__Arguments__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getTypeAssignment_1_0_1_0()); }
	(rule__Arguments__TypeAssignment_1_0_1_0)
	{ after(grammarAccess.getArgumentsAccess().getTypeAssignment_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getGroup_1_0_1_1()); }
	(rule__Arguments__Group_1_0_1_1__0)?
	{ after(grammarAccess.getArgumentsAccess().getGroup_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group_1_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_1_0_1_1__0__Impl
	rule__Arguments__Group_1_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_1_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getCommaKeyword_1_0_1_1_0()); }
	','
	{ after(grammarAccess.getArgumentsAccess().getCommaKeyword_1_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_1_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_1_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_1_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getExpressionListAssignment_1_0_1_1_1()); }
	(rule__Arguments__ExpressionListAssignment_1_0_1_1_1)
	{ after(grammarAccess.getArgumentsAccess().getExpressionListAssignment_1_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodExpr__Group__0__Impl
	rule__MethodExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodExprAccess().getReceiverTypeAssignment_0()); }
	(rule__MethodExpr__ReceiverTypeAssignment_0)
	{ after(grammarAccess.getMethodExprAccess().getReceiverTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodExpr__Group__1__Impl
	rule__MethodExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodExprAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getMethodExprAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodExprAccess().getIDENTIFIERTerminalRuleCall_2()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getMethodExprAccess().getIDENTIFIERTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiverType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiverType__Group_1__0__Impl
	rule__ReceiverType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiverTypeAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getReceiverTypeAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiverType__Group_1__1__Impl
	rule__ReceiverType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiverTypeAccess().getAsteriskKeyword_1_1()); }
	'*'
	{ after(grammarAccess.getReceiverTypeAccess().getAsteriskKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverType__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiverType__Group_1__2__Impl
	rule__ReceiverType__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverType__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiverTypeAccess().getTypeNameAssignment_1_2()); }
	(rule__ReceiverType__TypeNameAssignment_1_2)
	{ after(grammarAccess.getReceiverTypeAccess().getTypeNameAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverType__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiverType__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverType__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiverTypeAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getReceiverTypeAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReceiverType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiverType__Group_2__0__Impl
	rule__ReceiverType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiverTypeAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getReceiverTypeAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiverType__Group_2__1__Impl
	rule__ReceiverType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiverTypeAccess().getReceiverTypeAssignment_2_1()); }
	(rule__ReceiverType__ReceiverTypeAssignment_2_1)
	{ after(grammarAccess.getReceiverTypeAccess().getReceiverTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReceiverType__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReceiverTypeAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getReceiverTypeAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getUnaryExprAssignment_0()); }
	(rule__Expression__UnaryExprAssignment_0)
	{ after(grammarAccess.getExpressionAccess().getUnaryExprAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpressionMatchedAssignment_1()); }
	(rule__Expression__ExpressionMatchedAssignment_1)
	{ after(grammarAccess.getExpressionAccess().getExpressionMatchedAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionMatched__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionMatched__Group__0__Impl
	rule__ExpressionMatched__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMatched__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionMatchedAccess().getBINARY_OPTerminalRuleCall_0()); }
	RULE_BINARY_OP
	{ after(grammarAccess.getExpressionMatchedAccess().getBINARY_OPTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMatched__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionMatched__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMatched__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionMatchedAccess().getExpressionAssignment_1()); }
	(rule__ExpressionMatched__ExpressionAssignment_1)
	{ after(grammarAccess.getExpressionMatchedAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_1__0__Impl
	rule__UnaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getAlternatives_1_0()); }
	(rule__UnaryExpr__Alternatives_1_0)
	{ after(grammarAccess.getUnaryExprAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getUnaryExprAssignment_1_1()); }
	(rule__UnaryExpr__UnaryExprAssignment_1_1)
	{ after(grammarAccess.getUnaryExprAccess().getUnaryExprAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conversion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__0__Impl
	rule__Conversion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getTypeAssignment_0()); }
	(rule__Conversion__TypeAssignment_0)
	{ after(grammarAccess.getConversionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__1__Impl
	rule__Conversion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__2__Impl
	rule__Conversion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getExpressionAssignment_2()); }
	(rule__Conversion__ExpressionAssignment_2)
	{ after(grammarAccess.getConversionAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__3__Impl
	rule__Conversion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getCommaKeyword_3()); }
	(',')?
	{ after(grammarAccess.getConversionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getConversionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__GreetingsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getGreetingsSourceFileParserRuleCall_0()); }
		rulesourceFile
		{ after(grammarAccess.getModelAccess().getGreetingsSourceFileParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__PackageClauseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceFileAccess().getPackageClausePackageClauseParserRuleCall_0_0()); }
		rulepackageClause
		{ after(grammarAccess.getSourceFileAccess().getPackageClausePackageClauseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__ImportDeclAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceFileAccess().getImportDeclImportDeclParserRuleCall_1_0_0()); }
		ruleimportDecl
		{ after(grammarAccess.getSourceFileAccess().getImportDeclImportDeclParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceFile__TopLevelDeclAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceFileAccess().getTopLevelDeclTopLevelDeclParserRuleCall_2_0_0()); }
		ruletopLevelDecl
		{ after(grammarAccess.getSourceFileAccess().getTopLevelDeclTopLevelDeclParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__ImportSpecAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_1_0_0()); }
		ruleimportSpec
		{ after(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__ImportSpecAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_1_1_1_0()); }
		ruleimportSpec
		{ after(grammarAccess.getImportDeclAccess().getImportSpecImportSpecParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportSpec__ImportPathAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportSpecAccess().getImportPathImportPathParserRuleCall_1_0()); }
		ruleimportPath
		{ after(grammarAccess.getImportSpecAccess().getImportPathImportPathParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDecl__DeclarationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
		ruledeclaration
		{ after(grammarAccess.getTopLevelDeclAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDecl__FunctionDeclAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getFunctionDeclFunctionDeclParserRuleCall_1_0()); }
		rulefunctionDecl
		{ after(grammarAccess.getTopLevelDeclAccess().getFunctionDeclFunctionDeclParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelDecl__MethodDeclAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelDeclAccess().getMethodDeclMethodDeclParserRuleCall_2_0()); }
		rulemethodDecl
		{ after(grammarAccess.getTopLevelDeclAccess().getMethodDeclMethodDeclParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ConstDeclAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getConstDeclConstDeclParserRuleCall_0_0()); }
		ruleconstDecl
		{ after(grammarAccess.getDeclarationAccess().getConstDeclConstDeclParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__TypeDeclAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getTypeDeclTypeDeclParserRuleCall_1_0()); }
		ruletypeDecl
		{ after(grammarAccess.getDeclarationAccess().getTypeDeclTypeDeclParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__VarDeclAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getVarDeclVarDeclParserRuleCall_2_0()); }
		rulevarDecl
		{ after(grammarAccess.getDeclarationAccess().getVarDeclVarDeclParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__ConstSpecAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_1_0_0()); }
		ruleconstSpec
		{ after(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDecl__ConstSpecAssignment_1_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_1_1_1_0_0()); }
		ruleconstSpec
		{ after(grammarAccess.getConstDeclAccess().getConstSpecConstSpecParserRuleCall_1_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__IdentifierListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
		ruleidentifierList
		{ after(grammarAccess.getConstSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__TypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstSpecAccess().getTypeTypeParserRuleCall_1_0_0()); }
		ruletype
		{ after(grammarAccess.getConstSpecAccess().getTypeTypeParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstSpec__ExpressionListAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstSpecAccess().getExpressionListExpressionListParserRuleCall_1_2_0()); }
		ruleexpressionList
		{ after(grammarAccess.getConstSpecAccess().getExpressionListExpressionListParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExpressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_0_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionListAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__TypeSpecAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_1_0_0()); }
		ruletypeSpec
		{ after(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__TypeSpecAssignment_1_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_1_1_1_0_0()); }
		ruletypeSpec
		{ after(grammarAccess.getTypeDeclAccess().getTypeSpecTypeSpecParserRuleCall_1_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpec__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSpecAccess().getTypeTypeParserRuleCall_1_0()); }
		ruletype
		{ after(grammarAccess.getTypeSpecAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__FunctionAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclAccess().getFunctionFunctionParserRuleCall_2_0_0()); }
		rulefunction
		{ after(grammarAccess.getFunctionDeclAccess().getFunctionFunctionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__SignatureAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDeclAccess().getSignatureSignatureParserRuleCall_2_1_0()); }
		rulesignature
		{ after(grammarAccess.getFunctionDeclAccess().getSignatureSignatureParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__SignatureAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getSignatureSignatureParserRuleCall_0_0()); }
		rulesignature
		{ after(grammarAccess.getFunctionAccess().getSignatureSignatureParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__BlockAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getBlockBlockParserRuleCall_1_0()); }
		ruleblock
		{ after(grammarAccess.getFunctionAccess().getBlockBlockParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__ReceiverAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclAccess().getReceiverReceiverParserRuleCall_1_0()); }
		rulereceiver
		{ after(grammarAccess.getMethodDeclAccess().getReceiverReceiverParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__FunctionAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclAccess().getFunctionFunctionParserRuleCall_3_0_0()); }
		rulefunction
		{ after(grammarAccess.getMethodDeclAccess().getFunctionFunctionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__SignatureAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclAccess().getSignatureSignatureParserRuleCall_3_1_0()); }
		rulesignature
		{ after(grammarAccess.getMethodDeclAccess().getSignatureSignatureParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Receiver__ParametersAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReceiverAccess().getParametersParametersParserRuleCall_0()); }
		ruleparameters
		{ after(grammarAccess.getReceiverAccess().getParametersParametersParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__VarSpecAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_1_0_0()); }
		rulevarSpec
		{ after(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__VarSpecAssignment_1_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_1_1_1_0_0()); }
		rulevarSpec
		{ after(grammarAccess.getVarDeclAccess().getVarSpecVarSpecParserRuleCall_1_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__IdentifierListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
		ruleidentifierList
		{ after(grammarAccess.getVarSpecAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__TypeAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarSpecAccess().getTypeTypeParserRuleCall_1_0_0_0()); }
		ruletype
		{ after(grammarAccess.getVarSpecAccess().getTypeTypeParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__ExpressionListAssignment_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_0()); }
		ruleexpressionList
		{ after(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarSpec__ExpressionListAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_1_1_0()); }
		ruleexpressionList
		{ after(grammarAccess.getVarSpecAccess().getExpressionListExpressionListParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementListAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getStatementListStatementListParserRuleCall_1_0()); }
		rulestatementList
		{ after(grammarAccess.getBlockAccess().getStatementListStatementListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__StatementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementListAccess().getStatementStatementParserRuleCall_0_0()); }
		rulestatement
		{ after(grammarAccess.getStatementListAccess().getStatementStatementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__DeclarationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
		ruledeclaration
		{ after(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__LabeledStmtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getLabeledStmtLabeledStmtParserRuleCall_1_0()); }
		rulelabeledStmt
		{ after(grammarAccess.getStatementAccess().getLabeledStmtLabeledStmtParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SimpleStmtAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSimpleStmtSimpleStmtParserRuleCall_2_0()); }
		rulesimpleStmt
		{ after(grammarAccess.getStatementAccess().getSimpleStmtSimpleStmtParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__GoStmtAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGoStmtGoStmtParserRuleCall_3_0()); }
		rulegoStmt
		{ after(grammarAccess.getStatementAccess().getGoStmtGoStmtParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ReturnStmtAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getReturnStmtReturnStmtParserRuleCall_4_0()); }
		rulereturnStmt
		{ after(grammarAccess.getStatementAccess().getReturnStmtReturnStmtParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__BreakStmtAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getBreakStmtBreakStmtParserRuleCall_5_0()); }
		rulebreakStmt
		{ after(grammarAccess.getStatementAccess().getBreakStmtBreakStmtParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ContinueStmtAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getContinueStmtContinueStmtParserRuleCall_6_0()); }
		rulecontinueStmt
		{ after(grammarAccess.getStatementAccess().getContinueStmtContinueStmtParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__GotoStmtAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGotoStmtGotoStmtParserRuleCall_7_0()); }
		rulegotoStmt
		{ after(grammarAccess.getStatementAccess().getGotoStmtGotoStmtParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__FallthroughStmtAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getFallthroughStmtFallthroughStmtParserRuleCall_8_0()); }
		rulefallthroughStmt
		{ after(grammarAccess.getStatementAccess().getFallthroughStmtFallthroughStmtParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__BlockAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getBlockBlockParserRuleCall_9_0()); }
		ruleblock
		{ after(grammarAccess.getStatementAccess().getBlockBlockParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__IfStmtAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getIfStmtIfStmtParserRuleCall_10_0()); }
		ruleifStmt
		{ after(grammarAccess.getStatementAccess().getIfStmtIfStmtParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SwitchStmtAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSwitchStmtSwitchStmtParserRuleCall_11_0()); }
		ruleswitchStmt
		{ after(grammarAccess.getStatementAccess().getSwitchStmtSwitchStmtParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SelectStmtAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSelectStmtSelectStmtParserRuleCall_12_0()); }
		ruleselectStmt
		{ after(grammarAccess.getStatementAccess().getSelectStmtSelectStmtParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ForStmtAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getForStmtForStmtParserRuleCall_13_0()); }
		ruleforStmt
		{ after(grammarAccess.getStatementAccess().getForStmtForStmtParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__DeferStmtAssignment_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDeferStmtDeferStmtParserRuleCall_14_0()); }
		ruledeferStmt
		{ after(grammarAccess.getStatementAccess().getDeferStmtDeferStmtParserRuleCall_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__SendStmtAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getSendStmtSendStmtParserRuleCall_0_0()); }
		rulesendStmt
		{ after(grammarAccess.getSimpleStmtAccess().getSendStmtSendStmtParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__ExpressionStmtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getExpressionStmtExpressionStmtParserRuleCall_1_0()); }
		ruleexpressionStmt
		{ after(grammarAccess.getSimpleStmtAccess().getExpressionStmtExpressionStmtParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__IncDecStmtAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getIncDecStmtIncDecStmtParserRuleCall_2_0()); }
		ruleincDecStmt
		{ after(grammarAccess.getSimpleStmtAccess().getIncDecStmtIncDecStmtParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__AssignmentAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getAssignmentAssignmentParserRuleCall_3_0()); }
		ruleassignment
		{ after(grammarAccess.getSimpleStmtAccess().getAssignmentAssignmentParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__ShortVarDeclAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_4_0()); }
		ruleshortVarDecl
		{ after(grammarAccess.getSimpleStmtAccess().getShortVarDeclShortVarDeclParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmt__EmptyStmtAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleStmtAccess().getEmptyStmtEmptyStmtParserRuleCall_5_0()); }
		ruleemptyStmt
		{ after(grammarAccess.getSimpleStmtAccess().getEmptyStmtEmptyStmtParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStmt__ExpressionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionStmtAccess().getExpressionExpressionParserRuleCall_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionStmtAccess().getExpressionExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__ExpressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_0_0()); }
		ruleexpression
		{ after(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendStmt__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleexpression
		{ after(grammarAccess.getSendStmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncDecStmt__ExpressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncDecStmtAccess().getExpressionExpressionParserRuleCall_0_0()); }
		ruleexpression
		{ after(grammarAccess.getIncDecStmtAccess().getExpressionExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getExpressionListExpressionListParserRuleCall_0_0()); }
		ruleexpressionList
		{ after(grammarAccess.getAssignmentAccess().getExpressionListExpressionListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Assign_opAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getAssign_opAssign_opParserRuleCall_1_0()); }
		ruleassign_op
		{ after(grammarAccess.getAssignmentAccess().getAssign_opAssign_opParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getExpressionListExpressionListParserRuleCall_2_0()); }
		ruleexpressionList
		{ after(grammarAccess.getAssignmentAccess().getExpressionListExpressionListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__IdentifierListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortVarDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
		ruleidentifierList
		{ after(grammarAccess.getShortVarDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShortVarDecl__ExpressionListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortVarDeclAccess().getExpressionListExpressionListParserRuleCall_2_0()); }
		ruleexpressionList
		{ after(grammarAccess.getShortVarDeclAccess().getExpressionListExpressionListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStmt__StatementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeledStmtAccess().getStatementStatementParserRuleCall_2_0()); }
		rulestatement
		{ after(grammarAccess.getLabeledStmtAccess().getStatementStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStmt__ExpressionListAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnStmtAccess().getExpressionListExpressionListParserRuleCall_1_0()); }
		ruleexpressionList
		{ after(grammarAccess.getReturnStmtAccess().getExpressionListExpressionListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeferStmt__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeferStmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleexpression
		{ after(grammarAccess.getDeferStmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__SimpleStmtAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0()); }
		rulesimpleStmt
		{ after(grammarAccess.getIfStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleexpression
		{ after(grammarAccess.getIfStmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__BlockAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_3_0()); }
		ruleblock
		{ after(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__IfStmtAssignment_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getIfStmtIfStmtParserRuleCall_4_1_0_0()); }
		ruleifStmt
		{ after(grammarAccess.getIfStmtAccess().getIfStmtIfStmtParserRuleCall_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__BlockAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_4_1_1_0()); }
		ruleblock
		{ after(grammarAccess.getIfStmtAccess().getBlockBlockParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__ExprSwitchStmtAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtAccess().getExprSwitchStmtExprSwitchStmtParserRuleCall_0_0()); }
		ruleexprSwitchStmt
		{ after(grammarAccess.getSwitchStmtAccess().getExprSwitchStmtExprSwitchStmtParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStmt__TypeSwitchStmtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStmtAccess().getTypeSwitchStmtTypeSwitchStmtParserRuleCall_1_0()); }
		ruletypeSwitchStmt
		{ after(grammarAccess.getSwitchStmtAccess().getTypeSwitchStmtTypeSwitchStmtParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__SimpleStmtAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0()); }
		rulesimpleStmt
		{ after(grammarAccess.getExprSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSwitchStmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleexpression
		{ after(grammarAccess.getExprSwitchStmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchStmt__ExprCaseClauseAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSwitchStmtAccess().getExprCaseClauseExprCaseClauseParserRuleCall_4_0()); }
		ruleexprCaseClause
		{ after(grammarAccess.getExprSwitchStmtAccess().getExprCaseClauseExprCaseClauseParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__ExprSwitchCaseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseExprSwitchCaseParserRuleCall_0_0()); }
		ruleexprSwitchCase
		{ after(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseExprSwitchCaseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprCaseClause__StatementListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0()); }
		rulestatementList
		{ after(grammarAccess.getExprCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSwitchCase__ExpressionListAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSwitchCaseAccess().getExpressionListExpressionListParserRuleCall_0_1_0()); }
		ruleexpressionList
		{ after(grammarAccess.getExprSwitchCaseAccess().getExpressionListExpressionListParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__SimpleStmtAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0()); }
		rulesimpleStmt
		{ after(grammarAccess.getTypeSwitchStmtAccess().getSimpleStmtSimpleStmtParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__TypeSwitchGuardAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSwitchStmtAccess().getTypeSwitchGuardTypeSwitchGuardParserRuleCall_2_0()); }
		ruletypeSwitchGuard
		{ after(grammarAccess.getTypeSwitchStmtAccess().getTypeSwitchGuardTypeSwitchGuardParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchStmt__TypeCaseClauseAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSwitchStmtAccess().getTypeCaseClauseTypeCaseClauseParserRuleCall_4_0()); }
		ruletypeCaseClause
		{ after(grammarAccess.getTypeSwitchStmtAccess().getTypeCaseClauseTypeCaseClauseParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchGuard__PrimaryExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprPrimaryExprParserRuleCall_1_0()); }
		ruleprimaryExpr
		{ after(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprPrimaryExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__TypeSwitchCaseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseTypeSwitchCaseParserRuleCall_0_0()); }
		ruletypeSwitchCase
		{ after(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseTypeSwitchCaseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCaseClause__StatementListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0()); }
		rulestatementList
		{ after(grammarAccess.getTypeCaseClauseAccess().getStatementListStatementListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSwitchCase__TypeListAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSwitchCaseAccess().getTypeListTypeListParserRuleCall_0_1_0()); }
		ruletypeList
		{ after(grammarAccess.getTypeSwitchCaseAccess().getTypeListTypeListParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_0_0()); }
		ruletype
		{ after(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_1_1_0()); }
		ruletype
		{ after(grammarAccess.getTypeListAccess().getTypeTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStmt__CommClauseAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStmtAccess().getCommClauseCommClauseParserRuleCall_2_0()); }
		rulecommClause
		{ after(grammarAccess.getSelectStmtAccess().getCommClauseCommClauseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__CommCaseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommClauseAccess().getCommCaseCommCaseParserRuleCall_0_0()); }
		rulecommCase
		{ after(grammarAccess.getCommClauseAccess().getCommCaseCommCaseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommClause__StatementListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommClauseAccess().getStatementListStatementListParserRuleCall_2_0()); }
		rulestatementList
		{ after(grammarAccess.getCommClauseAccess().getStatementListStatementListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__SendStmtAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseAccess().getSendStmtSendStmtParserRuleCall_0_1_0_0()); }
		rulesendStmt
		{ after(grammarAccess.getCommCaseAccess().getSendStmtSendStmtParserRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommCase__RecvStmtAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommCaseAccess().getRecvStmtRecvStmtParserRuleCall_0_1_1_0()); }
		rulerecvStmt
		{ after(grammarAccess.getCommCaseAccess().getRecvStmtRecvStmtParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__ExpressionListAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecvStmtAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0()); }
		ruleexpressionList
		{ after(grammarAccess.getRecvStmtAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__IdentifierListAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecvStmtAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0()); }
		ruleidentifierList
		{ after(grammarAccess.getRecvStmtAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecvStmt__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecvStmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleexpression
		{ after(grammarAccess.getRecvStmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__ExpressionAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getExpressionExpressionParserRuleCall_1_0_0()); }
		ruleexpression
		{ after(grammarAccess.getForStmtAccess().getExpressionExpressionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__ForClauseAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getForClauseForClauseParserRuleCall_1_1_0()); }
		ruleforClause
		{ after(grammarAccess.getForStmtAccess().getForClauseForClauseParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__RangeClauseAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getRangeClauseRangeClauseParserRuleCall_1_2_0()); }
		rulerangeClause
		{ after(grammarAccess.getForStmtAccess().getRangeClauseRangeClauseParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__BlockAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getBlockBlockParserRuleCall_2_0()); }
		ruleblock
		{ after(grammarAccess.getForStmtAccess().getBlockBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__SimpleStmtAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForClauseAccess().getSimpleStmtSimpleStmtParserRuleCall_0_0()); }
		rulesimpleStmt
		{ after(grammarAccess.getForClauseAccess().getSimpleStmtSimpleStmtParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForClauseAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleexpression
		{ after(grammarAccess.getForClauseAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForClause__SimpleStmtAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForClauseAccess().getSimpleStmtSimpleStmtParserRuleCall_4_0()); }
		rulesimpleStmt
		{ after(grammarAccess.getForClauseAccess().getSimpleStmtSimpleStmtParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__ExpressionListAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeClauseAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0()); }
		ruleexpressionList
		{ after(grammarAccess.getRangeClauseAccess().getExpressionListExpressionListParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__IdentifierListAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeClauseAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0()); }
		ruleidentifierList
		{ after(grammarAccess.getRangeClauseAccess().getIdentifierListIdentifierListParserRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeClause__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeClauseAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleexpression
		{ after(grammarAccess.getRangeClauseAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoStmt__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoStmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleexpression
		{ after(grammarAccess.getGoStmtAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeNameTypeNameParserRuleCall_0_0()); }
		ruletypeName
		{ after(grammarAccess.getTypeAccess().getTypeNameTypeNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeLitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeLitTypeLitParserRuleCall_1_0()); }
		ruletypeLit
		{ after(grammarAccess.getTypeAccess().getTypeLitTypeLitParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeTypeParserRuleCall_2_1_0()); }
		ruletype
		{ after(grammarAccess.getTypeAccess().getTypeTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__QualifiedIdentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameAccess().getQualifiedIdentQualifiedIdentParserRuleCall_1_0()); }
		rulequalifiedIdent
		{ after(grammarAccess.getTypeNameAccess().getQualifiedIdentQualifiedIdentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__ArrayTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getArrayTypeArrayTypeParserRuleCall_0_0()); }
		rulearrayType
		{ after(grammarAccess.getTypeLitAccess().getArrayTypeArrayTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__StructTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getStructTypeStructTypeParserRuleCall_1_0()); }
		rulestructType
		{ after(grammarAccess.getTypeLitAccess().getStructTypeStructTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__PointerTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getPointerTypePointerTypeParserRuleCall_2_0()); }
		rulepointerType
		{ after(grammarAccess.getTypeLitAccess().getPointerTypePointerTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__FunctionTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getFunctionTypeFunctionTypeParserRuleCall_3_0()); }
		rulefunctionType
		{ after(grammarAccess.getTypeLitAccess().getFunctionTypeFunctionTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__InterfaceTypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getInterfaceTypeInterfaceTypeParserRuleCall_4_0()); }
		ruleinterfaceType
		{ after(grammarAccess.getTypeLitAccess().getInterfaceTypeInterfaceTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__SliceTypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getSliceTypeSliceTypeParserRuleCall_5_0()); }
		rulesliceType
		{ after(grammarAccess.getTypeLitAccess().getSliceTypeSliceTypeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__MapTypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getMapTypeMapTypeParserRuleCall_6_0()); }
		rulemapType
		{ after(grammarAccess.getTypeLitAccess().getMapTypeMapTypeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLit__ChannelTypeAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLitAccess().getChannelTypeChannelTypeParserRuleCall_7_0()); }
		rulechannelType
		{ after(grammarAccess.getTypeLitAccess().getChannelTypeChannelTypeParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__ArrayLengthAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getArrayLengthArrayLengthParserRuleCall_1_0()); }
		rulearrayLength
		{ after(grammarAccess.getArrayTypeAccess().getArrayLengthArrayLengthParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__ElementTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getElementTypeElementTypeParserRuleCall_3_0()); }
		ruleelementType
		{ after(grammarAccess.getArrayTypeAccess().getElementTypeElementTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLength__ExpressionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayLengthAccess().getExpressionExpressionParserRuleCall_0()); }
		ruleexpression
		{ after(grammarAccess.getArrayLengthAccess().getExpressionExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementTypeAccess().getTypeTypeParserRuleCall_0()); }
		ruletype
		{ after(grammarAccess.getElementTypeAccess().getTypeTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointerType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointerTypeAccess().getTypeTypeParserRuleCall_1_0()); }
		ruletype
		{ after(grammarAccess.getPointerTypeAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__MethodSpecAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceTypeAccess().getMethodSpecMethodSpecParserRuleCall_2_0_0()); }
		rulemethodSpec
		{ after(grammarAccess.getInterfaceTypeAccess().getMethodSpecMethodSpecParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SliceType__ElementTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceTypeAccess().getElementTypeElementTypeParserRuleCall_2_0()); }
		ruleelementType
		{ after(grammarAccess.getSliceTypeAccess().getElementTypeElementTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTypeAccess().getTypeTypeParserRuleCall_2_0()); }
		ruletype
		{ after(grammarAccess.getMapTypeAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapType__ElementTypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTypeAccess().getElementTypeElementTypeParserRuleCall_4_0()); }
		ruleelementType
		{ after(grammarAccess.getMapTypeAccess().getElementTypeElementTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__ElementTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelTypeAccess().getElementTypeElementTypeParserRuleCall_1_0()); }
		ruleelementType
		{ after(grammarAccess.getChannelTypeAccess().getElementTypeElementTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__SignatureAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodSpecAccess().getSignatureSignatureParserRuleCall_0_1_0()); }
		rulesignature
		{ after(grammarAccess.getMethodSpecAccess().getSignatureSignatureParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodSpec__TypeNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodSpecAccess().getTypeNameTypeNameParserRuleCall_1_0()); }
		ruletypeName
		{ after(grammarAccess.getMethodSpecAccess().getTypeNameTypeNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionType__SignatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionTypeAccess().getSignatureSignatureParserRuleCall_1_0()); }
		rulesignature
		{ after(grammarAccess.getFunctionTypeAccess().getSignatureSignatureParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__ParametersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_0_0()); }
		ruleparameters
		{ after(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__ResultAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0()); }
		ruleresult
		{ after(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__ParametersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultAccess().getParametersParametersParserRuleCall_0_0()); }
		ruleparameters
		{ after(grammarAccess.getResultAccess().getParametersParametersParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultAccess().getTypeTypeParserRuleCall_1_0()); }
		ruletype
		{ after(grammarAccess.getResultAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__ParameterListAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersAccess().getParameterListParameterListParserRuleCall_1_0_0()); }
		ruleparameterList
		{ after(grammarAccess.getParametersAccess().getParameterListParameterListParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParameterDeclAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_0_0()); }
		ruleparameterDecl
		{ after(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParameterDeclAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_1_1_0()); }
		ruleparameterDecl
		{ after(grammarAccess.getParameterListAccess().getParameterDeclParameterDeclParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__IdentifierListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
		ruleidentifierList
		{ after(grammarAccess.getParameterDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDecl__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_2_0()); }
		ruletype
		{ after(grammarAccess.getParameterDeclAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__LiteralAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_0()); }
		ruleliteral
		{ after(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__OperandNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getOperandNameOperandNameParserRuleCall_1_0()); }
		ruleoperandName
		{ after(grammarAccess.getOperandAccess().getOperandNameOperandNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__MethodExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getMethodExprMethodExprParserRuleCall_2_0()); }
		rulemethodExpr
		{ after(grammarAccess.getOperandAccess().getMethodExprMethodExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__ExpressionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
		ruleexpression
		{ after(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__BasicLitAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getBasicLitBasicLitParserRuleCall_0_0()); }
		rulebasicLit
		{ after(grammarAccess.getLiteralAccess().getBasicLitBasicLitParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__CompositeLitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getCompositeLitCompositeLitParserRuleCall_1_0()); }
		rulecompositeLit
		{ after(grammarAccess.getLiteralAccess().getCompositeLitCompositeLitParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__FunctionLitAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getFunctionLitFunctionLitParserRuleCall_2_0()); }
		rulefunctionLit
		{ after(grammarAccess.getLiteralAccess().getFunctionLitFunctionLitParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperandName__QualifiedIdentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandNameAccess().getQualifiedIdentQualifiedIdentParserRuleCall_1_0()); }
		rulequalifiedIdent
		{ after(grammarAccess.getOperandNameAccess().getQualifiedIdentQualifiedIdentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__LiteralTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeLitAccess().getLiteralTypeLiteralTypeParserRuleCall_0_0()); }
		ruleliteralType
		{ after(grammarAccess.getCompositeLitAccess().getLiteralTypeLiteralTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeLit__LiteralValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeLitAccess().getLiteralValueLiteralValueParserRuleCall_1_0()); }
		ruleliteralValue
		{ after(grammarAccess.getCompositeLitAccess().getLiteralValueLiteralValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__StructTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getStructTypeStructTypeParserRuleCall_0_0()); }
		rulestructType
		{ after(grammarAccess.getLiteralTypeAccess().getStructTypeStructTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__ArrayTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getArrayTypeArrayTypeParserRuleCall_1_0()); }
		rulearrayType
		{ after(grammarAccess.getLiteralTypeAccess().getArrayTypeArrayTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__ElementTypeAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getElementTypeElementTypeParserRuleCall_2_3_0()); }
		ruleelementType
		{ after(grammarAccess.getLiteralTypeAccess().getElementTypeElementTypeParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__SliceTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getSliceTypeSliceTypeParserRuleCall_3_0()); }
		rulesliceType
		{ after(grammarAccess.getLiteralTypeAccess().getSliceTypeSliceTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__MapTypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getMapTypeMapTypeParserRuleCall_4_0()); }
		rulemapType
		{ after(grammarAccess.getLiteralTypeAccess().getMapTypeMapTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__TypeNameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getTypeNameTypeNameParserRuleCall_5_0()); }
		ruletypeName
		{ after(grammarAccess.getLiteralTypeAccess().getTypeNameTypeNameParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__ElementListAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralValueAccess().getElementListElementListParserRuleCall_1_0_0()); }
		ruleelementList
		{ after(grammarAccess.getLiteralValueAccess().getElementListElementListParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__KeyedElementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_0_0()); }
		rulekeyedElement
		{ after(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementList__KeyedElementAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_1_1_0()); }
		rulekeyedElement
		{ after(grammarAccess.getElementListAccess().getKeyedElementKeyedElementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__KeyAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyedElementAccess().getKeyKeyParserRuleCall_0_0_0()); }
		rulekey
		{ after(grammarAccess.getKeyedElementAccess().getKeyKeyParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyedElement__ElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0()); }
		ruleelement
		{ after(grammarAccess.getKeyedElementAccess().getElementElementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleexpression
		{ after(grammarAccess.getKeyAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__LiteralValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getLiteralValueLiteralValueParserRuleCall_2_0()); }
		ruleliteralValue
		{ after(grammarAccess.getKeyAccess().getLiteralValueLiteralValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__ExpressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getExpressionExpressionParserRuleCall_0_0()); }
		ruleexpression
		{ after(grammarAccess.getElementAccess().getExpressionExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__LiteralValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getLiteralValueLiteralValueParserRuleCall_1_0()); }
		ruleliteralValue
		{ after(grammarAccess.getElementAccess().getLiteralValueLiteralValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__FieldDeclAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructTypeAccess().getFieldDeclFieldDeclParserRuleCall_2_0_0()); }
		rulefieldDecl
		{ after(grammarAccess.getStructTypeAccess().getFieldDeclFieldDeclParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__IdentifierListAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0_0_0()); }
		ruleidentifierList
		{ after(grammarAccess.getFieldDeclAccess().getIdentifierListIdentifierListParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__TypeAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_0_0_1_0()); }
		ruletype
		{ after(grammarAccess.getFieldDeclAccess().getTypeTypeParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDecl__AnonymousFieldAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclAccess().getAnonymousFieldAnonymousFieldParserRuleCall_0_1_0()); }
		ruleanonymousField
		{ after(grammarAccess.getFieldDeclAccess().getAnonymousFieldAnonymousFieldParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnonymousField__TypeNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnonymousFieldAccess().getTypeNameTypeNameParserRuleCall_1_0()); }
		ruletypeName
		{ after(grammarAccess.getAnonymousFieldAccess().getTypeNameTypeNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionLit__FunctionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionLitAccess().getFunctionFunctionParserRuleCall_1_0()); }
		rulefunction
		{ after(grammarAccess.getFunctionLitAccess().getFunctionFunctionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__OperandAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getOperandOperandParserRuleCall_0_0_0()); }
		ruleoperand
		{ after(grammarAccess.getPrimaryExprAccess().getOperandOperandParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__ConversionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getConversionConversionParserRuleCall_0_1_0()); }
		ruleconversion
		{ after(grammarAccess.getPrimaryExprAccess().getConversionConversionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__PrimaryExprSelectorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprSelectorPrimaryExprSelectorParserRuleCall_1_0()); }
		ruleprimaryExprSelector
		{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprSelectorPrimaryExprSelectorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__PrimaryExprIndexAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprIndexPrimaryExprIndexParserRuleCall_2_0()); }
		ruleprimaryExprIndex
		{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprIndexPrimaryExprIndexParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__PrimaryExprSliceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprSlicePrimaryExprSliceParserRuleCall_3_0()); }
		ruleprimaryExprSlice
		{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprSlicePrimaryExprSliceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprTypeAssertionPrimaryExprTypeAssertionParserRuleCall_4_0()); }
		ruleprimaryExprTypeAssertion
		{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprTypeAssertionPrimaryExprTypeAssertionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__PrimaryExprArgumentsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getPrimaryExprArgumentsPrimaryExprArgumentsParserRuleCall_5_0()); }
		ruleprimaryExprArguments
		{ after(grammarAccess.getPrimaryExprAccess().getPrimaryExprArgumentsPrimaryExprArgumentsParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprStuff__SelectorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprStuffAccess().getSelectorSelectorParserRuleCall_0_0()); }
		ruleselector
		{ after(grammarAccess.getPrimaryExprStuffAccess().getSelectorSelectorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprStuff__IndexAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprStuffAccess().getIndexIndexParserRuleCall_1_0()); }
		ruleindex
		{ after(grammarAccess.getPrimaryExprStuffAccess().getIndexIndexParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprStuff__SliceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprStuffAccess().getSliceSliceParserRuleCall_2_0()); }
		ruleslice
		{ after(grammarAccess.getPrimaryExprStuffAccess().getSliceSliceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprStuff__TypeAssertionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprStuffAccess().getTypeAssertionTypeAssertionParserRuleCall_3_0()); }
		ruletypeAssertion
		{ after(grammarAccess.getPrimaryExprStuffAccess().getTypeAssertionTypeAssertionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprStuff__ArgumentsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprStuffAccess().getArgumentsArgumentsParserRuleCall_4_0()); }
		rulearguments
		{ after(grammarAccess.getPrimaryExprStuffAccess().getArgumentsArgumentsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprSelector__PrimaryExprStuffAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); }
		ruleprimaryExprStuff
		{ after(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprSelector__PrimaryExprSelectorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprSelectorPrimaryExprSelectorParserRuleCall_1_0()); }
		ruleprimaryExprSelector
		{ after(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprSelectorPrimaryExprSelectorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprIndex__PrimaryExprStuffAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); }
		ruleprimaryExprStuff
		{ after(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprIndex__PrimaryExprIndexAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprIndexPrimaryExprSelectorParserRuleCall_1_0()); }
		ruleprimaryExprSelector
		{ after(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprIndexPrimaryExprSelectorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprSlice__PrimaryExprStuffAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); }
		ruleprimaryExprStuff
		{ after(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprSlice__PrimaryExprSliceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprSlicePrimaryExprSelectorParserRuleCall_1_0()); }
		ruleprimaryExprSelector
		{ after(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprSlicePrimaryExprSelectorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprTypeAssertion__PrimaryExprStuffAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); }
		ruleprimaryExprStuff
		{ after(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprTypeAssertion__PrimaryExprTypeAssertionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprTypeAssertionPrimaryExprSelectorParserRuleCall_1_0()); }
		ruleprimaryExprSelector
		{ after(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprTypeAssertionPrimaryExprSelectorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprArguments__PrimaryExprStuffAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); }
		ruleprimaryExprStuff
		{ after(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprStuffPrimaryExprStuffParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExprArguments__PrimaryExprArgumentsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprArgumentsPrimaryExprArgumentsParserRuleCall_1_0()); }
		ruleprimaryExprArguments
		{ after(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprArgumentsPrimaryExprArgumentsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__ExpressionAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_0_0_0()); }
		ruleexpression
		{ after(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__ExpressionAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_0_2_0()); }
		ruleexpression
		{ after(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__ExpressionAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_1_0_0()); }
		ruleexpression
		{ after(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__ExpressionAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_1_2_0()); }
		ruleexpression
		{ after(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__ExpressionAssignment_1_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_1_4_0()); }
		ruleexpression
		{ after(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssertion__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAssertionAccess().getTypeTypeParserRuleCall_2_0()); }
		ruletype
		{ after(grammarAccess.getTypeAssertionAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__ExpressionListAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_0_0()); }
		ruleexpressionList
		{ after(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__TypeAssignment_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_1_0_1_0_0()); }
		ruletype
		{ after(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_1_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__ExpressionListAssignment_1_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_1_0()); }
		ruleexpressionList
		{ after(grammarAccess.getArgumentsAccess().getExpressionListExpressionListParserRuleCall_1_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodExpr__ReceiverTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodExprAccess().getReceiverTypeReceiverTypeParserRuleCall_0_0()); }
		rulereceiverType
		{ after(grammarAccess.getMethodExprAccess().getReceiverTypeReceiverTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverType__TypeNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReceiverTypeAccess().getTypeNameTypeNameParserRuleCall_0_0()); }
		ruletypeName
		{ after(grammarAccess.getReceiverTypeAccess().getTypeNameTypeNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverType__TypeNameAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReceiverTypeAccess().getTypeNameTypeNameParserRuleCall_1_2_0()); }
		ruletypeName
		{ after(grammarAccess.getReceiverTypeAccess().getTypeNameTypeNameParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceiverType__ReceiverTypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReceiverTypeAccess().getReceiverTypeReceiverTypeParserRuleCall_2_1_0()); }
		rulereceiverType
		{ after(grammarAccess.getReceiverTypeAccess().getReceiverTypeReceiverTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__UnaryExprAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getUnaryExprUnaryExprParserRuleCall_0_0()); }
		ruleunaryExpr
		{ after(grammarAccess.getExpressionAccess().getUnaryExprUnaryExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpressionMatchedAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpressionMatchedExpressionMatchedParserRuleCall_1_0()); }
		ruleexpressionMatched
		{ after(grammarAccess.getExpressionAccess().getExpressionMatchedExpressionMatchedParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMatched__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionMatchedAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionMatchedAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__PrimaryExprAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0()); }
		ruleprimaryExpr
		{ after(grammarAccess.getUnaryExprAccess().getPrimaryExprPrimaryExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__UnaryExprAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getUnaryExprUnaryExprParserRuleCall_1_1_0()); }
		ruleunaryExpr
		{ after(grammarAccess.getUnaryExprAccess().getUnaryExprUnaryExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0()); }
		ruletype
		{ after(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleexpression
		{ after(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_IDENTIFIER : RULE_LETTER (RULE_LETTER|RULE_UNICODE_DIGIT)*;

RULE_BINARY_OP : ('||'|'&&'|RULE_REL_OP|RULE_ADD_OP|RULE_MUL_OP);

fragment RULE_REL_OP : ('=='|'!='|'<'|'<='|'>'|'>=');

fragment RULE_ADD_OP : ('+'|'-'|'|'|'^');

fragment RULE_MUL_OP : ('*'|'/'|'%'|'<<'|'>>'|'&'|'&^');

fragment RULE_UNARY_OP : ('+'|'-'|'!'|'^'|'*'|'&'|'<-');

RULE_INT_LIT : (RULE_DECIMAL_LIT|RULE_OCTAL_LIT|RULE_HEX_LIT);

fragment RULE_DECIMAL_LIT : '1'..'9' RULE_DECIMAL_DIGIT*;

fragment RULE_OCTAL_LIT : '0' RULE_OCTAL_DIGIT*;

fragment RULE_HEX_LIT : '0' ('X'|'x') RULE_HEX_DIGIT+;

RULE_FLOAT_LIT : (RULE_DECIMALS '.' RULE_DECIMALS? RULE_EXPONENT?|RULE_DECIMALS RULE_EXPONENT|'.' RULE_DECIMALS RULE_EXPONENT?);

fragment RULE_DECIMALS : RULE_DECIMAL_DIGIT+;

fragment RULE_EXPONENT : ('e'|'E') ('+'|'-')? RULE_DECIMALS;

RULE_IMAGINARY_LIT : (RULE_DECIMALS|RULE_FLOAT_LIT) 'i';

RULE_RUNE_LIT : '\'' (RULE_UNICODE_VALUE|RULE_BYTE_VALUE) '\'';

fragment RULE_UNICODE_VALUE : (RULE_UNICODE_CHAR|RULE_LITTLE_U_VALUE|RULE_BIG_U_VALUE|RULE_ESCAPED_CHAR);

fragment RULE_BYTE_VALUE : (RULE_OCTAL_BYTE_VALUE|RULE_HEX_BYTE_VALUE);

fragment RULE_OCTAL_BYTE_VALUE : '\\' RULE_OCTAL_DIGIT RULE_OCTAL_DIGIT RULE_OCTAL_DIGIT;

fragment RULE_HEX_BYTE_VALUE : '\\x' RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_LITTLE_U_VALUE : '\\u' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_BIG_U_VALUE : '\\U' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_ESCAPED_CHAR : '\\' ('a'|'b'|'f'|'n'|'r'|'t'|'v'|'\\'|'\''|'"');

RULE_STRING_LIT : (RULE_RAW_STRING_LIT|RULE_INTERPRETED_STRING_LIT);

fragment RULE_RAW_STRING_LIT : '\'' (RULE_UNICODE_CHAR|RULE_NEWLINE)* '\'';

fragment RULE_INTERPRETED_STRING_LIT : '"' (RULE_UNICODE_VALUE|RULE_BYTE_VALUE)* '"';

fragment RULE_LETTER : (RULE_UNICODE_LETTER|'_');

fragment RULE_DECIMAL_DIGIT : '0'..'9';

fragment RULE_OCTAL_DIGIT : '0'..'7';

fragment RULE_HEX_DIGIT : ('0'..'9'|'A'..'F'|'a'..'f');

fragment RULE_NEWLINE : '\n';

fragment RULE_UNICODE_CHAR : ('A'..'Z'|'a'..'z');

fragment RULE_UNICODE_DIGIT : ('0..9'|'\u0660..\u0669'|'\u06F0..\u06F9'|'\u0966..\u096F'|'\u09E6..\u09EF'|'\u0A66..\u0A6F'|'\u0AE6..\u0AEF'|'\u0B66..\u0B6F'|'\u0BE7..\u0BEF'|'\u0C66..\u0C6F'|'\u0CE6..\u0CEF'|'\u0D66..\u0D6F'|'\u0E50..\u0E59'|'\u0ED0..\u0ED9'|'\u0F20..\u0F29'|'\u1040..\u1049'|'\u1369..\u1371'|'\u17E0..\u17E9'|'\u1810..\u1819'|'\uFF10..\uFF19');

fragment RULE_UNICODE_LETTER : ('A'..'Z'|'a'..'z');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
