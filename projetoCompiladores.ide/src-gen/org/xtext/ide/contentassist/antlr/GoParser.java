/*
 * generated by Xtext 2.14.0
 */
package org.xtext.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.ide.contentassist.antlr.internal.InternalGoParser;
import org.xtext.services.GoGrammarAccess;

public class GoParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(GoGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, GoGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getImportDeclAccess().getAlternatives_1(), "rule__ImportDecl__Alternatives_1");
			builder.put(grammarAccess.getImportSpecAccess().getAlternatives_0(), "rule__ImportSpec__Alternatives_0");
			builder.put(grammarAccess.getTopLevelDeclAccess().getAlternatives(), "rule__TopLevelDecl__Alternatives");
			builder.put(grammarAccess.getDeclarationAccess().getAlternatives(), "rule__Declaration__Alternatives");
			builder.put(grammarAccess.getConstDeclAccess().getAlternatives_1(), "rule__ConstDecl__Alternatives_1");
			builder.put(grammarAccess.getTypeDeclAccess().getAlternatives_1(), "rule__TypeDecl__Alternatives_1");
			builder.put(grammarAccess.getFunctionDeclAccess().getAlternatives_2(), "rule__FunctionDecl__Alternatives_2");
			builder.put(grammarAccess.getMethodDeclAccess().getAlternatives_3(), "rule__MethodDecl__Alternatives_3");
			builder.put(grammarAccess.getVarDeclAccess().getAlternatives_1(), "rule__VarDecl__Alternatives_1");
			builder.put(grammarAccess.getVarSpecAccess().getAlternatives_1(), "rule__VarSpec__Alternatives_1");
			builder.put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
			builder.put(grammarAccess.getSimpleStmtAccess().getAlternatives(), "rule__SimpleStmt__Alternatives");
			builder.put(grammarAccess.getIncDecStmtAccess().getAlternatives_1(), "rule__IncDecStmt__Alternatives_1");
			builder.put(grammarAccess.getAssign_opAccess().getAlternatives_0(), "rule__Assign_op__Alternatives_0");
			builder.put(grammarAccess.getIfStmtAccess().getAlternatives_4_1(), "rule__IfStmt__Alternatives_4_1");
			builder.put(grammarAccess.getSwitchStmtAccess().getAlternatives(), "rule__SwitchStmt__Alternatives");
			builder.put(grammarAccess.getExprSwitchCaseAccess().getAlternatives(), "rule__ExprSwitchCase__Alternatives");
			builder.put(grammarAccess.getTypeSwitchCaseAccess().getAlternatives(), "rule__TypeSwitchCase__Alternatives");
			builder.put(grammarAccess.getCommCaseAccess().getAlternatives(), "rule__CommCase__Alternatives");
			builder.put(grammarAccess.getCommCaseAccess().getAlternatives_0_1(), "rule__CommCase__Alternatives_0_1");
			builder.put(grammarAccess.getRecvStmtAccess().getAlternatives_0(), "rule__RecvStmt__Alternatives_0");
			builder.put(grammarAccess.getForStmtAccess().getAlternatives_1(), "rule__ForStmt__Alternatives_1");
			builder.put(grammarAccess.getRangeClauseAccess().getAlternatives_0(), "rule__RangeClause__Alternatives_0");
			builder.put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
			builder.put(grammarAccess.getTypeNameAccess().getAlternatives(), "rule__TypeName__Alternatives");
			builder.put(grammarAccess.getTypeLitAccess().getAlternatives(), "rule__TypeLit__Alternatives");
			builder.put(grammarAccess.getChannelTypeAccess().getAlternatives_0(), "rule__ChannelType__Alternatives_0");
			builder.put(grammarAccess.getMethodSpecAccess().getAlternatives(), "rule__MethodSpec__Alternatives");
			builder.put(grammarAccess.getResultAccess().getAlternatives(), "rule__Result__Alternatives");
			builder.put(grammarAccess.getOperandAccess().getAlternatives(), "rule__Operand__Alternatives");
			builder.put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
			builder.put(grammarAccess.getBasicLitAccess().getAlternatives(), "rule__BasicLit__Alternatives");
			builder.put(grammarAccess.getOperandNameAccess().getAlternatives(), "rule__OperandName__Alternatives");
			builder.put(grammarAccess.getLiteralTypeAccess().getAlternatives(), "rule__LiteralType__Alternatives");
			builder.put(grammarAccess.getKeyAccess().getAlternatives(), "rule__Key__Alternatives");
			builder.put(grammarAccess.getElementAccess().getAlternatives(), "rule__Element__Alternatives");
			builder.put(grammarAccess.getFieldDeclAccess().getAlternatives_0(), "rule__FieldDecl__Alternatives_0");
			builder.put(grammarAccess.getPrimaryExprAccess().getAlternatives(), "rule__PrimaryExpr__Alternatives");
			builder.put(grammarAccess.getPrimaryExprAccess().getAlternatives_0(), "rule__PrimaryExpr__Alternatives_0");
			builder.put(grammarAccess.getPrimaryExprStuffAccess().getAlternatives(), "rule__PrimaryExprStuff__Alternatives");
			builder.put(grammarAccess.getSliceAccess().getAlternatives_1(), "rule__Slice__Alternatives_1");
			builder.put(grammarAccess.getArgumentsAccess().getAlternatives_1_0(), "rule__Arguments__Alternatives_1_0");
			builder.put(grammarAccess.getReceiverTypeAccess().getAlternatives(), "rule__ReceiverType__Alternatives");
			builder.put(grammarAccess.getUnaryExprAccess().getAlternatives(), "rule__UnaryExpr__Alternatives");
			builder.put(grammarAccess.getUnaryExprAccess().getAlternatives_1_0(), "rule__UnaryExpr__Alternatives_1_0");
			builder.put(grammarAccess.getSourceFileAccess().getGroup(), "rule__SourceFile__Group__0");
			builder.put(grammarAccess.getSourceFileAccess().getGroup_2(), "rule__SourceFile__Group_2__0");
			builder.put(grammarAccess.getSourceFileAccess().getGroup_3(), "rule__SourceFile__Group_3__0");
			builder.put(grammarAccess.getPackageClauseAccess().getGroup(), "rule__PackageClause__Group__0");
			builder.put(grammarAccess.getImportDeclAccess().getGroup(), "rule__ImportDecl__Group__0");
			builder.put(grammarAccess.getImportDeclAccess().getGroup_1_1(), "rule__ImportDecl__Group_1_1__0");
			builder.put(grammarAccess.getImportDeclAccess().getGroup_1_1_1(), "rule__ImportDecl__Group_1_1_1__0");
			builder.put(grammarAccess.getImportSpecAccess().getGroup(), "rule__ImportSpec__Group__0");
			builder.put(grammarAccess.getConstDeclAccess().getGroup(), "rule__ConstDecl__Group__0");
			builder.put(grammarAccess.getConstDeclAccess().getGroup_1_1(), "rule__ConstDecl__Group_1_1__0");
			builder.put(grammarAccess.getConstDeclAccess().getGroup_1_1_1(), "rule__ConstDecl__Group_1_1_1__0");
			builder.put(grammarAccess.getConstSpecAccess().getGroup(), "rule__ConstSpec__Group__0");
			builder.put(grammarAccess.getConstSpecAccess().getGroup_1(), "rule__ConstSpec__Group_1__0");
			builder.put(grammarAccess.getIdentifierListAccess().getGroup(), "rule__IdentifierList__Group__0");
			builder.put(grammarAccess.getIdentifierListAccess().getGroup_1(), "rule__IdentifierList__Group_1__0");
			builder.put(grammarAccess.getExpressionListAccess().getGroup(), "rule__ExpressionList__Group__0");
			builder.put(grammarAccess.getExpressionListAccess().getGroup_1(), "rule__ExpressionList__Group_1__0");
			builder.put(grammarAccess.getTypeDeclAccess().getGroup(), "rule__TypeDecl__Group__0");
			builder.put(grammarAccess.getTypeDeclAccess().getGroup_1_1(), "rule__TypeDecl__Group_1_1__0");
			builder.put(grammarAccess.getTypeDeclAccess().getGroup_1_1_1(), "rule__TypeDecl__Group_1_1_1__0");
			builder.put(grammarAccess.getTypeSpecAccess().getGroup(), "rule__TypeSpec__Group__0");
			builder.put(grammarAccess.getFunctionDeclAccess().getGroup(), "rule__FunctionDecl__Group__0");
			builder.put(grammarAccess.getFunctionAccess().getGroup(), "rule__Function__Group__0");
			builder.put(grammarAccess.getMethodDeclAccess().getGroup(), "rule__MethodDecl__Group__0");
			builder.put(grammarAccess.getVarDeclAccess().getGroup(), "rule__VarDecl__Group__0");
			builder.put(grammarAccess.getVarDeclAccess().getGroup_1_1(), "rule__VarDecl__Group_1_1__0");
			builder.put(grammarAccess.getVarDeclAccess().getGroup_1_1_1(), "rule__VarDecl__Group_1_1_1__0");
			builder.put(grammarAccess.getVarSpecAccess().getGroup(), "rule__VarSpec__Group__0");
			builder.put(grammarAccess.getVarSpecAccess().getGroup_1_0(), "rule__VarSpec__Group_1_0__0");
			builder.put(grammarAccess.getVarSpecAccess().getGroup_1_0_1(), "rule__VarSpec__Group_1_0_1__0");
			builder.put(grammarAccess.getVarSpecAccess().getGroup_1_1(), "rule__VarSpec__Group_1_1__0");
			builder.put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
			builder.put(grammarAccess.getStatementListAccess().getGroup(), "rule__StatementList__Group__0");
			builder.put(grammarAccess.getSendStmtAccess().getGroup(), "rule__SendStmt__Group__0");
			builder.put(grammarAccess.getIncDecStmtAccess().getGroup(), "rule__IncDecStmt__Group__0");
			builder.put(grammarAccess.getAssignmentAccess().getGroup(), "rule__Assignment__Group__0");
			builder.put(grammarAccess.getAssign_opAccess().getGroup(), "rule__Assign_op__Group__0");
			builder.put(grammarAccess.getShortVarDeclAccess().getGroup(), "rule__ShortVarDecl__Group__0");
			builder.put(grammarAccess.getLabeledStmtAccess().getGroup(), "rule__LabeledStmt__Group__0");
			builder.put(grammarAccess.getReturnStmtAccess().getGroup(), "rule__ReturnStmt__Group__0");
			builder.put(grammarAccess.getBreakStmtAccess().getGroup(), "rule__BreakStmt__Group__0");
			builder.put(grammarAccess.getContinueStmtAccess().getGroup(), "rule__ContinueStmt__Group__0");
			builder.put(grammarAccess.getGotoStmtAccess().getGroup(), "rule__GotoStmt__Group__0");
			builder.put(grammarAccess.getDeferStmtAccess().getGroup(), "rule__DeferStmt__Group__0");
			builder.put(grammarAccess.getIfStmtAccess().getGroup(), "rule__IfStmt__Group__0");
			builder.put(grammarAccess.getIfStmtAccess().getGroup_1(), "rule__IfStmt__Group_1__0");
			builder.put(grammarAccess.getIfStmtAccess().getGroup_4(), "rule__IfStmt__Group_4__0");
			builder.put(grammarAccess.getExprSwitchStmtAccess().getGroup(), "rule__ExprSwitchStmt__Group__0");
			builder.put(grammarAccess.getExprSwitchStmtAccess().getGroup_1(), "rule__ExprSwitchStmt__Group_1__0");
			builder.put(grammarAccess.getExprCaseClauseAccess().getGroup(), "rule__ExprCaseClause__Group__0");
			builder.put(grammarAccess.getExprSwitchCaseAccess().getGroup_0(), "rule__ExprSwitchCase__Group_0__0");
			builder.put(grammarAccess.getTypeSwitchStmtAccess().getGroup(), "rule__TypeSwitchStmt__Group__0");
			builder.put(grammarAccess.getTypeSwitchStmtAccess().getGroup_1(), "rule__TypeSwitchStmt__Group_1__0");
			builder.put(grammarAccess.getTypeSwitchGuardAccess().getGroup(), "rule__TypeSwitchGuard__Group__0");
			builder.put(grammarAccess.getTypeSwitchGuardAccess().getGroup_0(), "rule__TypeSwitchGuard__Group_0__0");
			builder.put(grammarAccess.getTypeCaseClauseAccess().getGroup(), "rule__TypeCaseClause__Group__0");
			builder.put(grammarAccess.getTypeSwitchCaseAccess().getGroup_0(), "rule__TypeSwitchCase__Group_0__0");
			builder.put(grammarAccess.getTypeListAccess().getGroup(), "rule__TypeList__Group__0");
			builder.put(grammarAccess.getTypeListAccess().getGroup_1(), "rule__TypeList__Group_1__0");
			builder.put(grammarAccess.getSelectStmtAccess().getGroup(), "rule__SelectStmt__Group__0");
			builder.put(grammarAccess.getCommClauseAccess().getGroup(), "rule__CommClause__Group__0");
			builder.put(grammarAccess.getCommCaseAccess().getGroup_0(), "rule__CommCase__Group_0__0");
			builder.put(grammarAccess.getRecvStmtAccess().getGroup(), "rule__RecvStmt__Group__0");
			builder.put(grammarAccess.getRecvStmtAccess().getGroup_0_0(), "rule__RecvStmt__Group_0_0__0");
			builder.put(grammarAccess.getRecvStmtAccess().getGroup_0_1(), "rule__RecvStmt__Group_0_1__0");
			builder.put(grammarAccess.getForStmtAccess().getGroup(), "rule__ForStmt__Group__0");
			builder.put(grammarAccess.getForClauseAccess().getGroup(), "rule__ForClause__Group__0");
			builder.put(grammarAccess.getRangeClauseAccess().getGroup(), "rule__RangeClause__Group__0");
			builder.put(grammarAccess.getRangeClauseAccess().getGroup_0_0(), "rule__RangeClause__Group_0_0__0");
			builder.put(grammarAccess.getRangeClauseAccess().getGroup_0_1(), "rule__RangeClause__Group_0_1__0");
			builder.put(grammarAccess.getGoStmtAccess().getGroup(), "rule__GoStmt__Group__0");
			builder.put(grammarAccess.getTypeAccess().getGroup_2(), "rule__Type__Group_2__0");
			builder.put(grammarAccess.getTypeLitAccess().getGroup_0(), "rule__TypeLit__Group_0__0");
			builder.put(grammarAccess.getTypeLitAccess().getGroup_1(), "rule__TypeLit__Group_1__0");
			builder.put(grammarAccess.getTypeLitAccess().getGroup_2(), "rule__TypeLit__Group_2__0");
			builder.put(grammarAccess.getTypeLitAccess().getGroup_3(), "rule__TypeLit__Group_3__0");
			builder.put(grammarAccess.getTypeLitAccess().getGroup_4(), "rule__TypeLit__Group_4__0");
			builder.put(grammarAccess.getTypeLitAccess().getGroup_5(), "rule__TypeLit__Group_5__0");
			builder.put(grammarAccess.getTypeLitAccess().getGroup_6(), "rule__TypeLit__Group_6__0");
			builder.put(grammarAccess.getTypeLitAccess().getGroup_7(), "rule__TypeLit__Group_7__0");
			builder.put(grammarAccess.getArrayTypeAccess().getGroup(), "rule__ArrayType__Group__0");
			builder.put(grammarAccess.getPointerTypeAccess().getGroup(), "rule__PointerType__Group__0");
			builder.put(grammarAccess.getInterfaceTypeAccess().getGroup(), "rule__InterfaceType__Group__0");
			builder.put(grammarAccess.getInterfaceTypeAccess().getGroup_2(), "rule__InterfaceType__Group_2__0");
			builder.put(grammarAccess.getSliceTypeAccess().getGroup(), "rule__SliceType__Group__0");
			builder.put(grammarAccess.getMapTypeAccess().getGroup(), "rule__MapType__Group__0");
			builder.put(grammarAccess.getChannelTypeAccess().getGroup(), "rule__ChannelType__Group__0");
			builder.put(grammarAccess.getChannelTypeAccess().getGroup_0_1(), "rule__ChannelType__Group_0_1__0");
			builder.put(grammarAccess.getChannelTypeAccess().getGroup_0_2(), "rule__ChannelType__Group_0_2__0");
			builder.put(grammarAccess.getMethodSpecAccess().getGroup_0(), "rule__MethodSpec__Group_0__0");
			builder.put(grammarAccess.getFunctionTypeAccess().getGroup(), "rule__FunctionType__Group__0");
			builder.put(grammarAccess.getSignatureAccess().getGroup(), "rule__Signature__Group__0");
			builder.put(grammarAccess.getParametersAccess().getGroup(), "rule__Parameters__Group__0");
			builder.put(grammarAccess.getParametersAccess().getGroup_1(), "rule__Parameters__Group_1__0");
			builder.put(grammarAccess.getParameterListAccess().getGroup(), "rule__ParameterList__Group__0");
			builder.put(grammarAccess.getParameterListAccess().getGroup_1(), "rule__ParameterList__Group_1__0");
			builder.put(grammarAccess.getParameterDeclAccess().getGroup(), "rule__ParameterDecl__Group__0");
			builder.put(grammarAccess.getOperandAccess().getGroup_3(), "rule__Operand__Group_3__0");
			builder.put(grammarAccess.getQualifiedIdentAccess().getGroup(), "rule__QualifiedIdent__Group__0");
			builder.put(grammarAccess.getCompositeLitAccess().getGroup(), "rule__CompositeLit__Group__0");
			builder.put(grammarAccess.getLiteralTypeAccess().getGroup_2(), "rule__LiteralType__Group_2__0");
			builder.put(grammarAccess.getLiteralValueAccess().getGroup(), "rule__LiteralValue__Group__0");
			builder.put(grammarAccess.getLiteralValueAccess().getGroup_1(), "rule__LiteralValue__Group_1__0");
			builder.put(grammarAccess.getElementListAccess().getGroup(), "rule__ElementList__Group__0");
			builder.put(grammarAccess.getElementListAccess().getGroup_1(), "rule__ElementList__Group_1__0");
			builder.put(grammarAccess.getKeyedElementAccess().getGroup(), "rule__KeyedElement__Group__0");
			builder.put(grammarAccess.getKeyedElementAccess().getGroup_0(), "rule__KeyedElement__Group_0__0");
			builder.put(grammarAccess.getStructTypeAccess().getGroup(), "rule__StructType__Group__0");
			builder.put(grammarAccess.getStructTypeAccess().getGroup_2(), "rule__StructType__Group_2__0");
			builder.put(grammarAccess.getFieldDeclAccess().getGroup(), "rule__FieldDecl__Group__0");
			builder.put(grammarAccess.getFieldDeclAccess().getGroup_0_0(), "rule__FieldDecl__Group_0_0__0");
			builder.put(grammarAccess.getAnonymousFieldAccess().getGroup(), "rule__AnonymousField__Group__0");
			builder.put(grammarAccess.getFunctionLitAccess().getGroup(), "rule__FunctionLit__Group__0");
			builder.put(grammarAccess.getPrimaryExprSelectorAccess().getGroup(), "rule__PrimaryExprSelector__Group__0");
			builder.put(grammarAccess.getPrimaryExprIndexAccess().getGroup(), "rule__PrimaryExprIndex__Group__0");
			builder.put(grammarAccess.getPrimaryExprSliceAccess().getGroup(), "rule__PrimaryExprSlice__Group__0");
			builder.put(grammarAccess.getPrimaryExprTypeAssertionAccess().getGroup(), "rule__PrimaryExprTypeAssertion__Group__0");
			builder.put(grammarAccess.getPrimaryExprArgumentsAccess().getGroup(), "rule__PrimaryExprArguments__Group__0");
			builder.put(grammarAccess.getSelectorAccess().getGroup(), "rule__Selector__Group__0");
			builder.put(grammarAccess.getIndexAccess().getGroup(), "rule__Index__Group__0");
			builder.put(grammarAccess.getSliceAccess().getGroup(), "rule__Slice__Group__0");
			builder.put(grammarAccess.getSliceAccess().getGroup_1_0(), "rule__Slice__Group_1_0__0");
			builder.put(grammarAccess.getSliceAccess().getGroup_1_1(), "rule__Slice__Group_1_1__0");
			builder.put(grammarAccess.getTypeAssertionAccess().getGroup(), "rule__TypeAssertion__Group__0");
			builder.put(grammarAccess.getArgumentsAccess().getGroup(), "rule__Arguments__Group__0");
			builder.put(grammarAccess.getArgumentsAccess().getGroup_1(), "rule__Arguments__Group_1__0");
			builder.put(grammarAccess.getArgumentsAccess().getGroup_1_0_1(), "rule__Arguments__Group_1_0_1__0");
			builder.put(grammarAccess.getArgumentsAccess().getGroup_1_0_1_1(), "rule__Arguments__Group_1_0_1_1__0");
			builder.put(grammarAccess.getMethodExprAccess().getGroup(), "rule__MethodExpr__Group__0");
			builder.put(grammarAccess.getReceiverTypeAccess().getGroup_1(), "rule__ReceiverType__Group_1__0");
			builder.put(grammarAccess.getReceiverTypeAccess().getGroup_2(), "rule__ReceiverType__Group_2__0");
			builder.put(grammarAccess.getExpressionAccess().getGroup(), "rule__Expression__Group__0");
			builder.put(grammarAccess.getExpressionMatchedAccess().getGroup(), "rule__ExpressionMatched__Group__0");
			builder.put(grammarAccess.getUnaryExprAccess().getGroup_1(), "rule__UnaryExpr__Group_1__0");
			builder.put(grammarAccess.getConversionAccess().getGroup(), "rule__Conversion__Group__0");
			builder.put(grammarAccess.getModelAccess().getGreetingsAssignment(), "rule__Model__GreetingsAssignment");
			builder.put(grammarAccess.getSourceFileAccess().getPackageAssignment_0(), "rule__SourceFile__PackageAssignment_0");
			builder.put(grammarAccess.getSourceFileAccess().getImportsAssignment_2_0(), "rule__SourceFile__ImportsAssignment_2_0");
			builder.put(grammarAccess.getSourceFileAccess().getTopLevelDeclsAssignment_3_0(), "rule__SourceFile__TopLevelDeclsAssignment_3_0");
			builder.put(grammarAccess.getPackageClauseAccess().getPackageNameAssignment_1(), "rule__PackageClause__PackageNameAssignment_1");
			builder.put(grammarAccess.getImportDeclAccess().getSpecsAssignment_1_0(), "rule__ImportDecl__SpecsAssignment_1_0");
			builder.put(grammarAccess.getImportDeclAccess().getSpecsAssignment_1_1_1_0(), "rule__ImportDecl__SpecsAssignment_1_1_1_0");
			builder.put(grammarAccess.getImportSpecAccess().getPathAssignment_1(), "rule__ImportSpec__PathAssignment_1");
			builder.put(grammarAccess.getTopLevelDeclAccess().getDeclAssignment_0(), "rule__TopLevelDecl__DeclAssignment_0");
			builder.put(grammarAccess.getTopLevelDeclAccess().getDeclAssignment_1(), "rule__TopLevelDecl__DeclAssignment_1");
			builder.put(grammarAccess.getTopLevelDeclAccess().getDeclAssignment_2(), "rule__TopLevelDecl__DeclAssignment_2");
			builder.put(grammarAccess.getDeclarationAccess().getDeclAssignment_0(), "rule__Declaration__DeclAssignment_0");
			builder.put(grammarAccess.getDeclarationAccess().getDeclAssignment_1(), "rule__Declaration__DeclAssignment_1");
			builder.put(grammarAccess.getDeclarationAccess().getDeclAssignment_2(), "rule__Declaration__DeclAssignment_2");
			builder.put(grammarAccess.getConstDeclAccess().getSpecAssignment_1_0(), "rule__ConstDecl__SpecAssignment_1_0");
			builder.put(grammarAccess.getConstDeclAccess().getSpecAssignment_1_1_1_0(), "rule__ConstDecl__SpecAssignment_1_1_1_0");
			builder.put(grammarAccess.getConstSpecAccess().getIdentifiersAssignment_0(), "rule__ConstSpec__IdentifiersAssignment_0");
			builder.put(grammarAccess.getConstSpecAccess().getTypeAssignment_1_0(), "rule__ConstSpec__TypeAssignment_1_0");
			builder.put(grammarAccess.getConstSpecAccess().getExpressionAssignment_1_2(), "rule__ConstSpec__ExpressionAssignment_1_2");
			builder.put(grammarAccess.getIdentifierListAccess().getIdsAssignment_0(), "rule__IdentifierList__IdsAssignment_0");
			builder.put(grammarAccess.getIdentifierListAccess().getIdsAssignment_1_1(), "rule__IdentifierList__IdsAssignment_1_1");
			builder.put(grammarAccess.getExpressionListAccess().getExprAssignment_0(), "rule__ExpressionList__ExprAssignment_0");
			builder.put(grammarAccess.getExpressionListAccess().getExprAssignment_1_1(), "rule__ExpressionList__ExprAssignment_1_1");
			builder.put(grammarAccess.getTypeDeclAccess().getSpecAssignment_1_0(), "rule__TypeDecl__SpecAssignment_1_0");
			builder.put(grammarAccess.getTypeDeclAccess().getSpecAssignment_1_1_1_0(), "rule__TypeDecl__SpecAssignment_1_1_1_0");
			builder.put(grammarAccess.getTypeSpecAccess().getNameAssignment_0(), "rule__TypeSpec__NameAssignment_0");
			builder.put(grammarAccess.getTypeSpecAccess().getTypeAssignment_1(), "rule__TypeSpec__TypeAssignment_1");
			builder.put(grammarAccess.getFunctionDeclAccess().getNameAssignment_1(), "rule__FunctionDecl__NameAssignment_1");
			builder.put(grammarAccess.getFunctionDeclAccess().getFuncAssignment_2_0(), "rule__FunctionDecl__FuncAssignment_2_0");
			builder.put(grammarAccess.getFunctionDeclAccess().getSigAssignment_2_1(), "rule__FunctionDecl__SigAssignment_2_1");
			builder.put(grammarAccess.getFunctionAccess().getSigAssignment_0(), "rule__Function__SigAssignment_0");
			builder.put(grammarAccess.getFunctionAccess().getCodeBlockAssignment_1(), "rule__Function__CodeBlockAssignment_1");
			builder.put(grammarAccess.getMethodDeclAccess().getParamsAssignment_1(), "rule__MethodDecl__ParamsAssignment_1");
			builder.put(grammarAccess.getMethodDeclAccess().getNameAssignment_2(), "rule__MethodDecl__NameAssignment_2");
			builder.put(grammarAccess.getMethodDeclAccess().getFuncAssignment_3_0(), "rule__MethodDecl__FuncAssignment_3_0");
			builder.put(grammarAccess.getMethodDeclAccess().getSigAssignment_3_1(), "rule__MethodDecl__SigAssignment_3_1");
			builder.put(grammarAccess.getReceiverAccess().getParamsAssignment(), "rule__Receiver__ParamsAssignment");
			builder.put(grammarAccess.getVarDeclAccess().getSpecsAssignment_1_0(), "rule__VarDecl__SpecsAssignment_1_0");
			builder.put(grammarAccess.getVarDeclAccess().getSpecsAssignment_1_1_1_0(), "rule__VarDecl__SpecsAssignment_1_1_1_0");
			builder.put(grammarAccess.getVarSpecAccess().getIdListAssignment_0(), "rule__VarSpec__IdListAssignment_0");
			builder.put(grammarAccess.getVarSpecAccess().getTypeAssignment_1_0_0(), "rule__VarSpec__TypeAssignment_1_0_0");
			builder.put(grammarAccess.getVarSpecAccess().getExprListAssignment_1_0_1_1(), "rule__VarSpec__ExprListAssignment_1_0_1_1");
			builder.put(grammarAccess.getVarSpecAccess().getExprListAssignment_1_1_1(), "rule__VarSpec__ExprListAssignment_1_1_1");
			builder.put(grammarAccess.getBlockAccess().getStatementsAssignment_1(), "rule__Block__StatementsAssignment_1");
			builder.put(grammarAccess.getStatementListAccess().getStatementsAssignment_0(), "rule__StatementList__StatementsAssignment_0");
			builder.put(grammarAccess.getStatementAccess().getDeclarationAssignment_0(), "rule__Statement__DeclarationAssignment_0");
			builder.put(grammarAccess.getStatementAccess().getLabeledStmtAssignment_1(), "rule__Statement__LabeledStmtAssignment_1");
			builder.put(grammarAccess.getStatementAccess().getSimpleStmtAssignment_2(), "rule__Statement__SimpleStmtAssignment_2");
			builder.put(grammarAccess.getStatementAccess().getGoStmtAssignment_3(), "rule__Statement__GoStmtAssignment_3");
			builder.put(grammarAccess.getStatementAccess().getReturnStmtAssignment_4(), "rule__Statement__ReturnStmtAssignment_4");
			builder.put(grammarAccess.getStatementAccess().getBreakStmtAssignment_5(), "rule__Statement__BreakStmtAssignment_5");
			builder.put(grammarAccess.getStatementAccess().getContinueStmtAssignment_6(), "rule__Statement__ContinueStmtAssignment_6");
			builder.put(grammarAccess.getStatementAccess().getGotoStmtAssignment_7(), "rule__Statement__GotoStmtAssignment_7");
			builder.put(grammarAccess.getStatementAccess().getFallthroughStmtAssignment_8(), "rule__Statement__FallthroughStmtAssignment_8");
			builder.put(grammarAccess.getStatementAccess().getBlockAssignment_9(), "rule__Statement__BlockAssignment_9");
			builder.put(grammarAccess.getStatementAccess().getIfStmtAssignment_10(), "rule__Statement__IfStmtAssignment_10");
			builder.put(grammarAccess.getStatementAccess().getSwitchStmtAssignment_11(), "rule__Statement__SwitchStmtAssignment_11");
			builder.put(grammarAccess.getStatementAccess().getSelectStmtAssignment_12(), "rule__Statement__SelectStmtAssignment_12");
			builder.put(grammarAccess.getStatementAccess().getForStmtAssignment_13(), "rule__Statement__ForStmtAssignment_13");
			builder.put(grammarAccess.getStatementAccess().getDeferStmtAssignment_14(), "rule__Statement__DeferStmtAssignment_14");
			builder.put(grammarAccess.getSimpleStmtAccess().getSendStmtAssignment_0(), "rule__SimpleStmt__SendStmtAssignment_0");
			builder.put(grammarAccess.getSimpleStmtAccess().getExpressionStmtAssignment_1(), "rule__SimpleStmt__ExpressionStmtAssignment_1");
			builder.put(grammarAccess.getSimpleStmtAccess().getIncDecStmtAssignment_2(), "rule__SimpleStmt__IncDecStmtAssignment_2");
			builder.put(grammarAccess.getSimpleStmtAccess().getAssignmentAssignment_3(), "rule__SimpleStmt__AssignmentAssignment_3");
			builder.put(grammarAccess.getSimpleStmtAccess().getShortVarDeclAssignment_4(), "rule__SimpleStmt__ShortVarDeclAssignment_4");
			builder.put(grammarAccess.getSimpleStmtAccess().getEmptyStmtAssignment_5(), "rule__SimpleStmt__EmptyStmtAssignment_5");
			builder.put(grammarAccess.getExpressionStmtAccess().getExprAssignment(), "rule__ExpressionStmt__ExprAssignment");
			builder.put(grammarAccess.getSendStmtAccess().getExpr1Assignment_0(), "rule__SendStmt__Expr1Assignment_0");
			builder.put(grammarAccess.getSendStmtAccess().getExpr2Assignment_2(), "rule__SendStmt__Expr2Assignment_2");
			builder.put(grammarAccess.getIncDecStmtAccess().getExprAssignment_0(), "rule__IncDecStmt__ExprAssignment_0");
			builder.put(grammarAccess.getAssignmentAccess().getExprList1Assignment_0(), "rule__Assignment__ExprList1Assignment_0");
			builder.put(grammarAccess.getAssignmentAccess().getOperationAssignment_1(), "rule__Assignment__OperationAssignment_1");
			builder.put(grammarAccess.getAssignmentAccess().getExprList2Assignment_2(), "rule__Assignment__ExprList2Assignment_2");
			builder.put(grammarAccess.getShortVarDeclAccess().getIdListAssignment_0(), "rule__ShortVarDecl__IdListAssignment_0");
			builder.put(grammarAccess.getShortVarDeclAccess().getExprListAssignment_2(), "rule__ShortVarDecl__ExprListAssignment_2");
			builder.put(grammarAccess.getEmptyStmtAccess().getContentAssignment(), "rule__EmptyStmt__ContentAssignment");
			builder.put(grammarAccess.getLabeledStmtAccess().getLabelAssignment_0(), "rule__LabeledStmt__LabelAssignment_0");
			builder.put(grammarAccess.getLabeledStmtAccess().getStmtAssignment_2(), "rule__LabeledStmt__StmtAssignment_2");
			builder.put(grammarAccess.getReturnStmtAccess().getExprListAssignment_1(), "rule__ReturnStmt__ExprListAssignment_1");
			builder.put(grammarAccess.getBreakStmtAccess().getLabelAssignment_1(), "rule__BreakStmt__LabelAssignment_1");
			builder.put(grammarAccess.getContinueStmtAccess().getLabelAssignment_1(), "rule__ContinueStmt__LabelAssignment_1");
			builder.put(grammarAccess.getGotoStmtAccess().getLabelAssignment_1(), "rule__GotoStmt__LabelAssignment_1");
			builder.put(grammarAccess.getFallthroughStmtAccess().getContentAssignment(), "rule__FallthroughStmt__ContentAssignment");
			builder.put(grammarAccess.getDeferStmtAccess().getExprAssignment_1(), "rule__DeferStmt__ExprAssignment_1");
			builder.put(grammarAccess.getIfStmtAccess().getSimplStatementAssignment_1_0(), "rule__IfStmt__SimplStatementAssignment_1_0");
			builder.put(grammarAccess.getIfStmtAccess().getExprAssignment_2(), "rule__IfStmt__ExprAssignment_2");
			builder.put(grammarAccess.getIfStmtAccess().getCodeBlockAssignment_3(), "rule__IfStmt__CodeBlockAssignment_3");
			builder.put(grammarAccess.getIfStmtAccess().getIfStatementAssignment_4_1_0(), "rule__IfStmt__IfStatementAssignment_4_1_0");
			builder.put(grammarAccess.getIfStmtAccess().getCodeBlockIfAssignment_4_1_1(), "rule__IfStmt__CodeBlockIfAssignment_4_1_1");
			builder.put(grammarAccess.getSwitchStmtAccess().getStatementAssignment_0(), "rule__SwitchStmt__StatementAssignment_0");
			builder.put(grammarAccess.getSwitchStmtAccess().getStatementAssignment_1(), "rule__SwitchStmt__StatementAssignment_1");
			builder.put(grammarAccess.getExprSwitchStmtAccess().getSimpleStmtAssignment_1_0(), "rule__ExprSwitchStmt__SimpleStmtAssignment_1_0");
			builder.put(grammarAccess.getExprSwitchStmtAccess().getExprAssignment_2(), "rule__ExprSwitchStmt__ExprAssignment_2");
			builder.put(grammarAccess.getExprSwitchStmtAccess().getExprCaseClausesAssignment_4(), "rule__ExprSwitchStmt__ExprCaseClausesAssignment_4");
			builder.put(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseAssignment_0(), "rule__ExprCaseClause__ExprSwitchCaseAssignment_0");
			builder.put(grammarAccess.getExprCaseClauseAccess().getStmtListAssignment_2(), "rule__ExprCaseClause__StmtListAssignment_2");
			builder.put(grammarAccess.getExprSwitchCaseAccess().getExprListAssignment_0_1(), "rule__ExprSwitchCase__ExprListAssignment_0_1");
			builder.put(grammarAccess.getTypeSwitchStmtAccess().getSimpleStatementAssignment_1_0(), "rule__TypeSwitchStmt__SimpleStatementAssignment_1_0");
			builder.put(grammarAccess.getTypeSwitchStmtAccess().getTypeSwitchGuardAssignment_2(), "rule__TypeSwitchStmt__TypeSwitchGuardAssignment_2");
			builder.put(grammarAccess.getTypeSwitchStmtAccess().getTypeCaseClausesAssignment_4(), "rule__TypeSwitchStmt__TypeCaseClausesAssignment_4");
			builder.put(grammarAccess.getTypeSwitchGuardAccess().getNameAssignment_0_0(), "rule__TypeSwitchGuard__NameAssignment_0_0");
			builder.put(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExpressionAssignment_1(), "rule__TypeSwitchGuard__PrimaryExpressionAssignment_1");
			builder.put(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseAssignment_0(), "rule__TypeCaseClause__TypeSwitchCaseAssignment_0");
			builder.put(grammarAccess.getTypeCaseClauseAccess().getStatementListAssignment_2(), "rule__TypeCaseClause__StatementListAssignment_2");
			builder.put(grammarAccess.getTypeSwitchCaseAccess().getTypeListAssignment_0_1(), "rule__TypeSwitchCase__TypeListAssignment_0_1");
			builder.put(grammarAccess.getTypeListAccess().getTypesAssignment_0(), "rule__TypeList__TypesAssignment_0");
			builder.put(grammarAccess.getTypeListAccess().getTypesAssignment_1_1(), "rule__TypeList__TypesAssignment_1_1");
			builder.put(grammarAccess.getSelectStmtAccess().getCommClausesAssignment_2(), "rule__SelectStmt__CommClausesAssignment_2");
			builder.put(grammarAccess.getCommClauseAccess().getCaseAssignment_0(), "rule__CommClause__CaseAssignment_0");
			builder.put(grammarAccess.getCommClauseAccess().getStmtListAssignment_2(), "rule__CommClause__StmtListAssignment_2");
			builder.put(grammarAccess.getCommCaseAccess().getStatementAssignment_0_1_0(), "rule__CommCase__StatementAssignment_0_1_0");
			builder.put(grammarAccess.getCommCaseAccess().getStatementAssignment_0_1_1(), "rule__CommCase__StatementAssignment_0_1_1");
			builder.put(grammarAccess.getRecvStmtAccess().getExprListAssignment_0_0_0(), "rule__RecvStmt__ExprListAssignment_0_0_0");
			builder.put(grammarAccess.getRecvStmtAccess().getIdListAssignment_0_1_0(), "rule__RecvStmt__IdListAssignment_0_1_0");
			builder.put(grammarAccess.getRecvStmtAccess().getExprAssignment_1(), "rule__RecvStmt__ExprAssignment_1");
			builder.put(grammarAccess.getForStmtAccess().getExprAssignment_1_0(), "rule__ForStmt__ExprAssignment_1_0");
			builder.put(grammarAccess.getForStmtAccess().getClauseAssignment_1_1(), "rule__ForStmt__ClauseAssignment_1_1");
			builder.put(grammarAccess.getForStmtAccess().getClauseAssignment_1_2(), "rule__ForStmt__ClauseAssignment_1_2");
			builder.put(grammarAccess.getForStmtAccess().getCodeBlockAssignment_2(), "rule__ForStmt__CodeBlockAssignment_2");
			builder.put(grammarAccess.getForClauseAccess().getStatement1Assignment_0(), "rule__ForClause__Statement1Assignment_0");
			builder.put(grammarAccess.getForClauseAccess().getExprAssignment_2(), "rule__ForClause__ExprAssignment_2");
			builder.put(grammarAccess.getForClauseAccess().getStatement2Assignment_4(), "rule__ForClause__Statement2Assignment_4");
			builder.put(grammarAccess.getRangeClauseAccess().getExprListAssignment_0_0_0(), "rule__RangeClause__ExprListAssignment_0_0_0");
			builder.put(grammarAccess.getRangeClauseAccess().getIdListAssignment_0_1_0(), "rule__RangeClause__IdListAssignment_0_1_0");
			builder.put(grammarAccess.getRangeClauseAccess().getExprAssignment_2(), "rule__RangeClause__ExprAssignment_2");
			builder.put(grammarAccess.getGoStmtAccess().getExprAssignment_1(), "rule__GoStmt__ExprAssignment_1");
			builder.put(grammarAccess.getTypeAccess().getContentAssignment_0(), "rule__Type__ContentAssignment_0");
			builder.put(grammarAccess.getTypeAccess().getContentAssignment_1(), "rule__Type__ContentAssignment_1");
			builder.put(grammarAccess.getTypeAccess().getContentAssignment_2_1(), "rule__Type__ContentAssignment_2_1");
			builder.put(grammarAccess.getTypeNameAccess().getNameAssignment_0(), "rule__TypeName__NameAssignment_0");
			builder.put(grammarAccess.getTypeNameAccess().getQualIdentAssignment_1(), "rule__TypeName__QualIdentAssignment_1");
			builder.put(grammarAccess.getTypeLitAccess().getLitAssignment_0_0(), "rule__TypeLit__LitAssignment_0_0");
			builder.put(grammarAccess.getTypeLitAccess().getContentTypeAssignment_0_1(), "rule__TypeLit__ContentTypeAssignment_0_1");
			builder.put(grammarAccess.getTypeLitAccess().getLitAssignment_1_0(), "rule__TypeLit__LitAssignment_1_0");
			builder.put(grammarAccess.getTypeLitAccess().getContentTypeAssignment_1_1(), "rule__TypeLit__ContentTypeAssignment_1_1");
			builder.put(grammarAccess.getTypeLitAccess().getLitAssignment_2_0(), "rule__TypeLit__LitAssignment_2_0");
			builder.put(grammarAccess.getTypeLitAccess().getContentTypeAssignment_2_1(), "rule__TypeLit__ContentTypeAssignment_2_1");
			builder.put(grammarAccess.getTypeLitAccess().getLitAssignment_3_0(), "rule__TypeLit__LitAssignment_3_0");
			builder.put(grammarAccess.getTypeLitAccess().getContentTypeAssignment_3_1(), "rule__TypeLit__ContentTypeAssignment_3_1");
			builder.put(grammarAccess.getTypeLitAccess().getLitAssignment_4_0(), "rule__TypeLit__LitAssignment_4_0");
			builder.put(grammarAccess.getTypeLitAccess().getContentTypeAssignment_4_1(), "rule__TypeLit__ContentTypeAssignment_4_1");
			builder.put(grammarAccess.getTypeLitAccess().getLitAssignment_5_0(), "rule__TypeLit__LitAssignment_5_0");
			builder.put(grammarAccess.getTypeLitAccess().getContentTypeAssignment_5_1(), "rule__TypeLit__ContentTypeAssignment_5_1");
			builder.put(grammarAccess.getTypeLitAccess().getLitAssignment_6_0(), "rule__TypeLit__LitAssignment_6_0");
			builder.put(grammarAccess.getTypeLitAccess().getContentTypeAssignment_6_1(), "rule__TypeLit__ContentTypeAssignment_6_1");
			builder.put(grammarAccess.getTypeLitAccess().getLitAssignment_7_0(), "rule__TypeLit__LitAssignment_7_0");
			builder.put(grammarAccess.getTypeLitAccess().getContentTypeAssignment_7_1(), "rule__TypeLit__ContentTypeAssignment_7_1");
			builder.put(grammarAccess.getArrayTypeAccess().getArrayLengthAssignment_1(), "rule__ArrayType__ArrayLengthAssignment_1");
			builder.put(grammarAccess.getArrayTypeAccess().getElemTypeAssignment_3(), "rule__ArrayType__ElemTypeAssignment_3");
			builder.put(grammarAccess.getArrayLengthAccess().getExprAssignment(), "rule__ArrayLength__ExprAssignment");
			builder.put(grammarAccess.getElementTypeAccess().getTypeAssignment(), "rule__ElementType__TypeAssignment");
			builder.put(grammarAccess.getPointerTypeAccess().getTypeAssignment_1(), "rule__PointerType__TypeAssignment_1");
			builder.put(grammarAccess.getInterfaceTypeAccess().getMethodSpecsAssignment_2_0(), "rule__InterfaceType__MethodSpecsAssignment_2_0");
			builder.put(grammarAccess.getSliceTypeAccess().getElemTypeAssignment_2(), "rule__SliceType__ElemTypeAssignment_2");
			builder.put(grammarAccess.getMapTypeAccess().getTypeAssignment_2(), "rule__MapType__TypeAssignment_2");
			builder.put(grammarAccess.getMapTypeAccess().getElemTypeAssignment_4(), "rule__MapType__ElemTypeAssignment_4");
			builder.put(grammarAccess.getChannelTypeAccess().getElemTypeAssignment_1(), "rule__ChannelType__ElemTypeAssignment_1");
			builder.put(grammarAccess.getMethodSpecAccess().getNameAssignment_0_0(), "rule__MethodSpec__NameAssignment_0_0");
			builder.put(grammarAccess.getMethodSpecAccess().getSigAssignment_0_1(), "rule__MethodSpec__SigAssignment_0_1");
			builder.put(grammarAccess.getMethodSpecAccess().getTypeNameAssignment_1(), "rule__MethodSpec__TypeNameAssignment_1");
			builder.put(grammarAccess.getFunctionTypeAccess().getSigAssignment_1(), "rule__FunctionType__SigAssignment_1");
			builder.put(grammarAccess.getSignatureAccess().getParamsAssignment_0(), "rule__Signature__ParamsAssignment_0");
			builder.put(grammarAccess.getSignatureAccess().getResultAssignment_1(), "rule__Signature__ResultAssignment_1");
			builder.put(grammarAccess.getResultAccess().getParamsAssignment_0(), "rule__Result__ParamsAssignment_0");
			builder.put(grammarAccess.getResultAccess().getTypeAssignment_1(), "rule__Result__TypeAssignment_1");
			builder.put(grammarAccess.getParametersAccess().getParamListAssignment_1_0(), "rule__Parameters__ParamListAssignment_1_0");
			builder.put(grammarAccess.getParameterListAccess().getParamsDeclAssignment_0(), "rule__ParameterList__ParamsDeclAssignment_0");
			builder.put(grammarAccess.getParameterListAccess().getParamsDeclAssignment_1_1(), "rule__ParameterList__ParamsDeclAssignment_1_1");
			builder.put(grammarAccess.getParameterDeclAccess().getIdentifierListAssignment_0(), "rule__ParameterDecl__IdentifierListAssignment_0");
			builder.put(grammarAccess.getParameterDeclAccess().getTypeAssignment_2(), "rule__ParameterDecl__TypeAssignment_2");
			builder.put(grammarAccess.getOperandAccess().getContentAssignment_0(), "rule__Operand__ContentAssignment_0");
			builder.put(grammarAccess.getOperandAccess().getContentAssignment_1(), "rule__Operand__ContentAssignment_1");
			builder.put(grammarAccess.getOperandAccess().getContentAssignment_2(), "rule__Operand__ContentAssignment_2");
			builder.put(grammarAccess.getOperandAccess().getContentAssignment_3_1(), "rule__Operand__ContentAssignment_3_1");
			builder.put(grammarAccess.getLiteralAccess().getLitBasicAssignment_0(), "rule__Literal__LitBasicAssignment_0");
			builder.put(grammarAccess.getLiteralAccess().getLitCompositeAssignment_1(), "rule__Literal__LitCompositeAssignment_1");
			builder.put(grammarAccess.getLiteralAccess().getLitFuncAssignment_2(), "rule__Literal__LitFuncAssignment_2");
			builder.put(grammarAccess.getOperandNameAccess().getNameAssignment_0(), "rule__OperandName__NameAssignment_0");
			builder.put(grammarAccess.getOperandNameAccess().getQualIdentAssignment_1(), "rule__OperandName__QualIdentAssignment_1");
			builder.put(grammarAccess.getQualifiedIdentAccess().getPackageNameAssignment_0(), "rule__QualifiedIdent__PackageNameAssignment_0");
			builder.put(grammarAccess.getQualifiedIdentAccess().getNameAssignment_2(), "rule__QualifiedIdent__NameAssignment_2");
			builder.put(grammarAccess.getCompositeLitAccess().getLiteralTypeAssignment_0(), "rule__CompositeLit__LiteralTypeAssignment_0");
			builder.put(grammarAccess.getCompositeLitAccess().getLiteralValueAssignment_1(), "rule__CompositeLit__LiteralValueAssignment_1");
			builder.put(grammarAccess.getLiteralTypeAccess().getTypeAssignment_0(), "rule__LiteralType__TypeAssignment_0");
			builder.put(grammarAccess.getLiteralTypeAccess().getTypeAssignment_1(), "rule__LiteralType__TypeAssignment_1");
			builder.put(grammarAccess.getLiteralTypeAccess().getTypeAssignment_2_3(), "rule__LiteralType__TypeAssignment_2_3");
			builder.put(grammarAccess.getLiteralTypeAccess().getTypeAssignment_3(), "rule__LiteralType__TypeAssignment_3");
			builder.put(grammarAccess.getLiteralTypeAccess().getTypeAssignment_4(), "rule__LiteralType__TypeAssignment_4");
			builder.put(grammarAccess.getLiteralTypeAccess().getTypeAssignment_5(), "rule__LiteralType__TypeAssignment_5");
			builder.put(grammarAccess.getLiteralValueAccess().getElementListAssignment_1_0(), "rule__LiteralValue__ElementListAssignment_1_0");
			builder.put(grammarAccess.getElementListAccess().getKeyedElementsAssignment_0(), "rule__ElementList__KeyedElementsAssignment_0");
			builder.put(grammarAccess.getElementListAccess().getKeyedElementsAssignment_1_1(), "rule__ElementList__KeyedElementsAssignment_1_1");
			builder.put(grammarAccess.getKeyedElementAccess().getKeyAssignment_0_0(), "rule__KeyedElement__KeyAssignment_0_0");
			builder.put(grammarAccess.getKeyedElementAccess().getElementAssignment_1(), "rule__KeyedElement__ElementAssignment_1");
			builder.put(grammarAccess.getKeyAccess().getNameAssignment_0(), "rule__Key__NameAssignment_0");
			builder.put(grammarAccess.getKeyAccess().getExprAssignment_1(), "rule__Key__ExprAssignment_1");
			builder.put(grammarAccess.getKeyAccess().getLitAssignment_2(), "rule__Key__LitAssignment_2");
			builder.put(grammarAccess.getElementAccess().getContentAssignment_0(), "rule__Element__ContentAssignment_0");
			builder.put(grammarAccess.getElementAccess().getContentAssignment_1(), "rule__Element__ContentAssignment_1");
			builder.put(grammarAccess.getStructTypeAccess().getFieldsDeclAssignment_2_0(), "rule__StructType__FieldsDeclAssignment_2_0");
			builder.put(grammarAccess.getFieldDeclAccess().getIdentifierListAssignment_0_0_0(), "rule__FieldDecl__IdentifierListAssignment_0_0_0");
			builder.put(grammarAccess.getFieldDeclAccess().getTypeAssignment_0_0_1(), "rule__FieldDecl__TypeAssignment_0_0_1");
			builder.put(grammarAccess.getFieldDeclAccess().getAnonymousFieldAssignment_0_1(), "rule__FieldDecl__AnonymousFieldAssignment_0_1");
			builder.put(grammarAccess.getAnonymousFieldAccess().getTypeNameAssignment_1(), "rule__AnonymousField__TypeNameAssignment_1");
			builder.put(grammarAccess.getFunctionLitAccess().getFunctionAssignment_1(), "rule__FunctionLit__FunctionAssignment_1");
			builder.put(grammarAccess.getPrimaryExprAccess().getOperandAssignment_0_0(), "rule__PrimaryExpr__OperandAssignment_0_0");
			builder.put(grammarAccess.getPrimaryExprAccess().getConversionAssignment_0_1(), "rule__PrimaryExpr__ConversionAssignment_0_1");
			builder.put(grammarAccess.getPrimaryExprAccess().getPrimaryExprSelectorAssignment_1(), "rule__PrimaryExpr__PrimaryExprSelectorAssignment_1");
			builder.put(grammarAccess.getPrimaryExprAccess().getPrimaryExprIndexAssignment_2(), "rule__PrimaryExpr__PrimaryExprIndexAssignment_2");
			builder.put(grammarAccess.getPrimaryExprAccess().getPrimaryExprSliceAssignment_3(), "rule__PrimaryExpr__PrimaryExprSliceAssignment_3");
			builder.put(grammarAccess.getPrimaryExprAccess().getPrimaryExprTypeAssertionAssignment_4(), "rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4");
			builder.put(grammarAccess.getPrimaryExprAccess().getPrimaryExprArgumentsAssignment_5(), "rule__PrimaryExpr__PrimaryExprArgumentsAssignment_5");
			builder.put(grammarAccess.getPrimaryExprStuffAccess().getSelectorAssignment_0(), "rule__PrimaryExprStuff__SelectorAssignment_0");
			builder.put(grammarAccess.getPrimaryExprStuffAccess().getIndexAssignment_1(), "rule__PrimaryExprStuff__IndexAssignment_1");
			builder.put(grammarAccess.getPrimaryExprStuffAccess().getSliceAssignment_2(), "rule__PrimaryExprStuff__SliceAssignment_2");
			builder.put(grammarAccess.getPrimaryExprStuffAccess().getTypeAssertionAssignment_3(), "rule__PrimaryExprStuff__TypeAssertionAssignment_3");
			builder.put(grammarAccess.getPrimaryExprStuffAccess().getArgumentsAssignment_4(), "rule__PrimaryExprStuff__ArgumentsAssignment_4");
			builder.put(grammarAccess.getPrimaryExprSelectorAccess().getContentAssignment_0(), "rule__PrimaryExprSelector__ContentAssignment_0");
			builder.put(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprSelectorAssignment_1(), "rule__PrimaryExprSelector__PrimaryExprSelectorAssignment_1");
			builder.put(grammarAccess.getPrimaryExprIndexAccess().getContentAssignment_0(), "rule__PrimaryExprIndex__ContentAssignment_0");
			builder.put(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprIndexAssignment_1(), "rule__PrimaryExprIndex__PrimaryExprIndexAssignment_1");
			builder.put(grammarAccess.getPrimaryExprSliceAccess().getContentAssignment_0(), "rule__PrimaryExprSlice__ContentAssignment_0");
			builder.put(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprSliceAssignment_1(), "rule__PrimaryExprSlice__PrimaryExprSliceAssignment_1");
			builder.put(grammarAccess.getPrimaryExprTypeAssertionAccess().getContentAssignment_0(), "rule__PrimaryExprTypeAssertion__ContentAssignment_0");
			builder.put(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprTypeAssertionAssignment_1(), "rule__PrimaryExprTypeAssertion__PrimaryExprTypeAssertionAssignment_1");
			builder.put(grammarAccess.getPrimaryExprArgumentsAccess().getContentAssignment_0(), "rule__PrimaryExprArguments__ContentAssignment_0");
			builder.put(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprArgumentsAssignment_1(), "rule__PrimaryExprArguments__PrimaryExprArgumentsAssignment_1");
			builder.put(grammarAccess.getSelectorAccess().getNameAssignment_1(), "rule__Selector__NameAssignment_1");
			builder.put(grammarAccess.getIndexAccess().getExprAssignment_1(), "rule__Index__ExprAssignment_1");
			builder.put(grammarAccess.getSliceAccess().getExpr1Assignment_1_0_0(), "rule__Slice__Expr1Assignment_1_0_0");
			builder.put(grammarAccess.getSliceAccess().getExpr2Assignment_1_0_2(), "rule__Slice__Expr2Assignment_1_0_2");
			builder.put(grammarAccess.getSliceAccess().getExpr1Assignment_1_1_0(), "rule__Slice__Expr1Assignment_1_1_0");
			builder.put(grammarAccess.getSliceAccess().getExpr2Assignment_1_1_2(), "rule__Slice__Expr2Assignment_1_1_2");
			builder.put(grammarAccess.getSliceAccess().getExpr3Assignment_1_1_4(), "rule__Slice__Expr3Assignment_1_1_4");
			builder.put(grammarAccess.getTypeAssertionAccess().getTypeAssignment_2(), "rule__TypeAssertion__TypeAssignment_2");
			builder.put(grammarAccess.getArgumentsAccess().getExpressionListAssignment_1_0_0(), "rule__Arguments__ExpressionListAssignment_1_0_0");
			builder.put(grammarAccess.getArgumentsAccess().getTypeAssignment_1_0_1_0(), "rule__Arguments__TypeAssignment_1_0_1_0");
			builder.put(grammarAccess.getArgumentsAccess().getExpressionListAssignment_1_0_1_1_1(), "rule__Arguments__ExpressionListAssignment_1_0_1_1_1");
			builder.put(grammarAccess.getMethodExprAccess().getReceiverTypeAssignment_0(), "rule__MethodExpr__ReceiverTypeAssignment_0");
			builder.put(grammarAccess.getReceiverTypeAccess().getTypeNameAssignment_0(), "rule__ReceiverType__TypeNameAssignment_0");
			builder.put(grammarAccess.getReceiverTypeAccess().getTypeNameAssignment_1_2(), "rule__ReceiverType__TypeNameAssignment_1_2");
			builder.put(grammarAccess.getReceiverTypeAccess().getReceiverTypeAssignment_2_1(), "rule__ReceiverType__ReceiverTypeAssignment_2_1");
			builder.put(grammarAccess.getExpressionAccess().getUnaryExprAssignment_0(), "rule__Expression__UnaryExprAssignment_0");
			builder.put(grammarAccess.getExpressionAccess().getExpressionMatchedAssignment_1(), "rule__Expression__ExpressionMatchedAssignment_1");
			builder.put(grammarAccess.getExpressionMatchedAccess().getExpressionAssignment_1(), "rule__ExpressionMatched__ExpressionAssignment_1");
			builder.put(grammarAccess.getUnaryExprAccess().getPrimaryExprAssignment_0(), "rule__UnaryExpr__PrimaryExprAssignment_0");
			builder.put(grammarAccess.getUnaryExprAccess().getUnaryExprAssignment_1_1(), "rule__UnaryExpr__UnaryExprAssignment_1_1");
			builder.put(grammarAccess.getConversionAccess().getTypeAssignment_0(), "rule__Conversion__TypeAssignment_0");
			builder.put(grammarAccess.getConversionAccess().getExpressionAssignment_2(), "rule__Conversion__ExpressionAssignment_2");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private GoGrammarAccess grammarAccess;

	@Override
	protected InternalGoParser createParser() {
		InternalGoParser result = new InternalGoParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public GoGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(GoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
