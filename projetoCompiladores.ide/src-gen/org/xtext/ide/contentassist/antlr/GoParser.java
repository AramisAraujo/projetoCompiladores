/*
 * generated by Xtext 2.14.0
 */
package org.xtext.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.ide.contentassist.antlr.internal.InternalGoParser;
import org.xtext.services.GoGrammarAccess;

public class GoParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(GoGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, GoGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getImportDeclAccess().getAlternatives_1(), "rule__ImportDecl__Alternatives_1");
			builder.put(grammarAccess.getImportSpecAccess().getAlternatives_0(), "rule__ImportSpec__Alternatives_0");
			builder.put(grammarAccess.getTopLevelDeclAccess().getAlternatives(), "rule__TopLevelDecl__Alternatives");
			builder.put(grammarAccess.getDeclarationAccess().getAlternatives(), "rule__Declaration__Alternatives");
			builder.put(grammarAccess.getConstDeclAccess().getAlternatives_1(), "rule__ConstDecl__Alternatives_1");
			builder.put(grammarAccess.getTypeDeclAccess().getAlternatives_1(), "rule__TypeDecl__Alternatives_1");
			builder.put(grammarAccess.getFunctionDeclAccess().getAlternatives_2(), "rule__FunctionDecl__Alternatives_2");
			builder.put(grammarAccess.getMethodDeclAccess().getAlternatives_3(), "rule__MethodDecl__Alternatives_3");
			builder.put(grammarAccess.getVarDeclAccess().getAlternatives_1(), "rule__VarDecl__Alternatives_1");
			builder.put(grammarAccess.getVarSpecAccess().getAlternatives_1(), "rule__VarSpec__Alternatives_1");
			builder.put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
			builder.put(grammarAccess.getSimpleStmtAccess().getAlternatives(), "rule__SimpleStmt__Alternatives");
			builder.put(grammarAccess.getIncDecStmtAccess().getAlternatives_1(), "rule__IncDecStmt__Alternatives_1");
			builder.put(grammarAccess.getAssign_opAccess().getAlternatives_0(), "rule__Assign_op__Alternatives_0");
			builder.put(grammarAccess.getIfStmtAccess().getAlternatives_4_1(), "rule__IfStmt__Alternatives_4_1");
			builder.put(grammarAccess.getSwitchStmtAccess().getAlternatives(), "rule__SwitchStmt__Alternatives");
			builder.put(grammarAccess.getExprSwitchCaseAccess().getAlternatives(), "rule__ExprSwitchCase__Alternatives");
			builder.put(grammarAccess.getTypeSwitchCaseAccess().getAlternatives(), "rule__TypeSwitchCase__Alternatives");
			builder.put(grammarAccess.getCommCaseAccess().getAlternatives(), "rule__CommCase__Alternatives");
			builder.put(grammarAccess.getCommCaseAccess().getAlternatives_0_1(), "rule__CommCase__Alternatives_0_1");
			builder.put(grammarAccess.getRecvStmtAccess().getAlternatives_0(), "rule__RecvStmt__Alternatives_0");
			builder.put(grammarAccess.getForStmtAccess().getAlternatives_1(), "rule__ForStmt__Alternatives_1");
			builder.put(grammarAccess.getRangeClauseAccess().getAlternatives_0(), "rule__RangeClause__Alternatives_0");
			builder.put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
			builder.put(grammarAccess.getTypeNameAccess().getAlternatives(), "rule__TypeName__Alternatives");
			builder.put(grammarAccess.getTypeLitAccess().getAlternatives(), "rule__TypeLit__Alternatives");
			builder.put(grammarAccess.getChannelTypeAccess().getAlternatives_0(), "rule__ChannelType__Alternatives_0");
			builder.put(grammarAccess.getMethodSpecAccess().getAlternatives(), "rule__MethodSpec__Alternatives");
			builder.put(grammarAccess.getResultAccess().getAlternatives(), "rule__Result__Alternatives");
			builder.put(grammarAccess.getOperandAccess().getAlternatives(), "rule__Operand__Alternatives");
			builder.put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
			builder.put(grammarAccess.getBasicLitAccess().getAlternatives(), "rule__BasicLit__Alternatives");
			builder.put(grammarAccess.getOperandNameAccess().getAlternatives(), "rule__OperandName__Alternatives");
			builder.put(grammarAccess.getLiteralTypeAccess().getAlternatives(), "rule__LiteralType__Alternatives");
			builder.put(grammarAccess.getKeyAccess().getAlternatives(), "rule__Key__Alternatives");
			builder.put(grammarAccess.getElementAccess().getAlternatives(), "rule__Element__Alternatives");
			builder.put(grammarAccess.getFieldDeclAccess().getAlternatives_0(), "rule__FieldDecl__Alternatives_0");
			builder.put(grammarAccess.getPrimaryExprAccess().getAlternatives(), "rule__PrimaryExpr__Alternatives");
			builder.put(grammarAccess.getPrimaryExprAccess().getAlternatives_0(), "rule__PrimaryExpr__Alternatives_0");
			builder.put(grammarAccess.getPrimaryExprStuffAccess().getAlternatives(), "rule__PrimaryExprStuff__Alternatives");
			builder.put(grammarAccess.getSliceAccess().getAlternatives_1(), "rule__Slice__Alternatives_1");
			builder.put(grammarAccess.getArgumentsAccess().getAlternatives_1_0(), "rule__Arguments__Alternatives_1_0");
			builder.put(grammarAccess.getReceiverTypeAccess().getAlternatives(), "rule__ReceiverType__Alternatives");
			builder.put(grammarAccess.getUnaryExprAccess().getAlternatives(), "rule__UnaryExpr__Alternatives");
			builder.put(grammarAccess.getUnaryExprAccess().getAlternatives_1_0(), "rule__UnaryExpr__Alternatives_1_0");
			builder.put(grammarAccess.getSourceFileAccess().getGroup(), "rule__SourceFile__Group__0");
			builder.put(grammarAccess.getSourceFileAccess().getGroup_1(), "rule__SourceFile__Group_1__0");
			builder.put(grammarAccess.getSourceFileAccess().getGroup_2(), "rule__SourceFile__Group_2__0");
			builder.put(grammarAccess.getPackageClauseAccess().getGroup(), "rule__PackageClause__Group__0");
			builder.put(grammarAccess.getImportDeclAccess().getGroup(), "rule__ImportDecl__Group__0");
			builder.put(grammarAccess.getImportDeclAccess().getGroup_1_1(), "rule__ImportDecl__Group_1_1__0");
			builder.put(grammarAccess.getImportSpecAccess().getGroup(), "rule__ImportSpec__Group__0");
			builder.put(grammarAccess.getConstDeclAccess().getGroup(), "rule__ConstDecl__Group__0");
			builder.put(grammarAccess.getConstDeclAccess().getGroup_1_1(), "rule__ConstDecl__Group_1_1__0");
			builder.put(grammarAccess.getConstDeclAccess().getGroup_1_1_1(), "rule__ConstDecl__Group_1_1_1__0");
			builder.put(grammarAccess.getConstSpecAccess().getGroup(), "rule__ConstSpec__Group__0");
			builder.put(grammarAccess.getConstSpecAccess().getGroup_1(), "rule__ConstSpec__Group_1__0");
			builder.put(grammarAccess.getIdentifierListAccess().getGroup(), "rule__IdentifierList__Group__0");
			builder.put(grammarAccess.getIdentifierListAccess().getGroup_1(), "rule__IdentifierList__Group_1__0");
			builder.put(grammarAccess.getExpressionListAccess().getGroup(), "rule__ExpressionList__Group__0");
			builder.put(grammarAccess.getExpressionListAccess().getGroup_1(), "rule__ExpressionList__Group_1__0");
			builder.put(grammarAccess.getTypeDeclAccess().getGroup(), "rule__TypeDecl__Group__0");
			builder.put(grammarAccess.getTypeDeclAccess().getGroup_1_1(), "rule__TypeDecl__Group_1_1__0");
			builder.put(grammarAccess.getTypeDeclAccess().getGroup_1_1_1(), "rule__TypeDecl__Group_1_1_1__0");
			builder.put(grammarAccess.getTypeSpecAccess().getGroup(), "rule__TypeSpec__Group__0");
			builder.put(grammarAccess.getFunctionDeclAccess().getGroup(), "rule__FunctionDecl__Group__0");
			builder.put(grammarAccess.getFunctionAccess().getGroup(), "rule__Function__Group__0");
			builder.put(grammarAccess.getMethodDeclAccess().getGroup(), "rule__MethodDecl__Group__0");
			builder.put(grammarAccess.getVarDeclAccess().getGroup(), "rule__VarDecl__Group__0");
			builder.put(grammarAccess.getVarDeclAccess().getGroup_1_1(), "rule__VarDecl__Group_1_1__0");
			builder.put(grammarAccess.getVarDeclAccess().getGroup_1_1_1(), "rule__VarDecl__Group_1_1_1__0");
			builder.put(grammarAccess.getVarSpecAccess().getGroup(), "rule__VarSpec__Group__0");
			builder.put(grammarAccess.getVarSpecAccess().getGroup_1_0(), "rule__VarSpec__Group_1_0__0");
			builder.put(grammarAccess.getVarSpecAccess().getGroup_1_0_1(), "rule__VarSpec__Group_1_0_1__0");
			builder.put(grammarAccess.getVarSpecAccess().getGroup_1_1(), "rule__VarSpec__Group_1_1__0");
			builder.put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
			builder.put(grammarAccess.getStatementListAccess().getGroup(), "rule__StatementList__Group__0");
			builder.put(grammarAccess.getSendStmtAccess().getGroup(), "rule__SendStmt__Group__0");
			builder.put(grammarAccess.getIncDecStmtAccess().getGroup(), "rule__IncDecStmt__Group__0");
			builder.put(grammarAccess.getAssignmentAccess().getGroup(), "rule__Assignment__Group__0");
			builder.put(grammarAccess.getAssign_opAccess().getGroup(), "rule__Assign_op__Group__0");
			builder.put(grammarAccess.getShortVarDeclAccess().getGroup(), "rule__ShortVarDecl__Group__0");
			builder.put(grammarAccess.getLabeledStmtAccess().getGroup(), "rule__LabeledStmt__Group__0");
			builder.put(grammarAccess.getReturnStmtAccess().getGroup(), "rule__ReturnStmt__Group__0");
			builder.put(grammarAccess.getBreakStmtAccess().getGroup(), "rule__BreakStmt__Group__0");
			builder.put(grammarAccess.getContinueStmtAccess().getGroup(), "rule__ContinueStmt__Group__0");
			builder.put(grammarAccess.getGotoStmtAccess().getGroup(), "rule__GotoStmt__Group__0");
			builder.put(grammarAccess.getDeferStmtAccess().getGroup(), "rule__DeferStmt__Group__0");
			builder.put(grammarAccess.getIfStmtAccess().getGroup(), "rule__IfStmt__Group__0");
			builder.put(grammarAccess.getIfStmtAccess().getGroup_1(), "rule__IfStmt__Group_1__0");
			builder.put(grammarAccess.getIfStmtAccess().getGroup_4(), "rule__IfStmt__Group_4__0");
			builder.put(grammarAccess.getExprSwitchStmtAccess().getGroup(), "rule__ExprSwitchStmt__Group__0");
			builder.put(grammarAccess.getExprSwitchStmtAccess().getGroup_1(), "rule__ExprSwitchStmt__Group_1__0");
			builder.put(grammarAccess.getExprCaseClauseAccess().getGroup(), "rule__ExprCaseClause__Group__0");
			builder.put(grammarAccess.getExprSwitchCaseAccess().getGroup_0(), "rule__ExprSwitchCase__Group_0__0");
			builder.put(grammarAccess.getTypeSwitchStmtAccess().getGroup(), "rule__TypeSwitchStmt__Group__0");
			builder.put(grammarAccess.getTypeSwitchStmtAccess().getGroup_1(), "rule__TypeSwitchStmt__Group_1__0");
			builder.put(grammarAccess.getTypeSwitchGuardAccess().getGroup(), "rule__TypeSwitchGuard__Group__0");
			builder.put(grammarAccess.getTypeSwitchGuardAccess().getGroup_0(), "rule__TypeSwitchGuard__Group_0__0");
			builder.put(grammarAccess.getTypeCaseClauseAccess().getGroup(), "rule__TypeCaseClause__Group__0");
			builder.put(grammarAccess.getTypeSwitchCaseAccess().getGroup_0(), "rule__TypeSwitchCase__Group_0__0");
			builder.put(grammarAccess.getTypeListAccess().getGroup(), "rule__TypeList__Group__0");
			builder.put(grammarAccess.getTypeListAccess().getGroup_1(), "rule__TypeList__Group_1__0");
			builder.put(grammarAccess.getSelectStmtAccess().getGroup(), "rule__SelectStmt__Group__0");
			builder.put(grammarAccess.getCommClauseAccess().getGroup(), "rule__CommClause__Group__0");
			builder.put(grammarAccess.getCommCaseAccess().getGroup_0(), "rule__CommCase__Group_0__0");
			builder.put(grammarAccess.getRecvStmtAccess().getGroup(), "rule__RecvStmt__Group__0");
			builder.put(grammarAccess.getRecvStmtAccess().getGroup_0_0(), "rule__RecvStmt__Group_0_0__0");
			builder.put(grammarAccess.getRecvStmtAccess().getGroup_0_1(), "rule__RecvStmt__Group_0_1__0");
			builder.put(grammarAccess.getForStmtAccess().getGroup(), "rule__ForStmt__Group__0");
			builder.put(grammarAccess.getForClauseAccess().getGroup(), "rule__ForClause__Group__0");
			builder.put(grammarAccess.getRangeClauseAccess().getGroup(), "rule__RangeClause__Group__0");
			builder.put(grammarAccess.getRangeClauseAccess().getGroup_0_0(), "rule__RangeClause__Group_0_0__0");
			builder.put(grammarAccess.getRangeClauseAccess().getGroup_0_1(), "rule__RangeClause__Group_0_1__0");
			builder.put(grammarAccess.getGoStmtAccess().getGroup(), "rule__GoStmt__Group__0");
			builder.put(grammarAccess.getTypeAccess().getGroup_2(), "rule__Type__Group_2__0");
			builder.put(grammarAccess.getArrayTypeAccess().getGroup(), "rule__ArrayType__Group__0");
			builder.put(grammarAccess.getPointerTypeAccess().getGroup(), "rule__PointerType__Group__0");
			builder.put(grammarAccess.getInterfaceTypeAccess().getGroup(), "rule__InterfaceType__Group__0");
			builder.put(grammarAccess.getInterfaceTypeAccess().getGroup_2(), "rule__InterfaceType__Group_2__0");
			builder.put(grammarAccess.getSliceTypeAccess().getGroup(), "rule__SliceType__Group__0");
			builder.put(grammarAccess.getMapTypeAccess().getGroup(), "rule__MapType__Group__0");
			builder.put(grammarAccess.getChannelTypeAccess().getGroup(), "rule__ChannelType__Group__0");
			builder.put(grammarAccess.getChannelTypeAccess().getGroup_0_1(), "rule__ChannelType__Group_0_1__0");
			builder.put(grammarAccess.getChannelTypeAccess().getGroup_0_2(), "rule__ChannelType__Group_0_2__0");
			builder.put(grammarAccess.getMethodSpecAccess().getGroup_0(), "rule__MethodSpec__Group_0__0");
			builder.put(grammarAccess.getFunctionTypeAccess().getGroup(), "rule__FunctionType__Group__0");
			builder.put(grammarAccess.getSignatureAccess().getGroup(), "rule__Signature__Group__0");
			builder.put(grammarAccess.getParametersAccess().getGroup(), "rule__Parameters__Group__0");
			builder.put(grammarAccess.getParametersAccess().getGroup_1(), "rule__Parameters__Group_1__0");
			builder.put(grammarAccess.getParameterListAccess().getGroup(), "rule__ParameterList__Group__0");
			builder.put(grammarAccess.getParameterListAccess().getGroup_1(), "rule__ParameterList__Group_1__0");
			builder.put(grammarAccess.getParameterDeclAccess().getGroup(), "rule__ParameterDecl__Group__0");
			builder.put(grammarAccess.getOperandAccess().getGroup_3(), "rule__Operand__Group_3__0");
			builder.put(grammarAccess.getQualifiedIdentAccess().getGroup(), "rule__QualifiedIdent__Group__0");
			builder.put(grammarAccess.getCompositeLitAccess().getGroup(), "rule__CompositeLit__Group__0");
			builder.put(grammarAccess.getLiteralTypeAccess().getGroup_2(), "rule__LiteralType__Group_2__0");
			builder.put(grammarAccess.getLiteralValueAccess().getGroup(), "rule__LiteralValue__Group__0");
			builder.put(grammarAccess.getLiteralValueAccess().getGroup_1(), "rule__LiteralValue__Group_1__0");
			builder.put(grammarAccess.getElementListAccess().getGroup(), "rule__ElementList__Group__0");
			builder.put(grammarAccess.getElementListAccess().getGroup_1(), "rule__ElementList__Group_1__0");
			builder.put(grammarAccess.getKeyedElementAccess().getGroup(), "rule__KeyedElement__Group__0");
			builder.put(grammarAccess.getKeyedElementAccess().getGroup_0(), "rule__KeyedElement__Group_0__0");
			builder.put(grammarAccess.getStructTypeAccess().getGroup(), "rule__StructType__Group__0");
			builder.put(grammarAccess.getStructTypeAccess().getGroup_2(), "rule__StructType__Group_2__0");
			builder.put(grammarAccess.getFieldDeclAccess().getGroup(), "rule__FieldDecl__Group__0");
			builder.put(grammarAccess.getFieldDeclAccess().getGroup_0_0(), "rule__FieldDecl__Group_0_0__0");
			builder.put(grammarAccess.getAnonymousFieldAccess().getGroup(), "rule__AnonymousField__Group__0");
			builder.put(grammarAccess.getFunctionLitAccess().getGroup(), "rule__FunctionLit__Group__0");
			builder.put(grammarAccess.getPrimaryExprSelectorAccess().getGroup(), "rule__PrimaryExprSelector__Group__0");
			builder.put(grammarAccess.getPrimaryExprIndexAccess().getGroup(), "rule__PrimaryExprIndex__Group__0");
			builder.put(grammarAccess.getPrimaryExprSliceAccess().getGroup(), "rule__PrimaryExprSlice__Group__0");
			builder.put(grammarAccess.getPrimaryExprTypeAssertionAccess().getGroup(), "rule__PrimaryExprTypeAssertion__Group__0");
			builder.put(grammarAccess.getPrimaryExprArgumentsAccess().getGroup(), "rule__PrimaryExprArguments__Group__0");
			builder.put(grammarAccess.getSelectorAccess().getGroup(), "rule__Selector__Group__0");
			builder.put(grammarAccess.getIndexAccess().getGroup(), "rule__Index__Group__0");
			builder.put(grammarAccess.getSliceAccess().getGroup(), "rule__Slice__Group__0");
			builder.put(grammarAccess.getSliceAccess().getGroup_1_0(), "rule__Slice__Group_1_0__0");
			builder.put(grammarAccess.getSliceAccess().getGroup_1_1(), "rule__Slice__Group_1_1__0");
			builder.put(grammarAccess.getTypeAssertionAccess().getGroup(), "rule__TypeAssertion__Group__0");
			builder.put(grammarAccess.getArgumentsAccess().getGroup(), "rule__Arguments__Group__0");
			builder.put(grammarAccess.getArgumentsAccess().getGroup_1(), "rule__Arguments__Group_1__0");
			builder.put(grammarAccess.getArgumentsAccess().getGroup_1_0_1(), "rule__Arguments__Group_1_0_1__0");
			builder.put(grammarAccess.getArgumentsAccess().getGroup_1_0_1_1(), "rule__Arguments__Group_1_0_1_1__0");
			builder.put(grammarAccess.getMethodExprAccess().getGroup(), "rule__MethodExpr__Group__0");
			builder.put(grammarAccess.getReceiverTypeAccess().getGroup_1(), "rule__ReceiverType__Group_1__0");
			builder.put(grammarAccess.getReceiverTypeAccess().getGroup_2(), "rule__ReceiverType__Group_2__0");
			builder.put(grammarAccess.getExpressionAccess().getGroup(), "rule__Expression__Group__0");
			builder.put(grammarAccess.getExpressionMatchedAccess().getGroup(), "rule__ExpressionMatched__Group__0");
			builder.put(grammarAccess.getUnaryExprAccess().getGroup_1(), "rule__UnaryExpr__Group_1__0");
			builder.put(grammarAccess.getConversionAccess().getGroup(), "rule__Conversion__Group__0");
			builder.put(grammarAccess.getModelAccess().getGreetingsAssignment(), "rule__Model__GreetingsAssignment");
			builder.put(grammarAccess.getSourceFileAccess().getPackageClauseAssignment_0(), "rule__SourceFile__PackageClauseAssignment_0");
			builder.put(grammarAccess.getSourceFileAccess().getImportDeclAssignment_1_0(), "rule__SourceFile__ImportDeclAssignment_1_0");
			builder.put(grammarAccess.getSourceFileAccess().getTopLevelDeclAssignment_2_0(), "rule__SourceFile__TopLevelDeclAssignment_2_0");
			builder.put(grammarAccess.getImportDeclAccess().getImportSpecAssignment_1_0(), "rule__ImportDecl__ImportSpecAssignment_1_0");
			builder.put(grammarAccess.getImportDeclAccess().getImportSpecAssignment_1_1_1(), "rule__ImportDecl__ImportSpecAssignment_1_1_1");
			builder.put(grammarAccess.getImportSpecAccess().getImportPathAssignment_1(), "rule__ImportSpec__ImportPathAssignment_1");
			builder.put(grammarAccess.getTopLevelDeclAccess().getDeclarationAssignment_0(), "rule__TopLevelDecl__DeclarationAssignment_0");
			builder.put(grammarAccess.getTopLevelDeclAccess().getFunctionDeclAssignment_1(), "rule__TopLevelDecl__FunctionDeclAssignment_1");
			builder.put(grammarAccess.getTopLevelDeclAccess().getMethodDeclAssignment_2(), "rule__TopLevelDecl__MethodDeclAssignment_2");
			builder.put(grammarAccess.getDeclarationAccess().getConstDeclAssignment_0(), "rule__Declaration__ConstDeclAssignment_0");
			builder.put(grammarAccess.getDeclarationAccess().getTypeDeclAssignment_1(), "rule__Declaration__TypeDeclAssignment_1");
			builder.put(grammarAccess.getDeclarationAccess().getVarDeclAssignment_2(), "rule__Declaration__VarDeclAssignment_2");
			builder.put(grammarAccess.getConstDeclAccess().getConstSpecAssignment_1_0(), "rule__ConstDecl__ConstSpecAssignment_1_0");
			builder.put(grammarAccess.getConstDeclAccess().getConstSpecAssignment_1_1_1_0(), "rule__ConstDecl__ConstSpecAssignment_1_1_1_0");
			builder.put(grammarAccess.getConstSpecAccess().getIdentifierListAssignment_0(), "rule__ConstSpec__IdentifierListAssignment_0");
			builder.put(grammarAccess.getConstSpecAccess().getTypeAssignment_1_0(), "rule__ConstSpec__TypeAssignment_1_0");
			builder.put(grammarAccess.getConstSpecAccess().getExpressionListAssignment_1_2(), "rule__ConstSpec__ExpressionListAssignment_1_2");
			builder.put(grammarAccess.getExpressionListAccess().getExpressionAssignment_0(), "rule__ExpressionList__ExpressionAssignment_0");
			builder.put(grammarAccess.getExpressionListAccess().getExpressionAssignment_1_1(), "rule__ExpressionList__ExpressionAssignment_1_1");
			builder.put(grammarAccess.getTypeDeclAccess().getTypeSpecAssignment_1_0(), "rule__TypeDecl__TypeSpecAssignment_1_0");
			builder.put(grammarAccess.getTypeDeclAccess().getTypeSpecAssignment_1_1_1_0(), "rule__TypeDecl__TypeSpecAssignment_1_1_1_0");
			builder.put(grammarAccess.getTypeSpecAccess().getTypeAssignment_1(), "rule__TypeSpec__TypeAssignment_1");
			builder.put(grammarAccess.getFunctionDeclAccess().getFunctionAssignment_2_0(), "rule__FunctionDecl__FunctionAssignment_2_0");
			builder.put(grammarAccess.getFunctionDeclAccess().getSignatureAssignment_2_1(), "rule__FunctionDecl__SignatureAssignment_2_1");
			builder.put(grammarAccess.getFunctionAccess().getSignatureAssignment_0(), "rule__Function__SignatureAssignment_0");
			builder.put(grammarAccess.getFunctionAccess().getBlockAssignment_1(), "rule__Function__BlockAssignment_1");
			builder.put(grammarAccess.getMethodDeclAccess().getReceiverAssignment_1(), "rule__MethodDecl__ReceiverAssignment_1");
			builder.put(grammarAccess.getMethodDeclAccess().getFunctionAssignment_3_0(), "rule__MethodDecl__FunctionAssignment_3_0");
			builder.put(grammarAccess.getMethodDeclAccess().getSignatureAssignment_3_1(), "rule__MethodDecl__SignatureAssignment_3_1");
			builder.put(grammarAccess.getReceiverAccess().getParametersAssignment(), "rule__Receiver__ParametersAssignment");
			builder.put(grammarAccess.getVarDeclAccess().getVarSpecAssignment_1_0(), "rule__VarDecl__VarSpecAssignment_1_0");
			builder.put(grammarAccess.getVarDeclAccess().getVarSpecAssignment_1_1_1_0(), "rule__VarDecl__VarSpecAssignment_1_1_1_0");
			builder.put(grammarAccess.getVarSpecAccess().getIdentifierListAssignment_0(), "rule__VarSpec__IdentifierListAssignment_0");
			builder.put(grammarAccess.getVarSpecAccess().getTypeAssignment_1_0_0(), "rule__VarSpec__TypeAssignment_1_0_0");
			builder.put(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_0_1_1(), "rule__VarSpec__ExpressionListAssignment_1_0_1_1");
			builder.put(grammarAccess.getVarSpecAccess().getExpressionListAssignment_1_1_1(), "rule__VarSpec__ExpressionListAssignment_1_1_1");
			builder.put(grammarAccess.getBlockAccess().getStatementListAssignment_1(), "rule__Block__StatementListAssignment_1");
			builder.put(grammarAccess.getStatementListAccess().getStatementAssignment_0(), "rule__StatementList__StatementAssignment_0");
			builder.put(grammarAccess.getStatementAccess().getDeclarationAssignment_0(), "rule__Statement__DeclarationAssignment_0");
			builder.put(grammarAccess.getStatementAccess().getLabeledStmtAssignment_1(), "rule__Statement__LabeledStmtAssignment_1");
			builder.put(grammarAccess.getStatementAccess().getSimpleStmtAssignment_2(), "rule__Statement__SimpleStmtAssignment_2");
			builder.put(grammarAccess.getStatementAccess().getGoStmtAssignment_3(), "rule__Statement__GoStmtAssignment_3");
			builder.put(grammarAccess.getStatementAccess().getReturnStmtAssignment_4(), "rule__Statement__ReturnStmtAssignment_4");
			builder.put(grammarAccess.getStatementAccess().getBreakStmtAssignment_5(), "rule__Statement__BreakStmtAssignment_5");
			builder.put(grammarAccess.getStatementAccess().getContinueStmtAssignment_6(), "rule__Statement__ContinueStmtAssignment_6");
			builder.put(grammarAccess.getStatementAccess().getGotoStmtAssignment_7(), "rule__Statement__GotoStmtAssignment_7");
			builder.put(grammarAccess.getStatementAccess().getFallthroughStmtAssignment_8(), "rule__Statement__FallthroughStmtAssignment_8");
			builder.put(grammarAccess.getStatementAccess().getBlockAssignment_9(), "rule__Statement__BlockAssignment_9");
			builder.put(grammarAccess.getStatementAccess().getIfStmtAssignment_10(), "rule__Statement__IfStmtAssignment_10");
			builder.put(grammarAccess.getStatementAccess().getSwitchStmtAssignment_11(), "rule__Statement__SwitchStmtAssignment_11");
			builder.put(grammarAccess.getStatementAccess().getSelectStmtAssignment_12(), "rule__Statement__SelectStmtAssignment_12");
			builder.put(grammarAccess.getStatementAccess().getForStmtAssignment_13(), "rule__Statement__ForStmtAssignment_13");
			builder.put(grammarAccess.getStatementAccess().getDeferStmtAssignment_14(), "rule__Statement__DeferStmtAssignment_14");
			builder.put(grammarAccess.getSimpleStmtAccess().getSendStmtAssignment_0(), "rule__SimpleStmt__SendStmtAssignment_0");
			builder.put(grammarAccess.getSimpleStmtAccess().getExpressionStmtAssignment_1(), "rule__SimpleStmt__ExpressionStmtAssignment_1");
			builder.put(grammarAccess.getSimpleStmtAccess().getIncDecStmtAssignment_2(), "rule__SimpleStmt__IncDecStmtAssignment_2");
			builder.put(grammarAccess.getSimpleStmtAccess().getAssignmentAssignment_3(), "rule__SimpleStmt__AssignmentAssignment_3");
			builder.put(grammarAccess.getSimpleStmtAccess().getShortVarDeclAssignment_4(), "rule__SimpleStmt__ShortVarDeclAssignment_4");
			builder.put(grammarAccess.getSimpleStmtAccess().getEmptyStmtAssignment_5(), "rule__SimpleStmt__EmptyStmtAssignment_5");
			builder.put(grammarAccess.getExpressionStmtAccess().getExpressionAssignment(), "rule__ExpressionStmt__ExpressionAssignment");
			builder.put(grammarAccess.getSendStmtAccess().getExpressionAssignment_0(), "rule__SendStmt__ExpressionAssignment_0");
			builder.put(grammarAccess.getSendStmtAccess().getExpressionAssignment_2(), "rule__SendStmt__ExpressionAssignment_2");
			builder.put(grammarAccess.getIncDecStmtAccess().getExpressionAssignment_0(), "rule__IncDecStmt__ExpressionAssignment_0");
			builder.put(grammarAccess.getAssignmentAccess().getExpressionListAssignment_0(), "rule__Assignment__ExpressionListAssignment_0");
			builder.put(grammarAccess.getAssignmentAccess().getAssign_opAssignment_1(), "rule__Assignment__Assign_opAssignment_1");
			builder.put(grammarAccess.getAssignmentAccess().getExpressionListAssignment_2(), "rule__Assignment__ExpressionListAssignment_2");
			builder.put(grammarAccess.getShortVarDeclAccess().getIdentifierListAssignment_0(), "rule__ShortVarDecl__IdentifierListAssignment_0");
			builder.put(grammarAccess.getShortVarDeclAccess().getExpressionListAssignment_2(), "rule__ShortVarDecl__ExpressionListAssignment_2");
			builder.put(grammarAccess.getLabeledStmtAccess().getStatementAssignment_2(), "rule__LabeledStmt__StatementAssignment_2");
			builder.put(grammarAccess.getReturnStmtAccess().getExpressionListAssignment_1(), "rule__ReturnStmt__ExpressionListAssignment_1");
			builder.put(grammarAccess.getDeferStmtAccess().getExpressionAssignment_1(), "rule__DeferStmt__ExpressionAssignment_1");
			builder.put(grammarAccess.getIfStmtAccess().getSimpleStmtAssignment_1_0(), "rule__IfStmt__SimpleStmtAssignment_1_0");
			builder.put(grammarAccess.getIfStmtAccess().getExpressionAssignment_2(), "rule__IfStmt__ExpressionAssignment_2");
			builder.put(grammarAccess.getIfStmtAccess().getBlockAssignment_3(), "rule__IfStmt__BlockAssignment_3");
			builder.put(grammarAccess.getIfStmtAccess().getIfStmtAssignment_4_1_0(), "rule__IfStmt__IfStmtAssignment_4_1_0");
			builder.put(grammarAccess.getIfStmtAccess().getBlockAssignment_4_1_1(), "rule__IfStmt__BlockAssignment_4_1_1");
			builder.put(grammarAccess.getSwitchStmtAccess().getExprSwitchStmtAssignment_0(), "rule__SwitchStmt__ExprSwitchStmtAssignment_0");
			builder.put(grammarAccess.getSwitchStmtAccess().getTypeSwitchStmtAssignment_1(), "rule__SwitchStmt__TypeSwitchStmtAssignment_1");
			builder.put(grammarAccess.getExprSwitchStmtAccess().getSimpleStmtAssignment_1_0(), "rule__ExprSwitchStmt__SimpleStmtAssignment_1_0");
			builder.put(grammarAccess.getExprSwitchStmtAccess().getExpressionAssignment_2(), "rule__ExprSwitchStmt__ExpressionAssignment_2");
			builder.put(grammarAccess.getExprSwitchStmtAccess().getExprCaseClauseAssignment_4(), "rule__ExprSwitchStmt__ExprCaseClauseAssignment_4");
			builder.put(grammarAccess.getExprCaseClauseAccess().getExprSwitchCaseAssignment_0(), "rule__ExprCaseClause__ExprSwitchCaseAssignment_0");
			builder.put(grammarAccess.getExprCaseClauseAccess().getStatementListAssignment_2(), "rule__ExprCaseClause__StatementListAssignment_2");
			builder.put(grammarAccess.getExprSwitchCaseAccess().getExpressionListAssignment_0_1(), "rule__ExprSwitchCase__ExpressionListAssignment_0_1");
			builder.put(grammarAccess.getTypeSwitchStmtAccess().getSimpleStmtAssignment_1_0(), "rule__TypeSwitchStmt__SimpleStmtAssignment_1_0");
			builder.put(grammarAccess.getTypeSwitchStmtAccess().getTypeSwitchGuardAssignment_2(), "rule__TypeSwitchStmt__TypeSwitchGuardAssignment_2");
			builder.put(grammarAccess.getTypeSwitchStmtAccess().getTypeCaseClauseAssignment_4(), "rule__TypeSwitchStmt__TypeCaseClauseAssignment_4");
			builder.put(grammarAccess.getTypeSwitchGuardAccess().getPrimaryExprAssignment_1(), "rule__TypeSwitchGuard__PrimaryExprAssignment_1");
			builder.put(grammarAccess.getTypeCaseClauseAccess().getTypeSwitchCaseAssignment_0(), "rule__TypeCaseClause__TypeSwitchCaseAssignment_0");
			builder.put(grammarAccess.getTypeCaseClauseAccess().getStatementListAssignment_2(), "rule__TypeCaseClause__StatementListAssignment_2");
			builder.put(grammarAccess.getTypeSwitchCaseAccess().getTypeListAssignment_0_1(), "rule__TypeSwitchCase__TypeListAssignment_0_1");
			builder.put(grammarAccess.getTypeListAccess().getTypeAssignment_0(), "rule__TypeList__TypeAssignment_0");
			builder.put(grammarAccess.getTypeListAccess().getTypeAssignment_1_1(), "rule__TypeList__TypeAssignment_1_1");
			builder.put(grammarAccess.getSelectStmtAccess().getCommClauseAssignment_2(), "rule__SelectStmt__CommClauseAssignment_2");
			builder.put(grammarAccess.getCommClauseAccess().getCommCaseAssignment_0(), "rule__CommClause__CommCaseAssignment_0");
			builder.put(grammarAccess.getCommClauseAccess().getStatementListAssignment_2(), "rule__CommClause__StatementListAssignment_2");
			builder.put(grammarAccess.getCommCaseAccess().getSendStmtAssignment_0_1_0(), "rule__CommCase__SendStmtAssignment_0_1_0");
			builder.put(grammarAccess.getCommCaseAccess().getRecvStmtAssignment_0_1_1(), "rule__CommCase__RecvStmtAssignment_0_1_1");
			builder.put(grammarAccess.getRecvStmtAccess().getExpressionListAssignment_0_0_0(), "rule__RecvStmt__ExpressionListAssignment_0_0_0");
			builder.put(grammarAccess.getRecvStmtAccess().getIdentifierListAssignment_0_1_0(), "rule__RecvStmt__IdentifierListAssignment_0_1_0");
			builder.put(grammarAccess.getRecvStmtAccess().getExpressionAssignment_1(), "rule__RecvStmt__ExpressionAssignment_1");
			builder.put(grammarAccess.getForStmtAccess().getExpressionAssignment_1_0(), "rule__ForStmt__ExpressionAssignment_1_0");
			builder.put(grammarAccess.getForStmtAccess().getForClauseAssignment_1_1(), "rule__ForStmt__ForClauseAssignment_1_1");
			builder.put(grammarAccess.getForStmtAccess().getRangeClauseAssignment_1_2(), "rule__ForStmt__RangeClauseAssignment_1_2");
			builder.put(grammarAccess.getForStmtAccess().getBlockAssignment_2(), "rule__ForStmt__BlockAssignment_2");
			builder.put(grammarAccess.getForClauseAccess().getSimpleStmtAssignment_0(), "rule__ForClause__SimpleStmtAssignment_0");
			builder.put(grammarAccess.getForClauseAccess().getExpressionAssignment_2(), "rule__ForClause__ExpressionAssignment_2");
			builder.put(grammarAccess.getForClauseAccess().getSimpleStmtAssignment_4(), "rule__ForClause__SimpleStmtAssignment_4");
			builder.put(grammarAccess.getRangeClauseAccess().getExpressionListAssignment_0_0_0(), "rule__RangeClause__ExpressionListAssignment_0_0_0");
			builder.put(grammarAccess.getRangeClauseAccess().getIdentifierListAssignment_0_1_0(), "rule__RangeClause__IdentifierListAssignment_0_1_0");
			builder.put(grammarAccess.getRangeClauseAccess().getExpressionAssignment_2(), "rule__RangeClause__ExpressionAssignment_2");
			builder.put(grammarAccess.getGoStmtAccess().getExpressionAssignment_1(), "rule__GoStmt__ExpressionAssignment_1");
			builder.put(grammarAccess.getTypeAccess().getTypeNameAssignment_0(), "rule__Type__TypeNameAssignment_0");
			builder.put(grammarAccess.getTypeAccess().getTypeLitAssignment_1(), "rule__Type__TypeLitAssignment_1");
			builder.put(grammarAccess.getTypeAccess().getTypeAssignment_2_1(), "rule__Type__TypeAssignment_2_1");
			builder.put(grammarAccess.getTypeNameAccess().getQualifiedIdentAssignment_1(), "rule__TypeName__QualifiedIdentAssignment_1");
			builder.put(grammarAccess.getTypeLitAccess().getArrayTypeAssignment_0(), "rule__TypeLit__ArrayTypeAssignment_0");
			builder.put(grammarAccess.getTypeLitAccess().getStructTypeAssignment_1(), "rule__TypeLit__StructTypeAssignment_1");
			builder.put(grammarAccess.getTypeLitAccess().getPointerTypeAssignment_2(), "rule__TypeLit__PointerTypeAssignment_2");
			builder.put(grammarAccess.getTypeLitAccess().getFunctionTypeAssignment_3(), "rule__TypeLit__FunctionTypeAssignment_3");
			builder.put(grammarAccess.getTypeLitAccess().getInterfaceTypeAssignment_4(), "rule__TypeLit__InterfaceTypeAssignment_4");
			builder.put(grammarAccess.getTypeLitAccess().getSliceTypeAssignment_5(), "rule__TypeLit__SliceTypeAssignment_5");
			builder.put(grammarAccess.getTypeLitAccess().getMapTypeAssignment_6(), "rule__TypeLit__MapTypeAssignment_6");
			builder.put(grammarAccess.getTypeLitAccess().getChannelTypeAssignment_7(), "rule__TypeLit__ChannelTypeAssignment_7");
			builder.put(grammarAccess.getArrayTypeAccess().getArrayLengthAssignment_1(), "rule__ArrayType__ArrayLengthAssignment_1");
			builder.put(grammarAccess.getArrayTypeAccess().getElementTypeAssignment_3(), "rule__ArrayType__ElementTypeAssignment_3");
			builder.put(grammarAccess.getArrayLengthAccess().getExpressionAssignment(), "rule__ArrayLength__ExpressionAssignment");
			builder.put(grammarAccess.getElementTypeAccess().getTypeAssignment(), "rule__ElementType__TypeAssignment");
			builder.put(grammarAccess.getPointerTypeAccess().getTypeAssignment_1(), "rule__PointerType__TypeAssignment_1");
			builder.put(grammarAccess.getInterfaceTypeAccess().getMethodSpecAssignment_2_0(), "rule__InterfaceType__MethodSpecAssignment_2_0");
			builder.put(grammarAccess.getSliceTypeAccess().getElementTypeAssignment_2(), "rule__SliceType__ElementTypeAssignment_2");
			builder.put(grammarAccess.getMapTypeAccess().getTypeAssignment_2(), "rule__MapType__TypeAssignment_2");
			builder.put(grammarAccess.getMapTypeAccess().getElementTypeAssignment_4(), "rule__MapType__ElementTypeAssignment_4");
			builder.put(grammarAccess.getChannelTypeAccess().getElementTypeAssignment_1(), "rule__ChannelType__ElementTypeAssignment_1");
			builder.put(grammarAccess.getMethodSpecAccess().getSignatureAssignment_0_1(), "rule__MethodSpec__SignatureAssignment_0_1");
			builder.put(grammarAccess.getMethodSpecAccess().getTypeNameAssignment_1(), "rule__MethodSpec__TypeNameAssignment_1");
			builder.put(grammarAccess.getFunctionTypeAccess().getSignatureAssignment_1(), "rule__FunctionType__SignatureAssignment_1");
			builder.put(grammarAccess.getSignatureAccess().getParametersAssignment_0(), "rule__Signature__ParametersAssignment_0");
			builder.put(grammarAccess.getSignatureAccess().getResultAssignment_1(), "rule__Signature__ResultAssignment_1");
			builder.put(grammarAccess.getResultAccess().getParametersAssignment_0(), "rule__Result__ParametersAssignment_0");
			builder.put(grammarAccess.getResultAccess().getTypeAssignment_1(), "rule__Result__TypeAssignment_1");
			builder.put(grammarAccess.getParametersAccess().getParameterListAssignment_1_0(), "rule__Parameters__ParameterListAssignment_1_0");
			builder.put(grammarAccess.getParameterListAccess().getParameterDeclAssignment_0(), "rule__ParameterList__ParameterDeclAssignment_0");
			builder.put(grammarAccess.getParameterListAccess().getParameterDeclAssignment_1_1(), "rule__ParameterList__ParameterDeclAssignment_1_1");
			builder.put(grammarAccess.getParameterDeclAccess().getIdentifierListAssignment_0(), "rule__ParameterDecl__IdentifierListAssignment_0");
			builder.put(grammarAccess.getParameterDeclAccess().getTypeAssignment_2(), "rule__ParameterDecl__TypeAssignment_2");
			builder.put(grammarAccess.getOperandAccess().getLiteralAssignment_0(), "rule__Operand__LiteralAssignment_0");
			builder.put(grammarAccess.getOperandAccess().getOperandNameAssignment_1(), "rule__Operand__OperandNameAssignment_1");
			builder.put(grammarAccess.getOperandAccess().getMethodExprAssignment_2(), "rule__Operand__MethodExprAssignment_2");
			builder.put(grammarAccess.getOperandAccess().getExpressionAssignment_3_1(), "rule__Operand__ExpressionAssignment_3_1");
			builder.put(grammarAccess.getLiteralAccess().getBasicLitAssignment_0(), "rule__Literal__BasicLitAssignment_0");
			builder.put(grammarAccess.getLiteralAccess().getCompositeLitAssignment_1(), "rule__Literal__CompositeLitAssignment_1");
			builder.put(grammarAccess.getLiteralAccess().getFunctionLitAssignment_2(), "rule__Literal__FunctionLitAssignment_2");
			builder.put(grammarAccess.getOperandNameAccess().getQualifiedIdentAssignment_1(), "rule__OperandName__QualifiedIdentAssignment_1");
			builder.put(grammarAccess.getCompositeLitAccess().getLiteralTypeAssignment_0(), "rule__CompositeLit__LiteralTypeAssignment_0");
			builder.put(grammarAccess.getCompositeLitAccess().getLiteralValueAssignment_1(), "rule__CompositeLit__LiteralValueAssignment_1");
			builder.put(grammarAccess.getLiteralTypeAccess().getStructTypeAssignment_0(), "rule__LiteralType__StructTypeAssignment_0");
			builder.put(grammarAccess.getLiteralTypeAccess().getArrayTypeAssignment_1(), "rule__LiteralType__ArrayTypeAssignment_1");
			builder.put(grammarAccess.getLiteralTypeAccess().getElementTypeAssignment_2_3(), "rule__LiteralType__ElementTypeAssignment_2_3");
			builder.put(grammarAccess.getLiteralTypeAccess().getSliceTypeAssignment_3(), "rule__LiteralType__SliceTypeAssignment_3");
			builder.put(grammarAccess.getLiteralTypeAccess().getMapTypeAssignment_4(), "rule__LiteralType__MapTypeAssignment_4");
			builder.put(grammarAccess.getLiteralTypeAccess().getTypeNameAssignment_5(), "rule__LiteralType__TypeNameAssignment_5");
			builder.put(grammarAccess.getLiteralValueAccess().getElementListAssignment_1_0(), "rule__LiteralValue__ElementListAssignment_1_0");
			builder.put(grammarAccess.getElementListAccess().getKeyedElementAssignment_0(), "rule__ElementList__KeyedElementAssignment_0");
			builder.put(grammarAccess.getElementListAccess().getKeyedElementAssignment_1_1(), "rule__ElementList__KeyedElementAssignment_1_1");
			builder.put(grammarAccess.getKeyedElementAccess().getKeyAssignment_0_0(), "rule__KeyedElement__KeyAssignment_0_0");
			builder.put(grammarAccess.getKeyedElementAccess().getElementAssignment_1(), "rule__KeyedElement__ElementAssignment_1");
			builder.put(grammarAccess.getKeyAccess().getExpressionAssignment_1(), "rule__Key__ExpressionAssignment_1");
			builder.put(grammarAccess.getKeyAccess().getLiteralValueAssignment_2(), "rule__Key__LiteralValueAssignment_2");
			builder.put(grammarAccess.getElementAccess().getExpressionAssignment_0(), "rule__Element__ExpressionAssignment_0");
			builder.put(grammarAccess.getElementAccess().getLiteralValueAssignment_1(), "rule__Element__LiteralValueAssignment_1");
			builder.put(grammarAccess.getStructTypeAccess().getFieldDeclAssignment_2_0(), "rule__StructType__FieldDeclAssignment_2_0");
			builder.put(grammarAccess.getFieldDeclAccess().getIdentifierListAssignment_0_0_0(), "rule__FieldDecl__IdentifierListAssignment_0_0_0");
			builder.put(grammarAccess.getFieldDeclAccess().getTypeAssignment_0_0_1(), "rule__FieldDecl__TypeAssignment_0_0_1");
			builder.put(grammarAccess.getFieldDeclAccess().getAnonymousFieldAssignment_0_1(), "rule__FieldDecl__AnonymousFieldAssignment_0_1");
			builder.put(grammarAccess.getAnonymousFieldAccess().getTypeNameAssignment_1(), "rule__AnonymousField__TypeNameAssignment_1");
			builder.put(grammarAccess.getFunctionLitAccess().getFunctionAssignment_1(), "rule__FunctionLit__FunctionAssignment_1");
			builder.put(grammarAccess.getPrimaryExprAccess().getOperandAssignment_0_0(), "rule__PrimaryExpr__OperandAssignment_0_0");
			builder.put(grammarAccess.getPrimaryExprAccess().getConversionAssignment_0_1(), "rule__PrimaryExpr__ConversionAssignment_0_1");
			builder.put(grammarAccess.getPrimaryExprAccess().getPrimaryExprSelectorAssignment_1(), "rule__PrimaryExpr__PrimaryExprSelectorAssignment_1");
			builder.put(grammarAccess.getPrimaryExprAccess().getPrimaryExprIndexAssignment_2(), "rule__PrimaryExpr__PrimaryExprIndexAssignment_2");
			builder.put(grammarAccess.getPrimaryExprAccess().getPrimaryExprSliceAssignment_3(), "rule__PrimaryExpr__PrimaryExprSliceAssignment_3");
			builder.put(grammarAccess.getPrimaryExprAccess().getPrimaryExprTypeAssertionAssignment_4(), "rule__PrimaryExpr__PrimaryExprTypeAssertionAssignment_4");
			builder.put(grammarAccess.getPrimaryExprAccess().getPrimaryExprArgumentsAssignment_5(), "rule__PrimaryExpr__PrimaryExprArgumentsAssignment_5");
			builder.put(grammarAccess.getPrimaryExprStuffAccess().getSelectorAssignment_0(), "rule__PrimaryExprStuff__SelectorAssignment_0");
			builder.put(grammarAccess.getPrimaryExprStuffAccess().getIndexAssignment_1(), "rule__PrimaryExprStuff__IndexAssignment_1");
			builder.put(grammarAccess.getPrimaryExprStuffAccess().getSliceAssignment_2(), "rule__PrimaryExprStuff__SliceAssignment_2");
			builder.put(grammarAccess.getPrimaryExprStuffAccess().getTypeAssertionAssignment_3(), "rule__PrimaryExprStuff__TypeAssertionAssignment_3");
			builder.put(grammarAccess.getPrimaryExprStuffAccess().getArgumentsAssignment_4(), "rule__PrimaryExprStuff__ArgumentsAssignment_4");
			builder.put(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprStuffAssignment_0(), "rule__PrimaryExprSelector__PrimaryExprStuffAssignment_0");
			builder.put(grammarAccess.getPrimaryExprSelectorAccess().getPrimaryExprSelectorAssignment_1(), "rule__PrimaryExprSelector__PrimaryExprSelectorAssignment_1");
			builder.put(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprStuffAssignment_0(), "rule__PrimaryExprIndex__PrimaryExprStuffAssignment_0");
			builder.put(grammarAccess.getPrimaryExprIndexAccess().getPrimaryExprIndexAssignment_1(), "rule__PrimaryExprIndex__PrimaryExprIndexAssignment_1");
			builder.put(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprStuffAssignment_0(), "rule__PrimaryExprSlice__PrimaryExprStuffAssignment_0");
			builder.put(grammarAccess.getPrimaryExprSliceAccess().getPrimaryExprSliceAssignment_1(), "rule__PrimaryExprSlice__PrimaryExprSliceAssignment_1");
			builder.put(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprStuffAssignment_0(), "rule__PrimaryExprTypeAssertion__PrimaryExprStuffAssignment_0");
			builder.put(grammarAccess.getPrimaryExprTypeAssertionAccess().getPrimaryExprTypeAssertionAssignment_1(), "rule__PrimaryExprTypeAssertion__PrimaryExprTypeAssertionAssignment_1");
			builder.put(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprStuffAssignment_0(), "rule__PrimaryExprArguments__PrimaryExprStuffAssignment_0");
			builder.put(grammarAccess.getPrimaryExprArgumentsAccess().getPrimaryExprArgumentsAssignment_1(), "rule__PrimaryExprArguments__PrimaryExprArgumentsAssignment_1");
			builder.put(grammarAccess.getSliceAccess().getExpressionAssignment_1_0_0(), "rule__Slice__ExpressionAssignment_1_0_0");
			builder.put(grammarAccess.getSliceAccess().getExpressionAssignment_1_0_2(), "rule__Slice__ExpressionAssignment_1_0_2");
			builder.put(grammarAccess.getSliceAccess().getExpressionAssignment_1_1_0(), "rule__Slice__ExpressionAssignment_1_1_0");
			builder.put(grammarAccess.getSliceAccess().getExpressionAssignment_1_1_2(), "rule__Slice__ExpressionAssignment_1_1_2");
			builder.put(grammarAccess.getSliceAccess().getExpressionAssignment_1_1_4(), "rule__Slice__ExpressionAssignment_1_1_4");
			builder.put(grammarAccess.getTypeAssertionAccess().getTypeAssignment_2(), "rule__TypeAssertion__TypeAssignment_2");
			builder.put(grammarAccess.getArgumentsAccess().getExpressionListAssignment_1_0_0(), "rule__Arguments__ExpressionListAssignment_1_0_0");
			builder.put(grammarAccess.getArgumentsAccess().getTypeAssignment_1_0_1_0(), "rule__Arguments__TypeAssignment_1_0_1_0");
			builder.put(grammarAccess.getArgumentsAccess().getExpressionListAssignment_1_0_1_1_1(), "rule__Arguments__ExpressionListAssignment_1_0_1_1_1");
			builder.put(grammarAccess.getMethodExprAccess().getReceiverTypeAssignment_0(), "rule__MethodExpr__ReceiverTypeAssignment_0");
			builder.put(grammarAccess.getReceiverTypeAccess().getTypeNameAssignment_0(), "rule__ReceiverType__TypeNameAssignment_0");
			builder.put(grammarAccess.getReceiverTypeAccess().getTypeNameAssignment_1_2(), "rule__ReceiverType__TypeNameAssignment_1_2");
			builder.put(grammarAccess.getReceiverTypeAccess().getReceiverTypeAssignment_2_1(), "rule__ReceiverType__ReceiverTypeAssignment_2_1");
			builder.put(grammarAccess.getExpressionAccess().getUnaryExprAssignment_0(), "rule__Expression__UnaryExprAssignment_0");
			builder.put(grammarAccess.getExpressionAccess().getExpressionMatchedAssignment_1(), "rule__Expression__ExpressionMatchedAssignment_1");
			builder.put(grammarAccess.getExpressionMatchedAccess().getExpressionAssignment_1(), "rule__ExpressionMatched__ExpressionAssignment_1");
			builder.put(grammarAccess.getUnaryExprAccess().getPrimaryExprAssignment_0(), "rule__UnaryExpr__PrimaryExprAssignment_0");
			builder.put(grammarAccess.getUnaryExprAccess().getUnaryExprAssignment_1_1(), "rule__UnaryExpr__UnaryExprAssignment_1_1");
			builder.put(grammarAccess.getConversionAccess().getTypeAssignment_0(), "rule__Conversion__TypeAssignment_0");
			builder.put(grammarAccess.getConversionAccess().getExpressionAssignment_2(), "rule__Conversion__ExpressionAssignment_2");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private GoGrammarAccess grammarAccess;

	@Override
	protected InternalGoParser createParser() {
		InternalGoParser result = new InternalGoParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public GoGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(GoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
